<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Django项目之Web端电商网站的实战开发（二）</title>
      <link href="/2019/11/06/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/11/06/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('别搞了，你破解不了的');const txt = document.getElementById('enc_content').innerHTML;// alert(txt,"1")// alert(pwd,"2")// alert(onError,"3")let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);if(plaintext == ""){document.getElementById("enc_pwd_input").value="";document.getElementById("enc_error").innerHTML = "密码错误!";return}// alert(plaintext)} catch(err) {if(onError) {// alert(onError,"4")// alert(err,"5")onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" placeholder="请输入文章密码" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "密码错误!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目之Web端电商网站的实战开发（一）</title>
      <link href="/2019/11/06/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/11/06/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/Hellotaogang/cdn@4.6.3/images/django_logo.png" width="900px" height="300px" align><br>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！</p><a id="more"></a><h1 id="一丶项目介绍"><a href="#一丶项目介绍" class="headerlink" title="一丶项目介绍"></a>一丶项目介绍</h1><ul><li><strong>产品</strong>：关于Web端的电商网站</li><li><strong>商业模式</strong>：B2C模式 企业对个人</li><li><strong>设计模式</strong>：使用前后端不分离进行项目开发(后端控制前端的效果展示)</li></ul><p>前端效果展示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019032514093763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶电商项目开发流程"><a href="#二丶电商项目开发流程" class="headerlink" title="二丶电商项目开发流程"></a>二丶电商项目开发流程</h1><p>1.流程图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325212907224.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.1 前奏<br>    项目立项：公司BOSS决定做项目<br>    需求分析：分析客户的需求<br>    原型设计：产品经理画出产品原型图</p><p>2.2 前端<br>    UI设计：使用PS等工具对产品进行界面设计<br>    前端设计：根据UI人员设计的图片，写成对应的前端页面</p><p>2.3 后端<br>    架构设计：①模块划分，功能架构 ② 开发环境选择 ③其他技术 ④部署架构<br>    数据库设计：①分析数据表和表字段 ②表关系<br>    模块代码实现和单元测试：①后端开发人员进行分工开发 ②开发完成后给测试人员进行单元测试</p><p>2.4 尾声<br>    代码整合：将后端代码与前端代码进行耦合合并<br>    集成测试：将整合后的代码再次进行测试<br>    网站发布：在生产环境进行上线</p><h1 id="三丶项目需求"><a href="#三丶项目需求" class="headerlink" title="三丶项目需求"></a>三丶项目需求</h1><p><strong>用户模块</strong></p><ol><li><p>注册页<br> 1.1 注册时校验用户名是否已被注册<br> 1.2 完成用户信息的注册<br> 1.3 给用户的注册邮箱发送邮件，用户点击邮件中的激活链接完成用户账户的激活<br> 1.4 城区的区域信息需动态加载</p></li><li><p>登录页<br> 2.1 实现用户的登录功能</p></li><li><p>用户中心<br> 3.1 用户中心信息页：显示登录用户的信息，包括用户名、电话和地址，同时页面下方显示出用户最近浏览的商品信息<br> 3.2 用户中心地址页：显示登录用户的默认收件地址，页面下方的表单可以新增用户的收货地址<br> 3.3 用户中心订单页：显示登录用户的订单信息<br> 3.4 用户可以选择城区、入住时间、离开时间等条件进行搜索</p></li><li><p>其他<br> 4.1 如果用户已经登录，页面顶部显示登录用户的信息</p></li></ol><p><strong>商品相关</strong></p><ol><li><p>首页<br> 1.1 动态指定首页轮播商品信息<br> 1.2 动态指定首页活动信息<br> 1.3 动态获取商品的种类信息并显示<br> 1.4 动态指定首页显示的每个种类的商品(包括图片商品和文字商品)<br> 1.5 点击某一个商品时跳转到商品的详情页面</p></li><li><p>商品详情页<br> 2.1 显示出某个商品的详情信息<br> 2.2 页面的左下方显示出该种类商品的2个新品信息</p></li><li><p>商品列表页<br> 3.1 显示出某一个种类商品的列表数据，分页显示并支持按照默认、价格、和人气进行排序<br> 3.2 页面的左下方显示出该种类商品的2个新品信息</p></li><li><p>其他<br> 4.1 通过页面搜索框搜索商品信息</p></li></ol><p><strong>购物车相关</strong><br>    1 列表页和详情页将商品添加到购物车<br>    2 用户登录后，首页，详情页，列表页显示登录用户购物车中商品的数目<br>    3 购物车页面：对用户购物车中商品的操作。如选择某件商品，增加或减少购物车中商品的数目</p><p><strong>订单相关</strong><br>    1 提交订单页面：显示用户准备购买的商品信息<br>    2 点击提交订单完成订单的创建<br>    3 用户中心订单页显示用户的订单信息<br>    4 点击支付完成订单的支付</p><h1 id="四丶项目架构概览"><a href="#四丶项目架构概览" class="headerlink" title="四丶项目架构概览"></a>四丶项目架构概览</h1><p>1.页面图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325142424812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.功能图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325142457358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.部署图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325142558314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶项目数据库设计"><a href="#五丶项目数据库设计" class="headerlink" title="五丶项目数据库设计"></a>五丶项目数据库设计</h1><p>1.分析网站页面所需的参数</p><p><strong>注册页（register.html）</strong><br>    ①用户名<br>    ②密码<br>    ③邮箱</p><p><strong>登录页（login.html）</strong><br>    ①用户名<br>    ②密码</p><p><strong>用户中心页（user_center_site.html）</strong><br>    ①收件人<br>    ②详细地址<br>    ③邮编<br>    ④联系方式</p><p><strong>商品详情页（detail.html）</strong><br>    ①商品名称<br>    ②简介<br>    ③价格<br>    ④单位<br>    ⑤商品库存<br>    ⑥商品详情<br>    ⑦商品图片<br>    ⑧商品种类编号</p><p><strong>主页（index.html）</strong><br>    ①商品种类名称<br>    ②logo<br>    ③图片</p><p><strong>商品列表页（list.html）</strong><br>    ①商品名称<br>    ②商品价格<br>    ③商品图片<br>    ④商品分类</p><p><strong>购物车页（cart.html）</strong><br>    ①商品图片<br>    ②商品名称<br>    ③商品SKU（库存量单位）</p><p><strong>提交订单页（place_order.html）</strong><br>    ①地址<br>    ②支付方式<br>    ③商品信息<br>    ④总金额<br>    ⑤运费<br>    ⑥商品信息</p><p><strong>用户订单页（user_center_order.html）</strong><br>    ①订单编号<br>    ②支付状态<br>    ③订单创建时间</p><p>2.将参数拆分到其所对应的表中</p><p><strong>用户表（df_user）</strong><br>    ①主键ID<br>    ②用户名<br>    ③密码<br>    ④邮箱<br>    ⑤激活标识（是否激活邮箱）<br>    ⑥权限标识（普通用户和管理员）</p><p><strong>地址表（df_address）</strong><br>    ①主键ID<br>    ②收件人<br>    ③收件地址<br>    ④邮编<br>    ⑤联系方式<br>    ⑥是否默认（默认收货地址）<br>    ⑦用户ID （外键）</p><p><strong>商品SKU表（df_goods_sku）</strong><br>    ①主键ID<br>    ②商品名称<br>    ③简介<br>    ④价格<br>    ⑤单位<br>    ⑥库存<br>    ⑦销量<br>    ⑧图片（这个图片字段只存一张商品封面图）<br>    ⑨状态<br>    ⑩商品种类ID（外键）<br>    ⑪spu ID（外键）</p><p><strong>商品种类表（df_goods_type）</strong><br>    ①主键ID<br>    ②种类名称<br>    ③logo<br>    ④图片</p><p><strong>主页幻灯片商品表（df_index_banner）</strong><br>    ①主键ID<br>    ②sku ID （外键）<br>    ③图片<br>    ④index （图片索引值）</p><p><strong>主页促销活动表（df_index_promotion）</strong><br>    ①主键ID<br>    ②图片<br>    ③活动url地址<br>    ④index（图片索引值）</p><p><strong>商品SPU表（df_goods）</strong><br>    ①主键ID<br>    ②名称<br>    ③商品详情</p><p><strong>主页分类商品展示表（df_index_type_goods）</strong><br>    ①主键ID<br>    ②sku ID （外键）<br>    ③种类ID<br>    ④展示标识<br>    ⑤index（图片索引值）</p><p><strong>商品图片表（df_goods_image）</strong><br>    ①主键ID<br>    ②图片<br>    ③sku ID</p><p><strong>订单商品表（df_order_goods）</strong><br>    ①主键ID<br>    ②订单ID （外键）<br>    ③sku ID （外键）<br>    ④商品数量<br>    ⑤商品价格<br>    ⑥评论</p><p><strong>订单信息表（df_order_info）</strong><br>    ①主键ID<br>    ②订单ID （外键）<br>    ③用户ID （外键）<br>    ④支付方式<br>    ⑤总数量<br>    ⑥总金额<br>    ⑦运费<br>    ⑧支付状态<br>    ⑨创建时间</p><h1 id="六丶项目框架搭建"><a href="#六丶项目框架搭建" class="headerlink" title="六丶项目框架搭建"></a>六丶项目框架搭建</h1><p><strong>说明：</strong>博主这里使用开发环境为Windows7+PyCharm</p><p>1.在PyCharm中创建dailyfresh项目，然后再到终端中创建项目应用模块，如下图所示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019032517551860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.在实际项目开发中应用比较多时，会在项目下创建一个名为apps的包，并将应用目录放在该apps下</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325180249457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.在配置文件settings中注册应用</p><ul><li><strong>step1</strong> 项目配置文件settings中导入sys模块，添加apps包到系统路径中，这样做的目的是在添加应用时不用写apps.应用名</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(BASE_DIR, <span class="string">"apps"</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 注册刚创建出来的应用 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">    &apos;df_cart&apos;,</span><br><span class="line">    &apos;df_goods&apos;,</span><br><span class="line">    &apos;df_order&apos;,</span><br><span class="line">    &apos;df_user&apos;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>4.在配置文件settings中配置mysql数据库</p><ul><li><strong>step1</strong> 在mysql中创建dailyfresh数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> dailyfresh <span class="keyword">charset</span>=utf8;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 配置数据库 </li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    'default': &#123;</span><br><span class="line">        'ENGINE': 'django.db.backends.mysql',</span><br><span class="line">        'NAME': 'dailyfresh',</span><br><span class="line">        'USER': 'root',</span><br><span class="line">        'PASSWORD': 'mysql',</span><br><span class="line">        'HOST': 'localhost',</span><br><span class="line">        'PORT': '3306',</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 顺便设置语言和时区</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LANGUAGE_CODE = &apos;zh-hans&apos;</span><br><span class="line"> </span><br><span class="line">TIME_ZONE = &apos;Asia/Shanghai&apos;</span><br></pre></td></tr></table></figure><p>5.在配置文件settings中配置静态文件目录</p><ul><li><strong>step1</strong> 在项目目录下创建static目录，用于存放前端静态文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20190325184103681.png" alt></p><ul><li><strong>step2</strong> 在settings配置文件末端将static目录路径添加到系统路径中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STATICFILES_DIRS = [os.path.join(BASE_DIR, &quot;static&quot;)]</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 将前端资源放到static目录下</li></ul><p><img src="https://img-blog.csdnimg.cn/20190326002613320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p>6.在根基urls.py文件设置正则匹配将应用模块中的urls包含进来</p><ul><li><strong>step1</strong> 在根基urls.py文件中进行如下编写，namespace表示反向解析</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, include(admin.site.urls)),</span><br><span class="line">    url(<span class="string">r'^user/'</span>, include(<span class="string">'df_user.urls'</span>, namespace=<span class="string">'user'</span>)),  <span class="comment"># 用户模块</span></span><br><span class="line">    url(<span class="string">r'^cart/'</span>, include(<span class="string">'df_cart.urls'</span>, namespace=<span class="string">'cart'</span>)),  <span class="comment"># 购物车模块</span></span><br><span class="line">    url(<span class="string">r'^order/'</span>, include(<span class="string">'df_order.urls'</span>, namespace=<span class="string">'order'</span>)),  <span class="comment"># 订单模块</span></span><br><span class="line">    url(<span class="string">r'^'</span>, include(<span class="string">'df_goods.urls'</span>, namespace=<span class="string">'goods'</span>)),  <span class="comment"># 商品模块</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在每个应用模块中创建urls.py文件，内容如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">   </span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>7.在项目目录下创建一个名为db的python包，在这个包下创建一个base_model.py文件，用作于基类完成数据库表共有字段</p><ul><li><strong>step1</strong> 创建base_model.py文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20190325190821194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step2</strong> 在base_model.py中进行如下编写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseModel</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""抽象模型基类"""</span></span><br><span class="line">    create_time = models.DateTimeField(auto_now_add=<span class="literal">True</span>, verbose_name=<span class="string">"创建时间"</span>)</span><br><span class="line">    update_time = models.DateTimeField(auto_now=<span class="literal">True</span>, verbose_name=<span class="string">"更新时间"</span>)</span><br><span class="line">    isDelete = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">"删除标记"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        <span class="comment"># 表示为抽象模型类</span></span><br><span class="line">        abstract = <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>8.在df_user模块中的models.py中定义两个模型类分别是用户模型类和地址模型类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AbstractUser</span><br><span class="line"><span class="keyword">from</span> db.base_model <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(AbstractUser, BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''用户模型类'''</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_user'</span></span><br><span class="line">        verbose_name = <span class="string">'用户'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Address</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''地址模型类'''</span></span><br><span class="line">    user = models.ForeignKey(<span class="string">'User'</span>, verbose_name=<span class="string">'所属账户'</span>)</span><br><span class="line">    receiver = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'收件人'</span>)</span><br><span class="line">    addr = models.CharField(max_length=<span class="number">256</span>, verbose_name=<span class="string">'收件地址'</span>)</span><br><span class="line">    zip_code = models.CharField(max_length=<span class="number">6</span>, null=<span class="literal">True</span>, verbose_name=<span class="string">'邮政编码'</span>)</span><br><span class="line">    phone = models.CharField(max_length=<span class="number">11</span>, verbose_name=<span class="string">'联系电话'</span>)</span><br><span class="line">    is_default = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">'是否默认'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_address'</span></span><br><span class="line">        verbose_name = <span class="string">'地址'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><p>9.在df_goods模块中的models.py中定义模型类</p><ul><li><strong>step1</strong> 在models.py中进行如下编写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> db.base_model <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> tinymce.models <span class="keyword">import</span> HTMLField</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsType</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''商品类型模型类'''</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'种类名称'</span>)</span><br><span class="line">    logo = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'标识'</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">'type'</span>, verbose_name=<span class="string">'商品类型图片'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_goods_type'</span></span><br><span class="line">        verbose_name = <span class="string">'商品种类'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsSKU</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''商品SKU模型类'''</span></span><br><span class="line">    status_choices = (</span><br><span class="line">        (<span class="number">0</span>, <span class="string">'下线'</span>),</span><br><span class="line">        (<span class="number">1</span>, <span class="string">'上线'</span>),</span><br><span class="line">    )</span><br><span class="line">    type = models.ForeignKey(<span class="string">'GoodsType'</span>, verbose_name=<span class="string">'商品种类'</span>)</span><br><span class="line">    goods = models.ForeignKey(<span class="string">'Goods'</span>, verbose_name=<span class="string">'商品SPU'</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'商品名称'</span>)</span><br><span class="line">    desc = models.CharField(max_length=<span class="number">256</span>, verbose_name=<span class="string">'商品简介'</span>)</span><br><span class="line">    price = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, verbose_name=<span class="string">'商品价格'</span>)</span><br><span class="line">    unite = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'商品单位'</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">'goods'</span>, verbose_name=<span class="string">'商品图片'</span>)</span><br><span class="line">    stock = models.IntegerField(default=<span class="number">1</span>, verbose_name=<span class="string">'商品库存'</span>)</span><br><span class="line">    sales = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">'商品销量'</span>)</span><br><span class="line">    status = models.SmallIntegerField(default=<span class="number">1</span>, choices=status_choices, verbose_name=<span class="string">'商品状态'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_goods_sku'</span></span><br><span class="line">        verbose_name = <span class="string">'商品'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Goods</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''商品SPU模型类'''</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'商品SPU名称'</span>)</span><br><span class="line">    <span class="comment"># 富文本类型:带有格式的文本</span></span><br><span class="line">    detail = HTMLField(blank=<span class="literal">True</span>, verbose_name=<span class="string">'商品详情'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_goods'</span></span><br><span class="line">        verbose_name = <span class="string">'商品SPU'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsImage</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''商品图片模型类'''</span></span><br><span class="line">    sku = models.ForeignKey(<span class="string">'GoodsSKU'</span>, verbose_name=<span class="string">'商品'</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">'goods'</span>, verbose_name=<span class="string">'图片路径'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_goods_image'</span></span><br><span class="line">        verbose_name = <span class="string">'商品图片'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexGoodsBanner</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''首页轮播商品展示模型类'''</span></span><br><span class="line">    sku = models.ForeignKey(<span class="string">'GoodsSKU'</span>, verbose_name=<span class="string">'商品'</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">'banner'</span>, verbose_name=<span class="string">'图片'</span>)</span><br><span class="line">    index = models.SmallIntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">'展示顺序'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_index_banner'</span></span><br><span class="line">        verbose_name = <span class="string">'首页轮播商品'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexTypeGoodsBanner</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''首页分类商品展示模型类'''</span></span><br><span class="line">    DISPLAY_TYPE_CHOICES = (</span><br><span class="line">        (<span class="number">0</span>, <span class="string">"标题"</span>),</span><br><span class="line">        (<span class="number">1</span>, <span class="string">"图片"</span>)</span><br><span class="line">    )</span><br><span class="line"> </span><br><span class="line">    type = models.ForeignKey(<span class="string">'GoodsType'</span>, verbose_name=<span class="string">'商品类型'</span>)</span><br><span class="line">    sku = models.ForeignKey(<span class="string">'GoodsSKU'</span>, verbose_name=<span class="string">'商品SKU'</span>)</span><br><span class="line">    display_type = models.SmallIntegerField(default=<span class="number">1</span>, choices=DISPLAY_TYPE_CHOICES, verbose_name=<span class="string">'展示类型'</span>)</span><br><span class="line">    index = models.SmallIntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">'展示顺序'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_index_type_goods'</span></span><br><span class="line">        verbose_name = <span class="string">"主页分类展示商品"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexPromotionBanner</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''首页促销活动模型类'''</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'活动名称'</span>)</span><br><span class="line">    url = models.URLField(verbose_name=<span class="string">'活动链接'</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">'banner'</span>, verbose_name=<span class="string">'活动图片'</span>)</span><br><span class="line">    index = models.SmallIntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">'展示顺序'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_index_promotion'</span></span><br><span class="line">        verbose_name = <span class="string">"主页促销活动"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 因为在df_goods模块中使用了第三方模块tinymce富文本编辑器所以需要在settings中进行添加应用</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">    &apos;tinymce&apos;,</span><br><span class="line">    &apos;df_cart&apos;,</span><br><span class="line">    &apos;df_goods&apos;,</span><br><span class="line">    &apos;df_order&apos;,</span><br><span class="line">    &apos;df_user&apos;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在配置文件末尾添加编辑器的配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 富文本编辑器配置</span><br><span class="line">TINYMCE_DEFAULT_CONFIG = &#123;</span><br><span class="line">    &apos;theme&apos;: &apos;advanced&apos;,</span><br><span class="line">    &apos;width&apos;: 600,</span><br><span class="line">    &apos;height&apos;: 400,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 在根基urls文件中配置编辑器url</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^tinymce/'</span>, include(<span class="string">'tinymce.urls'</span>)),  <span class="comment"># 富文本编辑器</span></span><br></pre></td></tr></table></figure><p>10.在df_order模块中的models.py中定义如下模型类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> db.base_model <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderInfo</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''订单模型类'''</span></span><br><span class="line">    PAY_METHOD_CHOICES = (</span><br><span class="line">        (<span class="number">1</span>, <span class="string">'货到付款'</span>),</span><br><span class="line">        (<span class="number">2</span>, <span class="string">'微信支付'</span>),</span><br><span class="line">        (<span class="number">3</span>, <span class="string">'支付宝'</span>),</span><br><span class="line">        (<span class="number">4</span>, <span class="string">'银联支付'</span>)</span><br><span class="line">    )</span><br><span class="line"> </span><br><span class="line">    ORDER_STATUS_CHOICES = (</span><br><span class="line">        (<span class="number">1</span>, <span class="string">'待支付'</span>),</span><br><span class="line">        (<span class="number">2</span>, <span class="string">'待发货'</span>),</span><br><span class="line">        (<span class="number">3</span>, <span class="string">'待收货'</span>),</span><br><span class="line">        (<span class="number">4</span>, <span class="string">'待评价'</span>),</span><br><span class="line">        (<span class="number">5</span>, <span class="string">'已完成'</span>)</span><br><span class="line">    )</span><br><span class="line"> </span><br><span class="line">    order_id = models.CharField(max_length=<span class="number">128</span>, primary_key=<span class="literal">True</span>, verbose_name=<span class="string">'订单id'</span>)</span><br><span class="line">    user = models.ForeignKey(<span class="string">'df_user.User'</span>, verbose_name=<span class="string">'用户'</span>)</span><br><span class="line">    addr = models.ForeignKey(<span class="string">'df_user.Address'</span>, verbose_name=<span class="string">'地址'</span>)</span><br><span class="line">    pay_method = models.SmallIntegerField(choices=PAY_METHOD_CHOICES, default=<span class="number">3</span>, verbose_name=<span class="string">'支付方式'</span>)</span><br><span class="line">    total_count = models.IntegerField(default=<span class="number">1</span>, verbose_name=<span class="string">'商品数量'</span>)</span><br><span class="line">    total_price = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, verbose_name=<span class="string">'商品总价'</span>)</span><br><span class="line">    transit_price = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>,verbose_name=<span class="string">'订单运费'</span>)</span><br><span class="line">    order_status = models.SmallIntegerField(choices=ORDER_STATUS_CHOICES, default=<span class="number">1</span>, verbose_name=<span class="string">'订单状态'</span>)</span><br><span class="line">    trade_no = models.CharField(max_length=<span class="number">128</span>, verbose_name=<span class="string">'支付编号'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_order_info'</span></span><br><span class="line">        verbose_name = <span class="string">'订单'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderGoods</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''订单商品模型类'''</span></span><br><span class="line">    order = models.ForeignKey(<span class="string">'OrderInfo'</span>, verbose_name=<span class="string">'订单'</span>)</span><br><span class="line">    sku = models.ForeignKey(<span class="string">'df_goods.GoodsSKU'</span>, verbose_name=<span class="string">'商品SKU'</span>)</span><br><span class="line">    count = models.IntegerField(default=<span class="number">1</span>, verbose_name=<span class="string">'商品数目'</span>)</span><br><span class="line">    price = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, verbose_name=<span class="string">'商品价格'</span>)</span><br><span class="line">    comment = models.CharField(max_length=<span class="number">256</span>, verbose_name=<span class="string">'评论'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_order_goods'</span></span><br><span class="line">        verbose_name = <span class="string">'订单商品'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><p>11.在settings配置文件中使用django内置的认证系统指定的模型类为df_user下的User类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># django认证系统指定的模型类</span><br><span class="line">AUTH_USER_MODEL = &apos;df_user.User&apos;</span><br></pre></td></tr></table></figure><p>12.生成迁移文件</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325204751966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>13.执行迁移文件</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019032520492812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>14.查看数据库</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325205129354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>15.运行项目</p><p><img src="https://img-blog.csdnimg.cn/2019032520532189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/88790662" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/88790662</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（完结）</title>
      <link href="/2019/11/06/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%AE%8C%E7%BB%93%EF%BC%89/"/>
      <url>/2019/11/06/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%AE%8C%E7%BB%93%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/Hellotaogang/cdn@4.6.2/images/flask_logo.png" width="900px" height="300px" align><br>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！</p><a id="more"></a><h1 id="一丶注册和登录以及用户退出功能"><a href="#一丶注册和登录以及用户退出功能" class="headerlink" title="一丶注册和登录以及用户退出功能"></a>一丶注册和登录以及用户退出功能</h1><p>1.注册功能</p><ul><li><strong>step1</strong> 使用博主自己的手机号码进行注册功能测试，注册界面（左图），手机收到短信验证（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203100139178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203100312989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 点击注册则成功进入网站主页，并在右上角显示注册的手机号码，功能测试成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203100722415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 查看数据库用户表ih_user_profile与刚注册的用户信息一致</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203101038573.png" alt></fancybox></p><ul><li><strong>step4</strong> 查看redis数据库保存用户登录信息的session数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203103640694.png" alt></fancybox></p><p>2.退出功能</p><ul><li><strong>step1</strong> 点击网站主页右上角的手机号码（左图，刚注册还未设置用户名，所以用户名默认为手机号），进入我的爱家界面（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203101734856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203101744663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 在我的爱家页面，点击最下面的退出功能按钮，成功退出并清除用户信息相关的session数据，在主页右上方显示注册登录按钮</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203102012902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 此时查看redis数据库中session数据，按上一篇博客写的逻辑，正确则只显示csrf_token的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019020310383990.png" alt></fancybox></p><p>3.登录功能</p><p>点击登录按钮，进入登录页（左图），输入刚注册时的手机号码以及密码，成功登录进入主页（右图）</p><p><img src="https://img-blog.csdnimg.cn/2019020310261483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203102644808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><h1 id="二丶上传头像功能和修改用户名功能测试"><a href="#二丶上传头像功能和修改用户名功能测试" class="headerlink" title="二丶上传头像功能和修改用户名功能测试"></a>二丶上传头像功能和修改用户名功能测试</h1><p>1.上传头像功能</p><ul><li><strong>step1</strong> 进入我的爱家（左图），点击修改进入个人信息页面（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/201902031059569.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203110038632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 点击选择文件按钮，选择头像图片（左图），点击上传则设置头像成功（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203110939319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203111009296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step3</strong> 查看数据库用户信息表ih_user_profile，avatar_url头像图片url字段不再为null</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203111233758.png" alt></fancybox></p><p>2.修改用户名功能</p><ul><li><strong>step1</strong> 在用户名一栏输入要修改后用户名（左图），点击保存按钮，则提示保存成功（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203111738595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203111750399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 查看数据库用户信息表ih_user_profile，name字段的值为刚设置的用户名</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203112041314.png" alt></fancybox></p><ul><li><strong>step3</strong> 进入我的爱家页面，在个人信息栏，成功显示出设置的用户头像和用户名</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203112254310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 回到主页，在右上角成功显示出设置的用户名</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203120818378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶发布房源以及实名认证功能测试"><a href="#三丶发布房源以及实名认证功能测试" class="headerlink" title="三丶发布房源以及实名认证功能测试"></a>三丶发布房源以及实名认证功能测试</h1><p>1.实名认证功能</p><ul><li><strong>step1</strong> 首先先进入我的房源页面，当用户想发布房源那么就需要进行实名认证，实名认证成功后，在我的房源页面才有发布房源的功能按钮</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203112906521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 进入实名认证页面（左图），输入姓名以及身份证号（这个身份证号乱输的），如（右图）所示</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203113110987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203113227504.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step3</strong> 点击保存后，成功则提示保存成功（左图），然后此页面便变成灰色输入框不可编写状态（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203113431423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203113439222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step4</strong> 数据库用户信息表ih_user_profile，real_name和id_card字段的值为用户实名认证填写的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203113723536.png" alt></fancybox></p><p>2.发布房源功能</p><ul><li><strong>step1</strong> 当用户进行实名注册成功之后，再次进入我的房源页，则出现发布房源功能按钮（左图），点击发布房源功能出现（右图）界面</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203114005321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203114015635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 填写房源信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203115501527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 店家发布房源信息进入发布新房源页面（左图），选择房屋图片，点击上传（右图），可以传多张</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203115759821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203120117244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step4</strong> 查看数据库房屋信息表ih_house_info，表字段值与填写的新房源数据一致</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203120404350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 回到我的房源页面，则成功显示该用户发布的房源信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203120548663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶网站房屋搜索功能测试"><a href="#四丶网站房屋搜索功能测试" class="headerlink" title="四丶网站房屋搜索功能测试"></a>四丶网站房屋搜索功能测试</h1><p>1.网站主页搜索</p><ul><li><strong>step1</strong> 用户在主页中选择入住条件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019020312534569.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 点击搜索后则跳转到房屋列表页，显示出满足用户选择的入住条件的房屋（左图），客户点击此列表页中任意一房屋后，则显示该房屋的相关信息（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203125734149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" div align="left"><img src="https://img-blog.csdnimg.cn/20190203125917613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" div align="right"></p><ul><li><strong>step3</strong> 此账号用户刚好在锦江区发布过一个房源，因为代码逻辑设定用户自己不能预订自己发布的房屋，所以点击进行该房屋，则不显示即可预定功能按钮</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203130258473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.房源列表页进行搜索</p><p>在房源列表页上，可进行入住日期区域以及按照条件进行筛选，选择2-3~2-5日入住，房屋位置为武侯区，筛选条件为价格由低到高，进行搜索，筛选条件就不进行一一测试了</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203134638737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶我的订单功能以及客户订单功能测试"><a href="#五丶我的订单功能以及客户订单功能测试" class="headerlink" title="五丶我的订单功能以及客户订单功能测试"></a>五丶我的订单功能以及客户订单功能测试</h1><p>1.我的订单功能</p><ul><li><strong>step1</strong> 进入我的订单页面，显示为空，因为该用户并未进行房屋预定（左图），对云漫单间进行预定（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203143007544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203143016295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 因为预订房屋为张三发布的，所以切换到张三账户，在我的订单中对该订单进行接单处理</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203143237309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203143246597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step3</strong> 回到之前账户，查看我的订单显示为待支付状态，功能测试成功，支付功能测试在客户订单功能中进行测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203143421785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.客户订单功能</p><ul><li><strong>step1</strong> 该用户在锦江区成功发布了一个新房源，登录18033333333（张三）账号，对此房源进行预定，在主页选择锦江区（左图），点击搜索按钮，默认筛选条件为最新，所以第一个为该用户发布的房屋（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203135015341.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203135218152.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 点击房屋图片显示房屋信息，点击即可预定对该房屋进行预定（左图），输入入住以及离开日期后，显示出订单总金额（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203135504587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203135513511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step3</strong> 提交订单后，显示该订单状态信息为待接单</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203135651800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 此时登录180XXXXX796（2019 努力 奋斗）账号，进入我的爱家—–客户订单页面，显示18033333333（张三）预定了我的房屋的订单信息（左图），选择接单，此单状态变为已接单状态（右图），选择拒单则需要填写拒单原因，拒单就不进行演示了，之前的博客已经演示过了</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203140215668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/2019020314041149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step5</strong> 切换到18033333333（张三）账号，查看我的订单则显示此单的状态为待支付状态（左图），正常来说是待使用，等到客户到店入住后，则显示为入住中，退房时显示为待支付，支付后显示为待评价，评价完成后，此订单状态才为已完成，前面的三个步骤给省略掉了，因为没那个时间去等待测试，点击去支付则跳转到登录支付宝页面（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203140640233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203141009857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step6</strong> 登录支付宝后，则显示订单的信息，以及付款金额（左图），确认付款输入支付密码后，则显示支付成功界面（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203141247167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203141324300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step7</strong> 点击完成后，则跳转到我的订单页面，此时订单的状态为待评价状态</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203141509454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 点击发表评价后，弹出评价框（左图），输入评价信息，然后确定则此单的评价信息成功显示出来（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203141947840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203141957537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step9</strong> 切换到180XXXXX796（2019 努力 奋斗）账号，进入到客户订单中，在此订单我的评价一栏也显示了用户作出的评价信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203142714893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="六丶网站主页房屋幻灯片功能测试"><a href="#六丶网站主页房屋幻灯片功能测试" class="headerlink" title="六丶网站主页房屋幻灯片功能测试"></a>六丶网站主页房屋幻灯片功能测试</h1><p><strong>说明</strong>：网站主页五张幻灯片是按照订单量倒序进行筛选的，意思就是订单量越大则显示到幻灯片主页第一张，以此类推，因为主页幻灯片属于用户经常访问的资源，所以是保存在redis数据库中当中缓存数据的，所以就会有有效期（7200S），当过了有效期后则会按照此时的订单量进行筛选房屋数据的，按照房屋的订单量进行倒序排序，取出5条数据对象，每个对象中的房屋图片，则显示拿到前端主页页面进行显示给所有用户</p><ul><li><strong>step1</strong> 在数据库中按照订单量的倒序进行查询，并显示5条</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203145240141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 根据数据库查询结果，得值云漫单间排名第一，所以在主页房屋幻灯片第一张应该是云漫单间</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203145501912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/86756248" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86756248</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（十四）</title>
      <link href="/2019/11/06/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
      <url>/2019/11/06/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('别搞了，你破解不了的');const txt = document.getElementById('enc_content').innerHTML;// alert(txt,"1")// alert(pwd,"2")// alert(onError,"3")let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);if(plaintext == ""){document.getElementById("enc_pwd_input").value="";document.getElementById("enc_error").innerHTML = "密码错误!";return}// alert(plaintext)} catch(err) {if(onError) {// alert(onError,"4")// alert(err,"5")onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" placeholder="请输入文章密码" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "密码错误!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（十三）</title>
      <link href="/2019/11/05/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/"/>
      <url>/2019/11/05/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶保存订单后端接口编写"><a href="#一丶保存订单后端接口编写" class="headerlink" title="一丶保存订单后端接口编写"></a>一丶保存订单后端接口编写</h1><p>1.分析：当用户点击房屋图片进入房间信息页面时，在页面最下面会出现即可预定功能按钮（左图），当用户点击预定时，即跳转到预定页面（右图），在该页面中，首选是获取用户点击的房屋信息显示到此页面上，然后需要用户选择入住的时间和离开的时间，当用户选择完时间后那么在界面左下角即显示出订单的价格，点击提交订单后，此时需要从后端来判断此房间在用户选择入住离开期间有没有冲突订单，如果有则提示用户房屋被抢订，重新选择日期的一个提示，如果提交订单成功，则在我的订单中显示出该订单，这是整个业务逻辑</p><p><img src="https://img-blog.csdnimg.cn/20190127094248993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190127094301338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><p>2.逻辑编写如下</p><ul><li><strong>step1</strong> 在api_v1.0目录下创建orders.py模块，用于编写订单相关的接口，并在<strong>init</strong>.py模块中导入此模块</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127095436279.png" alt></p><ul><li><strong>step2</strong> 定义路由接口</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/orders", methods=["POST"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_order</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""保存用户的订单"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 获取前端发送的请求参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order_data = request.get_json()</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> order_data:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 获取用户预订的房屋编号，入住时间以及离开时间</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">house_id = order_data.get(<span class="string">"house_id"</span>)</span><br><span class="line">start_date_str = order_data.get(<span class="string">"start_date"</span>)</span><br><span class="line">end_date_str = order_data.get(<span class="string">"end_date"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 校验参数完整性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([house_id, start_date_str, end_date_str]):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数不完整"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 检查日期格式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 将str格式的日期数据转换成datetime格式的日期数据</span></span><br><span class="line">    start_date = datetime.strptime(start_date_str, <span class="string">"%Y-%m-%d"</span>)</span><br><span class="line">    end_date = datetime.strptime(end_date_str, <span class="string">"%Y-%m-%d"</span>)</span><br><span class="line">    <span class="keyword">assert</span> start_date &lt;= end_date <span class="comment">#使用断言就行判断</span></span><br><span class="line">    <span class="comment"># 计算预订的天数</span></span><br><span class="line">    days = (end_date-start_date).days + <span class="number">1</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"日期格式不正确"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 查询用户预订的房屋是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    house = House.query.get(house_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取房屋信息失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 判断房屋是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> house:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"房屋不存在"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 判断房东预订的房屋是不是自己的发布的房屋</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> user_id == house.user_id:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.ROLEERR, errmsg=<span class="string">"不能预订自己发布的房屋"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step12</strong> 检查用户预订的时间内，房屋没有被别人下单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 查询时间冲突的订单数 select count(*) from ih_order_info where ()</span></span><br><span class="line">    count = Order.query.filter(Order.house_id == house_id, Order.begin_date &lt;= end_date, Order.end_date &gt;= start_date).count()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"系统繁忙，请稍候重试"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step13</strong> 如果查询的订单冲突数大于0，则说明房屋在用户预订时间内，已被他人预订</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> count &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DATAERR, errmsg=<span class="string">"房屋已被预订"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step14</strong> 计算订单总额</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">amount = house.price * days</span><br></pre></td></tr></table></figure><ul><li><strong>step15</strong> 保存订单数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">order = Order(</span><br><span class="line">        house_id=house_id,</span><br><span class="line">        user_id=user_id,</span><br><span class="line">        begin_date=start_date,</span><br><span class="line">        end_date=end_date,</span><br><span class="line">        days=days,</span><br><span class="line">        house_price=house.price,</span><br><span class="line">        amount=amount</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li><strong>step16</strong> 将订单数据提交到数据库中，并返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    db.session.add(order)</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> (e):</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"保存订单失败"</span>)</span><br><span class="line"></span><br><span class="line">返回正确响应数据</span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"order_id"</span>: order.id&#125;)</span><br></pre></td></tr></table></figure><h1 id="二丶预订页面前端编写以及接口测试"><a href="#二丶预订页面前端编写以及接口测试" class="headerlink" title="二丶预订页面前端编写以及接口测试"></a>二丶预订页面前端编写以及接口测试</h1><p>1.在booking.js中进行如下编写</p><ul><li><strong>step1</strong> 首先当页面加载完时，则判断用户是否登录</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$.get(<span class="string">"/api/v1.0/session"</span>, function(resp) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"0"</span> != resp.errno) &#123;</span><br><span class="line">        location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="string">"json"</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取详情页面要展示的房屋编号</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> queryData = decodeQuery();</span><br><span class="line"><span class="keyword">var</span> houseId = queryData[<span class="string">"id"</span>];</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取房屋的基本信息</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="keyword">get</span>("/api/v1.0/houses/" + houseId, function(resp)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == resp.errno) &#123;</span><br><span class="line">            $(<span class="string">".house-info&gt;img"</span>).attr(<span class="string">"src"</span>, resp.data.house.img_urls[<span class="number">0</span>]);</span><br><span class="line">            $(<span class="string">".house-text&gt;h3"</span>).html(resp.data.house.title);</span><br><span class="line">            $(<span class="string">".house-text&gt;p&gt;span"</span>).html((resp.data.house.price/<span class="number">100.0</span>).toFixed(<span class="number">0</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 提交订单</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".submit-btn"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($(<span class="string">".order-amount&gt;span"</span>).html()) &#123;</span><br><span class="line">        $(<span class="keyword">this</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">var</span> startDate = $(<span class="string">"#start-date"</span>).val();</span><br><span class="line">        <span class="keyword">var</span> endDate = $(<span class="string">"#end-date"</span>).val();</span><br><span class="line">        <span class="keyword">var</span> data = &#123;</span><br><span class="line">            <span class="string">"house_id"</span>:houseId,</span><br><span class="line">            <span class="string">"start_date"</span>:startDate,</span><br><span class="line">            <span class="string">"end_date"</span>:endDate</span><br><span class="line">        &#125;;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"/api/v1.0/orders"</span>,</span><br><span class="line">            type:<span class="string">"POST"</span>,</span><br><span class="line">            data: <span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">            contentType: <span class="string">"application/json"</span>,</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            headers:&#123;</span><br><span class="line">                <span class="string">"X-CSRFTOKEN"</span>:getCookie(<span class="string">"csrf_token"</span>),</span><br><span class="line">            &#125;,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"4101"</span> == resp.errno) &#123;</span><br><span class="line">                    location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"4004"</span> == resp.errno) &#123;</span><br><span class="line">                    showErrorMsg(<span class="string">"房间已被抢定，请重新选择日期！"</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">                    location.href = <span class="string">"/orders.html"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.测试</p><ul><li><strong>step1</strong> 在房屋信息页（左图），点击即可预定后成功跳转到预定界面（右图），并成功显示预定房屋的信息</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127115846581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/2019012711585629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 在预定房屋界面，选择入住时间以及离开时间后，左下角则成功显示正确的订单总额（左图），当点击提交订单成功后，则跳转到我的订单页面（右图），因为此页面接口未编写，所以啥都没有属于正常情况</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127121041498.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190127121136714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step3</strong> 此时查看数据库ih_order_info表，则显示我们成功提交的订单信息，此功能测试成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019012712143515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶订单模块（我的订单）后端接口编写"><a href="#三丶订单模块（我的订单）后端接口编写" class="headerlink" title="三丶订单模块（我的订单）后端接口编写"></a>三丶订单模块（我的订单）后端接口编写</h1><p>1.分析：第一当用户成功提交订单后，则会跳转到我的订单页面，此时在这个页面就应该显示出用户刚才预定房屋的订单情况，第二就是需要对角色进行一个判断，如果是下单人那么在我的订单中查看订单，如果是房东那么就在客户订单中，查看别人预定我发布的房屋的订单，无论是哪种情况，对于后端来说都是查询数据库订单信息情况而已，所以这两个功能可以用一个查询订单接口在后端进行实现</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127122606756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.说明：之所以不管哪种角色在我的爱家页面都出现这两个有关订单的功能（我的订单和客户订单），那是因为对于任何注册网站的用户来说，我既可以订房，也可以发布房源，即一个账号可以切换成两种角色</p><p>3.逻辑编写</p><ul><li><strong>step1</strong> 定义接口路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /api/v1.0/user/orders?role=(custom/landlord)</span></span><br><span class="line"><span class="meta">@api.route("/user/orders", methods=["GET"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_orders</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""查询用户的订单信息"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取前端请求数据中角色role,如果没有则默认为空字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">role = request.args.get(<span class="string">"role"</span>, <span class="string">""</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 获取订单数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 以房东的身份在数据库中查询自己发布过的房屋</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">"landlord"</span> == role:</span><br><span class="line">        houses = House.query.filter(House.user_id == user_id).all()</span><br><span class="line">        <span class="comment"># 通过列表生成式方式保存房东名下的所有房屋的id</span></span><br><span class="line">        houses_ids = [house.id <span class="keyword">for</span> house <span class="keyword">in</span> houses]</span><br><span class="line">        <span class="comment"># 在Order表中查询预定了自己房子的订单,并按照创建订单的时间的倒序排序，也就是在此页面显示最新的订单信息</span></span><br><span class="line">        orders = Order.query.filter(Order.house_id.in_(houses_ids)).order_by(Order.create_time.desc()).all()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 以房客的身份查询订单，则查询的是我的订单</span></span><br><span class="line">        orders = Order.query.filter(Order.user_id == user_id).order_by(Order.create_time.desc()).all()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取订单信息失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在models.py模块Order类中构建to_dict方法，用于将详细信息转换为字典数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_dict</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""将订单信息转换为字典数据"""</span></span><br><span class="line">    order_dict = &#123;</span><br><span class="line">        <span class="string">"order_id"</span>: self.id,</span><br><span class="line">        <span class="string">"title"</span>: self.house.title,</span><br><span class="line">        <span class="string">"img_url"</span>: constants.QINIU_URL_DOMAIN + self.house.index_image_url <span class="keyword">if</span> self.house.index_image_url <span class="keyword">else</span> <span class="string">""</span>,</span><br><span class="line">        <span class="string">"start_date"</span>: self.begin_date.strftime(<span class="string">"%Y-%m-%d"</span>),</span><br><span class="line">        <span class="string">"end_date"</span>: self.end_date.strftime(<span class="string">"%Y-%m-%d"</span>),</span><br><span class="line">        <span class="string">"ctime"</span>: self.create_time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>),</span><br><span class="line">        <span class="string">"days"</span>: self.days,</span><br><span class="line">        <span class="string">"amount"</span>: self.amount,</span><br><span class="line">        <span class="string">"status"</span>: self.status,</span><br><span class="line">        <span class="string">"comment"</span>: self.comment <span class="keyword">if</span> self.comment <span class="keyword">else</span> <span class="string">""</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 订单存在则将订单对象orders转换成字典数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">orders_dict_list = []</span><br><span class="line">    <span class="keyword">if</span> orders:</span><br><span class="line">        <span class="keyword">for</span> order <span class="keyword">in</span> orders:</span><br><span class="line">            orders_dict_list.append(order.to_dict())</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 最后向前端返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"orders"</span>: orders_dict_list&#125;)</span><br></pre></td></tr></table></figure><h1 id="四丶订单模块（我的订单）前端编写"><a href="#四丶订单模块（我的订单）前端编写" class="headerlink" title="四丶订单模块（我的订单）前端编写"></a>四丶订单模块（我的订单）前端编写</h1><p>1.我的订单orders.js中进行如下编写，需注意的是当客户预定的房间后，会引导到支付链接去</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询房客订单</span></span><br><span class="line">    $.<span class="keyword">get</span>("/api/v1.0/user/orders?role=custom", function(resp)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">            $(<span class="string">".orders-list"</span>).html(template(<span class="string">"orders-list-tmpl"</span>, &#123;<span class="attr">orders</span>:resp.data.orders&#125;));</span><br><span class="line">            $(<span class="string">".order-pay"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> orderId = $(<span class="keyword">this</span>).parents(<span class="string">"li"</span>).attr(<span class="string">"order-id"</span>);</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    url: <span class="string">"/api/v1.0/orders/"</span> + orderId + <span class="string">"/payment"</span>,</span><br><span class="line">                    type: <span class="string">"post"</span>,</span><br><span class="line">                    dataType: <span class="string">"json"</span>,</span><br><span class="line">                    headers: &#123;</span><br><span class="line">                        <span class="string">"X-CSRFToken"</span>: getCookie(<span class="string">"csrf_token"</span>),</span><br><span class="line">                    &#125;,</span><br><span class="line">                    success: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">"4101"</span> == resp.errno) &#123;</span><br><span class="line">                            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">                            <span class="comment">// 引导用户跳转到支付宝连接</span></span><br><span class="line">                            location.href = resp.data.pay_url;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><p>2.在orders.html中进行如下编写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"orders-list-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> orders&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="actionscript">    &#123;&#123;<span class="keyword">each</span> orders <span class="keyword">as</span> order&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">order-id</span>=</span></span><span class="template-variable">&#123;&#123;order.order_id&#125;&#125;</span><span class="xml"><span class="tag">&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"order-title"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>订单编号：</span><span class="template-variable">&#123;&#123;order.order_id&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">            &#123;&#123; <span class="keyword">if</span> <span class="string">"WAIT_COMMENT"</span> == order.status &#125;&#125;</span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fr order-operate"</span>&gt;</span></span><br><span class="line"><span class="javascript">                &lt;button type=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-success order-comment"</span> data-toggle=<span class="string">"modal"</span> data-target=<span class="string">"#comment-modal"</span>&gt;发表评价&lt;<span class="regexp">/button&gt;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">            &#123;&#123; <span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"WAIT_PAYMENT"</span> == order.status &#125;&#125;</span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fr order-operate"</span>&gt;</span></span><br><span class="line"><span class="javascript">                &lt;button type=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-success order-pay"</span>&gt;去支付&lt;<span class="regexp">/button&gt;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"order-content"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;order.img_url&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"order-text"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123;order.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>创建时间：</span><span class="template-variable">&#123;&#123;order.ctime&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>入住日期：</span><span class="template-variable">&#123;&#123;order.start_date&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>离开日期：</span><span class="template-variable">&#123;&#123;order.end_date&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>合计金额：￥</span><span class="template-variable">&#123;&#123;(order.amount/100.0).toFixed(0)&#125;&#125;</span><span class="xml">(共</span><span class="template-variable">&#123;&#123;order.days&#125;&#125;</span><span class="xml">晚)<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>订单状态：</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">if</span> <span class="string">"WAIT_ACCEPT"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                待接单</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"WAIT_PAYMENT"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                待支付</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"WAIT_COMMENT"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                待评价</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"COMPLETE"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                已完成</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"REJECTED"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                已拒单</span><br><span class="line"><span class="handlebars"><span class="xml">                            </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">                    &#123;&#123;<span class="keyword">if</span> <span class="string">"COMPLETE"</span> == order.status&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>我的评价： </span><span class="template-variable">&#123;&#123;order.comment&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">                    &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"REJECTED"</span> == order.status&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>拒单原因： </span><span class="template-variable">&#123;&#123;order.comment&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line">    暂时没有订单。</span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="五丶我的订单功能测试"><a href="#五丶我的订单功能测试" class="headerlink" title="五丶我的订单功能测试"></a>五丶我的订单功能测试</h1><p>1.登录18022222222（Hellotaogang）账户后，直接进入我的订单页面，成功显示我的订单信息，如下</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127133933172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.以客户的角色进行预定房间，选择锦江区，价格由高到低，选择最贵的房间</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019012713411835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.进入房间信息后，点击即可预定（左图），然后提交成功后跳转到我的订单页（右图），成功按照最新预定时间进行排序显示</p><p><img src="https://img-blog.csdnimg.cn/20190127134417361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190127134428412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><p>4.查看数据库ih_user_profile用户信息表以及ih_order_info订单信息表，当前的所有订单都是由18022222222（Hellotaogang）账号进行的预定</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127134938646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.现在博主登录18033333333（张三）账号进行测试，测试房东能不能预定自己发布的房屋（刷单）</p><ul><li><strong>step1</strong> 首先在数据中查看张三发布了哪些房屋</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127135507485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 这里对house_id为10的房屋进行预定，也就是至朴大床房进行预定，结果发现根本没有即可预定按钮（左图），反之对house_id为8的商务套房进行预定，如果成功显示即可预定功能按钮（右图），那么说明编写的代码逻辑没有任何问题</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127135831672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" div align="left"><img src="https://img-blog.csdnimg.cn/20190127140157913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" div align="right"></p><p>6.上一篇博客中有一个搜索条件未进行测试，因为当时并没有编写订单模块接口，所以无法查询到冲突订单，现在我使用18111111111（taogang123）账号进行相同房间时间冲突为条件进行搜索测试</p><ul><li><strong>step1</strong> 根据数据库订单表以及房屋信息表，获取Hellotaogang账号的订单信息以及对应的房屋信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127140951110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 根据获取的信息来进行冲突订单搜索条件测试，金牛区房屋id为13的云篆单间入住时间为2019-01-27到2019-01-30的订单已经被Hellotaogang账号预定，无法预定则表示代码逻辑正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127151404233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 在主页进行条件搜索时，则不显示冲突订单中房屋信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127151552797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="六丶订单模块（客户订单）后端接口编写"><a href="#六丶订单模块（客户订单）后端接口编写" class="headerlink" title="六丶订单模块（客户订单）后端接口编写"></a>六丶订单模块（客户订单）后端接口编写</h1><p>1.分析：当房东进入客户订单后，即显示出该房东的房屋被客户预定的订单信息，在每个订单上都会有接单以及拒单的功能按钮，不管是接单还是拒单都是改变订单的一个状态，只是房东在选择拒单时必需填写拒绝原因，所以这关于接单和拒单这两个功能接口可以进行复用</p><p>2.接口逻辑编写</p><ul><li><strong>step1</strong> 定义路由接口，需从前端请求中获取订单编号，使用PUT方式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/orders/&lt;int:order_id&gt;/status", methods=["PUT"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">accept_reject_order</span><span class="params">(order_id)</span>:</span></span><br><span class="line">    <span class="string">"""接单拒单"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取请求参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req_data = request.get_json()</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> req_data:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 获取前端用户请求为接单还是拒单，关键字action</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">action = req_data.get(<span class="string">"action"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 判断action参数的值在不在accept接单和reject拒单之间</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">"accept"</span>, <span class="string">"reject"</span>):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 在数据库中根据订单号查询订单状态为等待接单状态的订单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    order = Order.query.filter(Order.id == order_id, Order.status == <span class="string">"WAIT_ACCEPT"</span>).first()</span><br><span class="line">    <span class="comment"># 获取order订单对象中的house对象</span></span><br><span class="line">    house = order.house</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"无法获取订单数据"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 如果order对象不存在或者订单中的房屋id不等于用户id 则说明房东在修改不属于自己房屋订单</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> order <span class="keyword">or</span> house.user_id != user_id:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.REQERR, errmsg=<span class="string">"操作无效"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 房东选择接单，则对应订单状态为等待评论，拒单则需房东填写拒单的原因</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action == <span class="string">"accept"</span>: <span class="comment"># 接单</span></span><br><span class="line">    order.status = <span class="string">"WAIT_PAYMENT"</span></span><br><span class="line"><span class="keyword">elif</span> action == <span class="string">"reject"</span>: <span class="comment"># 拒单</span></span><br><span class="line">    reason = req_data.get(<span class="string">"reason"</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> reason:</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br><span class="line">    order.status = <span class="string">"REJECTED"</span></span><br><span class="line">    order.comment = reason</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 将订单修改后的对象提交到数据库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    db.session.add(order)</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"操作失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 返回正确响应，因为接口逻辑是在数据库的修改以及查询，所以不需要向前端返回数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>)</span><br></pre></td></tr></table></figure><h1 id="七丶订单模块（客户订单）前端编写以及接口测试"><a href="#七丶订单模块（客户订单）前端编写以及接口测试" class="headerlink" title="七丶订单模块（客户订单）前端编写以及接口测试"></a>七丶订单模块（客户订单）前端编写以及接口测试</h1><p>1.在客户订单页lorders.js中进行如下编写</p><ul><li><strong>step1</strong> 查询房东的订单</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="keyword">get</span>("/api/v1.0/user/orders?role=landlord", function(resp)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">            $(<span class="string">".orders-list"</span>).html(template(<span class="string">"orders-list-tmpl"</span>, &#123;<span class="attr">orders</span>:resp.data.orders&#125;));</span><br><span class="line">            $(<span class="string">".order-accept"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> orderId = $(<span class="keyword">this</span>).parents(<span class="string">"li"</span>).attr(<span class="string">"order-id"</span>);</span><br><span class="line">                $(<span class="string">".modal-accept"</span>).attr(<span class="string">"order-id"</span>, orderId);</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 接单处理</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".modal-accept"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> orderId = $(<span class="keyword">this</span>).attr(<span class="string">"order-id"</span>);</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    url:<span class="string">"/api/v1.0/orders/"</span>+orderId+<span class="string">"/status"</span>,</span><br><span class="line">                    type:<span class="string">"PUT"</span>,</span><br><span class="line">                    data:<span class="string">'&#123;"action":"accept"&#125;'</span>,</span><br><span class="line">                    contentType:<span class="string">"application/json"</span>,</span><br><span class="line">                    dataType:<span class="string">"json"</span>,</span><br><span class="line">                    headers:&#123;</span><br><span class="line">                        <span class="string">"X-CSRFTOKEN"</span>:getCookie(<span class="string">"csrf_token"</span>),</span><br><span class="line">                    &#125;,</span><br><span class="line">                    success:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">"4101"</span> == resp.errno) &#123;</span><br><span class="line">                            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">                            $(<span class="string">".orders-list&gt;li[order-id="</span>+ orderId +<span class="string">"]&gt;div.order-content&gt;div.order-text&gt;ul li:eq(4)&gt;span"</span>).html(<span class="string">"已接单"</span>);</span><br><span class="line">                            $(<span class="string">"ul.orders-list&gt;li[order-id="</span>+ orderId +<span class="string">"]&gt;div.order-title&gt;div.order-operate"</span>).hide();</span><br><span class="line">                            $(<span class="string">"#accept-modal"</span>).modal(<span class="string">"hide"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">            $(<span class="string">".order-reject"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> orderId = $(<span class="keyword">this</span>).parents(<span class="string">"li"</span>).attr(<span class="string">"order-id"</span>);</span><br><span class="line">                $(<span class="string">".modal-reject"</span>).attr(<span class="string">"order-id"</span>, orderId);</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 拒单处理</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".modal-reject"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> orderId = $(<span class="keyword">this</span>).attr(<span class="string">"order-id"</span>);</span><br><span class="line">    <span class="keyword">var</span> reject_reason = $(<span class="string">"#reject-reason"</span>).val();</span><br><span class="line">    <span class="keyword">if</span> (!reject_reason) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">var</span> data = &#123;</span><br><span class="line">        action: <span class="string">"reject"</span>,</span><br><span class="line">        reason:reject_reason</span><br><span class="line">    &#125;;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"/api/v1.0/orders/"</span>+orderId+<span class="string">"/status"</span>,</span><br><span class="line">        type:<span class="string">"PUT"</span>,</span><br><span class="line">        data:<span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">        contentType:<span class="string">"application/json"</span>,</span><br><span class="line">        headers: &#123;</span><br><span class="line">            <span class="string">"X-CSRFTOKEN"</span>:getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        dataType:<span class="string">"json"</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"4101"</span> == resp.errno) &#123;</span><br><span class="line">                location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">                $(<span class="string">".orders-list&gt;li[order-id="</span>+ orderId +<span class="string">"]&gt;div.order-content&gt;div.order-text&gt;ul li:eq(4)&gt;span"</span>).html(<span class="string">"已拒单"</span>);</span><br><span class="line">                $(<span class="string">"ul.orders-list&gt;li[order-id="</span>+ orderId +<span class="string">"]&gt;div.order-title&gt;div.order-operate"</span>).hide();</span><br><span class="line">                $(<span class="string">"#reject-modal"</span>).modal(<span class="string">"hide"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2.在lorders.html中进行如下编写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"orders-list-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> orders&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="actionscript">    &#123;&#123;<span class="keyword">each</span> orders <span class="keyword">as</span> order&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">order-id</span>=</span></span><span class="template-variable">&#123;&#123;order.order_id&#125;&#125;</span><span class="xml"><span class="tag">&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"order-title"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>订单编号：</span><span class="template-variable">&#123;&#123;order.order_id&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">            &#123;&#123; <span class="keyword">if</span> <span class="string">"WAIT_ACCEPT"</span> == order.status &#125;&#125;</span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fr order-operate"</span>&gt;</span></span><br><span class="line"><span class="javascript">                &lt;button type=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-success order-accept"</span> data-toggle=<span class="string">"modal"</span> data-target=<span class="string">"#accept-modal"</span>&gt;接单&lt;<span class="regexp">/button&gt;</span></span></span><br><span class="line"><span class="javascript">                &lt;button type=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-danger order-reject"</span> data-toggle=<span class="string">"modal"</span> data-target=<span class="string">"#reject-modal"</span>&gt;拒单&lt;<span class="regexp">/button&gt;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"order-content"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;order.img_url&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"order-text"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123;order.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>创建时间：</span><span class="template-variable">&#123;&#123;order.ctime&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>入住日期：</span><span class="template-variable">&#123;&#123;order.start_date&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>离开日期：</span><span class="template-variable">&#123;&#123;order.end_date&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>合计金额：￥</span><span class="template-variable">&#123;&#123;(order.amount/100.0).toFixed(0)&#125;&#125;</span><span class="xml">(共</span><span class="template-variable">&#123;&#123;order.days&#125;&#125;</span><span class="xml">晚)<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>订单状态：</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">if</span> <span class="string">"WAIT_ACCEPT"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                待接单</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"WAIT_COMMENT"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                待评价</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"COMPLETE"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                已完成</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"REJECTED"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                已拒单</span><br><span class="line"><span class="handlebars"><span class="xml">                            </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">                    &#123;&#123;<span class="keyword">if</span> <span class="string">"COMPLETE"</span> == order.status&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>我的评价： </span><span class="template-variable">&#123;&#123;order.comment&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">                    &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"REJECTED"</span> == order.status&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>拒单原因： </span><span class="template-variable">&#123;&#123;order.comment&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line">    暂时没有订单。</span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.测试</p><ul><li><strong>step1</strong> 使用18033333333（张三）账号进行此接口测试，账号登录后进入客户订单，成功显示客户预定了我发布的房屋列表信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127184900869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 查询数据库ih_order_info订单表，验证是否有4张客户订单，结果显示正确，<font style="color:red">需要注意的是这里的user_id指的是哪个账号预定的</font>，通过user_id发现用户id为3的用户预定了三间，而用户id为8的预定了一间</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127185518102.png" alt></fancybox></p><ul><li><strong>step3</strong> 查看数据库ih_user_profile表，查看是user_id =3 和 8 的是哪个账号</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127185905456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 分别登录这两个账号，进入我的订单，如果订单详情和张三客户订单一样，说明代码逻辑完全没问题，左图为Hellotaogang账户，右图为taogang123账户</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127190213627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190127190223306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step5</strong> 接单功能接口测试，切换18033333333（张三）账号，进入客户订单，选择订单编号为1的订单，点击接单出现提示信息（左图），点击确定接单后，则在客户订单页中此编号的订单的状态即变成了已接单状态，而在前端中此订单不在显示出接单和拒单功能按钮，说明代码逻辑正确</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127190756932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190127190808322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step6</strong> 拒单功能接口测试，选择订单编号为3的订单进行测试，当点击拒单时，必须要填写原因（左图），然后点击确定后，则该订单状态为已拒绝，说明代码逻辑没问题</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127191313368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190127191322613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step7</strong> 查看数据库订单状态信息，状态为WAIT_PAYMENT的表示已接单，REJECTED表示已拒单，填写的拒单原因存到comment评论字段，证明代码逻辑完全没问题</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127192018139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 切换到到18022222222（Hellotaogang）客户账号，进入我的订单中，查看18033333333（张三）房东对于订单的接单以及拒单情况，对于只有房东接单的订单才会出现去支付的功能按钮，因为该接口还没有写，所以在这里不进行演示，显示信息与上面测试结果一样，代码逻辑正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127194718107.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="八丶订单评价后端接口编写"><a href="#八丶订单评价后端接口编写" class="headerlink" title="八丶订单评价后端接口编写"></a>八丶订单评价后端接口编写</h1><p>1.分析：因为订单评价接口和接单拒单功能接口一样，也是对数据库进行修改操作，所以在定义接口路由的时候请求方式也是选择的是PUT，本来订单评价接口是在支付接口后面才去写的，但因为此接口与拒单接单接口大同小异，所以便一块接着客户订单接口在orders.py中一起写了，需要注意的时这个接口是在订单状态变成待评价时，才能触发这个功能接口进行评价</p><p>2.逻辑编写</p><ul><li><strong>step1</strong> 定义路由接口</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/orders/&lt;int:order_id&gt;/comment", methods=["PUT"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_order_comment</span><span class="params">(order_id)</span>:</span></span><br><span class="line">    <span class="string">"""保存订单评价信息"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取请求参数中的评价信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">req_data = request.get_json()</span><br><span class="line">comment = req_data.get(<span class="string">"comment"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> comment:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 确保用户只能评价自己的订单并且订单处于待评价的状态</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    order = Order.query.filter(Order.id == order_id, Order.user_id == user_id, Order.status == <span class="string">"WAIT_COMMENT"</span>).first()</span><br><span class="line">    house = order.house</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"无法获取订单数据"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 查询的订单对象order不存在，则返回错误信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> order:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.REQERR, errmsg=<span class="string">"操作无效"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 构建订单参数，并提交到数据库中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 将订单的状态设置为已完成</span></span><br><span class="line">    order.status = <span class="string">"COMPLETE"</span></span><br><span class="line">    <span class="comment"># 保存订单的评价信息</span></span><br><span class="line">    order.comment = comment</span><br><span class="line">    <span class="comment"># 将房屋的完成订单数增加1</span></span><br><span class="line">    house.order_count += <span class="number">1</span></span><br><span class="line">    db.session.add(order)</span><br><span class="line">    db.session.add(house)</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"操作失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 因为在房屋详情中有会显示订单的评价信息，为了在房屋详情中显示最新的评价信息，所以需要删除redis中该订单对应的房屋的信息，并返回正确响应</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    redis_store.delete(<span class="string">"house_info_%s"</span> % order.house.id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>)</span><br></pre></td></tr></table></figure><p>3.在order.js中补充处理评论的逻辑</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url:<span class="string">"/api/v1.0/orders/"</span>+orderId+<span class="string">"/comment"</span>,</span><br><span class="line">    type:<span class="string">"PUT"</span>,</span><br><span class="line">    data:<span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">    contentType:<span class="string">"application/json"</span>,</span><br><span class="line">    dataType:<span class="string">"json"</span>,</span><br><span class="line">    headers:&#123;</span><br><span class="line">        <span class="string">"X-CSRFTOKEN"</span>:getCookie(<span class="string">"csrf_token"</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"4101"</span> == resp.errno) &#123;</span><br><span class="line">            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">            $(<span class="string">".orders-list&gt;li[order-id="</span>+ orderId +<span class="string">"]&gt;div.order-content&gt;div.order-text&gt;ul li:eq(4)&gt;span"</span>).html(<span class="string">"已完成"</span>);</span><br><span class="line">            $(<span class="string">"ul.orders-list&gt;li[order-id="</span>+ orderId +<span class="string">"]&gt;div.order-title&gt;div.order-operate"</span>).hide();</span><br><span class="line">            $(<span class="string">"#comment-modal"</span>).modal(<span class="string">"hide"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong><font style="color:red">注</font>：此接口在客户支付订单后，订单状态变成待评价时，才能进行测试</strong></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/86660480" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86660480</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（十二）</title>
      <link href="/2019/11/05/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/11/05/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('别搞了，你破解不了的');const txt = document.getElementById('enc_content').innerHTML;// alert(txt,"1")// alert(pwd,"2")// alert(onError,"3")let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);if(plaintext == ""){document.getElementById("enc_pwd_input").value="";document.getElementById("enc_error").innerHTML = "密码错误!";return}// alert(plaintext)} catch(err) {if(onError) {// alert(onError,"4")// alert(err,"5")onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none">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</div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" placeholder="请输入文章密码" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "密码错误!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（十一）</title>
      <link href="/2019/11/05/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/"/>
      <url>/2019/11/05/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶用户房屋管理后端编写"><a href="#一丶用户房屋管理后端编写" class="headerlink" title="一丶用户房屋管理后端编写"></a>一丶用户房屋管理后端编写</h1><p>1.需求分析：在我的房源界面显示出房东发布的房源信息，在前端中就需要从后端接口中发送获取用户id，房屋标题，图片以及房屋信息，显示在前端页面中</p><p>2.逻辑编写</p><ul><li><strong>step1</strong> 在houses.py中定义接口</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/user/houses", methods=["GET"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_houses</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取房东发布的房源信息</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 通过用户id从数据库USER中获取用户对象，通过user对象来获取用户发布的房屋</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user = User.query.get(user_id)</span><br><span class="line">    houses = user.houses</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取数据失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 在models.py中house里面定义一个to_basic_dict方法，将房屋基本信息转换成字典数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_basic_dict</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""将基本信息转换为字典数据"""</span></span><br><span class="line">    house_dict = &#123;</span><br><span class="line">        <span class="string">"house_id"</span>: self.id,</span><br><span class="line">        <span class="string">"title"</span>: self.title,</span><br><span class="line">        <span class="string">"price"</span>: self.price,</span><br><span class="line">        <span class="string">"area_name"</span>: self.area.name,</span><br><span class="line">        <span class="string">"img_url"</span>: constants.QINIU_URL_DOMAIN + self.index_image_url <span class="keyword">if</span> self.index_image_url <span class="keyword">else</span> <span class="string">""</span>,</span><br><span class="line">        <span class="string">"room_count"</span>: self.room_count,</span><br><span class="line">        <span class="string">"order_count"</span>: self.order_count,</span><br><span class="line">        <span class="string">"address"</span>: self.address,</span><br><span class="line">        <span class="string">"user_avatar"</span>: constants.QINIU_URL_DOMAIN + self.user.avatar_url <span class="keyword">if</span> self.user.avatar_url <span class="keyword">else</span> <span class="string">""</span>,</span><br><span class="line">        <span class="string">"ctime"</span>: self.create_time.strftime(<span class="string">"%Y-%m-%d"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> house_dict</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 将查询到的房屋信息转换成字典数据，添加到定义的houses_list列表中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">houses_list = []</span><br><span class="line"><span class="keyword">for</span> house <span class="keyword">in</span> houses:</span><br><span class="line">    houses_list.append(house.to_basic_dict())</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 最后返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"houses"</span>:houses_list&#125;)</span><br></pre></td></tr></table></figure><h1 id="二丶用户房屋管理前端编写"><a href="#二丶用户房屋管理前端编写" class="headerlink" title="二丶用户房屋管理前端编写"></a>二丶用户房屋管理前端编写</h1><p>1.在myhouse.js中通过get请求方式向后端接口发送请求，通过后端返回的正确响应以及data数据，传到前端html中的template模本进行数据显示，如下编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="keyword">get</span>("/api/v1.0/user/houses", function(resp)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">                $(<span class="string">"#houses-list"</span>).html(template(<span class="string">"houses-list-tmpl"</span>, &#123;<span class="attr">houses</span>:resp.data.houses&#125;));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(<span class="string">"#houses-list"</span>).html(template(<span class="string">"houses-list-tmpl"</span>, &#123;<span class="attr">houses</span>:[]&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>2.引入template.js模板，在my.html中进行如下编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script id=<span class="string">"houses-list-tmpl"</span> type=<span class="string">"text/html"</span>&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"new-house"</span>&gt;</span><br><span class="line">            &lt;a href=<span class="string">"/newhouse.html"</span>&gt;发布新房源&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">    &#123;&#123;each houses as house&#125;&#125;</span></span><br><span class="line"><span class="regexp">    &lt;li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;a href="/</span>detail.html?id=&#123;&#123;house.house_id&#125;&#125;<span class="string">"&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="</span>house-title<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                &lt;h3&gt;房屋ID:&#123;&#123;house.house_id&#125;&#125; —— &#123;&#123;house.title&#125;&#125;&lt;/h3&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="</span>house-content<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                &lt;img src="</span>&#123;&#123;house.img_url&#125;&#125;<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                &lt;div class="</span>house-text<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                    &lt;ul&gt;</span></span><br><span class="line"><span class="string">                        &lt;li&gt;位于：&#123;&#123;house.area_name&#125;&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li&gt;价格：￥&#123;&#123;(house.price/100.0).toFixed(0)&#125;&#125;/晚&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li&gt;发布时间：&#123;&#123;house.ctime&#125;&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &#123;&#123;/each&#125;&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三丶测试用户管理后端接口"><a href="#三丶测试用户管理后端接口" class="headerlink" title="三丶测试用户管理后端接口"></a>三丶测试用户管理后端接口</h1><p>1.之前在编写发布房源接口时，已经发布过房源信息了，所以当进入我的房源页面时，就会向后端接口发送请求，获取房源数据，显示在页面上，如下图所示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190121192311960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.查看数据库房屋信息表ih_house_info</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190121192819745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶主页幻灯片房屋信息后端编写"><a href="#四丶主页幻灯片房屋信息后端编写" class="headerlink" title="四丶主页幻灯片房屋信息后端编写"></a>四丶主页幻灯片房屋信息后端编写</h1><p>1.分析：首先主页幻灯片上显示的房屋信息，需要在后端定义一个接口，在这个接口中我们需要在数据库中将房屋订单数目最多的5条数据查询出来，展示到主页上，这个需求也是刚开始开发项目的需求，因为主页时用户大量访问的，所以这5条数据需要缓存到redis数据库中，减少我们对数据库的查询</p><p>2.逻辑编写(具体实现)</p><ul><li><strong>step1</strong> 定义视图函数，此接口因为是在主页所以不需要用户登录验证</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/houses/index", methods=["GET"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_house_index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取主页幻灯片房屋信息</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 查询数据库获取房屋订单数目最多的5条数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 查询房屋订单倒序排序并显示5条</span></span><br><span class="line">    houses = House.query.order_by(House.order_count.desc()).limit(constants.HOME_PAGE_MAX_HOUSES)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"查询数据失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 判断数据是否存在,不存在则返回异常错误信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> houses:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"无相关数据"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 将查询到的房屋信息转换成字典数据，添加到定义的houses_list列表中，如过房屋未设置主图片，则跳过</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">houses_list = []</span><br><span class="line"><span class="keyword">for</span> house <span class="keyword">in</span> houses:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> house.index_image_url:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    houses_list.append(house.to_basic_dict())</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 将列表数据转换从json格式的数据，并存到redis数据库中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    json_houses = json.dumps(houses_list)</span><br><span class="line">    redis_store.setex(<span class="string">"home_page_data"</span>, constants.HOME_PAGE_DATA_REDIS_EXPIRES, json_houses)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">'&#123;"errno":"0", "errmsg":"OK", "data":%s&#125;'</span> % json_houses, <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>:<span class="string">"application/json"</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 因为第一次是不存在缓存数据的，所以我们在进入函数时，就先从redis中拿取数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    ret = redis_store.get(<span class="string">"home_page_data"</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    ret = <span class="literal">None</span></span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 此时需要对获取数据进行判断，当获取数据结果不为空时，则返回给前端正确响应数据，不存在时else就在数据库中进行数据查询，再将查询结果写入到redis数据库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当ret获取数据结果不为空时，则返回给前端正确响应数据，不存在时else就在数据库中进行数据查询，再将查询结果写入到redis数据库</span></span><br><span class="line"><span class="keyword">if</span> ret:</span><br><span class="line">    current_app.logger.info(<span class="string">"house index info from redis"</span>)</span><br><span class="line">    <span class="comment"># 因为redis中保存的是json字符串，所以直接进行字符串拼接返回</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&#123;"errno":0, "errmsg":"OK", "data":%s&#125;'</span> % ret, <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 查询数据库获取房屋订单数目最多的5条数据</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 查询房屋订单倒序排序并显示5条</span></span><br><span class="line">        houses = House.query.order_by(House.order_count.desc()).limit(constants.HOME_PAGE_MAX_HOUSES)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        current_app.logger.error(e)</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"查询数据失败"</span>)</span><br></pre></td></tr></table></figure><h1 id="五丶主页幻灯片房屋信息前端编写"><a href="#五丶主页幻灯片房屋信息前端编写" class="headerlink" title="五丶主页幻灯片房屋信息前端编写"></a>五丶主页幻灯片房屋信息前端编写</h1><p>1.在主页前端index.js中，需要向后端接口发送请求来获取主页幻灯片要展示的房屋信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取幻灯片要展示的房屋基本信息</span></span><br><span class="line">$.<span class="keyword">get</span>("/api/v1.0/houses/index", function(resp)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">        $(<span class="string">".swiper-wrapper"</span>).html(template(<span class="string">"swiper-houses-tmpl"</span>, &#123;<span class="attr">houses</span>:resp.data&#125;));</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 设置幻灯片对象，开启幻灯片滚动</span></span><br><span class="line">        <span class="keyword">var</span> mySwiper = <span class="keyword">new</span> Swiper (<span class="string">'.swiper-container'</span>, &#123;</span><br><span class="line">            loop: <span class="literal">true</span>,</span><br><span class="line">            autoplay: <span class="number">2000</span>,</span><br><span class="line">            autoplayDisableOnInteraction: <span class="literal">false</span>,</span><br><span class="line">            pagination: <span class="string">'.swiper-pagination'</span>,</span><br><span class="line">            paginationClickable: <span class="literal">true</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.在主页页面中选择区县按钮块，需要从后端接口获取区县信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取区县信息</span></span><br><span class="line">$.<span class="keyword">get</span>("/api/v1.0/areas", function(resp)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">        $(<span class="string">".area-list"</span>).html(template(<span class="string">"area-list-tmpl"</span>, &#123;<span class="attr">areas</span>:resp.data&#125;));</span><br><span class="line">        $(<span class="string">".area-list a"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            $(<span class="string">"#area-btn"</span>).html($(<span class="keyword">this</span>).html());</span><br><span class="line">            $(<span class="string">".search-btn"</span>).attr(<span class="string">"area-id"</span>, $(<span class="keyword">this</span>).attr(<span class="string">"area-id"</span>));</span><br><span class="line">            $(<span class="string">".search-btn"</span>).attr(<span class="string">"area-name"</span>, $(<span class="keyword">this</span>).html());</span><br><span class="line">            $(<span class="string">"#area-modal"</span>).modal(<span class="string">"hide"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.在主页index.html中进行一个模板使用，将后端返回的响应数据显示在模板中，幻灯片部分如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"swiper-houses-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    &#123;&#123;<span class="keyword">each</span> houses <span class="keyword">as</span> house&#125;&#125;</span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-slide"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/detail.html?id=</span></span></span><span class="template-variable">&#123;&#123;house.house_id&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;house.img_url&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide-title"</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.在主页index.html中区县模板，编写如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"area-list-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="actionscript">&#123;&#123;<span class="keyword">each</span> areas <span class="keyword">as</span> area&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">area-id</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;area.aid&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span><span class="template-variable">&#123;&#123;area.aname&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml"></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="六丶测试主页幻灯片接口和区县信息以及房屋信息缓存"><a href="#六丶测试主页幻灯片接口和区县信息以及房屋信息缓存" class="headerlink" title="六丶测试主页幻灯片接口和区县信息以及房屋信息缓存"></a>六丶测试主页幻灯片接口和区县信息以及房屋信息缓存</h1><p>1.幻灯片接口</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122140546673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.区县信息显示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122140801332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.查看项目运行日志</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019012214093725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.此时查看数据库缓存</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122141333900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="七丶房屋详情页后端编写"><a href="#七丶房屋详情页后端编写" class="headerlink" title="七丶房屋详情页后端编写"></a>七丶房屋详情页后端编写</h1><p>1.分析：①在房屋详情页面，角色分为房东以及客户，当客户进入时对于前端页面来说需显示预定功能按钮，如是房东角色进入就不展示此功能按钮；②对于角色来说，那么就需要用到user_id了；③尝试从session中去获取用户id，如果存在，说明用户为登录状态，那么将用户id返回给前端，不存在返回user_id = -1</p><p>2.逻辑编写</p><ul><li><strong>step1</strong> 创建视图函数，需要前端给后端传递房屋id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/houses/&lt;int:house_id&gt;", methods=["GET"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_house_detail</span><span class="params">(house_id)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取房屋详情</span></span><br><span class="line"><span class="string">    :param house_id:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 从session中尝试获取用户id,没有则赋值-1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = session.get(<span class="string">"user_id"</span>, <span class="string">"-1"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 校验house_id, 不存在则返回错误信息提示</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> house_id:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数缺失"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 通过house_id 查询数据库获取房屋对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    house = House.query.get(house_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"查询数据失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 判断对象是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> house:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"房屋不存在"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 在models.py文件House类中定义to_full_dict方法，用作于将详细信息转换为字典数据；在这个方法里面需要将房屋图片，房屋设施以及评论信息，单独添加到列表中，最后在将该列表以值的方式保存到字典house_dict中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_full_dict</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""将详细信息转换为字典数据"""</span></span><br><span class="line">        house_dict = &#123;</span><br><span class="line">            <span class="string">"hid"</span>: self.id,</span><br><span class="line">            <span class="string">"user_id"</span>: self.user_id,</span><br><span class="line">            <span class="string">"user_name"</span>: self.user.name,</span><br><span class="line">            <span class="string">"user_avatar"</span>: constants.QINIU_URL_DOMAIN + self.user.avatar_url <span class="keyword">if</span> self.user.avatar_url <span class="keyword">else</span> <span class="string">""</span>,</span><br><span class="line">            <span class="string">"title"</span>: self.title,</span><br><span class="line">            <span class="string">"price"</span>: self.price,</span><br><span class="line">            <span class="string">"address"</span>: self.address,</span><br><span class="line">            <span class="string">"room_count"</span>: self.room_count,</span><br><span class="line">            <span class="string">"acreage"</span>: self.acreage,</span><br><span class="line">            <span class="string">"unit"</span>: self.unit,</span><br><span class="line">            <span class="string">"capacity"</span>: self.capacity,</span><br><span class="line">            <span class="string">"beds"</span>: self.beds,</span><br><span class="line">            <span class="string">"deposit"</span>: self.deposit,</span><br><span class="line">            <span class="string">"min_days"</span>: self.min_days,</span><br><span class="line">            <span class="string">"max_days"</span>: self.max_days,</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 房屋图片</span></span><br><span class="line">        img_urls = []</span><br><span class="line">        <span class="keyword">for</span> image <span class="keyword">in</span> self.images:</span><br><span class="line">            img_urls.append(constants.QINIU_URL_DOMAIN + image.url)</span><br><span class="line">        house_dict[<span class="string">"img_urls"</span>] = img_urls</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 房屋设施</span></span><br><span class="line">        facilities = []</span><br><span class="line">        <span class="keyword">for</span> facility <span class="keyword">in</span> self.facilities:</span><br><span class="line">            facilities.append(facility.id)</span><br><span class="line">        house_dict[<span class="string">"facilities"</span>] = facilities</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 评论信息</span></span><br><span class="line">        comments = []</span><br><span class="line">        orders = Order.query.filter(Order.house_id == self.id, Order.status == <span class="string">"COMPLETE"</span>, Order.comment != <span class="literal">None</span>) \</span><br><span class="line">            .order_by(Order.update_time.desc()).limit(constants.HOUSE_DETAIL_COMMENT_DISPLAY_COUNTS)</span><br><span class="line">        <span class="keyword">for</span> order <span class="keyword">in</span> orders:</span><br><span class="line">            comment = &#123;</span><br><span class="line">                <span class="string">"comment"</span>: order.comment,  <span class="comment"># 评论的内容</span></span><br><span class="line">                <span class="string">"user_name"</span>: order.user.name <span class="keyword">if</span> order.user.name != order.user.mobile <span class="keyword">else</span> <span class="string">"匿名用户"</span>,  <span class="comment"># 发表评论的用户</span></span><br><span class="line">                <span class="string">"ctime"</span>: order.update_time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)  <span class="comment"># 评价的时间</span></span><br><span class="line">            &#125;</span><br><span class="line">            comments.append(comment)</span><br><span class="line">        house_dict[<span class="string">"comments"</span>] = comments</span><br><span class="line">        <span class="keyword">return</span> house_dict</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 将查询到的房屋对象转换成字典</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    house_data = house.to_full_dict()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DATAERR, errmsg=<span class="string">"数据错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 将房屋详情数据转换成json格式的数据，并存到redis数据库中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">json_houses = json.dumps(house_data)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    redis_store.setex(<span class="string">"house_info_%s"</span> % house_id, constants.HOUSE_DETAIL_REDIS_EXPIRE_SECOND, json_houses)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 构造响应数据, 并返回</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">resp = <span class="string">'&#123;"errno":"0", "errmsg":"OK", "data":&#123;"user_id":%s, "house":%s&#125;&#125;'</span> %(user_id, json_houses), <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> resp</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 尝试从redis数据库中获取房屋详情信息, 出现异常则使ret为None，所以需要在进入函数后，那么需要从去数据库中获取房屋详情信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    ret = redis_store.get(<span class="string">"house_info_%s"</span> % house_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    ret = <span class="literal">None</span></span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 对ret进行判断, 存在不为None 则直接返回正确响应数据即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ret:</span><br><span class="line">    current_app.logger.info(<span class="string">"house info from redis"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&#123;"errno":"0", "errmsg":"OK", "data":&#123;"user_id":%s, "house":%s&#125;&#125;'</span> % (user_id, ret), <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br></pre></td></tr></table></figure><h1 id="八丶房屋详情页前端编写"><a href="#八丶房屋详情页前端编写" class="headerlink" title="八丶房屋详情页前端编写"></a>八丶房屋详情页前端编写</h1><p>1.在detail.js文件中</p><ul><li><strong>step1</strong> 定义decodeQuery函数，用作于解析提取url中的查询字符串参数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decodeQuery</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> search = <span class="built_in">decodeURI</span>(<span class="built_in">document</span>.location.search);</span><br><span class="line">    <span class="keyword">return</span> search.replace(<span class="regexp">/(^\?)/</span>, <span class="string">''</span>).split(<span class="string">'&amp;'</span>).reduce(<span class="function"><span class="keyword">function</span>(<span class="params">result, item</span>)</span>&#123;</span><br><span class="line">        values = item.split(<span class="string">'='</span>);</span><br><span class="line">        result[values[<span class="number">0</span>]] = values[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;, &#123;&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在$(document).ready(function(){}回调函数中，获取详情页面要展示的房屋编号</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> queryData = decodeQuery();</span><br><span class="line"><span class="keyword">var</span> houseId = queryData[<span class="string">"id"</span>];</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取房屋详细信息</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="keyword">get</span>("/api/v1.0/houses/" + houseId, function(resp)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">        $(<span class="string">".swiper-container"</span>).html(template(<span class="string">"house-image-tmpl"</span>, &#123;<span class="attr">img_urls</span>:resp.data.house.img_urls, <span class="attr">price</span>:resp.data.house.price&#125;));</span><br><span class="line">        $(<span class="string">".detail-con"</span>).html(template(<span class="string">"house-detail-tmpl"</span>, &#123;<span class="attr">house</span>:resp.data.house&#125;));</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// resp.user_id为访问页面用户,resp.data.user_id为房东</span></span><br><span class="line">        <span class="keyword">if</span> (resp.data.user_id != resp.data.house.user_id) &#123;</span><br><span class="line">            $(<span class="string">".book-house"</span>).attr(<span class="string">"href"</span>, <span class="string">"/booking.html?hid="</span>+resp.data.house.hid);</span><br><span class="line">            $(<span class="string">".book-house"</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> mySwiper = <span class="keyword">new</span> Swiper (<span class="string">'.swiper-container'</span>, &#123;</span><br><span class="line">            loop: <span class="literal">true</span>,</span><br><span class="line">            autoplay: <span class="number">2000</span>,</span><br><span class="line">            autoplayDisableOnInteraction: <span class="literal">false</span>,</span><br><span class="line">            pagination: <span class="string">'.swiper-pagination'</span>,</span><br><span class="line">            paginationType: <span class="string">'fraction'</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2.在detail.html文件中</p><ul><li><strong>step1</strong> 房屋详情页面中幻灯片房屋信息编写如下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"house-image-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="javascript">    &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-wrapper"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        &#123;&#123;<span class="keyword">each</span> img_urls <span class="keyword">as</span> img_url&#125;&#125;</span></span><br><span class="line"><span class="javascript">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-slide"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;img_url&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-pagination"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"house-price"</span>&gt;</span>￥<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123;(price/100.0).toFixed(0)&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span>/晚<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 房屋标题，房屋地址，房屋详情，配套设施以及评价信息编写如下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"house-detail-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"detail-header layout-style"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"house-title"</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"landlord-pic"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;house.user_avatar&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"landlord-name"</span>&gt;</span>房东： <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.user_name&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-info layout-style"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">       <span class="tag">&lt;<span class="name">h3</span>&gt;</span>房屋地址<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">       &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-info-list text-center"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.address&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-type layout-style"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-house"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-text"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>出租</span><span class="template-variable">&#123;&#123;house.room_count&#125;&#125;</span><span class="xml">间<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>房屋面积:</span><span class="template-variable">&#123;&#123;house.acreage&#125;&#125;</span><span class="xml">平米<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>房屋户型:</span><span class="template-variable">&#123;&#123;house.unit&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-user"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-text"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>宜住</span><span class="template-variable">&#123;&#123;house.capacity&#125;&#125;</span><span class="xml">人<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-bed"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-text"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>卧床配置<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.beds&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-info layout-style"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>房间详情<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-info-list"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>收取押金<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123;(house.deposit/100.0).toFixed(0)&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>最少入住天数<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.min_days&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>最多入住天数<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.max_days==0&#125;&#125;</span><span class="xml">无限制</span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"></span><span class="template-variable">&#123;&#123;house.max_days&#125;&#125;</span><span class="xml"></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-facility layout-style"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>配套设施<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-facility-list clearfix"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(1)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">wirelessnetwork-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>无线网络<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(2)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">shower-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>热水淋浴<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(3)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">aircondition-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>空调<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(4)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">heater-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>暖气<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(5)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">smoke-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>允许吸烟<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(6)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">drinking-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>饮水设备<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(7)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">brush-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>牙具<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(8)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">soap-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>香皂<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(9)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">slippers-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>拖鞋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(10)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">toiletpaper-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>手纸<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(11)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">towel-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>毛巾<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(12)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">toiletries-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>沐浴露、洗发露<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(13)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">icebox-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>冰箱<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(14)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">washer-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>洗衣机<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(15)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">elevator-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>电梯<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(16)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">iscook-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>允许做饭<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(17)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">pet-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>允许带宠物<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(18)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">meet-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>允许聚会<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(19)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">accesssys-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>门禁系统<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(20)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">parkingspace-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>停车位<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(21)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">wirednetwork-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>有线网络<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(22)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">tv-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>电视<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(23)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">hotbathtub-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>浴缸<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.comments &#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-info layout-style"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>评价信息<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-comment-list"</span>&gt;</span></span><br><span class="line"><span class="actionscript">            &#123;&#123; <span class="keyword">each</span> house.comments <span class="keyword">as</span> comment&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123;comment.user_name&#125;&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span></span><span class="template-variable">&#123;&#123;comment.ctime&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123;comment.comment&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="九丶测试房屋详情页面显示正确数据是否成功"><a href="#九丶测试房屋详情页面显示正确数据是否成功" class="headerlink" title="九丶测试房屋详情页面显示正确数据是否成功"></a>九丶测试房屋详情页面显示正确数据是否成功</h1><p>1.运行项目，在浏览器输入<a href="http://127.0.0.1:5000" target="_blank" rel="noopener">http://127.0.0.1:5000</a>，即进入网站主页，如下图所示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122170042950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.点击主页任意幻灯片，进入房屋详情页面</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122172200702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.前端房屋完整信息图如下</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122172320588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.查询数据库中房屋信息表以及设备设施表id和house_id为3的数据与前端页面显示数据进行对比</p><ul><li><strong>step1</strong> 在ih_house_info 房屋信息表中查看id=3的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122172921566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 在ih_house_facility 房屋设备表中，查看house_id为3的设备数据为9条，与前端页面house_id为3的设备信息一致</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122173113799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 将step2 查询结果与ih_facility_info设备表进行一一对应，然后与第3点前端房屋完整信息图进行对比验证</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122173540870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.查看redis数据库中缓存的房屋详情数据</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122173726223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>6.查看项目运行日志，显示成功说明本次进入房屋详情页使用的页面数据为缓存数据</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122173911957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/86580344" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86580344</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（十）</title>
      <link href="/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%EF%BC%89/"/>
      <url>/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶区县信息前端编写"><a href="#一丶区县信息前端编写" class="headerlink" title="一丶区县信息前端编写"></a>一丶区县信息前端编写</h1><p>1.分析，当用户进入发布新房源，页面加载完毕即向后端发送请求拿取数据库中的区域信息数据，显示在页面上所在区县栏</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190116183638471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.所以需在此页面newhouse.js中进行如下编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当页面加载完成时，想后端获取区县信息</span></span><br><span class="line">$.<span class="keyword">get</span>("/api/v1.0/areas", function (resp) &#123;</span><br><span class="line">    <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> areas = resp.data;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;areas.length; i++)&#123;</span><br><span class="line">            <span class="keyword">var</span> area = areas[i]</span><br><span class="line">            $(<span class="string">"#area-id"</span>).append(<span class="string">'&lt;option value="'</span>+area.aid+<span class="string">'"&gt;'</span>+area.aname+<span class="string">'&lt;/option&gt;'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        alert(resp.errmsg)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="string">"json"</span>)</span><br></pre></td></tr></table></figure><p>3.当通过js向后端获取区域信息全部对象，通过循环遍历获取每个对象，将每个对象中的aid以及aname通过append方式追加到id为area_id的select标签下，所以最后需要在newhouse.html中将原有的option标签删除</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"area-id"</span> <span class="attr">name</span>=<span class="string">"area_id"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="1"&gt;锦江区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="2"&gt;青羊区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="3"&gt;金牛区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="4"&gt;武侯区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="5"&gt;成华区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="6"&gt;龙泉驿区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="7"&gt;青白江区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="8"&gt;新都区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="9"&gt;温江区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="10"&gt;郫都区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="11"&gt;双流区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="12"&gt;高新区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="13"&gt;天府新区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="14"&gt;新津县&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="15"&gt;大邑县&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="16"&gt;金堂县&lt;/option&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.测试，重新启动程序，清除页面缓存，查看发布房源页面中的所有区县栏是否有数据，此时显示的区县数据，就是从后端数据库获取的</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190116190644439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.查看网页Network，从api/v1.0/area接口获取的数据</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190116191023549.png" alt></fancybox></p><p>6.当前端页面需要从后端拿取很多数据时候，如果用上面的方式通过jquery想后端获取数据，再填充到标签中，这样就太麻烦了，所以这里需要在前端去引入一个js模板，来帮助我们更快的完成页面数据的填充</p><ul><li><strong>step1</strong> 比如在房间信息详情页面，需要很多数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190116192120663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 使用art_template前端js模板来帮助我们解决此问题 <a href="https://aui.github.io/art-template/zh-cn/index.html" target="_blank" rel="noopener">https://aui.github.io/art-template/zh-cn/index.html</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190116192522100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>7.将发布新房源页面中的所在区县栏使用前端js模板进行改写</p><ul><li><strong>step1</strong> 在newhouse.html中引入template.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"/static/js/template.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">step2 在newhouse.html中定义模板</span><br><span class="line">&lt;script type=<span class="string">"text/html"</span> id=<span class="string">"areas-template"</span>&gt;</span><br><span class="line">    &#123;&#123; each areas <span class="keyword">as</span> area &#125;&#125;</span><br><span class="line">    &lt;option value=<span class="string">"&#123;&#123;area.aid&#125;&#125;"</span>&gt;&#123;&#123;area.aname&#125;&#125;&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">    &#123;&#123; /</span>each &#125;&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt; </span></span><br><span class="line"><span class="regexp">```  </span></span><br><span class="line"><span class="regexp">- **step3** 在newhouse.js中使用js模板</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">```javascript</span></span><br><span class="line"><span class="regexp">var html_text =template("areas-template", &#123;areas:areas&#125;);</span></span><br><span class="line"><span class="regexp">$("#area-id").html(html_text)</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 测试，清除缓存，刷新网页，查看结果使用js模板成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190116203456403.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶发布新房源后端接口编写"><a href="#二丶发布新房源后端接口编写" class="headerlink" title="二丶发布新房源后端接口编写"></a>二丶发布新房源后端接口编写</h1><p>1.流程分析，在发布房源前端文件newhouse.html中将该页面下的上传图片栏隐藏了#form-house-image，当用户完成先关填写后，该上传房屋图片表单才会显示出来</p><ul><li><strong>step1</strong> 在浏览器开发端进行显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118084506991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 查看发布房源界面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011808463590.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.在house.py中进行房屋信息接口编写</p><ul><li><strong>step1</strong> 创建视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/houses/info", methods=["POST"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_house_info</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    保存房屋信息</span></span><br><span class="line"><span class="string">    :return: </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br><span class="line">house_data = request.get_json()</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 从获取的data数据中拿取必填字段的值，facility配套设施可能啥都没有，前端就会传个空列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">title = house_data.get(<span class="string">"title"</span>)  <span class="comment"># 房屋名称标题</span></span><br><span class="line">price = house_data.get(<span class="string">"price"</span>)  <span class="comment"># 房屋单价</span></span><br><span class="line">area_id = house_data.get(<span class="string">"area_id"</span>)  <span class="comment"># 房屋所属城区的编号</span></span><br><span class="line">address = house_data.get(<span class="string">"address"</span>)  <span class="comment"># 房屋地址</span></span><br><span class="line">room_count = house_data.get(<span class="string">"room_count"</span>)  <span class="comment"># 房屋包含的房间数目</span></span><br><span class="line">acreage = house_data.get(<span class="string">"acreage"</span>)  <span class="comment"># 房屋面积</span></span><br><span class="line">unit = house_data.get(<span class="string">"unit"</span>)  <span class="comment"># 房屋布局（几室几厅)</span></span><br><span class="line">capacity = house_data.get(<span class="string">"capacity"</span>)  <span class="comment"># 房屋容纳人数</span></span><br><span class="line">beds = house_data.get(<span class="string">"beds"</span>)  <span class="comment"># 房屋卧床数目</span></span><br><span class="line">deposit = house_data.get(<span class="string">"deposit"</span>)  <span class="comment"># 押金</span></span><br><span class="line">min_days = house_data.get(<span class="string">"min_days"</span>)  <span class="comment"># 最小入住天数</span></span><br><span class="line">max_days = house_data.get(<span class="string">"max_days"</span>)  <span class="comment"># 最大入住天数</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([title, price, area_id, address, room_count, acreage, unit,capacity, beds, deposit, min_days, max_days]):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数不完整"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 判断用户输入的房屋单价和押金是否为正确参数，通过存入数据库字段单位分，如果用户输入的值不能转换为float和int类型，说明参数错误</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    price = int(float(price)*<span class="number">100</span>)</span><br><span class="line">    deposit = int(float(deposit)*<span class="number">100</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 判断区县id是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    area = Area.query.get(area_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"数据库异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 如果在数据库中查询不到区域信息，表示区县信息有误</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> area <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"区县信息有误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 保存房屋信息到数据库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">house = House(</span><br><span class="line">    user_id = user_id,</span><br><span class="line">    title = title,</span><br><span class="line">    price = price,</span><br><span class="line">    area_id = area_id,</span><br><span class="line">    address = address,</span><br><span class="line">    room_count = room_count,</span><br><span class="line">    acreage = acreage,</span><br><span class="line">    unit = unit,</span><br><span class="line">    capacity = capacity,</span><br><span class="line">    beds = beds,</span><br><span class="line">    deposit = deposit,</span><br><span class="line">    min_days = min_days,</span><br><span class="line">    max_days = max_days</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 获取设备设施数据id值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">facility_ids = house_data.get(<span class="string">"facility"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 对获取设备设施字段的值进行判断,下判断这个值存不存在，当用户勾选设备设施时，举例facility_ids值为[2,4]</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> facility_ids:</span><br><span class="line">    <span class="comment"># 通过Facility类中的id值使用in_方法查询其中的id</span></span><br><span class="line">    <span class="comment"># select * from ih_facility_info where id in facility_ids;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        facilities = Facility.query.filter(Facility.id.in_(facility_ids)).all()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        current_app.logger.error(e)</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"数据库异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 判断查询的每个facility对象是否存在,存在则保存设施数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> facilities:</span><br><span class="line">    house.facilities = facilities</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        db.session.add(house)</span><br><span class="line">        db.session.commit()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        current_app.logger.error(e)</span><br><span class="line">        db.session.rollback()</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"保存数据异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step12</strong> 返回正确响应内容</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"house_id"</span>:house.id&#125;)</span><br></pre></td></tr></table></figure><p>3.上传房屋图片接口编写</p><ul><li><strong>step1</strong> 定义视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/houses/image", methods=["POST"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_house_image</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""保存房屋图片"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取图片</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image_file = request.files.get(<span class="string">"house_image"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取图片id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">house_id = request.form.get(<span class="string">"house_id"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([image_file, house_id]):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 判断房屋是否在，存在才上传到七牛，如果不存在就不上传</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    house = House.query.get(house_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"数据库异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> house对象不存在则返回错误信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> house <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"房屋不存在"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 获取图片二进制数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image_data = image_file.read()</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 将图片保存到七牛中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    file_name = storage(image_data)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.THIRDERR, errmsg=<span class="string">"上传图片失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 保存图片信息到数据库中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">house_image = HouseImage(house_id=house_id, url=file_name)</span><br><span class="line">db.session.add(house_image)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 当house对象中的index_image_url不存在时，设置网站主页房屋图片</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> house.index_image_url:</span><br><span class="line">    house.index_image_url = file_name</span><br><span class="line">    db.session.add(house)</span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 提交到数据库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"保存图片异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step12</strong> 拼接图片完整url，最后返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">image_url = constants.QINIU_URL_DOMAIN + file_name</span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"image_url"</span>:image_url&#125;)</span><br></pre></td></tr></table></figure><h1 id="三丶发布新房源前端编写"><a href="#三丶发布新房源前端编写" class="headerlink" title="三丶发布新房源前端编写"></a>三丶发布新房源前端编写</h1><p>1.在newhouse.js中进行提交房屋信息表单事件编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#form-house-info"</span>).submit(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step1</strong> 阻止表单默认行为</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.preventDefault();</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 处理表单数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = &#123;&#125;;</span><br><span class="line">$(<span class="string">"#form-house-info"</span>).serializeArray().map(<span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123; data[x.name] = x.value &#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 收集用户勾选的设备id</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> facility = [];</span><br><span class="line">$(<span class="string">":checked[name=facility]"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index, x</span>) </span>&#123;facility[index] = $(x).val()&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 将收集到的用户勾选id存到data数据库里的facility属性中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> facility = [];</span><br><span class="line">$(<span class="string">":checked[name=facility]"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index, x</span>) </span>&#123;facility[index] = $(x).val()&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 通过ajax方式向后端接口发送请求</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url:<span class="string">"/api/v1.0/houses/info"</span>,</span><br><span class="line">    type:<span class="string">"post"</span>,</span><br><span class="line">    contentType:<span class="string">"application/json"</span>,</span><br><span class="line">    data:<span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">    dataType:<span class="string">"json"</span>,</span><br><span class="line">    headers:&#123;</span><br><span class="line">        <span class="string">"X-CSRFToken"</span>: getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resp.errno == <span class="string">"4101"</span>)&#123;</span><br><span class="line">            location.href = <span class="string">"/login.html"</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>)&#123;</span><br><span class="line">            <span class="comment">// 将设备设施表单隐藏</span></span><br><span class="line">            $(<span class="string">"#form-house-info"</span>).hide();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 将上传房屋图片表单显示</span></span><br><span class="line">            $(<span class="string">"#form-house-image"</span>).show();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 设置上传房屋图片表单中的house_id</span></span><br><span class="line">            $(<span class="string">"#house-id"</span>).val(resp.data.house_id);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            alert(resp.errmsg)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,<span class="string">"json"</span>)</span><br></pre></td></tr></table></figure><p>2.在newhouse.js中进行上传房屋图片表单事件编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#form-house-image"</span>).submit(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step1</strong> 阻止表单默认行为</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.preventDefault();</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 利用jquery.form.min.js插件通过的ajaxSubmit对表单进行异步提交，当后端返回正确响应时， 往class 为 house-image-cons div标签下去添加img标签，该div下的img标签为用户上传图片的标签，上传一个图片则在此div下追加一个img标签</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">this</span>).ajaxSubmit(&#123;</span><br><span class="line">    url:<span class="string">"/api/v1.0/houses/image"</span>,</span><br><span class="line">    type:<span class="string">"post"</span>,</span><br><span class="line">    dataType:<span class="string">"json"</span>,</span><br><span class="line">    headers:&#123;</span><br><span class="line">        <span class="string">"X-CSRFToken"</span>: getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(resp.errno == <span class="string">"4101"</span>)&#123;</span><br><span class="line">            location.href = <span class="string">"/login.html"</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>)&#123;</span><br><span class="line">            <span class="comment">// 往class 为 house-image-cons div标签下去添加img标签</span></span><br><span class="line">            $(<span class="string">".house-image-cons"</span>).append(<span class="string">'&lt;img src="'</span> + resp.data.image_url+<span class="string">'"&gt;'</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            alert(resp.errmsg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>四丶测试接口<br>1.运行项目，清除浏览器缓存，刷新网页，进入发布房源，博主这里使用的FS截图工具进行滚动窗口截图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118170036647.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.填写房屋信息</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118170831661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.填写完数据后，点击发布房源信息，逻辑成功则显示上传房屋图片界面</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118170937556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>查看数据库ih_house_info房屋信息表，数据显示为刚填写的表单勾选数据，此时并没有上传图片所以index_image_url为空</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118175751791.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.点击选择文件，选择桌面上的图片后，再点击上传，则显示在页面中</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118173402241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.依次上传三张图片后</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118174309689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>查看此时数据库ih_house_image表信息，在上图上传的三张图片是house_id为6的房屋例子，所以在下标显示house_id为6的图片url链接为三个</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118174853406.png" alt></fancybox></p><p>6.同时查看七牛云上的存储空间</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118180427123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶celery的使用"><a href="#五丶celery的使用" class="headerlink" title="五丶celery的使用"></a>五丶celery的使用</h1><p>1.问题，我们在做网站后端程序开发时，会碰到这样的需求：用户需要在我们的网站填写注册信息，我们发给用户一封注册激活邮件到用户邮箱，如果由于各种原因，这封邮件发送所需时间较长，那么客户端将会等待很久，造成不好的用户体验.</p><p>2.解决，celery适用异步处理问题，当发送邮件、或者文件上传, 图像处理等等一些比较耗时的操作，我们可将其异步执行，这样用户不需要等待很久，提高用户体验。 celery的特点是：</p><p>简单，易于使用和维护，有丰富的文档。<br>高效，单个celery进程每分钟可以处理数百万个任务。<br>灵活，celery中几乎每个部分都可以自定义扩展。</p><p>3.Task Queue</p><p>celery通过消息进行通信，通常使用一个叫Broker(中间人)来协client(任务的发出者)和worker(任务的处理者). clients发出消息到队列中，broker将队列中的信息派发给worker来处理。</p><p>  一个celery系统可以包含很多的worker和broker，可增强横向扩展性和高可用性能</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119094125417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.在项目ihome目录下创建一个tasks包，用于处理项目中的需要的异步任务，在这个包下创建单一文件来处理对应的异步任务，这种方式是对于所有的web框架来说，都是万能的，像django中使用的djcelery包是别人针对于django框架封装好的包</p><ul><li><strong>step1</strong> 在task包下创建一个task_sms.py文件，在这个文件中去编写对于发送短信的任务</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119095436319.png" alt></fancybox></p><ul><li><strong>step2</strong> 定义celery对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app = Celery(<span class="string">"ihome"</span>, broker=<span class="string">"redis://127.0.0.1:6379/1"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 定义短信的异步任务</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_sms</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""发送短信的异步任务"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 导入之前定义好云通讯中封装的CCP类，并创建CCP的对象ccp</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome.libs.yuntongxun.SendSMS <span class="keyword">import</span> CCP</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 通过ccp对象调用sendTemplateSMS方法，同时调用send_sms方法时传递三个参数，从这三个参数拿sendTemplateSMS方法中即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_sms</span><span class="params">(to, datas, tempId)</span>:</span></span><br><span class="line">    <span class="string">"""发送短信的异步任务"""</span></span><br><span class="line">    ccp = CCP()</span><br><span class="line">    ccp.sendTemplateSMS(to, datas, tempId)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 回到api_1_0目录下的verify_code中，将之前写的get_sms_code方法中发送短信逻辑代码进行重新编写，跟之前写的逻辑不一样，之前是发送成功则返回发送成功msg，失败则返回发送失败msg，大多网站都是现在以下这种逻辑</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用celery异步发送短信</span></span><br><span class="line">send_sms.delay(mobile, [sms_code, int(constants.SMS_CODE_REDIS_EXPIRES/<span class="number">60</span>)], <span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 发送成功与否，用户自己去查看手机，大多网站都是这样做的</span></span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"发送短信成功"</span>)</span><br></pre></td></tr></table></figure><h1 id="六丶测试celery"><a href="#六丶测试celery" class="headerlink" title="六丶测试celery"></a>六丶测试celery</h1><p>1.在终端中运行项目</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119104246640.png" alt></fancybox></p><p>2.另开一个终端执行celery -A ihome.tasks.task_sms worker -l info，-l代表开启日志 info级别，但是出现了报错</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011910492251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.在百度上查询此报错信息，明白原来是celery4.0以上版本不支持windows</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119105123371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.所以博主这里进行 pip install celery==3.1.7 进行3.x版本安装</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119112227903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.在新开启的终端上，重新执行celery -A ihome.tasks.task_sms worker -l info，报错问题解决</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119105942103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>6.进入网站注册界面<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a>，后进行注册，输入博主本人手机号，输入正确验证码，然后点击获取短信验证码后，回头查看celery终端，结果又报错了</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119114933981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>7.这次报的错好像是跟redis有关，查看redis版本为3.0的</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119115014275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>8.将redis版本缓存2.0的，再看看是否报错，pip install redis==2.10.5</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119115115354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>9.先运行项目，再开启另一终端执行celery -A ihome.tasks.task_sms worker -l info</p><ul><li><strong>step1</strong> 在注册页面进行注册</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119115537165.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 查看celery终端日志，显示七牛SDK发送短信成功日志</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119115950736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 查看博主手机上短信验证码为987427</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119120213276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><ul><li><strong>step4</strong> 查看redis数据库1中的keys</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119120537671.png" alt></fancybox></p><h1 id="七丶celery以目录形式创建"><a href="#七丶celery以目录形式创建" class="headerlink" title="七丶celery以目录形式创建"></a>七丶celery以目录形式创建</h1><p>1.在ihome/tasks目录下创建main.py用于启动文件，再创建一个config.py用于作配置文件，然后在tasks目录下创建一个sms包，再该包下创建一个tasks.py文件或者是celery.py文件用于创建worker</p><p><img src="https://img-blog.csdnimg.cn/20190119125912867.png" alt></p><p>2.拆分task_sms.py文件</p><ul><li><strong>step1</strong> 在启动文件main.py中编写以下代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app = Celery(<span class="string">"ihome"</span>, broker=<span class="string">"redis://127.0.0.1:6379/1"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 将如下代码拷贝到tasks.py中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_sms</span><span class="params">(to, datas, tempId)</span>:</span></span><br><span class="line">    <span class="string">"""发送短信的异步任务"""</span></span><br><span class="line">    ccp = CCP()</span><br><span class="line">    ccp.sendTemplateSMS(to, datas, tempId)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 将main.py中创建app对象中的配置文件拿到config.py中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BROKER_URL = <span class="string">"redis://127.0.0.1:6379/1"</span></span><br><span class="line">CELERY_RESULT_BACKEND = <span class="string">'redis://127.0.0.1:6379/2'</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 回到main.py中进入如下编写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app = Celery(<span class="string">"ihome"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 引入配置信息</span></span><br><span class="line">app.config_from_object(config)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 自动搜索任务</span></span><br><span class="line">app.autodiscover_tasks([<span class="string">"ihome.tasks.sms"</span>])</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 回到ihome/api_1_0/verify_code.py中，将之前写的代码进行修改，将不在从from ihome.tasks.task_sms去导入send_sms，而是从我们刚定义好的sms.tasks中去导入send_sms</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome.tasks.sms.tasks <span class="keyword">import</span> send_sms</span><br></pre></td></tr></table></figure><p>3.测试</p><ul><li><strong>step1</strong> 首先启动项目，再另起终端启动worker，结果又特么报错了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119135139410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 这个错是因为操作系统原因导致的，在linux系统上运行则不会保错</li></ul><p>原因：<font style="color:red">因为windows操作系统的原因，在Windows中，多进程multiprocessing使用的是序列化pickle来在多进程之间转移数据，而socket对象是不能被序列化的，但是在linux操作系统上却没问题，因为在linux上多进程multiprocessing使用的是fork，所以在windows上可以改用多线程，而celery是使用多进程以及携程方式进行异步工作，博主又是在windows环境进行测试开发，所以这里先暂时这样，等开发完成部署在linux服务器即可</font></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119141425707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（九）</title>
      <link href="/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B9%9D%EF%BC%89/"/>
      <url>/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B9%9D%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶区县信息后端编写"><a href="#一丶区县信息后端编写" class="headerlink" title="一丶区县信息后端编写"></a>一丶区县信息后端编写</h1><p>1.定义视图函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/areas")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_area_info</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取区县信息</span></span><br><span class="line"><span class="string">    :return: </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>2.逻辑编写</p><ul><li><strong>step1</strong> 从数据库中获取所有区县信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 从数据库中获取所有区县信息</span></span><br><span class="line">    area_li = Area.query.all()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"数据库异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在Area类中构建一个to_dict方法，将对象转换成字典，因为我们给前端传输数据是需要传输json格式数据的</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_dict</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""将对象转换为字典"""</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"aid"</span>: self.id,</span><br><span class="line">        <span class="string">"aname"</span>: self.name</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 遍历对象列表，调用每个对象中的to_dict方法，将返回的值添加到area_dict_li列表中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将对象转换为字典</span></span><br><span class="line">area_dict_li = []</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> area <span class="keyword">in</span> area_li:</span><br><span class="line">    area_dict_li.append(area.to_dict())</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=area_dict_li)</span><br></pre></td></tr></table></figure><p>3.测试接口</p><ul><li><strong>step1</strong> 运行项目，打开Postman测试工具，向127.0.0.1:5000/api/v1.0/areas发送get请求</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115142331749.png" alt></fancybox></p><ul><li><strong>step2</strong> 返回接口正确响应数据，因为数据库Area表没有数据，所以返回的响应数据为空</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115142537149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.向数据库中ih_area_info以及ih_facility_info两张表插入测试数据</p><ul><li><strong>step1</strong> 执行如下SQL语句</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`ih_area_info`</span>(<span class="string">`name`</span>) <span class="keyword">VALUES</span> (<span class="string">'锦江区'</span>),(<span class="string">'青羊区'</span>),(<span class="string">'金牛区'</span>),(<span class="string">'武侯区'</span>),(<span class="string">'成华区'</span>),(<span class="string">'龙泉驿区'</span>),(<span class="string">'青白江区'</span>),(<span class="string">'新都区'</span>),(<span class="string">'温江区'</span>),(<span class="string">'郫都区'</span>),(<span class="string">'双流区'</span>),(<span class="string">'高新区'</span>),(<span class="string">'天府新区'</span>),(<span class="string">'新津县'</span>),(<span class="string">'大邑县'</span>),(<span class="string">'金堂县'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`ih_facility_info`</span>(<span class="string">`name`</span>) <span class="keyword">VALUES</span>(<span class="string">'无线网络'</span>),(<span class="string">'热水淋浴'</span>),(<span class="string">'空调'</span>),(<span class="string">'暖气'</span>),(<span class="string">'允许吸烟'</span>),(<span class="string">'饮水设备'</span>),(<span class="string">'牙具'</span>),(<span class="string">'香皂'</span>),(<span class="string">'拖鞋'</span>),(<span class="string">'手纸'</span>),(<span class="string">'毛巾'</span>),(<span class="string">'沐浴露、洗发露'</span>),(<span class="string">'冰箱'</span>),(<span class="string">'洗衣机'</span>),(<span class="string">'电梯'</span>),(<span class="string">'允许做饭'</span>),(<span class="string">'允许带宠物'</span>),(<span class="string">'允许聚会'</span>),(<span class="string">'门禁系统'</span>),(<span class="string">'停车位'</span>),(<span class="string">'有线网络'</span>),(<span class="string">'电视'</span>),(<span class="string">'浴缸'</span>);</span><br></pre></td></tr></table></figure><p>ih_area_info表</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115144350737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>ih_facility_info表</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115144445814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 再回到Postman中Send发送请求，显示出正确响应数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115144716273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶为区县信息补充缓存机制"><a href="#二丶为区县信息补充缓存机制" class="headerlink" title="二丶为区县信息补充缓存机制"></a>二丶为区县信息补充缓存机制</h1><p>1.为什么要补充缓存机制</p><ul><li><strong>step1</strong> 在网站首页，需要频繁获取区域数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115145249618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 在我的爱家中，发布房源也需要频繁获取区域数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115145600238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 以及在房源列表，搜索栏也要频繁获取区域数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115145708692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.分析，因为区县一般都是固定的，不会经常变化，搜索页面和主页是用户经常访问的地方，那么即我们后端接口以及数据库就会被大量访问，而且是在很短时间内，这样可能会出现异常问题，导致访问速度缓慢，所以完美解决方法就是使用缓存</p><p>3.具体实现流程</p><ul><li><strong>step1</strong> 当用户访问区县信息时，就会调用后端我们写的get_area_info接口，之前写的代码是，每次访问都会从数据库中拿去数据，现在将这一块改变一下，先从redis数据中拿去数据库（这里选择redis数据库，因为是内存级的数据库）</li><li><strong>step2</strong> 如果redis数据库中有区域数据，直接返回给前端</li><li><strong>step3</strong> 当redis数据库中没有区域数据时，此时再去mysql数据库中进行数据获取，拿到的区域数据不会马上返回给前端，而是将拿到的数据保存到redis数据库中，最后才返回给前端</li></ul><p>4.逻辑代码编写</p><p>思考：将数据保存到redis数据库中，此时需要思考，以怎么形式保存数据，保存哪些数据到redis数据库</p><p>实现：是将整个返回给前端正确响应数据全部以json格式的字符串保存</p><ul><li><strong>step1</strong> 将数据转换为json字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">resp_dict = dict(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=area_dict_li)</span><br><span class="line">resp_json_str = json.dumps(resp_dict)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 将构建的json格式的字符串响应数据保存到redis数据库中， 并设置有效期</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    redis_store.setex(<span class="string">"area_info"</span>,constants.AREA_INFO_REDIS_CACHE_EXPIRES, resp_json_str)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 返回构造响应头数据，设置Content-Type为json，默认的为html</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> resp_json_str, <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>:<span class="string">"application/json"</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 调用接口一开始从redis数据库中拿去区域数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    resp_json_str = redis_store.get(<span class="string">"area_info"</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> resp_json_str <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> resp_json_str, <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 当redis数据库中获取的数据不为空时，往日志info中记录一句话，方便测试是从mysql 还是 redis 获取的区域数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">current_app.logger.info(<span class="string">"Area data from redis"</span>)</span><br></pre></td></tr></table></figure><p>5.测试redis缓存是否成功</p><ul><li><strong>step1</strong> 运行项目</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115162249936.png" alt></fancybox></p><ul><li><strong>step2</strong> 在Postman测试工具中向后端接口</li></ul><p>第一次Send发送请求，查看程序运行日志，并没有显示我们定义日志信息</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115162754415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>第二次Send发送请求，则显示我们定义的info日志信息，说明区域数据是从redis数据库中获取的</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115162944855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 查看redis数据库，并获取area_info键的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115164249197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶缓存数据同步问题"><a href="#三丶缓存数据同步问题" class="headerlink" title="三丶缓存数据同步问题"></a>三丶缓存数据同步问题</h1><p><strong>问</strong>：怎么保证redis缓存的数据和mysql数据保持一致性？</p><p><strong>第一种</strong>方式：mysql数据库维护人员在修改区域表数据时，将redis数据库key删除</p><p><strong>第二种</strong>方式：就是我们这种简单暴力有效的方式，设置数据的有效期，让redis数据库来帮我们把数据进行删除</p><h1 id="四丶完善后端用户模块"><a href="#四丶完善后端用户模块" class="headerlink" title="四丶完善后端用户模块"></a>四丶完善后端用户模块</h1><p>1.对profile模块中的update_name进行修改</p><ul><li><strong>step1</strong> 修改路由请求方式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/users/name", methods=["PUT"])</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 从g对象中获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取前端请求中的参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req_dict = request.get_json()</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断参数是否为空</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> req_dict:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数不完整"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 获取用户修改的名字</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name = req_dict.get(<span class="string">"name"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 判断用户是否输入用户名</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"名字不能为空"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 将用户修改后的名字保存到数据库，需要注意的是这里不需要判断名字name是否重复，因为当初在创建数据库表字段name的时候设置了唯一索引</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    User.query.filter_by(id=user_id).update(&#123;<span class="string">"name"</span>: name&#125;)</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"保存用户名字失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 因为在登录和注册接口编写时候最后都将name保存到session中，所以当用户修改name后，也需要将新的name进行session保存</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session[<span class="string">"name"</span>] = name</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 最后返回正确响应</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"修改成功"</span>, data=&#123;<span class="string">"name"</span>: name&#125;)</span><br></pre></td></tr></table></figure><p>2.获取个人信息在我的爱家中进行显示</p><ul><li><strong>step1</strong> 定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/user", methods=["GET"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_profile</span><span class="params">()</span>:</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 根据用户id在数据库中查询个人信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user = User.query.get(user_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取用户信息失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断用户对象是否为空</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> User <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"无效操作"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在models模块中构建一个to_dict方法，用于构建我们返回给前端的数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_dict</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""将对象转换为字典数据"""</span></span><br><span class="line">    user_dict = &#123;</span><br><span class="line">        <span class="string">"user_id"</span>: self.id,</span><br><span class="line">        <span class="string">"name"</span>: self.name,</span><br><span class="line">        <span class="string">"mobile"</span>: self.mobile,</span><br><span class="line">        <span class="string">"avatar"</span>: constants.QINIU_URL_DOMAIN + self.avatar_url <span class="keyword">if</span> self.avatar_url <span class="keyword">else</span> <span class="string">""</span>,</span><br><span class="line">        <span class="string">"create_time"</span>: self.create_time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> user_dict</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 回到profile模块中，返回正确响应数据给前端</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=user.to_dict())</span><br></pre></td></tr></table></figure><p>3.获取用户的实名认证信息</p><ul><li><strong>step1</strong> 定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/users/auth", methods=["GET"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_auth</span><span class="params">()</span>:</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 根据用户id在数据库中进行查询, 获取用户对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user = User.query.get(user_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取用户实名认证信息失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断用户对象是否为空</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> user <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"无效操作"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在models模块中构建一个auth_to_dict方法，用于构建我们返回给前端的数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">auth_to_dict</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""将用户实名信息转换为字典数据"""</span></span><br><span class="line">    auth_dict = &#123;</span><br><span class="line">        <span class="string">"user_id"</span>: self.id,</span><br><span class="line">        <span class="string">"real_name"</span>: self.real_name,</span><br><span class="line">        <span class="string">"id_card"</span>: self.id_card</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> auth_dict</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 回到profile模块中，返回正确响应数据给前端</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=user.auth_to_dict())</span><br></pre></td></tr></table></figure><p>4.向数据库中保存用户实名认证信息</p><ul><li><strong>step1</strong> 定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/users/auth", methods=["POST"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_user_auth</span><span class="params">()</span>:</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取前端发送请求中的参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req_data = request.get_json()</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断参数是否为空</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> req_data:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 获取用户输入的真实姓名和身份证号</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">real_name = req_data.get(<span class="string">"real_name"</span>)</span><br><span class="line">id_card = req_data.get(<span class="string">"id_card"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 校验参数完整性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([real_name,id_card]):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 将用户填写的真实姓名和身份证号保存到数据库中，这里在数据库进行数据更新是为什么将real_name和id_card默认为空，因为在后端来说，用户只能设置一次实名认证，当real_name和id_card为None时，才代用户是第一次进行认证，当获取的real_name和id_card不为空时，说明用户之前已经认证过了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    User.query.filter_by(id=user_id, real_name=<span class="literal">None</span>, id_card=<span class="literal">None</span>).update(&#123;<span class="string">"real_name"</span>:real_name, <span class="string">"id_card"</span>:id_card&#125;)</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"保存用户实名信息失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 向前端返回正确响应</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>)</span><br></pre></td></tr></table></figure><h1 id="五丶完善前端用户模块"><a href="#五丶完善前端用户模块" class="headerlink" title="五丶完善前端用户模块"></a>五丶完善前端用户模块</h1><p>1.在profile.html文件中进行如下修改</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form-name"</span> <span class="attr">action</span>=<span class="string">"/api/profile/name"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.在profile.js中进行如下编写</p><ul><li><strong>step1</strong> 在个人信息栏显示用户信息</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在页面加载是向后端查询用户的信息</span></span><br><span class="line">    $.<span class="keyword">get</span>("/api/v1.0/user", function(resp)&#123;</span><br><span class="line">        <span class="comment">// 当后端接口检验登录装饰器返回4101状态码，表示用户未登录，即跳转到登录页面</span></span><br><span class="line">        <span class="keyword">if</span> (resp.errno == <span class="string">"4101"</span>) &#123;</span><br><span class="line">            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 后端返回正确响应码，将响应数据中的name填写到id = user-name的标签内容上</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>) &#123;</span><br><span class="line">            $(<span class="string">"#user-name"</span>).val(resp.data.name);</span><br><span class="line">            <span class="comment">// 头像链接存在则显示到src下</span></span><br><span class="line">            <span class="keyword">if</span> (resp.data.avatar) &#123;</span><br><span class="line">                $(<span class="string">"#user-avatar"</span>).attr(<span class="string">"src"</span>, resp.data.avatar);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="string">"json"</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 将用户修改后的名字保存到数据库中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将用户修改后名字向后端进行发送</span></span><br><span class="line">    $(<span class="string">"#form-name"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        e.preventDefault();</span><br><span class="line">        <span class="comment">// 获取用户输入的名字</span></span><br><span class="line">        <span class="keyword">var</span> name = $(<span class="string">"#user-name"</span>).val();</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (!name) &#123;</span><br><span class="line">            alert(<span class="string">"请填写用户名！"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"/api/v1.0/users/name"</span>,</span><br><span class="line">            type:<span class="string">"PUT"</span>,</span><br><span class="line">            data: <span class="built_in">JSON</span>.stringify(&#123;<span class="attr">name</span>: name&#125;),</span><br><span class="line">            contentType: <span class="string">"application/json"</span>,</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            headers:&#123;</span><br><span class="line">                <span class="string">"X-CSRFTOKEN"</span>:getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (data.errno == <span class="string">"0"</span>) &#123;</span><br><span class="line">                    $(<span class="string">".error-msg"</span>).hide();</span><br><span class="line">                    showSuccessMsg();</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.errno == <span class="string">"4001"</span>) &#123;</span><br><span class="line">                    $(<span class="string">".error-msg"</span>).show();</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.errno == <span class="string">"4101"</span>) &#123;</span><br><span class="line">                    location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>3.在我的爱家my.js中进行如下编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.<span class="keyword">get</span>("/api/v1.0/user", function(resp)&#123;</span><br><span class="line">        <span class="comment">// 用户未登录</span></span><br><span class="line">        <span class="keyword">if</span> (resp.errno == <span class="string">"4101"</span>) &#123;</span><br><span class="line">            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 查询到了用户的信息</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>) &#123;</span><br><span class="line">            $(<span class="string">"#user-name"</span>).html(resp.data.name);</span><br><span class="line">            $(<span class="string">"#user-mobile"</span>).html(resp.data.mobile);</span><br><span class="line">            <span class="keyword">if</span> (resp.data.avatar) &#123;</span><br><span class="line">                $(<span class="string">"#user-avatar"</span>).attr(<span class="string">"src"</span>, resp.data.avatar);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="string">"json"</span>);</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>4.在实名认证auth.js中进行如下编写</p><ul><li><strong>step1</strong> 当页面加载完毕时，想后端接口发送请求来获取用户的姓名和身份证</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 查询用户的实名认证信息</span></span><br><span class="line">    $.<span class="keyword">get</span>("/api/v1.0/users/auth", function(resp)&#123;</span><br><span class="line">        <span class="comment">// 4101代表用户未登录</span></span><br><span class="line">        <span class="keyword">if</span> (resp.errno == <span class="string">"4101"</span>) &#123;</span><br><span class="line">            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果返回的数据中real_name与id_card不为null，表示用户有填写实名信息</span></span><br><span class="line">            <span class="keyword">if</span> (resp.data.real_name &amp;&amp; resp.data.id_card) &#123;</span><br><span class="line">                $(<span class="string">"#real-name"</span>).val(resp.data.real_name);</span><br><span class="line">                $(<span class="string">"#id-card"</span>).val(resp.data.id_card);</span><br><span class="line">                <span class="comment">// 给input添加disabled属性，禁止用户修改</span></span><br><span class="line">                $(<span class="string">"#real-name"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span><br><span class="line">                $(<span class="string">"#id-card"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span><br><span class="line">                <span class="comment">// 隐藏提交保存按钮</span></span><br><span class="line">                $(<span class="string">"#form-auth&gt;input[type=submit]"</span>).hide();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            alert(resp.errmsg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="string">"json"</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 当页面加载完毕时，如果用户已经进行了实名认证，那么就不显示保存按钮以及对输入框进行禁止修改</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 管理实名信息表单的提交行为</span></span><br><span class="line">    $(<span class="string">"#form-auth"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        e.preventDefault();</span><br><span class="line">        <span class="comment">// 如果用户没有填写完整，展示错误信息</span></span><br><span class="line">        <span class="keyword">var</span> realName = $(<span class="string">"#real-name"</span>).val();</span><br><span class="line">        <span class="keyword">var</span> idCard = $(<span class="string">"#id-card"</span>).val();</span><br><span class="line">        <span class="keyword">if</span> (realName == <span class="string">""</span> ||  idCard == <span class="string">""</span>) &#123;</span><br><span class="line">            $(<span class="string">".error-msg"</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 将表单的数据转换为json字符串</span></span><br><span class="line">        <span class="keyword">var</span> data = &#123;</span><br><span class="line">            real_name: realName,</span><br><span class="line">            id_card: idCard</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> jsonData = <span class="built_in">JSON</span>.stringify(data);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 向后端发送请求</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"/api/v1.0/users/auth"</span>,</span><br><span class="line">            type:<span class="string">"post"</span>,</span><br><span class="line">            data: jsonData,</span><br><span class="line">            contentType: <span class="string">"application/json"</span>,</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            headers: &#123;</span><br><span class="line">                <span class="string">"X-CSRFTOKEN"</span>: getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>) &#123;</span><br><span class="line">                    $(<span class="string">".error-msg"</span>).hide();</span><br><span class="line">                    <span class="comment">// 显示保存成功的提示信息</span></span><br><span class="line">                    showSuccessMsg();</span><br><span class="line">                    $(<span class="string">"#real-name"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span><br><span class="line">                    $(<span class="string">"#id-card"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span><br><span class="line">                    $(<span class="string">"#form-auth&gt;input[type=submit]"</span>).hide();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>5.当用户进行实名制后，那么在我的房源页面，就不应该显示去实名认证按钮</p><ul><li><strong>step1</strong> 实名制之前显示界面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190121173205965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 在myhouse.js中进行判断验证，如果用户已经实名制了，那么就不显示此按钮，否则才会显示</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 对于发布房源，只有认证后的用户才可以，所以先判断用户的实名认证状态</span></span><br><span class="line">    $.<span class="keyword">get</span>("/api/v1.0/users/auth", function(resp)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"4101"</span> == resp.errno) &#123;</span><br><span class="line">            <span class="comment">// 用户未登录</span></span><br><span class="line">            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">            <span class="comment">// 未认证的用户，在页面中展示 "去认证"的按钮</span></span><br><span class="line">            <span class="keyword">if</span> (!(resp.data.real_name &amp;&amp; resp.data.id_card)) &#123;</span><br><span class="line">                $(<span class="string">".auth-warn"</span>).show();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 实名制之后显示页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190121173708406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="六丶测试用户模块中个人信息栏，我的爱家，实名认证"><a href="#六丶测试用户模块中个人信息栏，我的爱家，实名认证" class="headerlink" title="六丶测试用户模块中个人信息栏，我的爱家，实名认证"></a>六丶测试用户模块中个人信息栏，我的爱家，实名认证</h1><p>1.个人信息栏测试</p><ul><li><strong>step1</strong> 登录网站，进入个人信息栏，显示如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115202637893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 当修改用户名后，点击保存，显示保存成功提示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115202916720.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.我的爱家栏测试，成功显示出用户头像，用户名以及手机号</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115203111552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.用户实名认证栏测试</p><ul><li><strong>step1</strong> 首次进行实名认证，界面显示如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115203228933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 当未填写姓名和身份证号时，出现如下显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115203940925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 当输入完整信息后，会显示保存成功，出现如下界面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011520444388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 查看数据库信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115204947136.png" alt></fancybox></p><ul><li><strong>step5</strong> 此号码已经实名认证成功，再次进入实名认证，则显示如下界面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115205408537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="七丶效果动图展示"><a href="#七丶效果动图展示" class="headerlink" title="七丶效果动图展示"></a>七丶效果动图展示</h1><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115211230304.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/86488529" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86488529</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（八）</title>
      <link href="/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%85%AB%EF%BC%89/"/>
      <url>/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%85%AB%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('别搞了，你破解不了的');const txt = document.getElementById('enc_content').innerHTML;// alert(txt,"1")// alert(pwd,"2")// alert(onError,"3")let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);if(plaintext == ""){document.getElementById("enc_pwd_input").value="";document.getElementById("enc_error").innerHTML = "密码错误!";return}// alert(plaintext)} catch(err) {if(onError) {// alert(onError,"4")// alert(err,"5")onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" placeholder="请输入文章密码" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "密码错误!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（七）</title>
      <link href="/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%83%EF%BC%89/"/>
      <url>/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('别搞了，你破解不了的');const txt = document.getElementById('enc_content').innerHTML;// alert(txt,"1")// alert(pwd,"2")// alert(onError,"3")let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);if(plaintext == ""){document.getElementById("enc_pwd_input").value="";document.getElementById("enc_error").innerHTML = "密码错误!";return}// alert(plaintext)} catch(err) {if(onError) {// alert(onError,"4")// alert(err,"5")onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none"></div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" placeholder="请输入文章密码" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "密码错误!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（六）</title>
      <link href="/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%85%AD%EF%BC%89/"/>
      <url>/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%85%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶补充"><a href="#一丶补充" class="headerlink" title="一丶补充"></a>一丶补充</h1><p>1.之前写的获取的图片验证码，有一个地方需要做进一步的处理，需要删除redis数据库中的图片验证码，防止用户使用同一个图片验证码验证多次，所以将删除代码放在取出redis数据库中图片验证码的值之后，也就是在real_image_code变量之后进行删除，这样即使删除了redis数据中的数据，也不会影响接下来的判断校验，这样做的目的就是说不管用户填对填错，只有一次验证机会</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106164545368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.测试以上逻辑是否正确</p><ul><li><strong>step1</strong> 重新运行程序，刷新<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a> 注册页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106165322181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 查看redis数据库图片验证码的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106165639391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 在Postman工具中发送短信验证码路由地址</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106170016580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>此时绑定的手机号码上就会收到我们定义的6位数验证码</p><p><img src="https://img-blog.csdnimg.cn/20190106170220288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step4</strong> 查看redis数据库(这个时候并没有超过180秒)，发现图片验证码的key已经被删除</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010618225260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.短信验证码这一块，大多网站都会在用户发送第一次验证码后，在前端页面会出现60s后再试之类的提醒，那么对于后端来说，也是需要的，比如被人知道了后我端口的接口，1分钟之类不断的发送短信，那可就不好了，所以为了做到优化以及安全防范，那么就需要在后端进行一个禁止60s内发送第二次短信的一个逻辑，不仅仅限于前端</p><ul><li><p><strong>step1</strong> 逻辑分析，首先当发送第一次短信时，需要记住发送短信记录，当时间超过60s以上，才可以发送第二条短信，此时就需要想想是在什么时候将这个发送短信的记录存到redis数据库，大多公司是这样做的，不管发送成功与否，都是需要等待60s后才能发送第二次，所以我们这里也是这样做的，在发送短信之前就将记录存到redis数据库当中去</p></li><li><p><strong>step2</strong> 当在保存短信验证码的时候，将这个第一次发送短信的记录存到redis数据库中，让redis数据库去维护记录的有效期60s，这个记录的数据随便起，这里设置1，那么当在redis数据库查询不到这个记录时，代表可以记录过了有效期被删除了，则代表可以发送第二条短信验证码了</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis_store.setex(<span class="string">"send_sms_code_%s"</span> % mobile, constants.SEND_SMS_CODE_INTERVAL, <span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 然后在判断手机号是否注册之前进行校验判断，判断对于此手机号码在60s以内有没有之前发送短信的操作，如果有，则不代表用户操作频繁，不予处理（注：经测试如果在判断获取记录的值的时候代码为if send_flag == 1时，会出现bug，所以建议使用is not None即可）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106184125601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.测试以上逻辑是否正常</p><ul><li><strong>step1</strong> 启动项目程序</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106175447918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 刷新<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a> 注册页面，生成新的图片验证码，将验证码内容以及对应编码通过发送短信路由发送到对应接口进行测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106180053624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 此时从redis数据库中查看图片验证码的id以及值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106180213386.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在Postman工具中，对短信接口地址进行访问，并携带image_code以及image_code_id</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106180352665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>同时收到手机短信验证码</p><p><img src="https://img-blog.csdnimg.cn/20190106180531689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step5</strong> 最关键的一步，与此同时，刷新图片验证码，获取新的图片验证码，然后在redis数据查询id以及图片验证码的值后在Postman中进行再次发送（注：这里的演示是在60s之内发送第二次请求给后端短信接口），出现如下提示，代表逻辑正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106182755941.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶短信验证码前端编写"><a href="#二丶短信验证码前端编写" class="headerlink" title="二丶短信验证码前端编写"></a>二丶短信验证码前端编写</h1><p>1.在register.js中构造请求数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> req_data = &#123;</span><br><span class="line">      <span class="string">"image_code"</span>: imageCode,  <span class="comment">//用户输入图片验证码的值</span></span><br><span class="line">      <span class="string">"image_code_id"</span>: imageCodeId  <span class="comment">//对应图片验证码的编号</span></span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p>2.通过ajax方式想后端去发送请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 想后端发送请求</span></span><br><span class="line">$.<span class="keyword">get</span>("/api/v1.0/sms_codes/"+mobile, req_data, function (resp) &#123;</span><br><span class="line">    <span class="comment">// 回调函数中的resp是后端返回的json字符串，通过ajax将这个字符串转换成js对象</span></span><br><span class="line">    <span class="comment">// 所以这里的resp为ajax转换后的对象</span></span><br><span class="line">    <span class="keyword">if</span> (resp.error == <span class="string">"0"</span>) &#123;</span><br><span class="line">        <span class="comment">// 表示发送成功</span></span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">60</span>;</span><br><span class="line">        <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (num&gt;<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// 修改倒计时的文本内容</span></span><br><span class="line">                $(<span class="string">".phonecode-a"</span>).html(num + <span class="string">"s"</span>);</span><br><span class="line">                num -= <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(<span class="string">".phonecode-a"</span>).html(<span class="string">"获取验证码"</span>);</span><br><span class="line">                $(<span class="string">".phonecode-a"</span>).attr(<span class="string">"onclick"</span>, <span class="string">"sendSMSCode();"</span>);</span><br><span class="line">                clearInterval(timer)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">1000</span>, <span class="number">60</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(resp.errmsg);</span><br><span class="line">        $(<span class="string">".phonecode-a"</span>).attr(<span class="string">"onclick"</span>, <span class="string">"sendSMSCode();"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.测试</p><ul><li><strong>step1</strong> 启动程序</li></ul><p><img src="https://img-blog.csdnimg.cn/20190106192433994.png" alt></p><ul><li><strong>step2</strong> 访问<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a> 注册界面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106193817884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>step3</strong> 输入手机号，图片验证码后点击获取短信验证码，成功出现倒计时，同时手机收到短信验证码</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106193854456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>手机验证码</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106194011945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在谷歌浏览器中查看接口地址的NetWork</li></ul><p>General数据</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106194231188.png" alt></fancybox></p><p>Response响应数据 </p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106194826574.png" alt></fancybox></p><h1 id="三丶注册后端接口编写"><a href="#三丶注册后端接口编写" class="headerlink" title="三丶注册后端接口编写"></a>三丶注册后端接口编写</h1><p>1.在项目api_1_0目录下创建passport.py文件用作于注册以及登录的逻辑接口文件</p><p><img src="https://img-blog.csdnimg.cn/20190106202450959.png" alt></p><p>2.构建register视图函数，并在ihome/init文件中导入passport模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/users", methods=["POST"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>3.逻辑编写</p><ul><li><strong>step1</strong> 获取前端请求发送请求中的json数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">req_dict = request.get_json()</span><br><span class="line">mobile = req_dict.get(<span class="string">"mobile"</span>) <span class="comment">#跟前端约定好的</span></span><br><span class="line">sms_code = req_dict.get(<span class="string">"sms_code"</span>)</span><br><span class="line">password = req_dict.get(<span class="string">"password"</span>)</span><br><span class="line">password2 = req_dict.get(<span class="string">"password2"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([mobile, sms_code, password, password2]):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"请求参数不完整"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 判断用户输入的手机号码格式</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110163000831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 从redis数据库中取出短信验证码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    real_sms_code = redis_store.get(<span class="string">"sms_code_%s"</span> % mobile)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"读取真实短信验证码异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 判断短信验证码是否过期</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> real_sms_code <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"短信验证码失效"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 判断用户输入的短信验证码是否正确</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> real_sms_code != sms_code:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DATAERR, errmsg=<span class="string">"短信验证码填写错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 同图片验证码一样，在redis数据库中进行删除，防止一个短信验证码多次使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    redis_store.delete(<span class="string">"sms_code_%s"</span> % mobile)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 判断用户的手机号是否注册过</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110091124408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step9</strong> 将用户注册的数据保存到mysql数据库中，这时候为了减少数据库的查询，不增加程序运行的负荷，所以我们在判断用户手机号是否注册过的时候，不再进行查询，而是在保存用户注册数据时候，判断手机号码是否存在，因之前在models中创建数据库表时，将mobile字段的数据设置为唯一约束，所以当数据库ih_user_profile表中已存在mobile字段的数据时，再进行插入相同手机号mobile的数据时，mysql数据库则会抛出异常，那么我们就利用数据库抛出的异常来判断手机号码是否存在，从而减少在视图函数中数据库的查询</li></ul><p>数据库测试mobile字段异常</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110093442168.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 注释step8代码重新编写，大体如下，因密码需要进行加密后再存到数据库，所以到最后面再进行处理</li></ul><p><strong>说明：</strong>这里的注册名为手机号，后面会另写接口让name为名字昵称，当出现异常时候，需要进行数据库回滚操作</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110100506671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step11</strong> 将登陆状态保存到session中，并返回注册成功结果</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">session[<span class="string">"name"</span>] = mobile</span><br><span class="line">session[<span class="string">"mobile"</span>] = mobile</span><br><span class="line">session[<span class="string">"user_id"</span>] = user.id</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"注册成功"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step12</strong> 将用户输入的密码进行加密</li></ul><p><strong>说明：</strong>将对用户输入的密码添加salt值(盐值)，再进行加密存储，说白了就是，在户输入的密码基础上再添加一个随机生成的字符串，即使用户1和用户2密码一样，但在进行salt处理后，在数据库中也不会相同，不存在撞库说法，这样做安全性极高，即使密码泄露，破解出来后也并不是用户的真是密码</p><p><strong>问题：</strong>反过来当用户注册成功后，进行用户登录时，那么这个密码是如何进行判断？是将用户输入的密码进行加密后再和数据库加密密码进行对比，可是当初在注册时对用户输入的密码进行加密时候添加了随机的salt值，所以这里需要注意思考一下，我们这里的想法是通过在注册时候将salt值进行保存在数据库中另起一个字段，这是其一方法，其二是将这个salt值与加密后的密码中间以某个分隔符进行分隔，这样做的话就不用再创建表字段另存salt值，如qwe@ohcuncacaucaooa08c03qoca08q08，@符前为salt值，后为用户加密后的密码</p><p><strong>注：</strong>MD5已被攻破，利用暴力测试以及算法公式成功反推出加密前的密码，sh1估计等不了几年就会被破解，我们这里使用的是sha256进行密码的加密</p><p>①在models文件中通过导入werkzeug.security类中的generate_password_hash方法将密码进行加密，并存到数据库中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_password_hash</span><span class="params">(self, origin_password)</span>:</span></span><br><span class="line">    self.password_hash = generate_password_hash(origin_password)</span><br></pre></td></tr></table></figure><p>②在passport文件中，在构建User对象的时候，通过调用models文件中的generate_password_hash方法，将前端用户输入的password传参给此方法，并保存到User模型类的passwor_hash字段中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.generate_password_hash(password)</span><br></pre></td></tr></table></figure><p>4.property装饰器的使用</p><ul><li><strong>step1</strong> 将函数调用转换为对象属性设置（在passport文件中）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.password = password</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在models中注释之前的generate_password_hash方法的调用，使用property装饰器对新创建的password函数装饰为password属性(注，在passport文件中user.password对象的password属性名要与models文件中的方法同名)，再通过password属性的setter方法，设置类属性的值，这个值就是我们在passport文件中通过user.password = password这个password值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110123210526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶注册后端测试"><a href="#四丶注册后端测试" class="headerlink" title="四丶注册后端测试"></a>四丶注册后端测试</h1><ul><li><strong>step1</strong> 因测试users注册后端接口使用的POST请求方式，而此时还没有编写注册前端端口测试，所以需要在ihome/init文件中将csrf后端机制关闭，再进行测试</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 为flask补充csrf防护</span><br><span class="line"># CSRFProtect(app)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 运行程序，在浏览器输入<a href="http://127.0.0.1:5000/register.html，进入注册页面" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html，进入注册页面</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110130521369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 在注册页面输入错误手机号，正确的图片验证码，当点击获取短信验证码时候，会提示发送短信失败，无所谓，我们从redis数据库直接读取sms_code即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110130737547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在redis数据库中获取短信验证码(因为在上一步输入的是错误手机号，导致无法发送短信，测试无所谓嘛)</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110130954105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 在测试工具Postman中，添加127.0.0.1:5000/api/v1.0/users地址，构造json格式的body体数据，就是我们注册页面所需要的数据，成功返回注册成功响应数据，代表注册后端接口没问题</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011013131489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 响应数据表示注册成功后，查看数据库ih_user_profile表信息，第一条数据是之前测试使用的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110132045476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶注册前端编写"><a href="#五丶注册前端编写" class="headerlink" title="五丶注册前端编写"></a>五丶注册前端编写</h1><p>1.前端注册HTML代码（不展示）</p><p>2.前端注册JS代码（不展示）</p><p>3.在register.js文件中通过ajax方式向后端接口发送注册请求（在callback for submit()）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用ajax向后端发送注册请求</span></span><br><span class="line">        <span class="keyword">var</span> req_data = &#123;</span><br><span class="line">            mobile:mobile,</span><br><span class="line">            sms_code:phoneCode,</span><br><span class="line">            password:passwd,</span><br><span class="line">            password2:passwd2</span><br><span class="line"> </span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> req_json = <span class="built_in">JSON</span>.stringify(req_data)</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"/api/v1.0/users"</span>,</span><br><span class="line">            type:<span class="string">"post"</span>,</span><br><span class="line">            data:req_json,</span><br><span class="line">            contentType:<span class="string">"application/json"</span>,</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            headers:&#123;</span><br><span class="line">              <span class="string">"X-CSRFToken"</span>:getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (resp.errno== <span class="string">"0"</span>)&#123;</span><br><span class="line">                    <span class="comment">// 注册成功，即跳转到主页</span></span><br><span class="line">                    location.href = <span class="string">"/index.html"</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    alert(resp.errmsg);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>4.在js构建一个getCookie的方法来获取前端名为csrf_token的cookie的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="built_in">document</span>.cookie.match(<span class="string">"\\b"</span> + name + <span class="string">"=([^;]*)\\b"</span>);</span><br><span class="line">    <span class="keyword">return</span> r ? r[<span class="number">1</span>] : <span class="literal">undefined</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.将获取的cookie的值，放在请求头中的X-CSRFToken键中，方便后端进行csrf验证（需将ihome/init中的CSRF验证开启）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">headers:&#123;</span><br><span class="line">          <span class="string">"X-CSRFToken"</span>:getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure><h1 id="六丶用户注册功能测试"><a href="#六丶用户注册功能测试" class="headerlink" title="六丶用户注册功能测试"></a>六丶用户注册功能测试</h1><p>1.进行注册测试，输入不存在的号码是为了演示给大家，虽然提示发送短信验证码失败，但我可以从redis数据库去拿取短信验证码，注册成功后，即跳转到登录页面</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110171730944.gif" alt></fancybox></p><p>2.用户注册成功后，查看数据库中ih_user_profile表的内容，成功将用户注册信息保存到数据库</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011017351791.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85934776" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85934776</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（五）</title>
      <link href="/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%94%EF%BC%89/"/>
      <url>/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶图片验证码前端编写"><a href="#一丶图片验证码前端编写" class="headerlink" title="一丶图片验证码前端编写"></a>一丶图片验证码前端编写</h1><p>1.当用户进入到注册页后，页面进行刷新，所以在static前端静态资源register.js中定义一个generateImageCode函数，当页面加载完后，形成图片验证码的后端地址， 设置到页面中，让浏览请求验证码图片，同理在register.html中onclick点击验证码图片时，也要触发generateImageCode函数</p><p><strong>register.html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-addon image-code"</span> ο<span class="attr">nclick</span>=<span class="string">"generateImageCode();"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>register.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    generateImageCode();&#125;</span><br></pre></td></tr></table></figure><p>2.生成图片验证码编号两种方式：第一种是时间轴；第二种是UUID全局唯一标识符，这里我们使用UUID</p><ul><li><strong>step1</strong> 在js中获取UUID的值（这里在网上找的一个代码）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">generateUUID</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.performance &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">window</span>.performance.now === <span class="string">"function"</span>)&#123;</span><br><span class="line">        d += performance.now(); <span class="comment">//use high-precision timer if available</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> uuid = <span class="string">'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'</span>.replace(<span class="regexp">/[xy]/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r = (d + <span class="built_in">Math</span>.random()*<span class="number">16</span>)%<span class="number">16</span> | <span class="number">0</span>;</span><br><span class="line">        d = <span class="built_in">Math</span>.floor(d/<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">return</span> (c==<span class="string">'x'</span> ? r : (r&amp;<span class="number">0x3</span>|<span class="number">0x8</span>)).toString(<span class="number">16</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> uuid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在generateImageCode函数中调用generateUUID，将生成的UUID赋值给imageCodeId变量，记得先使用var在函数外声明该变量</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">generateImageCode</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 生成图片验证码编号</span></span><br><span class="line">    imageCodeId = generateUUID();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.拼接二维码图片的url地址，设置register.html中图片二维码div标签class=image_code下的img标签的src地址为拼接后的url，也就是二维码图片的链接地址</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">"/api/v1.0/image_codes/"</span> + imageCodeId;</span><br><span class="line">   $(<span class="string">".image-code img"</span>).attr(<span class="string">"src"</span>, url);</span><br></pre></td></tr></table></figure><p>4.运行程序，清除浏览器缓存，输入<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a>后，查看注册页面二维码生成是否成功</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105174855460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.在后端redis数据库中成功生成image_code_uuid的key了</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105175220758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>6.效果图，鼠标连续点击图片验证码，请注意验证码</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105180758761.gif" alt></fancybox></p><h1 id="二丶短信验证码后端编写"><a href="#二丶短信验证码后端编写" class="headerlink" title="二丶短信验证码后端编写"></a>二丶短信验证码后端编写</h1><p>1.发送短信服务介绍，这里使用的是容联云，云通讯</p><ul><li><strong>step1</strong> 需要在官网<a href="https://www.yuntongxun.com/" target="_blank" rel="noopener">https://www.yuntongxun.com/</a>进行注册，注册时会通过打电话形式告诉你验证码，注册成功后会赠送8元测试费用，如下图</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105182249832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 然后选择测试平台，添加测试手机号，最多三个，验证成功才能添加上 </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105182811413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 进入开发文档—Rest API—-短信—-短信发送接口，具体文档说明请到官网自寻查看</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105183426568.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 我们直接去下载官方给开发人员封装好的工具SDK，找到Demo示例，然后在文章上方点击Demo下载，找到python语言对应的SDK进行下载即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105184630743.png" alt></fancybox></p><ul><li><strong>step5</strong> 解压后的目录文件如下，请查看README.txt等说明文件，DEMO问案列，这里我们只需要将SDK文件拷贝到项目中的libs目录下，并命名为yuntongxun，然后再将DEMO文件夹中的SendTemplateSMS.py文件拷贝到yuntongxun目录下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105185110256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.封装发送短信辅助工具</p><ul><li><strong>step1</strong> 在libs以及云通讯目录下创建init文件，使其变成python的包</li></ul><p><img src="https://img-blog.csdnimg.cn/2019010611572470.png" alt></p><ul><li><strong>step2</strong> 在SendTemplateSMS.py文件中创建一个CCP的类，用于封装发送短信的辅助类，目的是在我们调用sendTemplateSMS方法的时候，只初始化一次REST SDK，使用python单例达到不管创建多少个对象，都只初始化一次</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106121920408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 将云通讯开发者主账号中的ACCOUNT SID和AUTH TOKEN以及AppID，复制到代码中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106122431980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 编写测试脚本，内容分为验证码9527，有效期5分钟，使用测试模板1</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106122739892.png" alt></fancybox></p><ul><li><strong>step5</strong> 运行sendTemplateSMS程序，最下面的statusCode为000000，代表短信发送成功，在官网短信接口有详细说明</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106125231272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 此时手机便收到了短信</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106123637876.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><ul><li><strong>step7</strong> 修改代码，不需要使用官方的代码将result字典数据进行遍历打印，而是只获取状态statusCode进行判断，如果为000000代表发送成功返回0，否则发送失败返回-1</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010612460514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>查看运行结果，验证逻辑没有问题</strong></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106125018343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 将sendTemplateSMS重命名为sendSMS，为了后面使用方便 </li></ul><p>3.定义获取短信接口</p><ul><li><strong>step1</strong> 在接口文件verify_code中定义一个get_sms_code的视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_sms_code</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 构建路由规则，同理与构建图片验证码一样，使用restful风格，并且需要有一个短信验证码的编码，以手机进行编号，之前在分析图片验证码时，已经说过发送短信验证码时需携带图片验证码的文本内容以及图片验证码的编号，所以路由如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># GET /api/v1.0/sms_codes/&lt;mobile&gt;?image_code=xxxx&amp;image_code_id=xxxx</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取image_code以及image_code_id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">image_code = request.args.get(<span class="string">"image_code"</span>)</span><br><span class="line">image_code_id = request.args.get(<span class="string">"image_code_id"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 校验参数</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([image_code, image_code_id]):</span><br><span class="line">    <span class="comment"># 参数不完整返回对应错误</span></span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数不完整"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 业务逻辑处理，从redis数据库取出验证码与用户输入的验证码进行校验，期间需要对验证码是否存在进行判断</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106133815681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 接下来判断手机号是否存在</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106135630145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 随机生成6位数验证码（使用字符串格式化的方式来生成，从0到999999，当不足6位时，以0做填充）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sms_code = <span class="string">"%06d"</span> % random.randint(<span class="number">0</span>, <span class="number">999999</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 在redis数据库中保存真实的短信验证码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106141216779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step9</strong> 发送短信</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010614205175.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 异常说明</li><li>放在try与except中的代码越少越好，会影响程序执行效率</li></ul><h1 id="三丶测试向后端接口发送短信验证码"><a href="#三丶测试向后端接口发送短信验证码" class="headerlink" title="三丶测试向后端接口发送短信验证码"></a>三丶测试向后端接口发送短信验证码</h1><ul><li><strong>step1</strong> 打开Postman测试工具，发送接口路由127.0.0.1:5000/api/v1.0/sms_codes/180xxxxxx96?image_code&amp;image_code_id</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106143738143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 运行项目</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106144020662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 在浏览器输入<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a>，进入项目注册页面</li></ul><p><img src="https://img-blog.csdnimg.cn/20190106144257844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step4</strong> 回到Postman工具，取消参数，什么都不传的情况下，出现如下错误信息，就是我们在程序中定义的错误信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106144512465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 此时刷新<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a>注册页，查看验证码，并在redis数据中获取验证码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106144823413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>获取redis数据库中图片验证码的文本值与注册页图片二维码的值一样</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010614495632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 当过了180s后也就是我们在constants.py中设置的图片验证码有效期，在Postman工具中发送地址，提示 我们定义的错误图片验证码失效，在程序中的逻辑为无法在redis数据库中获取image_code_id键的值，或者说不存在此键，返回结果为None</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106151105878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 刷新注册页面，获取新的验证码，在Postman工具中向错误号码发送验证码，或者说是未在云通讯测试平台关联的号码发送验证码，则出现以下错误提示，这个提示就是我们在接口文件中写的res不等于0的时候，返回错误的json格式的错误信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106151511883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 刷新<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a>，将最新的验证码存储到redis数据库，在Postman工具中向正确地址发送正确号码，返回的响应数据为发送成功，如下图所示</li></ul><p>注册页界面</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106150527267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>redis数据库中的图片验证码值</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106150716882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>Postman响应数据</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106150920302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85858348" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85858348</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（四）</title>
      <link href="/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶在项目中添加静态资源文件"><a href="#一丶在项目中添加静态资源文件" class="headerlink" title="一丶在项目中添加静态资源文件"></a>一丶在项目中添加静态资源文件</h1><p>1.将静态资源文件拷贝到项目static目录下</p><p><img src="https://img-blog.csdnimg.cn/20190103182543887.png" alt></p><p>2.在终端上运行项目python manage.py runserver</p><p>3.在浏览器中输入<a href="http://127.0.0.1:5000/static/html/index.html" target="_blank" rel="noopener">http://127.0.0.1:5000/static/html/index.html</a> 访问前端主页，如下图</p><p>4.当在不使用nginx服务器给用户提供静态资源，而是以flask来提供，当用户在浏览器中输入/static/html/index.html就会显得不友好，正常来说访问主页只需要输入ip地址或者是域名加端口号就可以了，那么就需要我们专门写个视图函数来提供有好的链接地址，把地址前缀给去掉</p><p>5.创建一个蓝图，专门负责提供静态文件的</p><ul><li><strong>step1</strong> 在ihome目录下创建一个web_html.py文件</li><li><strong>step2</strong> 创建蓝图html</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">html = Blueprint(<span class="string">"web_html"</span>, __name__)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在utils目录下创建一个<strong>init</strong>.py文件，使这个目录变成python的包，然后在这个utils包中创建commons.py文件，作为通用工具，在里面定义一个正则转换器</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103190633551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在ihome/init文件中，在创建app对象时候，将ReConverter对象添加到app中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103191845194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 回到commons.py文件中，定义视图函数get_html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103202322441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 在ihome/init中进入此蓝图注册</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010320331332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 启动项目</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 清除网页缓存数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103204049753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step9</strong> 在浏览器地址栏输入<a href="http://127.0.0.1:5000/" target="_blank" rel="noopener">http://127.0.0.1:5000/</a>就直接跳转到主页了index.html了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103204456703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 输入<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a>也是没有问题的，直接跳转到register.html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103204801217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶关于csrf防护机制"><a href="#二丶关于csrf防护机制" class="headerlink" title="二丶关于csrf防护机制"></a>二丶关于csrf防护机制</h1><p>1.csrf验证机制：从cookie中获取一个csrf_token的值，再从请求体中获取一个csrf_token的值，如果这两个值相同，则检<br>验通过，可以进入视图函数中执行，如果两个值不同，则检验失败，会想前端返回状态码404的错，之前在ihome/init中设置的csrf只是负责验证，并不负责cookie与请求体中的csrf_token的值从哪里来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为flask补充csrf防护</span></span><br><span class="line">CSRFProtect(app)</span><br></pre></td></tr></table></figure><p>2.分析：前后端不分离时跟django一样直接在模板中进行设置csrf，而我们这个项目使用的是前后端分离，没有模板，对于cookie我们可以提前进行设置csrf_token，然后对于请求体中的cookie而言，当 发送POST请求时，就将那时候的请求体数据中设置csrf_token这样就能csrf防护了</p><p>3.设置cookie中的csrf_token</p><ul><li><strong>step1</strong> 为web_html.py中导入csrf包</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask_wtf <span class="keyword">import</span> csrf</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 创建一个csrf_token的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csrf_token = csrf.generate_csrf()</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 导入make_response，将返回的静态文件方法的值构建成响应对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp = make_response(current_app.send_static_file(html_file_name))</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 设置cookie的值，有效期为临时会话</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp.set_cookie(<span class="string">"csrf_token"</span>, csrf_token)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 重新启动程序，刷新网页，查看我们设置的cookie</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105123419378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶用户注册模块（图片验证码以及短信验证码）"><a href="#三丶用户注册模块（图片验证码以及短信验证码）" class="headerlink" title="三丶用户注册模块（图片验证码以及短信验证码）"></a>三丶用户注册模块（图片验证码以及短信验证码）</h1><p>1.图片验证码使用流程</p><ul><li><strong>step1</strong> 分析流程：</li></ul><p>第一步，需要前端像后端发起一个获取图片验证码的请求，对于后端来说就需要去生成一个随机的验证码图片；第二步将生成的验证码图片返回给前端；第三步验证图片验证码的准确性，如果正确，才能发起获取短信验证码的请求</p><ul><li><strong>step2</strong> 具体细节</li></ul><p>在发起获取短信验证码请求的时候将携带填写的图片验证码与后端生成的图片验证码进行校验，因此后端在生成图片验证码的时候，需要将图片进行保存，意义是为了与用户输入的图片验证码进行对比，对比成功，才会给用户返回短信验证码</p><ul><li><strong>step3</strong> 问题分析</li></ul><p>后端生成的图片验证码是存在哪里，谁来维护有效期，不可能一张图片一直用下去，所以将在后端生成的图片验证码，存到redis数据库中，在后端进行验证的时候，就从redis中取出这个值，与前端用户输入的值进行对比即可；但是对于多个用户来说同一时间向我发送获取图片验证码时，该怎么去判断谁是谁的，所以要将图片验证码进行编号处理，来分辨是属于哪个用户的图片验证码，那么就需要在用户发起短信验证码请求的携带参数里面除了填写的图片验证码，还需要携带一个用户编号，因此对于后端服务器来说，除了生成图片验证码的值，还需要生成一个对应验证码的编码，一起保存到redis数据库中，还需要将验证码值和编码返回给前端用户，那么就需要从返回的响应体中取解析编码，这样做太麻烦了，为了减轻后端的压力，将不再由后端去生成这个编码了，而是由前端在一开始就去生成这个编号，再前端向后端服务器发起获取图片验证码请求的时候携带一个编码参数，然后后端将编码和图片验证码的值一起存到redis数据库中</p><ul><li><strong>step4</strong> 在ihome/api_1_0目录下创建一个verify_code.py文件，将图片验证码以及短信验证码放在这个文件里面进行使用</li><li><strong>step5</strong> 使用restful风格构建前端向后端发起图片验证码请求地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:5000/api/v1.0/image_codes/<span class="tag">&lt;<span class="name">image_code_id</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.图片验证码后端接口编写</p><ul><li><strong>step1</strong> 将图片验证码工具包captcha拷贝到ihome/utils目录下</li><li><strong>step2</strong> 在verify.py中导入captcha包中的captcha模块中的captcha对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome.utils.captcha.captcha <span class="keyword">import</span> captcha</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 通过调用captcha对象中的generate_captcha方法来获取生成的验证码名字，文本内容，以及图片二进制数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name, text, image_data = captcha.generate_captcha()</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 选择存储数据类型，将验证码的文本内容以及编码存到redis数据库中，并设置有效期</li></ul><p>可以使用哈希格式进行存储，但是无法设置单个图片的有效期</p><p>示例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"image_codes": &#123;"id1":"abc", "":""&#125; 哈希  hset("image_codes", "id1", "abc")  hget("image_codes", "id1")</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105143246359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>使用字符串格式对数据进行存储，以编码作为key，以文本内容作为value值进行存储即可</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"image_code_编号1"</span>: <span class="string">"真实值"</span></span><br><span class="line"><span class="string">"image_code_编号2"</span>: <span class="string">"真实值"</span></span><br><span class="line">redis_store.set(<span class="string">"image_code_%s"</span> % image_code_id, text)</span><br><span class="line">redis_store.expire(<span class="string">"image_code_%s"</span> % image_code_id, constants.IMAGE_CODE_REDIS_EXPIRES)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在verify.py中导入redis数据库连接对象，然后将编码和文本内容存到redis数据库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome <span class="keyword">import</span> redis_store</span><br><span class="line"> </span><br><span class="line">redis_store.set(<span class="string">"image_code_%s"</span> %image_code_id, text)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 设置图片验证码有效期为三分钟，首先在ihome目录下创建一个constants.py文件，用于存放常量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis_store.expire(<span class="string">"image_code_%s"</span> %image_code_id, constants.IMAGE_CODE_REDIS_EXPIRES)</span><br></pre></td></tr></table></figure><p>设置值和有效期一步到位</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis_store.setex(<span class="string">"image_code_%s"</span> %image_code_id, constants.IMAGE_CODE_REDIS_EXPIRES, text)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 对于数据库连接，可能会出现连接错误以及连接不上等问题，所以需要捕获异常，并且将捕获到的异常保存到日志中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 当出现异常后，需要返回错误信息的json数据，先将工程项目定义好的response_code.py响应状态码文件，拷贝到utils中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105152126878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"save image code failed"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 没有出现异常，则先通过make_response构造图片image_data数据响应体对象，再设置该响应体对象的请求头中的Content-Type为图片格式jpg，返回给前端</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105153136818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105153136818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.开发流程与编写接口文档</p><ul><li><strong>step1</strong> 开发流程</li></ul><ol><li>分析需求</li><li>编写代码</li><li>编写单元测试</li><li>自测</li><li>编写接口文档</li><li>提测代码</li></ol><ul><li><strong>step2</strong> 编写接口文档</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">接口文档</span><br><span class="line"> </span><br><span class="line">1. 接口名字</span><br><span class="line">2. 描述（描述清楚接口的功能）</span><br><span class="line">3. url</span><br><span class="line">4. 请求方式</span><br><span class="line">5. 传入参数</span><br><span class="line">6. 返回值</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">接口：获取图片验证码</span><br><span class="line"> </span><br><span class="line">描述：前端访问，可以获取到验证码图片</span><br><span class="line"> </span><br><span class="line">url： /api/v1.0/image_codes/&lt;image_code_id&gt;</span><br><span class="line"> </span><br><span class="line">请求方式： GET</span><br><span class="line"> </span><br><span class="line">传入参数：</span><br><span class="line">    格式：路径参数 （参数是查询字符串、请求体的表单、json、xml）</span><br><span class="line"> </span><br><span class="line">    名字             类型       是否必须      说明</span><br><span class="line">   image_code_id    字符串       是         验证码图片的编号</span><br><span class="line"> </span><br><span class="line">返回值：</span><br><span class="line">    格式： 正常：图片， 异常：json</span><br><span class="line"> </span><br><span class="line">    名字             类型       是否必传      说明</span><br><span class="line">    errno          字符串         否        错误代码</span><br><span class="line">    errmsg         字符串         否        错误内容</span><br><span class="line"> </span><br><span class="line">    实例：</span><br><span class="line">    &apos;&#123;&quot;errno&quot;: &quot;4001&quot;, &quot;errmsg&quot;: &quot;保存图片验证码失败&quot;&#125;&apos;</span><br></pre></td></tr></table></figure><h1 id="四丶测试后端verify-code接口是否正确"><a href="#四丶测试后端verify-code接口是否正确" class="headerlink" title="四丶测试后端verify_code接口是否正确"></a>四丶测试后端verify_code接口是否正确</h1><p>1.需要在api_1_0/init中导入我们写的接口文件verify_code让蓝图知道有一个verify_code的模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> verify_code</span><br></pre></td></tr></table></figure><p>2.运行程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><p>3.在浏览器中输入<a href="http://127.0.0.1:5000/api/v1.0/image_codes/123" target="_blank" rel="noopener">http://127.0.0.1:5000/api/v1.0/image_codes/123</a>，成功显示出验证码图片</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105160824559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.查看程序运行日志</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105161222426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.此时查看redis数据库中，会发现出现了一个image_code_123的键，获取该键的值就是图片验证码的文本值，说明我们写的后端接口没问题</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105161126833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85706012" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85706012</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（三）</title>
      <link href="/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶关于在项目中循环导入的问题"><a href="#一丶关于在项目中循环导入的问题" class="headerlink" title="一丶关于在项目中循环导入的问题"></a>一丶关于在项目中循环导入的问题</h1><p>1.在上一篇中创建api_1_0蓝图下的demo.py视图函数文件中，肯定会用到导入数据库db的，那么就会出现flask项目循环导包的问题，当启动项目时，会提示cannot import name db，这个提示就是代表循环导入包的问题</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103094333118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.针对flask项目出现此问题的解决方法</p><ul><li><strong>step1</strong> 分析导包流程，首先在manage.py启动文件中，程序从上往下执行，一开始就从ihome包下导入数据库连接对象db，然后进入到ihome\init.py文件中，同理执行到从ihome导入蓝图目录api_1_0时，即进入api_1_0\init.py文件中，执行到导入相对路径下demo文件时，回到demo.py文件中，在该文件中从ihome包下导入db时，就会发现此时在ihome\init.py文件中，并还没有执行到创建数据库db对象，所以程序执行到这一步时，就会提示以上错误</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103095226172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 解决方法，选择推迟导入，修改代码在什么时候需导入api_1_0时，我们就在什么后导入即可，发现在create_app方法中在注册蓝图的时候才需要导入api_1_0，所以将导入代码，放到此处即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注册蓝图</span></span><br><span class="line"><span class="keyword">from</span> ihome <span class="keyword">import</span> api_1_0</span><br><span class="line">app.register_blueprint(api_1_0.api, url_prefix=<span class="string">"/api/v1.0"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 再次启动项目，就不会提示cannot import name db 了，成功解决flask项目中循环导入包的问题</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103100935291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt><fancybox></fancybox></fancybox></p><p>3.一个完整的项目工程还需要在核心目录下创建项目所需的目录，用来分别存放包和库的，所以需在ihome目录下创建utils目录用来存放项目所需的工具包以及工具函数等，然后再创建一个libs目录用来存放第三方的库，不是通过pip install 安装的库，而是源码安装的库，这样才是完整的实战工程项目</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010310244261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶日志功能实现"><a href="#二丶日志功能实现" class="headerlink" title="二丶日志功能实现"></a>二丶日志功能实现</h1><p>1.一个正常的网站包括软件等，都会有日志来记录历史操作信息等，在公司中一般会将存放日志目录与工程目录隔离开，这里为了方便演示，即将日志目录和工程目录放到一起，在项目根目录创建logs目录，用来存放日志文件</p><p>2.因为flask框架没有去提供日志这一块的库以及工具，所以我们就是用python记录日志标准库logging来进行日志记录保存</p><ul><li><strong>step1</strong> 在ihome/init文件中导入logging库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 并配置日志信息以及设置日志等级</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/201901031046120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 配置后日志信息后，需要在api_1_0/demo视图函数中进行记录日志，有两种方法，第一种是直接在demo文件中使用logging标准库模块，第二种是使用flask 框架中的全局上下文current_app对象，为什么能使用current_app对象，因为这个对象把logging模块中的logger塞到了这个对象中了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103110900127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 启动项目，在浏览器输入<a href="http://127.0.0.1:5000/api/v1.0/index测试日志是否成记录并写入到logs目录下的log文件中" target="_blank" rel="noopener">http://127.0.0.1:5000/api/v1.0/index测试日志是否成记录并写入到logs目录下的log文件中</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103111349442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>成功在logs目录下创建log日志文件，并将日志信息写入到该文件中 </p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103111620941.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>注： 在开发环境develop中配置了DEBUG=True调试模式下，会导致我们配置的日志等级，不生效，flask会强制忽略到我们配置的日志信息</strong></p><h1 id="三丶项目数据库设计"><a href="#三丶项目数据库设计" class="headerlink" title="三丶项目数据库设计"></a>三丶项目数据库设计</h1><h3 id="1-分析项目所需要的表"><a href="#1-分析项目所需要的表" class="headerlink" title="1.分析项目所需要的表"></a>1.分析项目所需要的表</h3><ul><li><p><strong>step1</strong> 用户表User，先从注册界面来说，需要哪些字段(user_id，作为主键，手机号mobile，用户名name，密码password，存放头像的路径avatar_url，用户真实姓名real_name，真实身份证号real_id_card，验证码图片存到redis数据库即可)</p></li><li><p><strong>step2</strong> 房子表House，字段(house_id，作为主键，user_id，与用户表主键id保持一致，作为外键关联哪个用户的房子，一个用户有多套房子一对多关系，房子标题title，房子所在区域area_name，通过创建的Area表所以这里将area_name改为area_id通过外键来查询即可)<br>思考：当查询房屋表中某个区域的数据时，select distinct area_name from house并去重，当数据很少的时候可以这样进行查询，随着时间推移导致数据达到几千万时，那么通过这样的方式查询数据，时间就会很长，不利于用户体验，所以这里需再创建一个区域表Area来解决查询时间过长的问题</p></li><li><p><strong>step3</strong> 区域表Area，字段(area_id，作为主键，name区域名，price价格，image_url1,image_url2…)，Area表对于House表也是一对多关系，一个区域多个房子<br>思考：在第四步我们将图片链接地址存到Area表中，那么今后如果用户上传图片扩大为10张，那么就需要改表结构，这样不是明智的选择，所以另建一个House_Image表来存储用户上传的房屋图片</p></li><li><p><strong>step4</strong> 房屋图片表House_Image，字段(image_id，作为主键，url图片地址，house_id外键)，房子House表对于图片地址House_Image表一对多关系，一个房子有多张图片<br>思考：分析需求，发现只有房屋详情时才会查询多张图片，而在查询列表和主页图片时，只需要一张，那么我们在房子表House中需添加一个index_image_url字段，这样做的目的是减少关联查询，在数据库中以空间换时间的理念来减少查询时间</p></li><li><p><strong>step5</strong> 房屋配套设施表Facility，字段(facility_id，作为主键，name设施名字)<br>思考：设施表Facility与房屋表House是多对多关系，一个设施如冰箱可以在多个不同房子中拥有，一个房子同时也可以拥有多个设备设施如电视，空调，wifi等，那么存储多对多关系的表数据，就需要创建一个中间表</p></li><li><p><strong>step6</strong> 创建中间表House_Facility表，字段(id，作为主键，外键house_id和facility_id)</p></li><li><p><strong>step7</strong> 客户订单表Order，字段(order_id，作为主键，外键user_id哪个用户和house_id哪个房子，create_time订单创建时间，start_date入住日期，end_date离开日期，price房屋单价，amount合计金额，days入住天数，status订单状态，comment评价)</p></li></ul><p><strong><font color="red">思考1</font></strong>：之所以要在Order订单表中创建price字段是考虑到比如房东在第二天需要将房屋价格上涨或者下降，保证用户是按实时价格进行计算的，加入amount不仅是为了前端，重要的是为了后期运营人员进行统计方便，节省统计的开销<br>问题：关于房东拒绝订单是否填写拒绝原因，设定是必须填写拒绝原因，那么是需要在Order 表中添加一个字段么？<br>分析：因为一旦填写拒绝原因那么就不存在comment评价了，所以这拒绝原因和评价两个关系为互斥关系，所以我们这里不添加拒绝原因字段，当有了评论信息那么肯定就不会出现拒绝原因，可以通过订单状态status来判断是评价还是拒绝原因<br><strong><font color="red">思考2</font></strong>： 当在房源搜索房屋的时候，会出现按照最新上线，入住最多，价格高低排序，当按照入住最多排序时，那么就是相当于按照订单量最多的房屋进行排序，那么就需要在Order表中按照订单量来进行排序，首先就需要根据入住时间和区域来来进入过滤查询，还要将查询的结果安装订单量进行排序，这样查询代价就比较大了，那么同理还是使用以空间换时间的概念，在House表中添加order_count来订单量，当没下一单就在对应的order_count的值加1，回过来通过直接查询House表中的order_count字段按大小排序就能查询到订单最多的房屋了</p><h3 id="2-在models-py中创建数据库抽象模型类"><a href="#2-在models-py中创建数据库抽象模型类" class="headerlink" title="2.在models.py中创建数据库抽象模型类"></a>2.在models.py中创建数据库抽象模型类</h3><ul><li><strong>step1</strong> 定义BaseModel模型基类，用于为每个模型添加创建时间和更新时间</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103142544796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 定义User用户表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103141219350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 定义Area城区表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103141348841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 定义House房屋表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103142335909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 定义Facility设施表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103144041300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 定义HouseImage房屋图片表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103144232890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 定义Order订单表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010314435715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶数据库迁移"><a href="#四丶数据库迁移" class="headerlink" title="四丶数据库迁移"></a>四丶数据库迁移</h1><ul><li><strong>step1</strong> 初始化数据库对象db</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103155155636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 执行迁移文件，结果提示No change in…..</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103155706868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>解决：因为models.py文件对于其他文件来说，并不知道它的存在，所以只需要在视图文件demo中导入models即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome <span class="keyword">import</span> db, models</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 再次执行迁移 ，则显示迁移成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103160145627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 执行升级，将数据写入到mysql中的ihome_python数据库中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103160804362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 以上步骤完成后，进入mysql，使用ihome_python数据库，查询数据库表成功生成 </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103161251719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85676643" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85676643</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（二）</title>
      <link href="/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶创建项目"><a href="#一丶创建项目" class="headerlink" title="一丶创建项目"></a>一丶创建项目</h1><h4 id="1-新建ihome-python项目文件夹"><a href="#1-新建ihome-python项目文件夹" class="headerlink" title="1.新建ihome_python项目文件夹"></a>1.新建ihome_python项目文件夹</h4><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102164323467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h4 id="2-在Pycharm中打开此文件-，并配置项目解释器-python2环境"><a href="#2-在Pycharm中打开此文件-，并配置项目解释器-python2环境" class="headerlink" title="2.在Pycharm中打开此文件 ，并配置项目解释器(python2环境)"></a>2.在Pycharm中打开此文件 ，并配置项目解释器(python2环境)</h4><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102165511549.png"></fancybox></p><h4 id="3-在工程目录下创建manage-py作为项目启动文件"><a href="#3-在工程目录下创建manage-py作为项目启动文件" class="headerlink" title="3.在工程目录下创建manage.py作为项目启动文件"></a>3.在工程目录下创建manage.py作为项目启动文件</h4><ul><li><strong>step1</strong> 实现flask中最基本的工作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route('/index')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index page"</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 配置mysql数据库用于存储用户数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""配置信息"""</span></span><br><span class="line">    DEBUG = <span class="literal">True</span></span><br><span class="line">    SECRET_KEY = <span class="string">"cdtaogang**CSDN@uhduqw82981h"</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 连接mysql数据库</span></span><br><span class="line">    SQLALCHEMY_DATABASE_URI = <span class="string">"mysql://root:mysql@127.0.0.1:3306/ihome_python"</span></span><br><span class="line">    SQLALCHEMY_TRACK_MODIFICATIONS = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">app.config.from_object(Config)</span><br><span class="line"> </span><br><span class="line">db = SQLAlchemy(app)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在本地mysql中创建ihome_python数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> ihome_python <span class="keyword">charset</span>=utf8;</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 配置redis数据库用于保存session信息以及缓存数据（因为flask框架默认将session数据存到cookie中），所以这里需要利用flask_session这个工具包帮助我们将flask存储的session数据交给我们管理，这样就可以将session数据存到redis数据库中了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""配置信息"""</span></span><br><span class="line">    DEBUG = <span class="literal">True</span></span><br><span class="line">    SECRET_KEY = <span class="string">"cdtaogang**CSDN@uhduqw82981h"</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 连接mysql数据库</span></span><br><span class="line">    SQLALCHEMY_DATABASE_URI = <span class="string">"mysql://root:mysql@127.0.0.1:3306/ihome_python"</span></span><br><span class="line">    SQLALCHEMY_TRACK_MODIFICATIONS = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># redis数据库配置</span></span><br><span class="line">    REDIS_HOST = <span class="string">"127.0.0.1"</span></span><br><span class="line">    REDIS_PORT = <span class="number">6379</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">app.config.from_object(Config)</span><br><span class="line"> </span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#创建redis数据库连接对象</span></span><br><span class="line">redis_store = redis.StrictRedis(host=Config.REDIS_HOST, port=Config.REDIS_PORT)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 配置flask_session用于我们操作session到redis数据库（说明在Config类中再次创建redis数据库连接，是因为在实际线上环境中，可能需要将session数据存到不同的服务器上）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment"># flask_session配置</span></span><br><span class="line">    SESSION_TYPE = <span class="string">"redis"</span></span><br><span class="line">    SESSION_REDIS = redis.StrictRedis(host=REDIS_HOST, port=REDIS_PORT)</span><br><span class="line">    SESSION_USE_SIGNER = <span class="literal">True</span>  <span class="comment"># 对cookie中session_id进行隐藏处理</span></span><br><span class="line">    PERMANENT_SESSION_LIFETIME = <span class="number">86400</span>  <span class="comment"># session数据的有效期，单位秒</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 利用flask_session， 将session数据保存到redis中</span></span><br><span class="line">Session(app)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 开启csrf防护机制(导入flask_WTF中的CSRFProtect类)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为flask补充csrf防护</span></span><br><span class="line">CSRFProtect(app)</span><br></pre></td></tr></table></figure><h1 id="二丶创建工程目录-拆分manage-py"><a href="#二丶创建工程目录-拆分manage-py" class="headerlink" title="二丶创建工程目录(拆分manage.py)"></a>二丶创建工程目录(拆分manage.py)</h1><h4 id="1-拆分配置文件"><a href="#1-拆分配置文件" class="headerlink" title="1.拆分配置文件"></a>1.拆分配置文件</h4><ul><li><strong>step1</strong> 在项目根目录下创建一个config.py文件，将manage.py中的Config配置类放到该文件中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102202720978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 工程实现后，有两种运行环境，开发测试环境以及生成环境(线上环境)，所以flask程序在运行时，就需要配置两个配置类，一个是用于开发环境，另一个用于生成环境</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DevelopmentConfig</span><span class="params">(Config)</span>:</span></span><br><span class="line">    <span class="string">"""开发环境配置信息"""</span></span><br><span class="line">    DEBUG = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductConfig</span><span class="params">(Config)</span>:</span></span><br><span class="line">    <span class="string">"""生成环境配置信息"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 将app对象设计为工厂模式</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102190736881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在config.py中创建配置映射</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#构建配置映射关系</span></span><br><span class="line">config_map = &#123;</span><br><span class="line">    <span class="string">"develop"</span>: DevelopmentConfig,</span><br><span class="line">    <span class="string">"product"</span>: ProductConfig</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 导入config中的config_map，通过调用create_app方法，创建app对象，将我们需要的配置环境通过传参的方式来决定是用开发环境还是生产环境，在create_app方法中就按照指明的环境进行配置即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102192437214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 因最初创建的manage.py作为项目启动文件，所以我们在manage文件中只保留启动代码即可，需将其余代码抽离出去，保证manage文件中没有其他的代码，项目根目录下只需要保留启动文件manage以及config配置文件，即在项目根目录下创建一个ihome的python包，将create_app代码放到这个ihome包的init文件中即可，随后在ihome包下创建一个static目录用于存放静态文件，再创建一个models.py文件用于做数据库的迁移</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102194017463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 在manage中创建并绑定app对象的代码，放到init中，会导致无法绑定create_app方法里面的app，所以使用SQLAlchemy对象db提供的init_app方法，在create_app方法里面对db进行初始化，这样就解决了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010219544215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 在models.py文件中导入数据库对象db</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome <span class="keyword">import</span> db</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 将manage文件中创建的redis数据库连接对象放到init文件中，需要思考是否放在create_app方法中，因为最初在manage文件中创建的redis数据库连接需要从config文件中拿去host以及port配置，所以我们在全局声明redis_store变量为None，然后在方法中通过config_map获取的环境配置类config_class，说白了也就是config中的开发类DevelopmentConfig，直接拿去类中我们配置好的r连接redis数据库的port和host</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010220073286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 对于Session(app)和CSRFProtect(app)，不会用到这两个对象来进行进一步操作，只是刚开始使用这两个对象来初始化app，一个是为了我们将session数据存到redis数据库，另一个是为了开启CSRF防护机制，所以直接放到create_app类即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用flask_session， 将session数据保存到redis中</span></span><br><span class="line">Session(app)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 为flask补充csrf防护</span></span><br><span class="line">CSRFProtect(app)</span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 创建蓝图，用于管理不同版本的视图，在ihome核心目录下创建一个api_1_0python包，代表1.0版本的蓝图，在这个蓝图下就可以创建各种各样的视图了，在api_1_0蓝图下创建一个demo.py文件，将启动文件manage中的视图函数放到里面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/index')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index page"</span></span><br></pre></td></tr></table></figure><ul><li><strong>step12</strong> 在api_1_0包下的init文件中创建蓝图</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102204919956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step13</strong> 在flask项目应用文件init中注册蓝图 ，首先在init文件中通过绝对路径导入api_1_0包，再通过app应用对象中的register_blueprint方法，注册api_1_0包中的api蓝图名字，并定义url前缀地址为/api/v1.0表示1.0版本</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注册蓝图</span></span><br><span class="line">app.register_blueprint(api_1_0.api, url_prefix=<span class="string">"/api/v1.0"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step14</strong> 在创建工程时，可能会用到数据库models文件，那么就需要使用迁移插件，从flask_script中引入脚本命令管理对象，再从flask_migrate中导入迁移执行者Migrate，迁移命令解析人员Migratecommand</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102212515288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt>/<fancybox></fancybox></fancybox></p><h1 id="三丶以开发环境进行项目测试"><a href="#三丶以开发环境进行项目测试" class="headerlink" title="三丶以开发环境进行项目测试"></a>三丶以开发环境进行项目测试</h1><ul><li><strong>step1</strong> 在Pycharm终端中，执行python manage.py runserver 默认端口，运行项目</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102233829315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 打开浏览器输入<a href="http://127.0.0.1:5000/api/v1.0/index" target="_blank" rel="noopener">http://127.0.0.1:5000/api/v1.0/index</a>，测试运行项目是否成功 </li></ul><p>在浏览器中成功渲染出index视图函数返回的字符串，如下图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010223410575.png" alt></fancybox></p><ul><li><strong>step3</strong> 回到Pycharm终端查看程序日志，请求方式和地址以及状态码都是完全正确，代表项目设计成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102234530165.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85623829" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85623829</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（一）</title>
      <link href="/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/Hellotaogang/cdn@4.6.2/images/flask_logo.png" width="900px" height="300px" align><br>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！</p><a id="more"></a><h1 id="一丶项目介绍"><a href="#一丶项目介绍" class="headerlink" title="一丶项目介绍"></a>一丶项目介绍</h1><ul><li><strong>产品</strong>：关于手机移动端的租房网站</li><li><strong>角色</strong>：在这个产品中用户包括房东与房客</li><li><strong>功能</strong>：房东可以在这个平台发布自己的房屋，房客可以在这个平台寻找自己想要租的房子(类似短租平台)</li><li><strong>设计模式</strong>：使用前后端分离进行项目开发(后端不再控制前端的效果展示)</li></ul><p><strong>前端效果展示</strong></p><p><img src="https://img-blog.csdnimg.cn/20190102143409760.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><h1 id="二丶前后端分离"><a href="#二丶前后端分离" class="headerlink" title="二丶前后端分离"></a>二丶前后端分离</h1><ul><li><p><strong>前后端分离的认识</strong></p></li><li><p><strong>叙述</strong>：用户直接在浏览器中输入网址，不再是后端对应的动态逻辑了，而是一个静态页面<br>从/index 变成了 index.html文本文件，对于静态资源就从提供静态资源服务器中去拿(nginx)<br>前端页面中对于数据这块的需求必定是从后端拿去数据，后端也不需要去渲染模板，直接将前端<br>需要的数据转换成json格式字符串返回给前端即可(通过jquery以及其他前端框架去将数据渲染到页面)<br>具体做成什么效果，跟后端没有什么关系，前端什么时候需要数据，后端就给数据，这就是前后端分离。</p></li><li><p><strong>优点</strong>：无论对于手机上的浏览器还是app程序向后端拿数据时，只要在后端已经定义好了接口，这个接口都是可以直接用的，体现出后端接口的复用性。</p></li><li><p><strong>流程</strong>：用户在浏览器中输入网址的时候，需要向后端(nginx)去要网页，在这个网页中没有任何的数据，只是普通的前端呈现的样式而已，在这个网页当中的js里面，通过ajax方式向后端接口要取数据，后端接口当中给前端返回的是json字符串，前端拿到这个字符串在到ajax回调函数中，通过jquery方式把数据填充到页面上。</p></li><li><p><strong>缺点</strong>：对于搜索引擎优化SEO不友好，无法将网页的数据通过搜索引擎搜索关键字查询此网页信息，爬虫拿取页面信息，并没有任何数据，导致在搜索引擎上排名无法靠前</p></li></ul><h1 id="三丶项目需求"><a href="#三丶项目需求" class="headerlink" title="三丶项目需求"></a>三丶项目需求</h1><p>需求功能</p><ol><li><p><strong>主页</strong><br> 1.1 最多5个房屋logo图片展示，点击可跳转至房屋详情页面<br> 1.2 提供登陆/注册入口，登陆后显示用户名，点击可跳转至个人中心<br> 1.3 用户可以选择城区、入住时间、离开时间等条件进行搜索<br> 1.4 城区的区域信息需动态加载</p></li><li><p><strong>注册</strong><br> 2.1 用户账号默认为手机号<br> 2.2 图片验证码正确后才能发送短信验证码<br> 2.3 短信验证码每60秒可发送一次<br> 2.4 每个条件出错时有相应错误提示</p></li><li><p><strong>登陆</strong><br> 3.1 用手机号与密码登陆<br> 3.2 错误时有相应提示</p></li><li><p><strong>房屋列表页</strong><br> 4.1 可根据入住离开时间、区域进行筛选，并可进行排序<br> 4.2 房屋信息分页加载<br> 4.3 区域信息动态加载<br> 4.4 筛选条件更新后，页面立即刷新</p></li><li><p><strong>房屋详情页</strong><br> 5.1 需展示的详细信息参考设计图<br> 5.2 提供预定入口<br> 5.3 若是房东本人查看房屋信息时，预定入口不显示</p></li><li><p><strong>房屋预定</strong><br> 6.1 由用户确定入住时间<br> 6.2 根据用户确定的入住离开时间实时显示合计天数与总金额</p></li><li><p><strong>我的爱家</strong><br> 7.1 显示个人头像、手机号、用户名（用户名未设置时为用户手机号）<br> 7.2 提供修改个人信息的入口<br> 7.3 提供作为房客下单的查询入口<br> 7.4 提供成为房东所需实名认证的入口<br> 7.5 提供作为房东发布房屋信息的入口<br> 7.6 提供作为房东查询客户订单的入口<br> 7.7 提供退出的入口</p></li><li><p><strong>个人信息修改</strong><br> 8.1 可以修改个人头像<br> 8.2 可以修改用户名<br> 8.3 登陆手机号不能修改<br> 8.4 上传头像与用户名分开保存<br> 8.5 上传新头像后页面理解显示新头像</p></li><li><p><strong>我的订单</strong>（房客）<br> 9.1 按时间倒序显示订单信息<br> 9.2 订单完成后提供评价功能<br> 9.3 已评价的订单能看到评价信息<br> 9.4 被拒绝的订单能看到拒单原因</p></li><li><p><strong>实名认证</strong><br>10.1 实名认证只可进行一次<br>10.2 提交认证信息后再次进入只能查看信息，不能修改<br>10.3 认证信息包含姓名与身份证号</p></li><li><p><strong>我的房源</strong><br>11.1 未实名认证的用户不能发布新房源信息，需引导到实名认证页面<br>11.2 按时间倒序显示已经发布的房屋信息<br>11.3 点击房屋可以进入详情页面<br>11.4 对实名认证的用户提供发布新房屋的入口</p></li><li><p><strong>发布新房源</strong><br>12.1 需要用户填写全部房屋信息<br>12.2 房屋的文字信息与图片分开操作</p></li><li><p><strong>客户订单</strong>（房东）<br>13.1 按时间倒序显示用户下的订单<br>13.2 对于新订单提供接单与拒单的功能<br>13.3 拒单必须填写拒单原因<br>13.4 若客户进行了订单评价，需显示</p></li><li><p><strong>退出</strong><br>14.1 提供退出功能</p></li></ol><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85613780" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85613780</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号开发之微信网页授权获取用户个人信息</title>
      <link href="/2019/11/03/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E5%BE%AE%E4%BF%A1%E7%BD%91%E9%A1%B5%E6%8E%88%E6%9D%83%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF/"/>
      <url>/2019/11/03/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E5%BE%AE%E4%BF%A1%E7%BD%91%E9%A1%B5%E6%8E%88%E6%9D%83%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶概述"><a href="#一丶概述" class="headerlink" title="一丶概述"></a>一丶概述</h1><ul><li><strong>微信网页授权</strong></li></ul><p>如果用户在微信客户端中访问第三方网页，公众号可以通过微信网页授权机制，来获取用户基本信息，进而实现业务逻辑。</p><p>现在，我们要实现一个微信内网页，通过微信访问网页时，网页会展示微信用户的个人信息。因为涉及到用户的个人信息，所以需要有用户授权才可以。当用户授权后，我们的网页服务器（开发者服务器）会拿到用户的“授权书”（code）,我们用这个code向微信服务器领取访问令牌（accecc_token）和用户的身份号码（openid)，然后凭借access_token和openid向微信服务器提取用户的个人信息。</p><ol><li>第一步：用户同意授权，获取code</li><li>第二步：通过code换取网页授权access_token</li><li>第三步：拉取用户信息(需scope为 snsapi_userinfo)</li></ol><p>那么，如何拿到用户的授权code呢？</p><p>授权是由微信发起让用户进行确认，在这个过程中是微信在与用户进行交互，所以用户应该先访问微信的内容，用户确认后再由微信将用户导向到我们的网页链接地址，并携带上code参数。我们把这个过程叫做网页回调，类似于我们在程序编写时用到的回调函数，都是回调的思想。</p><ul><li><strong>关于网页授权回调域名的说明</strong></li></ul><p>1、在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网中的“开发 - 接口权限 - 网页服务 - 网页帐号 - 网页授权获取用户基本信息”的配置选项中，修改授权回调域名。请注意，这里填写的是域名（是一个字符串），而不是URL，因此请勿加 http:// 等协议头；关于网页授权回调域名的说明</p><p>2、授权回调域名配置规范为全域名，比如需要网页授权的域名为：<a href="http://www.qq.com，配置以后此域名下面的页面http://[www.qq.com/music.html](www.qq.com/music.html)" target="_blank" rel="noopener">www.qq.com，配置以后此域名下面的页面http://[www.qq.com/music.html](www.qq.com/music.html)</a> 、 <a href="http://www.qq.com/login.html" target="_blank" rel="noopener">http://www.qq.com/login.html</a> 都可以进行OAuth2.0鉴权。但<a href="http://pay.qq.com" target="_blank" rel="noopener">http://pay.qq.com</a> 、 <a href="http://music.qq.com" target="_blank" rel="noopener">http://music.qq.com</a> 、 <a href="http://qq.com" target="_blank" rel="noopener">http://qq.com</a>无法进行OAuth2.0鉴权</p><p>3、如果公众号登录授权给了第三方开发者来进行管理，则不必做任何设置，由第三方代替公众号实现网页授权即可。</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229104150347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229104333145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h2 id="第一步：用户同意授权，获取code"><a href="#第一步：用户同意授权，获取code" class="headerlink" title="第一步：用户同意授权，获取code"></a>第一步：用户同意授权，获取code</h2><p>在确保微信公众账号拥有授权作用域（scope参数）的权限的前提下（服务号获得高级接口后，默认拥有scope参数中的snsapi_base和snsapi_userinfo），引导关注者打开如下页面：</p><p><a href="https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&redirect_uri=REDIRECT_URI&response_type=code&scope=SCOPE&state=STATE#wechat_redirect" target="_blank" rel="noopener">https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</a></p><p><strong><font color="#FF0000">尤其注意：</font>由于授权操作安全等级较高，所以在发起授权请求时，微信会对授权链接做正则强匹配校验，如果链接的参数顺序不对，授权页面将无法正常访问</strong></p><p>参考链接(请在微信客户端中打开此链接体验):<br><strong>scope为snsapi_base</strong><br><a href="https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx520c15f417810387&amp;redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60&amp;response_type=code&amp;scope=snsapi_base&amp;state=123#wechat_redirect" target="_blank" rel="noopener">https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx520c15f417810387&amp;redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60&amp;response_type=code&amp;scope=snsapi_base&amp;state=123#wechat_redirect</a><br><strong>scope为snsapi_userinfo</strong><br><a href="https://open.weixin.qq.com/connect/oauth2/authorize?appid=wxf0e81c3bee622d60&amp;redirect_uri=http%3A%2F%2Fnba.bluewebgame.com%2Foauth_response.php&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirec" target="_blank" rel="noopener">https://open.weixin.qq.com/connect/oauth2/authorize?appid=wxf0e81c3bee622d60&amp;redirect_uri=http%3A%2F%2Fnba.bluewebgame.com%2Foauth_response.php&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirec</a></p><p><strong><font color="#FF0000">尤其注意：</font>跳转回调redirect_uri，应当使用https链接来确保授权code的安全性。</strong></p><p>参数说明</p><table><thead><tr><th align="center">参数</th><th align="center">是否必须</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">appid</td><td align="center">是</td><td align="center">公众号的唯一标识</td></tr><tr><td align="center">redirect_uri</td><td align="center">是</td><td align="center">授权后重定向的回调链接地址， 请使用 urlEncode 对链接进行处理</td></tr><tr><td align="center">response_type</td><td align="center">是</td><td align="center">返回类型，请填写code</td></tr><tr><td align="center">scope</td><td align="center">是</td><td align="center">应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ）</td></tr><tr><td align="center">state</td><td align="center">否</td><td align="center">重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节</td></tr><tr><td align="center">#wechat_redirect</td><td align="center">是</td><td align="center">无论直接打开还是做页面302重定向时候，必须带此参数</td></tr></tbody></table><p>下图为scope等于snsapi_userinfo时的授权页面：</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229105505298.jpg" alt></fancybox></p><p><strong>用户同意授权后</strong></p><p>如果用户同意授权，页面将跳转至 redirect_uri/?code=CODE&amp;state=STATE。</p><p><strong>code说明：</strong> code作为换取access_token的票据，每次用户授权带上的code将不一样，code只能使用一次，5分钟未被使用自动过期。 </p><h2 id="第二步：通过code换取网页授权access-token"><a href="#第二步：通过code换取网页授权access-token" class="headerlink" title="第二步：通过code换取网页授权access_token"></a>第二步：通过code换取网页授权access_token</h2><p>首先请注意，这里通过code换取的是一个特殊的网页授权access_token,与基础支持中的access_token（该access_token用于调用其他接口）不同。公众号可通过下述接口来获取网页授权access_token。如果网页授权的作用域为snsapi_base，则本步骤中获取到网页授权access_token的同时，也获取到了openid，snsapi_base式的网页授权流程即到此为止。</p><p>尤其注意：由于公众号的secret和获取到的access_token安全级别都非常高，必须只保存在服务器，不允许传给客户端。后续刷新access_token、通过access_token获取用户信息等步骤，也必须从服务器发起。</p><p>请求方法</p><p>获取code后，请求以下链接获取access_token：  <a href="https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&secret=SECRET&code=CODE&grant_type=authorization_code" target="_blank" rel="noopener">https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code</a></p><p>参数说明</p><table><thead><tr><th align="center">参数</th><th align="center">是否必须</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">appid</td><td align="center">是</td><td align="center">公众号的唯一标识</td></tr><tr><td align="center">secret</td><td align="center">是</td><td align="center">公众号的appsecret</td></tr><tr><td align="center">code</td><td align="center">是</td><td align="center">填写第一步获取的code参数</td></tr><tr><td align="center">grant_type</td><td align="center">是</td><td align="center">填写为authorization_code</td></tr></tbody></table><p>返回说明</p><p>正确时返回的JSON数据包如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">"access_token"</span>:<span class="string">"ACCESS_TOKEN"</span>,</span><br><span class="line"><span class="attr">"expires_in"</span>:<span class="number">7200</span>,</span><br><span class="line"><span class="attr">"refresh_token"</span>:<span class="string">"REFRESH_TOKEN"</span>,</span><br><span class="line"><span class="attr">"openid"</span>:<span class="string">"OPENID"</span>,</span><br><span class="line"><span class="attr">"scope"</span>:<span class="string">"SCOPE"</span> &#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">access_token</td><td align="center">网页授权接口调用凭证,注意：此access_token与基础支持的access_token不同</td></tr><tr><td align="center">expires_in</td><td align="center">access_token接口调用凭证超时时间，单位（秒）</td></tr><tr><td align="center">refresh_token</td><td align="center">用户刷新access_token</td></tr><tr><td align="center">openid</td><td align="center">用户唯一标识，请注意，在未关注公众号时，用户访问公众号的网页，也会产生一个用户和公众号唯一的OpenID</td></tr><tr><td align="center">scope</td><td align="center">用户授权的作用域，使用逗号（,）分隔</td></tr></tbody></table><p>错误时微信会返回JSON数据包如下（示例为Code无效错误）:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"errcode"</span>:<span class="number">40029</span>,<span class="attr">"errmsg"</span>:<span class="string">"invalid code"</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="第三步：拉取用户信息-需scope为-snsapi-userinfo"><a href="#第三步：拉取用户信息-需scope为-snsapi-userinfo" class="headerlink" title="第三步：拉取用户信息(需scope为 snsapi_userinfo)"></a>第三步：拉取用户信息(需scope为 snsapi_userinfo)</h2><p>如果网页授权作用域为snsapi_userinfo，则此时开发者可以通过access_token和openid拉取用户信息了。</p><p>请求方法</p><p>http：GET（请使用https协议） <a href="https://api.weixin.qq.com/sns/userinfo?access_token=ACCESS_TOKEN&openid=OPENID&lang=zh_CN" target="_blank" rel="noopener">https://api.weixin.qq.com/sns/userinfo?access_token=ACCESS_TOKEN&amp;openid=OPENID&amp;lang=zh_CN</a></p><p>参数说明</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">access_token</td><td align="center">网页授权接口调用凭证,注意：此access_token与基础支持的access_token不同</td></tr><tr><td align="center">openid</td><td align="center">用户的唯一标识</td></tr><tr><td align="center">lang</td><td align="center">返回国家地区语言版本，zh_CN 简体，zh_TW 繁体，en 英语</td></tr></tbody></table><p>返回说明</p><p>正确时返回的JSON数据包如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;    <span class="attr">"openid"</span>:<span class="string">" OPENID"</span>,</span><br><span class="line"><span class="attr">" nickname"</span>: NICKNAME,</span><br><span class="line"><span class="attr">"sex"</span>:<span class="string">"1"</span>,</span><br><span class="line"><span class="attr">"province"</span>:<span class="string">"PROVINCE"</span></span><br><span class="line"><span class="string">"city"</span>:<span class="string">"CITY"</span>,</span><br><span class="line"><span class="attr">"country"</span>:<span class="string">"COUNTRY"</span>,</span><br><span class="line"><span class="attr">"headimgurl"</span>:    <span class="string">"http://thirdwx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ4eMsv84eavHiaiceqxibJxCfHe/46"</span>,</span><br><span class="line"><span class="attr">"privilege"</span>:[ <span class="string">"PRIVILEGE1"</span> <span class="string">"PRIVILEGE2"</span>     ],</span><br><span class="line"><span class="attr">"unionid"</span>: <span class="string">"o6_bmasdasdsad6_2sgVt7hMZOPfL"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">openid</td><td align="center">用户的唯一标识</td></tr><tr><td align="center">nickname</td><td align="center">用户昵称</td></tr><tr><td align="center">sex</td><td align="center">用户的性别，值为1时是男性，值为2时是女性，值为0时是未知</td></tr><tr><td align="center">province</td><td align="center">用户个人资料填写的省份</td></tr><tr><td align="center">city</td><td align="center">普通用户个人资料填写的城市</td></tr><tr><td align="center">country</td><td align="center">国家，如中国为CN</td></tr><tr><td align="center">headimgurl</td><td align="center">用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空。若用户更换头像，原有头像URL将失效。</td></tr><tr><td align="center">privilege</td><td align="center">用户特权信息，json 数组，如微信沃卡用户为（chinaunicom）</td></tr><tr><td align="center">unionid</td><td align="center">只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段。</td></tr></tbody></table><p>错误时微信会返回JSON数据包如下（示例为openid无效）:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"errcode"</span>:<span class="number">40003</span>,<span class="attr">"errmsg"</span>:<span class="string">" invalid openid "</span>&#125;</span><br></pre></td></tr></table></figure><h1 id="二丶代码实现"><a href="#二丶代码实现" class="headerlink" title="二丶代码实现"></a>二丶代码实现</h1><ul><li>思路分析</li><li>首选在我们的flask程序中需要定义一个视图函数路由规则为/wechat8007/index，定义微信服务器重定向网址redirect_uri为服务器域名+/wechat8007/index（例如<a href="http://www.xxxx.com/wechat8007/index" target="_blank" rel="noopener">http://www.xxxx.com/wechat8007/index</a>），通过访问微信提供的引导页面，让用户同意授权，然后重定向到我们定义的网址，此时微信服务器就会给我们的服务一个code，我们的服务器再通过code向微信服务器换取网页授权access_token(存取令牌)，如果网页授权作用域为snsapi_userinfo，则此时可以通过access_token和openid拉取用户信息了。</li></ul><ul><li><strong>step1 同意授权，这一块不需要代码实现，只需要提供授权链接即可</strong></li><li><strong>step2 定义视图函数，当用户同意授权，页面将跳转至 redirect_uri/?code=CODE&amp;state=STATE ，在flask程序中定义一个是视图函数接口index，让用户同意授权后，去访问的视图</strong></li></ul><ul><li>上一篇博客定义的wechat视图，是由微信服务器访问，现在定义的index视图为用户访问的</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route("/wechat8007/index")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""让用户通过微信访问的网页页面视图"""</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3  刚开始还没拉去用户资料时，可直接返回一个模板</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> render_template(<span class="string">"index.html"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4 从微信服务器中获取用户的资料数据，将用户的资料数据填充到index.html模板中</strong></li><li>1.获取code参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code = request.args.get(<span class="string">"code"</span>)</span><br></pre></td></tr></table></figure><ul><li>2.当code不存在时，返回字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> code:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">u"缺失code参数"</span></span><br></pre></td></tr></table></figure><ul><li>3.向微信服务器发送http请求，获取access_token，在获取之前要在代码定义全局变量WECHAT_APPID以及WECHAT_APPSECRET的值，用来填充<a href="https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&secret=SECRET&code=CODE&grant_type=authorization_code" target="_blank" rel="noopener">https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code</a> 微信提供获取access_token链接地址中的APPID以及SECRET和CODE的值，再通过python中的urllib2库向这个url发送请求，read方法读取文本内容获取json格式的字符串，然后使用json当中的loads方法将json格式的字符串转换为字典</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://api.weixin.qq.com/sns/oauth2/access_token?appid=%s&amp;secret=%s&amp;code=%s&amp;grant_type=authorization_code"</span> %(WECHAT_APPID,WECHAT_APPSECRET,code)</span><br><span class="line"> </span><br><span class="line">response = urllib2.urlopen(url)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 获取响应体数据,微信返回的json数据</span></span><br><span class="line">json_str = response.read()</span><br><span class="line">resp_dict = json.loads(json_str)</span><br></pre></td></tr></table></figure><ul><li>4.提取access_token，首先对获取到的响应体数据进行判断，如果不存在，直接返回提示字符串，存在则通过get方式拿去字典中的access_token键的值以及用户编号openid的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">"errcode"</span> <span class="keyword">in</span> resp_dict:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">u"获取access_token失败"</span></span><br><span class="line"> </span><br><span class="line">access_token = resp_dict.get(<span class="string">"access_token"</span>)</span><br><span class="line">open_id = resp_dict.get(<span class="string">"openid"</span>)  <span class="comment"># 用户的编号</span></span><br></pre></td></tr></table></figure><ul><li><strong>step5 向微信服务器发送http请求，获取用户的资料数据</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://api.weixin.qq.com/sns/userinfo?access_token=%s&amp;openid=%s&amp;lang=zh_CN"</span> %(access_token,open_id)</span><br><span class="line"> </span><br><span class="line">response = urllib2.urlopen(url)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 读取微信传回的json的响应体数据</span></span><br><span class="line">user_json_str = response.read()</span><br><span class="line">user_dict_data = json.loads(user_json_str)</span><br></pre></td></tr></table></figure><ul><li><strong>step6 判断微信返回的响应体数据中是否有errorcode字段，如果存在则返回失败信息，不存在说明微信返回的json数据为正确数据，则将该数据传给index.html模板，当用户访问<a href="http://xxx/wechat8007/index" target="_blank" rel="noopener">http://xxx/wechat8007/index</a>地址时，会渲染出我们定义的index.html模板</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">"errcode"</span> <span class="keyword">in</span> user_dict_data:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">u"获取用户信息失败"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 将用户的资料数据填充到页面中</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>, user=user_dict_data)</span><br></pre></td></tr></table></figure><ul><li><strong>step7 当前目录下创建templates模板目录，在该目录中创建index.html文件 ，代码如下</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;&#123;&#123;user["nickname"]&#125;&#125;的个人主页&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;img alt=<span class="string">"头像"</span> src=<span class="string">"&#123;&#123;user['headimgurl']&#125;&#125;"</span> width=<span class="string">"60"</span>&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;openid&lt;/th&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;user["openid"]&#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;昵称&lt;/th&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;user["nickname"]&#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &#123;% <span class="keyword">if</span> <span class="number">1</span> == user[<span class="string">"sex"</span>] %&#125;</span><br><span class="line">                    男</span><br><span class="line">                &#123;% <span class="keyword">elif</span> <span class="number">2</span> == user[<span class="string">"sex"</span>] %&#125;</span><br><span class="line">                    女</span><br><span class="line">                &#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">                    未知</span><br><span class="line">                &#123;% endif %&#125;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;省份&lt;/th&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;user["province"]&#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;城市&lt;/th&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;user["city"]&#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;国家&lt;/th&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;user["country"]&#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="三丶部署测试"><a href="#三丶部署测试" class="headerlink" title="三丶部署测试"></a>三丶部署测试</h1><ul><li><strong>step1 将代码推送到服务器上</strong></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229140003514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>成功推送到服务器上</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229140215248.png" alt></fancybox></p><ul><li><strong>step2 在服务器上进入虚拟环境，运行此程序</strong></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/201812291420440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3 拼接微信提供网址</strong> <a href="https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&redirect_uri=REDIRECT_URI&response_type=code&scope=SCOPE&state=STATE#wechat_redirect" target="_blank" rel="noopener">https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</a></li><li>注：正式公众号redirect_uri地址必须为服务器的域名地址，不能是IP地址</li><li>在拼接redirect_uri时，服务器的域名为<a href="http://www.xxx.com/wechat8007/index" target="_blank" rel="noopener">http://www.xxx.com/wechat8007/index</a>，微信提供的授权地址http://中不可能包含一个<a href="redirect_uri为http://www.xxx.com/wechat8007/index">redirect_uri为http://www.xxx.com/wechat8007/index</a>用户同意授权后跳转的地址，所以需要对重定向地址<a href="http://www.xxx.com/wechat8007/index" target="_blank" rel="noopener">http://www.xxx.com/wechat8007/index</a> 进行转义</li><li>使用python urllib库中的quote方法进行转义</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> urllib</span><br><span class="line"> </span><br><span class="line">In [<span class="number">2</span>]: urllib.quote(<span class="string">"http://www.xxx.com/wechat8007/index"</span>)</span><br><span class="line">Out[<span class="number">2</span>]: <span class="string">'http%3A//www.xxx.com/wechat8007/index'</span></span><br></pre></td></tr></table></figure><p>拼接好的用户访问的url地址为</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229150305130.png" alt></fancybox></p><ul><li><strong>step4 可以将该网址生成二维码，使用微信扫一扫，也可以在接口公众号直接发送此链接地址</strong></li><li>使用谷歌浏览器的二维码插件，将网址生成对应的二维码(这里以百度首页网址为例)</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229150724658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>直接在浏览器中输入此地址会提示请在微信客户端打开链接</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229151458376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5 测试，在手机微信上打开此链接，出现授权登录提示，点击允许即可获取用户个人信息</strong></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229152114726.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p>点击允许后，进入如下界面</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229153415707.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p>点击继续访问，则出现博主个人的微信信息了，如下图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229153709772.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p>此时查看服务器上程序运行日志 </p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229154311666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶完整代码"><a href="#四丶完整代码" class="headerlink" title="四丶完整代码"></a>四丶完整代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template</span><br><span class="line"><span class="keyword">import</span> json, urllib2</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">WECHAT_APPID = <span class="string">"yourappid"</span></span><br><span class="line">WECHAT_APPSECRET = <span class="string">"yoursecret"</span></span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route("/wechat8007/index")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line"> </span><br><span class="line">    code = request.args.get(<span class="string">"code"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> code:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">u"缺失code参数"</span></span><br><span class="line"> </span><br><span class="line">    url = <span class="string">"https://api.weixin.qq.com/sns/oauth2/access_token?appid=%s&amp;secret=%s&amp;code=%s&amp;grant_type=authorization_code"</span> % (WECHAT_APPID, WECHAT_APPSECRET, code)</span><br><span class="line"> </span><br><span class="line">    response = urllib2.urlopen(url)</span><br><span class="line"> </span><br><span class="line">    json_str = response.read()</span><br><span class="line">    resp_dict = json.loads(json_str)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="string">"errcode"</span> <span class="keyword">in</span> resp_dict:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">u"获取access_token失败"</span></span><br><span class="line"> </span><br><span class="line">    access_token = resp_dict.get(<span class="string">"access_token"</span>)</span><br><span class="line">    open_id = resp_dict.get(<span class="string">"openid"</span>)</span><br><span class="line"> </span><br><span class="line">    url = <span class="string">"https://api.weixin.qq.com/sns/userinfo?access_token=%s&amp;openid=%s&amp;lang=zh_CN"</span> % (access_token, open_id)</span><br><span class="line"> </span><br><span class="line">    response = urllib2.urlopen(url)</span><br><span class="line">    user_json_str = response.read()</span><br><span class="line">    user_dict_data = json.loads(user_json_str)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="string">"errcode"</span> <span class="keyword">in</span> user_dict_data:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">u"获取用户信息失败"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>, user=user_dict_data)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(port=<span class="number">8007</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><strong>总结：微信公众号接口开发，根据官方提供的开发文档，进行开发，逻辑实现都很简单，多想多思考多练习，你会越来越棒的！</strong></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85334634" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85334634</a></p>]]></content>
      
      
      <categories>
          
          <category> WeChat开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> 微信公众号 </tag>
            
            <tag> 微信开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号开发之接收与发送消息</title>
      <link href="/2019/11/03/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E6%8E%A5%E6%94%B6%E4%B8%8E%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF/"/>
      <url>/2019/11/03/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E6%8E%A5%E6%94%B6%E4%B8%8E%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶概论"><a href="#一丶概论" class="headerlink" title="一丶概论"></a>一丶概论</h1><ul><li><strong>公众号接收与发送消息</strong></li></ul><p>验证URL有效性成功后即接入生效，成为开发者。如果公众号类型为服务号（订阅号只能使用普通消息接口），可以在公众平台网站中申请认证，认证成功的服务号将获得众多接口权限，以满足开发者需求。</p><p>此后用户每次向公众号发送消息、或者产生自定义菜单点击事件时，开发者填写的服务器配置URL将得到微信服务器推送过来的消息和事件，然后开发者可以依据自身业务逻辑进行响应，例如回复消息等。</p><p><strong>用户向公众号发送消息时，公众号方收到的消息发送者是一个OpenID，是使用用户微信号加密后的结果，每个用户对每个公众号有一个唯一的OpenID。</strong></p><h2 id="1-接收普通消息"><a href="#1-接收普通消息" class="headerlink" title="1.接收普通消息"></a>1.接收普通消息</h2><p><strong>当普通微信用户向公众账号发消息时，微信服务器将POST消息的XML数据包到开发者填写的URL上。</strong></p><p>微信服务器在五秒内收不到响应会断掉连接，并且重新发起请求，总共重试三次。假如服务器无法保证在五秒内处理并回复，可以直接回复空串，微信服务器不会对此作任何处理，并且不会发起重试。</p><p>各消息类型的推送使用XML数据包结构，如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ToUserName</span>&gt;</span>&lt;![CDATA[gh_866835093fea]]&gt;<span class="tag">&lt;/<span class="name">ToUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FromUserName</span>&gt;</span>&lt;![CDATA[ogdotwSc_MmEEsJs9-ABZ1QL_4r4]]&gt;<span class="tag">&lt;/<span class="name">FromUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">CreateTime</span>&gt;</span>1478317060<span class="tag">&lt;/<span class="name">CreateTime</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgType</span>&gt;</span>&lt;![CDATA[text]]&gt;<span class="tag">&lt;/<span class="name">MsgType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Content</span>&gt;</span>&lt;![CDATA[你好]]&gt;<span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgId</span>&gt;</span>6349323426230210995<span class="tag">&lt;/<span class="name">MsgId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong>&lt;![CDATA 与 ]]&gt; 括起来的数据不会被xml解析器解析 </p><h2 id="2-普通消息类别"><a href="#2-普通消息类别" class="headerlink" title="2.普通消息类别"></a>2.普通消息类别</h2><ol><li>文本消息</li><li>图片消息</li><li>语音消息</li><li>视频消息</li><li>小视频消息</li><li>地理位置消息</li><li>链接消息</li></ol><p><strong>文本消息</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ToUserName</span>&gt;</span>&lt;![CDATA[toUser]]&gt;<span class="tag">&lt;/<span class="name">ToUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FromUserName</span>&gt;</span>&lt;![CDATA[fromUser]]&gt;<span class="tag">&lt;/<span class="name">FromUserName</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">CreateTime</span>&gt;</span>1348831860<span class="tag">&lt;/<span class="name">CreateTime</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgType</span>&gt;</span>&lt;![CDATA[text]]&gt;<span class="tag">&lt;/<span class="name">MsgType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Content</span>&gt;</span>&lt;![CDATA[this is a test]]&gt;<span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgId</span>&gt;</span>1234567890123456<span class="tag">&lt;/<span class="name">MsgId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181228192104582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><h2 id="3-回复的消息类型"><a href="#3-回复的消息类型" class="headerlink" title="3. 回复的消息类型"></a>3. 回复的消息类型</h2><ol><li>文本消息</li><li>图片消息</li><li>语音消息</li><li>视频消息</li><li>音乐消息</li><li>图文消息</li></ol><p><strong>回复文本消息</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ToUserName</span>&gt;</span>&lt;![CDATA[toUser]]&gt;<span class="tag">&lt;/<span class="name">ToUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FromUserName</span>&gt;</span>&lt;![CDATA[fromUser]]&gt;<span class="tag">&lt;/<span class="name">FromUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">CreateTime</span>&gt;</span>12345678<span class="tag">&lt;/<span class="name">CreateTime</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgType</span>&gt;</span>&lt;![CDATA[text]]&gt;<span class="tag">&lt;/<span class="name">MsgType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Content</span>&gt;</span>&lt;![CDATA[你好]]&gt;<span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注：</strong>开发文档可以到 <a href="https://mp.weixin.qq.com/wiki/home/index.html" target="_blank" rel="noopener">https://mp.weixin.qq.com/wiki/home/index.html</a>  进行阅读查看</p><h1 id="二丶代码实现"><a href="#二丶代码实现" class="headerlink" title="二丶代码实现"></a>二丶代码实现</h1><p>需求：我们现在来实现一个针对文本消息的收发程序。实现的业务逻辑，关注者发什么内容，我们就传回给什么内容。</p><p>说明：微信服务器推送消息还是往/wechat/8007，所以在之前代码上进行修改即可</p><h2 id="1-开发步骤"><a href="#1-开发步骤" class="headerlink" title="1.开发步骤"></a>1.开发步骤</h2><ul><li>step1 如何区分微信服务器发过来的是第一次的验证操作还是消息操作</li><li>验证操作为GET请求，消息操作为POST请求</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route("/wechat8007", methods=["GET", "POST"])</span></span><br></pre></td></tr></table></figure><ul><li>step2 参数变更，echostr参数只是在第一次验证的时候需要，无论是POST请求还是GET请求这三种参数都必要要，因为需要验证是不是微信服务器发送过来的数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">signature = request.args.get(<span class="string">"signature"</span>)</span><br><span class="line">timestamp = request.args.get(<span class="string">"timestamp"</span>)</span><br><span class="line">nonce = request.args.get(<span class="string">"nonce"</span>)</span><br></pre></td></tr></table></figure><ul><li>step3 对微信服务器发送的请求进行验证判断，如果是GET请求，那么代表是第一次的验证操作，那么就需要获取echostr字段的内容，如果内容为空则抛出404，存在则返回echostr</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> request.method == <span class="string">"GET"</span>:</span><br><span class="line">    <span class="comment"># 表示是第一次接入微信服务器的验证</span></span><br><span class="line">    echostr = request.args.get(<span class="string">"echostr"</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> echostr:</span><br><span class="line">        abort(<span class="number">404</span>)</span><br><span class="line">    <span class="keyword">return</span> echostr</span><br></pre></td></tr></table></figure><ul><li>step4 如果为POST请求，那么代表为微信服务器转发消息过来，获取请求中的data xml数据 ，数据为空抛出400</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> request.method == <span class="string">"POST"</span>:</span><br><span class="line">    <span class="comment"># 表示微信服务器转发消息过来</span></span><br><span class="line">    xml_str = request.data</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> xml_str:</span><br><span class="line">        abort(<span class="number">400</span>)</span><br></pre></td></tr></table></figure><ul><li>step5 将对获取的数据进行解析，通过xmltodict模块中的parse方法将字符串类型的xml数据，转换成字典类型的xml格式数据，因为xml数据最外层有一个<xml></xml>标签，通过get方式获取标签里的内容，再通过get获取内容中的MsgType消息类型字段的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对xml字符串进行解析</span></span><br><span class="line">xml_dict = xmltodict.parse(xml_str)</span><br><span class="line">xml_dict = xml_dict.get(<span class="string">"xml"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提取消息类型</span></span><br><span class="line">msg_type = xml_dict.get(<span class="string">"MsgType"</span>)</span><br></pre></td></tr></table></figure><ul><li>step6 对消息类型进行判断，如果为text文本消息，则返回文本消息，不是文本消息还是返回文本消息，这里可以拓展为(image，voice，video等等可以查看开发文档)，这里为了演示，就简单写写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span> msg_type == <span class="string">"text"</span>:</span><br><span class="line">    <span class="comment"># 表示发送的是文本消息</span></span><br><span class="line">    <span class="comment"># 构造返回值，经由微信服务器回复给用户的消息内容</span></span><br><span class="line">    resp_dict = &#123;</span><br><span class="line">        <span class="string">"xml"</span>: &#123;</span><br><span class="line">            <span class="string">"ToUserName"</span>: xml_dict.get(<span class="string">"FromUserName"</span>),</span><br><span class="line">            <span class="string">"FromUserName"</span>: xml_dict.get(<span class="string">"ToUserName"</span>),</span><br><span class="line">            <span class="string">"CreateTime"</span>: int(time.time()),</span><br><span class="line">            <span class="string">"MsgType"</span>: <span class="string">"text"</span>,</span><br><span class="line">            <span class="string">"Content"</span>: <span class="string">"taogang say:"</span> + xml_dict.get(<span class="string">"Content"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    resp_dict = &#123;</span><br><span class="line">        <span class="string">"xml"</span>: &#123;</span><br><span class="line">            <span class="string">"ToUserName"</span>: xml_dict.get(<span class="string">"FromUserName"</span>),</span><br><span class="line">            <span class="string">"FromUserName"</span>: xml_dict.get(<span class="string">"ToUserName"</span>),</span><br><span class="line">            <span class="string">"CreateTime"</span>: int(time.time()),</span><br><span class="line">            <span class="string">"MsgType"</span>: <span class="string">"text"</span>,</span><br><span class="line">            <span class="string">"Content"</span>: <span class="string">"Dear I Love you so much"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>step7 最后将我们构造的响应返回值通过unparse方法转换成xml格式的字符串，返回给微信服务器</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将字典转换为xml字符串</span></span><br><span class="line">resp_xml_str = xmltodict.unparse(resp_dict)</span><br><span class="line"><span class="comment"># 返回消息数据给微信服务器</span></span><br><span class="line"><span class="keyword">return</span> resp_xml_str</span><br></pre></td></tr></table></figure><h2 id="2-部署测试"><a href="#2-部署测试" class="headerlink" title="2.部署测试"></a>2.部署测试</h2><ul><li>step1 将代码推送到服务器上</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228212836627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>step2 在服务器上进入虚拟环境，运行此程序</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228213121693.png" alt></fancybox></p><ul><li>step3 进入微信公众平台，用手机扫描测试号二维码，进行关注测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228213429788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br>扫码后进行关注</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228213746467.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p>关注后进入此公众号，公众号则发送我们在<strong>开发步骤step 6</strong>，Dear I Love you so much 消息内容</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228214352664.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p>回到服务器程序运行日志上，显示为POST请求，说明程序逻辑完全没问题</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228214604559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>公众号测试平台用户列表将我的微信添加上去了</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228214900349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>step4 测试，在关注的此公众中，进行消息(文本，表情，语言，图片，视频）发送，当消息类型为文本时，即返回此消息内容，如果不是都是返回文本类型，内容为Dear I Love you so much</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228215333589.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228215638812.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p>此时的服务器代码运行日志</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228220035159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h2 id="3-完整代码"><a href="#3-完整代码" class="headerlink" title="3.完整代码"></a>3.完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, abort, render_template</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> xmltodict, time</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 常量</span></span><br><span class="line"><span class="comment"># 微信的token令牌</span></span><br><span class="line">WECHAT_TOKEN = <span class="string">"cdtaogang"</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route("/wechat8007", methods=["GET", "POST"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wechat</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""对接微信公众号服务器"""</span></span><br><span class="line">    <span class="comment"># 接收微信服务器发送的参数</span></span><br><span class="line">    signature = request.args.get(<span class="string">"signature"</span>)</span><br><span class="line">    timestamp = request.args.get(<span class="string">"timestamp"</span>)</span><br><span class="line">    nonce = request.args.get(<span class="string">"nonce"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> all([signature, timestamp, nonce]):</span><br><span class="line">        abort(<span class="number">400</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 按照微信的流程进行计算签名</span></span><br><span class="line">    li = [WECHAT_TOKEN, timestamp, nonce]</span><br><span class="line">    <span class="comment"># 排序</span></span><br><span class="line">    li.sort()</span><br><span class="line">    <span class="comment"># 拼接字符串</span></span><br><span class="line">    tmp_str = <span class="string">''</span>.join(li)</span><br><span class="line">    <span class="comment"># 进行sha1加密, 得到正确的签名值</span></span><br><span class="line">    sign = hashlib.sha1(tmp_str).hexdigest()</span><br><span class="line">    <span class="comment"># 将自己计算的签名值与请求的签名参数进行对比，如果相同，则证明请求来自微信服务器</span></span><br><span class="line">    <span class="keyword">if</span> sign != signature:</span><br><span class="line">        <span class="comment"># 表示请求不是微信发的</span></span><br><span class="line">        abort(<span class="number">403</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 表示是微信发送的请求</span></span><br><span class="line">        <span class="keyword">if</span> request.method == <span class="string">"GET"</span>:</span><br><span class="line">            <span class="comment"># 表示是第一次接入微信服务器的验证</span></span><br><span class="line">            echostr = request.args.get(<span class="string">"echostr"</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> echostr:</span><br><span class="line">                abort(<span class="number">404</span>)</span><br><span class="line">            <span class="keyword">return</span> echostr</span><br><span class="line">        <span class="keyword">elif</span> request.method == <span class="string">"POST"</span>:</span><br><span class="line">            <span class="comment"># 表示微信服务器转发消息过来</span></span><br><span class="line">            xml_str = request.data</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> xml_str:</span><br><span class="line">                abort(<span class="number">400</span>)</span><br><span class="line"> </span><br><span class="line">            <span class="comment"># 对xml字符串进行解析</span></span><br><span class="line">            xml_dict = xmltodict.parse(xml_str)</span><br><span class="line">            xml_dict = xml_dict.get(<span class="string">"xml"</span>)</span><br><span class="line"> </span><br><span class="line">            <span class="comment"># 提取消息类型</span></span><br><span class="line">            msg_type = xml_dict.get(<span class="string">"MsgType"</span>)</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> msg_type == <span class="string">"text"</span>:</span><br><span class="line">                <span class="comment"># 表示发送的是文本消息</span></span><br><span class="line">                <span class="comment"># 构造返回值，经由微信服务器回复给用户的消息内容</span></span><br><span class="line">                resp_dict = &#123;</span><br><span class="line">                    <span class="string">"xml"</span>: &#123;</span><br><span class="line">                        <span class="string">"ToUserName"</span>: xml_dict.get(<span class="string">"FromUserName"</span>),</span><br><span class="line">                        <span class="string">"FromUserName"</span>: xml_dict.get(<span class="string">"ToUserName"</span>),</span><br><span class="line">                        <span class="string">"CreateTime"</span>: int(time.time()),</span><br><span class="line">                        <span class="string">"MsgType"</span>: <span class="string">"text"</span>,</span><br><span class="line">                        <span class="string">"Content"</span>: <span class="string">"taogang say:"</span> + xml_dict.get(<span class="string">"Content"</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                resp_dict = &#123;</span><br><span class="line">                    <span class="string">"xml"</span>: &#123;</span><br><span class="line">                        <span class="string">"ToUserName"</span>: xml_dict.get(<span class="string">"FromUserName"</span>),</span><br><span class="line">                        <span class="string">"FromUserName"</span>: xml_dict.get(<span class="string">"ToUserName"</span>),</span><br><span class="line">                        <span class="string">"CreateTime"</span>: int(time.time()),</span><br><span class="line">                        <span class="string">"MsgType"</span>: <span class="string">"text"</span>,</span><br><span class="line">                        <span class="string">"Content"</span>: <span class="string">"Dear I Love you so much"</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="comment"># 将字典转换为xml字符串</span></span><br><span class="line">            resp_xml_str = xmltodict.unparse(resp_dict)</span><br><span class="line">            <span class="comment"># 返回消息数据给微信服务器</span></span><br><span class="line">            <span class="keyword">return</span> resp_xml_str</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(port=<span class="number">8007</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85330265" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85330265</a></p>]]></content>
      
      
      <categories>
          
          <category> WeChat开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> 微信公众号 </tag>
            
            <tag> 微信开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号之接入微信公众号服务器开发（二）</title>
      <link href="/2019/10/31/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/10/31/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶叙述"><a href="#一丶叙述" class="headerlink" title="一丶叙述"></a>一丶叙述</h1><h2 id="开发说明"><a href="#开发说明" class="headerlink" title="开发说明"></a>开发说明</h2><ol><li>Python代码实现（以Flask框架为例）</li><li>将使用公众号消息会话</li><li>客户端—-＞微信服务器—-＞nginx服务器—-＞开发者服务器</li><li>在微信服务器与开发者服务器之间搭建了nginx服务器默认为80端口(也是微信支持的端口)，跟开发者服务器属于同一个主机</li><li>在nginx服务器上配置了多个端口，方便多人进行测试，转发规则：location/wechat8007</li><li>在微信公众号测试平台接口配置url为host/wechat8007时，当微信服务器发送消息给host/wechat8007时，host为nginx服务器时，就会按照/wechat8007转发规则匹配，一旦匹配成功后，由nginx服务器转发给开发者服务器上127.0.0.1:8007进程的用户，这样可以实现多个账号共享一个80端口，并可以收到微信服务器对应用户的消息</li><li>注：在写的flask程序中视图网址也必须是/wechat8007，因为nginx在向后台转发的时候，它只是按照/wechat8007规则知道转发给谁，它会把微信用户的请求原封不动的往后去发，因为微信服务器在向我们发送请求路径就是/wechat:8007,意味着nginx再转发给我们的时候，在我们写的flask程序收到的请求里面，你会发现对应的请求路径也是/wechat8007，所以我们flask程序中的route路径也必须是/wechat8007</li><li>如果是在公司做开发的话，不涉及到多个账户使用一个80端口，所以直接把程序在开发者服务器上以80端口运行，然后在微信公众测试平台配置url为配置程序地址即可</li><li>博主之所以这样做，那是因为我还没有购买服务器（●︿●）</li></ol><h2 id="接入微信公众平台"><a href="#接入微信公众平台" class="headerlink" title="接入微信公众平台"></a>接入微信公众平台</h2><p>接入微信公众平台开发，开发者需要按照如下步骤完成：</p><ol><li>填写服务器配置</li><li>验证服务器地址的有效性</li><li>依据接口文档实现业务逻辑</li></ol><h2 id="填写服务器配置"><a href="#填写服务器配置" class="headerlink" title="填写服务器配置"></a>填写服务器配置</h2><p>登录微信公众平台官网后，在公众平台后台管理页面 - 开发者中心页，点击“修改配置”按钮，填写服务器地址（URL）、Token和EncodingAESKey，其中URL是开发者用来接收微信消息和事件的接口URL。Token可由开发者可以任意填写，用作生成签名（该Token会和接口URL中包含的Token进行比对，从而验证安全性）。EncodingAESKey由开发者手动填写或随机生成，将用作消息体加解密密钥。</p><p>同时，开发者可选择消息加解密方式：明文模式、兼容模式和安全模式。模式的选择与服务器配置在提交后都会立即生效，请开发者谨慎填写及选择。加解密方式的默认状态为明文模式，选择兼容模式和安全模式需要提前配置好相关加解密代码，详情请参考消息体签名及加解密部分的文档。</p><h3 id="1-进入微信公众平台后，找到开发栏，进入基本配置"><a href="#1-进入微信公众平台后，找到开发栏，进入基本配置" class="headerlink" title="1.进入微信公众平台后，找到开发栏，进入基本配置"></a>1.进入微信公众平台后，找到开发栏，进入基本配置</h3><p><img src="https://img-blog.csdnimg.cn/20181228142954745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt><br><fancybox><img src="https://img-blog.csdnimg.cn/20181228143920280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h3 id="2-利用测试平台"><a href="#2-利用测试平台" class="headerlink" title="2.利用测试平台"></a>2.利用测试平台</h3><p>测试平台登录地址：<a href="https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login" target="_blank" rel="noopener">https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login</a><br><fancybox><img src="https://img-blog.csdnimg.cn/2018122817020287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br>在手机微信上进行扫码登录即可<br><fancybox><img src="https://img-blog.csdnimg.cn/20181228171021423.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><h1 id="二丶验证服务器地址的有效性"><a href="#二丶验证服务器地址的有效性" class="headerlink" title="二丶验证服务器地址的有效性"></a>二丶验证服务器地址的有效性</h1><p>开发者提交信息后，微信服务器将发送GET请求到填写的服务器地址URL上，GET请求携带四个参数：<br><fancybox><img src="https://img-blog.csdnimg.cn/20181228174733106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>开发者通过检验signature对请求进行校验。若确认此次GET请求来自微信服务器，请原样返回echostr参数内容，则接入生效，成为开发者成功，否则接入失败。</p><p>校验流程：</p><ol><li>将token、timestamp、nonce三个参数进行字典序排序</li><li>将三个参数字符串拼接成一个字符串进行sha1加密</li><li>开发者获得加密后的字符串可与signature对比，标识该请求来源于微信</li></ol><h3 id="1-根据上面微信公众平台提供的开发文档进行代码编写"><a href="#1-根据上面微信公众平台提供的开发文档进行代码编写" class="headerlink" title="1.根据上面微信公众平台提供的开发文档进行代码编写"></a>1.根据上面微信公众平台提供的开发文档进行代码编写</h3><p>代码实现如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, abort</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 常量</span></span><br><span class="line"><span class="comment"># 微信的token令牌</span></span><br><span class="line">WECHAT_TOKEN = <span class="string">"cdtaogang"</span></span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route("/wechat8007")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wechat</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""对接微信公众号服务器"""</span></span><br><span class="line">    <span class="comment"># 接收微信服务器发送的参数</span></span><br><span class="line">    signature = request.args.get(<span class="string">"signature"</span>)</span><br><span class="line">    timestamp = request.args.get(<span class="string">"timestamp"</span>)</span><br><span class="line">    nonce = request.args.get(<span class="string">"nonce"</span>)</span><br><span class="line">    echostr = request.args.get(<span class="string">"echostr"</span>)</span><br><span class="line">    <span class="comment"># 校验参数</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> all([signature, timestamp, nonce, echostr]):</span><br><span class="line">        abort(<span class="number">400</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 按照微信的流程进行计算签名</span></span><br><span class="line">    li = [WECHAT_TOKEN, timestamp, nonce]</span><br><span class="line">    <span class="comment"># 排序</span></span><br><span class="line">    li.sort()</span><br><span class="line">    <span class="comment"># 拼接字符串</span></span><br><span class="line">    tmp_str = <span class="string">''</span>.join(li)</span><br><span class="line">    <span class="comment"># 进行sha1加密, 得到正确的签名值</span></span><br><span class="line">    sign = hashlib.sha1(tmp_str).hexdigest()</span><br><span class="line">    <span class="comment"># 将自己计算的签名值与请求的签名参数进行对比，如果相同，则证明请求来自微信服务器</span></span><br><span class="line">    <span class="keyword">if</span> sign != signature:</span><br><span class="line">        <span class="comment"># 表示请求不是微信发的</span></span><br><span class="line">        abort(<span class="number">403</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> echostr</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(port=<span class="number">8007</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="2-测试连接开发者服务器"><a href="#2-测试连接开发者服务器" class="headerlink" title="2.测试连接开发者服务器"></a>2.测试连接开发者服务器</h3><ul><li><b>step1 使用ssh命令测试连接服务器</b></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228182101658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><b>step2 使用scp命令将程序文件推送到服务器</b></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228182759767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><b>step3 在开发者服务器上运行wechat程序</b></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228183116979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><b>step4 回到微信公众测试平台配置接口</b></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228183513192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br><b>注意：当没有在服务器运行wechat程序时，进行提交会显示失败</b></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228183757670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br><b>此时，回头看服务器程序运行日志，微信给我发了一个以get方式请求过来的数据</b></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228184238535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br><b>大功告成！说明该服务器具有有效性….</b><br><br></p><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85321424" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85321424</a></p>]]></content>
      
      
      <categories>
          
          <category> WeChat开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> 微信公众号 </tag>
            
            <tag> 微信开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号之接入微信公众号服务器开发（一）</title>
      <link href="/2019/10/31/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/10/31/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶概述"><a href="#一丶概述" class="headerlink" title="一丶概述"></a>一丶概述</h1><h2 id="公众号与公众平台"><a href="#公众号与公众平台" class="headerlink" title="公众号与公众平台"></a>公众号与公众平台</h2><h3 id="1-微信账号类型"><a href="#1-微信账号类型" class="headerlink" title="1.微信账号类型"></a>1.微信账号类型</h3><ul><li>个人号</li><li>公众号<br>&ensp;– 订阅号<br>&ensp;– 服务号</li><li>企业号</li></ul><h3 id="2-公众号"><a href="#2-公众号" class="headerlink" title="2.公众号"></a>2.公众号</h3><p><b>微信公众号</b>主要面向名人、政府、媒体、企业等机构推出的合作推广业务。在这里可以通过微信渠道将品牌推广给上亿的微信用户，减少宣传成本，提高品牌知名度，打造更具影响力的品牌形象。</p><h3 id="3-公众平台"><a href="#3-公众平台" class="headerlink" title="3.公众平台"></a>3.公众平台</h3><p>微信公众平台是运营者通过公众号为微信用户提供资讯和服务的平台，而公众平台开发接口则是提供服务的基础，开发者在公众平台网站中创建公众号、获取接口权限后，可以通过阅读公众平台开发接口文档来帮助开发。</p><p>微信公众平台可以用来注册、管理公众号和企业号。</p><p><b>登录网址：</b><a href="https://mp.weixin.qq.com/" target="_blank" rel="noopener">https://mp.weixin.qq.com/</a></p><p>进入上面网址，可进行登录及注册<br><fancybox><br><img src="https://img-blog.csdnimg.cn/20181228120221641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt><br></fancybox><br><b>注册流程：</b></p><ul><li>step1 基本信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228124707431.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>step2 选择类型</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228125535973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br><fancybox><img src="https://img-blog.csdnimg.cn/2018122812593597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br><a href="https://img-blog.csdnimg.cn/20181228130654654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" target="_blank" rel="noopener"></a></p><ul><li>step3 信息登记</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228130425982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>step4 公众号信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228130920989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>step5 完成注册后，进行登录，首先需使用手机进行扫码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228132726779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在手机端显示此界面，确认无误后，确定即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228132912503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><ul><li>通过身份验证后，即可在网页端对创建的公众号进行简单配置，如下图</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228133603911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt><fancybox></fancybox></fancybox></p><ul><li>一些简单的功能添加以及配置(需要啥配置啥即可，简单操作这里不做详细说明了)</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228133844976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h3 id="4-公众号与个人号的区别"><a href="#4-公众号与个人号的区别" class="headerlink" title="4.公众号与个人号的区别"></a>4.公众号与个人号的区别</h3><p>微信公众号和个人号是完全不同的。</p><p>微信对个人号的定位是普通用户之间的交流和通讯，微信并不鼓励和支持使用个人号进行营销推广(微信曾经大规模封杀好友过多的营销个人号）。</p><p>而公众号则完全是为品牌推广、信息推送等服务而定制的。使用公众号，可以向关注者（即粉丝)群发图文消息，粉丝在对话界面看到消息后，可以点击跳转到一个图文页面。公众号还提供关键词自动回复等基础功能，以此可以随时、自动的和粉丝进行互动。</p><p>除了这些基础功能之外，更大的区别是，微信针对公众号开放了很多程序接口。在这些接口的基础上，可以向粉丝提供更多的服务。此外，认证的服务号还可以申请微信支付。粉丝可以使用微信支付向进行付款（订购服务或购买商品）。所有这些，都是个人号不具备的。</p><p>微信公众号的注册几乎是没有门槛的。不过针对不同类型的公众号，微信提供的功能不同，资质要求也不一样。</p><h1 id="二丶微信开发原理"><a href="#二丶微信开发原理" class="headerlink" title="二丶微信开发原理"></a>二丶微信开发原理</h1><p><b>公众号主要通过</b></p><ul><li>公众号消息会话</li><li>公众号内网页</li></ul><p><b>来为用户提供服务的。</b></p><ul><li><b>公众号消息会话</b></li></ul><p>公众号是以微信用户的一个联系人形式存在的，消息会话是公众号与用户交互的基础。</p><ul><li><b>公众号内网页</b></li></ul><p>许多复杂的业务场景，需要通过网页形式来提供服务。</p><ul><li><b>使用微信服务器提供的功能无法满足我们的需求</b></li></ul><p><b>设想两个场景：</b></p><p>1.公众号的消息自动回复想做的智能一些，类似于iphone的Siri，例如粉丝发送“今天的北京天气”到公众号，回复粉丝信息时要按照特定时间特定城市给予反馈;</p><p>2.公众号内嵌的网页需要获取浏览用户的微信头像、昵称、当前定位等信息</p><h2 id="模型分类"><a href="#模型分类" class="headerlink" title="模型分类"></a>模型分类</h2><h3 id="1-无扩展应用模型"><a href="#1-无扩展应用模型" class="headerlink" title="1.无扩展应用模型"></a>1.无扩展应用模型</h3><p><b>1.公众号消息会话</b><br><img src="https://img-blog.csdnimg.cn/20181228134457290.png" alt><br><b>2.公众号内网页</b><br><img src="https://img-blog.csdnimg.cn/20181228134525581.png" alt></p><h3 id="2-有扩展应用模型"><a href="#2-有扩展应用模型" class="headerlink" title="2.有扩展应用模型"></a>2.有扩展应用模型</h3><p><b>1.公众号消息会话</b><br><img src="https://img-blog.csdnimg.cn/20181228134804787.png" alt><br><b>2.公众号内网页</b><br><img src="https://img-blog.csdnimg.cn/20181228134857512.png" alt></p><h2 id="公众号接口"><a href="#公众号接口" class="headerlink" title="公众号接口"></a>公众号接口</h2><h3 id="1-公众号消息会话"><a href="#1-公众号消息会话" class="headerlink" title="1.公众号消息会话"></a>1.公众号消息会话</h3><p>目前公众号内主要有这样几类消息服务的类型，分别用于不同的场景。</p><p><b>群发消息</b></p><p>公众号可以以一定频次（订阅号为每天1次，服务号为每月4次），向用户群发消息，包括文字消息、图文消息、图片、视频、语音等。</p><p><strong>被动回复消息</strong></p><p>在用户给公众号发消息后，微信服务器会将消息发到开发者预先在开发者中心设置的服务器地址（开发者需要进行消息真实性验证），公众号可以在5秒内做出回复，可以回复一个消息，也可以回复命令告诉微信服务器这条消息暂不回复。被动回复消息可以设置加密（在公众平台官网的开发者中心处设置，设置后，按照消息加解密文档来进行处理。其他3种消息的调用因为是API调用而不是对请求的返回，所以不需要加解密）。</p><p><strong>客服消息</strong></p><p>在用户给公众号发消息后的48小时内，公众号可以给用户发送不限数量的消息，主要用于客服场景。用户的行为会触发事件推送，某些事件推送是支持公众号据此发送客服消息的，详见微信推送消息与事件说明文档。</p><p><strong>模板消息</strong></p><p>在需要对用户发送服务通知（如刷卡提醒、服务预约成功通知等）时，公众号可以用特定内容模板，主动向用户发送消息。</p><h3 id="2-公众号内网页"><a href="#2-公众号内网页" class="headerlink" title="2.公众号内网页"></a>2.公众号内网页</h3><p>对于公众号内网页，提供以下场景接口：</p><p>网页授权获取用户基本信息</p><p>通过该接口，可以获取用户的基本信息</p><p>微信JS-SDK</p><p>是开发者在网页上通过JavaScript代码使用微信原生功能的工具包，开发者可以使用它在网页上录制和播放微信语音、监听微信分享、上传手机本地图片、拍照等许多能力。</p><h3 id="3-微信开发者文档"><a href="#3-微信开发者文档" class="headerlink" title="3.微信开发者文档"></a>3.微信开发者文档</h3><p>文档链接地址：<a href="https://mp.weixin.qq.com/wiki/home/index.html" target="_blank" rel="noopener">https://mp.weixin.qq.com/wiki/home/index.html</a><br><fancybox><br><img src="https://img-blog.csdnimg.cn/20181228135813950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt><br></fancybox><br><br></p><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85319116" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85319116</a></p>]]></content>
      
      
      <categories>
          
          <category> WeChat开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> 微信公众号 </tag>
            
            <tag> 微信开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件测试用例设计总结</title>
      <link href="/2019/10/18/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/10/18/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-测试流程"><a href="#1-测试流程" class="headerlink" title="1.测试流程"></a>1.测试流程</h2><p>需求分析—测试需求—测试计划–测试方案—测试用例—执行测试—测试报告</p><h2 id="2-测试用例的特性"><a href="#2-测试用例的特性" class="headerlink" title="2.测试用例的特性"></a>2.测试用例的特性</h2><ul><li>有效性：能使用，不同人使用结果一致（测试用例的能够被使用，且被不同人员使用测试结果一致）</li><li>可复用性：良好的测试用例具有重复使用的功能</li><li>易组织性：好的测试用例会分门别类地提供给测试人员参考和使用</li><li>可评估性：从测试管理的角度，测试用例的通过率和软件缺陷的数目是软件产品质量好坏的测试标准（测试计划）</li><li>可管理性：测试用例可以作为检验测试人员进度、工作量以及跟踪/管理测试人员工作效率的因素（对测试人员进行工作量和绩效考核）</li></ul><h2 id="3-测试用例的八大要素"><a href="#3-测试用例的八大要素" class="headerlink" title="3.测试用例的八大要素"></a>3.测试用例的八大要素</h2><p>①测试编号<br>②测试模块<br>③测试标题<br>④测试级别<br>⑤测试环境<br>⑥测试输入<br>⑦测试步骤<br>⑧预期结果</p><ul><li><p>测试编号：每个测试用例都有唯一的标识号，用以区别其他测试用例<br><i style="color:red">例</i>：系统测试用例的编号这样定义规则： PROJECT1-ST-001 ，命名规则是项目名称＋测试阶段类型（系统测试阶段）＋编号</p></li><li><p>测试模块：指明并简单描述本测试用例是用来测试哪些项目、子项目或软件特性的<br><i style="color:red">例</i>：购物模块</p></li><li><p>测试标题：对测试用例的描述，测试用例标题应该清楚表达测试用例的用途<br><i style="color:red">例</i>：“ 测试用户登录时输入错误密码时，软件的响应情况 ”</p></li><li><p>测试级别：定义测试用例的优先级别，可以粗略地分为 “ 高 ” 和 “ 低 ” 两个级别<br><i style="color:red">例</i>： 核心功能 —高      界面风格 —低</p></li><li><p>测试环境：描述执行测试用例所需要的具体测试环境，包括硬件环境和软件环境<br><i style="color:red">例</i>： 硬件 ——计算机的具体配置，见测试计划；软件——操作系统  linux    数据库   mysql     中间件  weblogic</p></li><li><p>测试输入：用来执行测试用例的输入要求。这些输入可能是数据、文件或具体操作<br><i style="color:red">例</i>： 数据  ：  12  文件  ：   D:\baidu\文件couture         动作  ：  单击鼠标，在键盘做按键处理</p></li><li><p>测试步骤：执行本测试用例所需的每一步操作<br><i style="color:red">例</i>： 求和运算          输入加数12          输入被加数 24          点击“加法按钮”</p></li><li><p>预期结果：描述被测项目或被测特性所希望或要求达到的输出或指标<br><i style="color:red">例</i>：  加法器    12+24          预期结果：  36</p></li></ul><h2 id="4-测试用例操作步骤"><a href="#4-测试用例操作步骤" class="headerlink" title="4.测试用例操作步骤"></a>4.测试用例操作步骤</h2><p><strong>1.</strong>设计一个新的测试用例，使其尽可能多地覆盖尚未被覆盖的有效等价类，重复这个过程，直至所有的有效等价类均被测试用例所覆盖</p><p><strong>2.</strong>设计一个新的测试用例，使其仅覆盖一个无效等价类，重复这个过程，直至所有的无效等价类均被测试用例所覆盖</p><p><strong>3.</strong>设计数据要注意<br>        ①无效等价类在一个用例中只能出现一次<br>        ②有效等价类在一个用例中可以出现多次<br><strong>4.</strong>等价类划分技巧<br>        ①测试用例分析最好用xmind<br>        ②按等价类给出数据最好用电子表格<br>        ③当产生意见分歧，回看需求规格说明书</p><h2 id="5-软件测试用例方法"><a href="#5-软件测试用例方法" class="headerlink" title="5.软件测试用例方法"></a>5.软件测试用例方法</h2><p>1.输出域       覆盖所有的输出，不管输入<br>2.输入域       覆盖所有的输入，不管输出<br>3.异常分析法： 断电，断网的异常情况（重点关注）<br>4.错误猜测法： 有经验的人对系统做出判断，找到肯能出现错误的地方<br>5.探索性测试： 根据自己的测试经验，尝试性测试系统功能<br>6.因果图<br>7.场景法     流程有序<br>8.状态迁移   状态无序<br>9.正交试验   多条件组合，不予许出现负值<br>10.判定表    多条件组合，可以出现负值<br>11.边界值<br>12.等价类</p><h2 id="6-软件生存周期及其模型"><a href="#6-软件生存周期及其模型" class="headerlink" title="6.软件生存周期及其模型"></a>6.软件生存周期及其模型</h2><p>软件生存周期（Software life cycle）又称为软件生命期，生存期。是指从形成开发软件概念起，所开发的软件使用以后，知道失去使用价值消亡为止的整个过程。一般来说，整个生存周期包括计划（定义）、开发、运行（维护）三个时期，每个时期又划分为若干个阶段。每个阶段有明确的任务。</p><p><strong>周期模型（典型的几种）:</strong></p><pre><code>瀑布模型：</code></pre><p>快速原型模型：快速原型模型允许在需求分析阶段对软件的需求进行初步而非完全的分析和定义，快速设计开发出软件系统的原型，该原型向用户展示待开发软件的全部或部分功能和性能；用户对该原型进行测试评定，给出具体改进意见以丰富细化软件需求；开发人员据此对软件进行修改完善，直至用户满意认可之后，进行软件的完整实现及测试、维护。</p><pre><code>迭代模型：</code></pre><p>迭代包括产生产品发布（稳定、可执行的产品版本）的全部开发活动和要使用该发布必需的所有其他外围元素。在某种程度上，开发迭代是一次 完整地经过所有工作流程的过程：需求分析、设计、实施和测试工作流程。实质上，它类似小型的瀑布式项目。RUP认为，所有的阶段都可以细分为迭代。每一次 的迭代都会产生一个可以发布的产品，这个产品是最终产品的一个子集。</p><p><strong>生命周期阶段：</strong></p><p>　　软件计划与可行性分析</p><p>　　需求分析</p><p>　　软件设计</p><p>　　编码</p><p>　　软件测试</p><p>　　运行与维护</p><h2 id="7-什么是软件测试？软件测试的目的与原则"><a href="#7-什么是软件测试？软件测试的目的与原则" class="headerlink" title="7.什么是软件测试？软件测试的目的与原则"></a>7.什么是软件测试？软件测试的目的与原则</h2><p>在规定的条件下对程序进行操作，以发现程序错误，衡量软件质量，并对其是否能满足设计要求进行评估的过程。</p><pre><code>软件测试的目的：</code></pre><p>　　       测试是程序的执行过程，目的在于发现错误</p><p>　　       一个成功的测试用例在于发现至今未发现的错误</p><p>　　       一个成功的测试是发现了至今未发现的错误的测试</p><p>　　       确保产品完成了它所承诺或公布的功能，并且用户可以访问到的功能都有明确的书面说明。</p><p>　　       确保产品满足性能和效率的要求</p><p>　　       确保产品是健壮的和适应用户环境的</p><pre><code>软件测试的原则：</code></pre><p>　　       测试用例中一个必须部分是对预期输出或接过进行定义</p><p>　　       程序员应避免测试自己编写的程序</p><p>　　       编写软件的组织不应当测试自己编写的软件</p><p>　　       应当彻底检查每个测试的执行结果</p><p>　　       测试用例的编写不仅应当根据有效和预料到的输入情况，而且也应当根据无效和未预料到的输入情况</p><p>　　       检擦程序是否“未做其应该做的”仅是测试的一半，测试的另一半是检查程序是否“做了其不应该做的”</p><p>　　       应避免测试用例用后即弃，除非软件本身就是个一次性的软件</p><p>　　       计划测试工作时不应默许假定不会发现错误</p><p>　　       程序某部分存在更多错误的可能性，与该部分已经发现错误的数量成正比</p><p>　　       软件测试是一项极富创造性，极具智力的挑战性的工作。</p><h2 id="8-软件的安全性应从哪几个方面去测试"><a href="#8-软件的安全性应从哪几个方面去测试" class="headerlink" title="8.软件的安全性应从哪几个方面去测试"></a>8.软件的安全性应从哪几个方面去测试</h2><p>软件安全性测试包括<strong>程序、数据库安全性</strong>测试。根据系统安全指标不同测试策略也不同。<br><br><br><font color="#FF0000">用户认证安全的测试要考虑问题：</font> 明确区分系统中不同用户权限 、系统中会不会出现用户冲突 、系统会不会因用户的权限的改变造成混乱 、用户登陆密码是否是可见、可复制 、是否可以通过绝对途径登陆系统（拷贝用户登陆后的链接直接进入系统）、用户退出系统后是否删除了所有鉴权标记，是否可以使用后退键而不通过输入口令进入 系统 、系统网络安全的测试要考虑问题 、测试采取的防护措施是否正确装配好，有关系统的补丁是否打上 、模拟非授权攻击，看防护系统是否坚固 、采用成熟的网络漏洞检查工具检查系统相关漏洞（即用最专业的黑客攻击工具攻击试一下，现在最常用的是 NBSI 系列和 IPhacker IP ） 、采用各种木马检查工具检查系统木马情况 、采用各种防外挂工具检查系统各组程序的外挂漏洞.</p><p><font color="#FF0000">数据库安全考虑问题：</font> 系统数据是否机密（比如对银行系统，这一点就特别重要，一般的网站就没有太高要求）、系统数据的完整性（我刚刚结束的企业实名核查服务系统中就曾存在数据 的不完整，对于这个系统的功能实现有了障碍） 、系统数据可管理性 、系统数据的独立性 、系统数据可备份和恢复能力（数据备份是否完整，可否恢复，恢复是否可以完整）</p><h2 id="9-什么是测试用例-什么是测试脚本-两者的关系是什么？"><a href="#9-什么是测试用例-什么是测试脚本-两者的关系是什么？" class="headerlink" title="9.什么是测试用例 什么是测试脚本 两者的关系是什么？"></a>9.什么是测试用例 什么是测试脚本 两者的关系是什么？</h2><p>为实施测试而向被测试系统提供的输入数据、操作或各种环境设置以及期望结果的一个特定的集合。</p><p>测试脚本是为了进行自动化测试而编写的脚本。</p><p>测试脚本的编写必须对应相应的测试用例。</p><h2 id="10-什么是静态测试、动态测试、黑盒测试、白盒测试、α测试-β测试？"><a href="#10-什么是静态测试、动态测试、黑盒测试、白盒测试、α测试-β测试？" class="headerlink" title="10.什么是静态测试、动态测试、黑盒测试、白盒测试、α测试 β测试？"></a>10.什么是静态测试、动态测试、黑盒测试、白盒测试、α测试 β测试？</h2><p><strong>静态测试</strong>是不运行程序本身而寻找程序代码中可能存在的错误或评估程序代码的过程。</p><p><strong>动态测试</strong>是实际运行被测程序，输入相应的测试实例，检查运行结果与预期结果的差异，判定执行结果是否符合要求，从而检验程序的正确性、可靠性和有效性，并分析系统运行效率和健壮性等性能。</p><p><strong>黑盒测试</strong>一般用来确认软件功能的正确性和可操作性,目的是检测软件的各个功能是否能得以实现,把被测试的程序当作一个黑盒,不考虑其内部结构,在知道该程序的输入和输出之间的关系或程序功能的情况下,依靠软件规格说明书来确定测试用例和推断测试结果的正确性。</p><p><strong>白盒测试</strong>根据软件内部的逻辑结构分析来进行测试,是基于代码的测试，测试人员通过阅读程序代码或者通过使用开发工具中的单步调试来判断软件的质量，一般黑盒测试由项目经理在程序员开发中来实现。</p><p><strong>α测试</strong>是由一个用户在开发环境下进行的测试，也可以是公司内部的用户在模拟实际操作环境下进行的受控测试，Alpha测试不能由程序员或测试员完成。</p><p><strong>β测试</strong>是软件的多个用户在一个或多个用户的实际使用环境下进行的测试。开发者通常不在测试现场，Beta测试不能由程序员或测试员完成。</p><h2 id="11-软件产品质量特性是什么"><a href="#11-软件产品质量特性是什么" class="headerlink" title="11.软件产品质量特性是什么?"></a>11.软件产品质量特性是什么?</h2><p><strong>功能性：</strong>适应性、准确性、互操作性、依从性、安全性。</p><p><strong>可靠性：</strong>成熟性、容错性、易恢复性。</p><p><strong>可使用性：</strong>易理解性、易学习性、易操作性。</p><p><strong>效率：</strong>时间特性、资源特性。</p><p><strong>可维护性：</strong>易分析性、易变更性、稳定性、易测试性。</p><p><strong>可移植性：</strong>适应性、易安装性、遵循性、易替换性</p><h2 id="12-软件测试分为几个阶段-各阶段的测试策略和要求是什么"><a href="#12-软件测试分为几个阶段-各阶段的测试策略和要求是什么" class="headerlink" title="12.软件测试分为几个阶段 各阶段的测试策略和要求是什么?"></a>12.软件测试分为几个阶段 各阶段的测试策略和要求是什么?</h2><p>和开发过程相对应，测试过程会依次经历单元测试、集成测试、系统测试、验收测试</p><pre><code>四个主要阶段：</code></pre><p><font color="#FF0000">单元测试：</font>单元测试是针对软件设计的最小单位––程序模块甚至代码段进行正确性检验的测试工作，通常由开发人员进行。</p><p><font color="#FF0000">集成测试：</font>集成测试是将模块按照设计要求组装起来进行测试，主要目的是发现与接口有关的问题。由于在产品提交到测试部门前，产品开发小组都要进行联合调试，因此在大部分企业中集成测试是由开发人员来完成的。</p><p><font color="#FF0000">系统测试：</font>系统测试是在集成测试通过后进行的，目的是充分运行系统，验证各子系统是否都能正常工作并完成设计的要求。它主要由测试部门进行，是测试部门最大最重要的一个测试，对产品的质量有重大的影响。</p><p><font color="#FF0000">验收测试：</font>验收测试以需求阶段的《需求规格说明书》为验收标准，测试时要求模拟实际用户的运行环境。对于实际项目可以和客户共同进行，对于产品来说就是最后一次的系统测试。测试内容为对功能模块的全面测试，尤其要进行文档测试。</p><pre><code>单元测试测试策略：</code></pre><p><strong>自顶向下</strong>的单元测试策略：比孤立单元测试的成本高很多，不是单元测试的一个好的选择。</p><p><strong>自底向上</strong>的单元测试策略：比较合理的单元测试策略，但测试周期较长。</p><p><strong>孤立</strong>的单元测试策略：最好的单元测试策略。</p><pre><code>集成测试的测试策略：</code></pre><p><strong>大爆炸集成</strong>：适应于一个维护型项目或被测试系统较小</p><p><strong>自顶向下集成</strong>：适应于产品控制结构比较清晰和稳定；高层接口变化较小；底层接口未定义或经常可能被修改；产口控制组件具有较大的技术风险，需要尽早被验证；希望尽早能看到产品的系统功能行为。</p><p><strong>自底向上集成</strong>：适应于底层接口比较稳定；高层接口变化比较频繁；底层组件较早被完成。</p><p><strong>基于进度的集成</strong></p><p><em>优点</em>：具有较高的并行度；能够有效缩短项目的开发进度。</p><p><em>缺点</em>：桩和驱动工作量较大；有些接口测试不充分；有些测试重复和浪费。</p><pre><code>系统测试的测试策略：</code></pre><p>数据和数据库完整性测试；功能测试；用户界面测试；性能评测；负载测试；强度测试；容量测试；安全性和访问控制测试；故障转移和恢复测试；配置测试；安装测试；加密测试；可用性测试；版本验证测试；文档测试</p><h2 id="13-软件测试各个阶段通常完成什么工作？"><a href="#13-软件测试各个阶段通常完成什么工作？" class="headerlink" title="13.软件测试各个阶段通常完成什么工作？"></a>13.软件测试各个阶段通常完成什么工作？</h2><p><font color="#FF0000">单元测试阶段：</font>各独立单元模块在与系统地其他部分相隔离的情况下进行测试，单元测试针对每一个程序模块进行正确性校验，检查各个程序模块是否正确地实现了规定的功能。生成单元测试报告，提交缺陷报告。</p><p><font color="#FF0000">集成测试阶段：</font>集成测试是在单元测试的基础上，测试在将所有的软件单元按照概要设计规格说明的要求组装成模块、子系统或系统的过程中各部分工作是否达到或实现相应技术指标及要求的活动。该阶段生成集成测试报告，提交缺陷报告。</p><p><font color="#FF0000">系统测试阶段：</font>将通过确认测试的软件，作为整个给予计算机系统的一个元素，与计算机硬件、外设、某些支持软件、数据和人员等其他系统元素结合在一起，在实际运行环境下，对计算机系统进行全面的功能覆盖。该阶段需要提交测试总结和缺陷报告。</p><h2 id="14-测试人员在软件开发过程中的任务是什么？"><a href="#14-测试人员在软件开发过程中的任务是什么？" class="headerlink" title="14.测试人员在软件开发过程中的任务是什么？"></a>14.测试人员在软件开发过程中的任务是什么？</h2><p>1、尽可能早的找出系统中的Bug；</p><p>2、避免软件开发过程中缺陷的出现；</p><p>3、衡量软件的品质，保证系统的质量；</p><p>4、关注用户的需求，并保证系统符合用户需求。</p><p>总的目标是：确保软件的质量。</p><h2 id="15-一条软件缺陷（或者叫Bug）记录都包含了哪些内容？"><a href="#15-一条软件缺陷（或者叫Bug）记录都包含了哪些内容？" class="headerlink" title="15.一条软件缺陷（或者叫Bug）记录都包含了哪些内容？"></a>15.一条软件缺陷（或者叫Bug）记录都包含了哪些内容？</h2><p>一条Bug记录最基本应包含：</p><p>bug编号；</p><p>bug严重级别，优先级；</p><p>bug产生的模块；</p><p>首先要有bug摘要，阐述bug大体的内容；</p><p>bug对应的版本；</p><p>bug详细现象描述，包括一些截图、录像….等等；</p><p>bug出现时的测试环境，产生的条件即对应操作步骤；</p><h2 id="16-黑盒测试和白盒测试的优缺点"><a href="#16-黑盒测试和白盒测试的优缺点" class="headerlink" title="16.黑盒测试和白盒测试的优缺点"></a>16.黑盒测试和白盒测试的优缺点</h2><p>黑盒测试的优点有：比较简单，不需要了解程序内部的代码及实现；与软件的内部实现无关；  从用户角度出发，能很容易的知道用户会用到哪些功能，会遇到哪些问题；基于软件开发文档，所以也能知道软件实现了文档中的哪些功能；在做软件自动化测试时较为方便。</p><p>黑盒测试的缺点有：不可能覆盖所有的代码，覆盖率较低，大概只能达到总代码量的30%；自动化测试的复用性较低。</p><p>白盒测试的优点有：帮助软件测试人员增大代码的覆盖率，提高代码的质量，发现代码中隐藏的问题。</p><p>白盒测试的缺点有：程序运行会有很多不同的路径，不可能测试所有的运行路径；测试基于代码，只能测试开发人员做的对不对，而不能知道设计的正确与否，可能会漏掉一些功能需求；系统庞大时，测试开销会非常大。</p><h2 id="17-如何测试一个纸杯？"><a href="#17-如何测试一个纸杯？" class="headerlink" title="17.如何测试一个纸杯？"></a>17.如何测试一个纸杯？</h2><p>功能度：用水杯装水看漏不漏；水能不能被喝到</p><p>安全性：杯子有没有毒或细菌</p><p>可靠性：杯子从不同高度落下的损坏程度</p><p>可移植性：杯子在不同的地方、温度等环境下是否都可以正常使用</p><p>兼容性：杯子是否能够容纳果汁、白水、酒精、汽油等</p><p>易用性：杯子是否烫手、是否有防滑措施、是否方便饮用</p><p>用户文档：使用手册是否对杯子的用法、限制、使用条件等有详细描述</p><p>疲劳测试：将杯子盛上水（案例一）放24小时检查泄漏时间和情况；盛上汽油（案例二）放24小时检查泄漏时间和情况等</p><p>压力测试：用根针并在针上面不断加重量，看压强多大时会穿透</p><h2 id="18-详细的描述一个测试活动完整的过程"><a href="#18-详细的描述一个测试活动完整的过程" class="headerlink" title="18.详细的描述一个测试活动完整的过程"></a>18.详细的描述一个测试活动完整的过程</h2><p>1.项目经理通过和客户的交流，完成需求文档，由开发人员和测试人员共同完成需求文档的评审，评审的内容包括：需求描述不清楚的地方和可能有明显冲突或者无法实现的功能的地方。项目经理通过综合开发人员，测试人员以及客户的意见，完成项目计划。然后SQA(软件质量保证)进入项目，开始进行统计和跟踪。</p><p>2.开发人员根据需求文档完成需求分析文档，测试人员进行评审，评审的主要内容包括是否有遗漏或双方理解不同的地方。测试人员完成测试计划文档，测试计划包括的内容上面有描述。</p><p>3.测试人员根据修改好的需求分析文档开始写测试用例，同时开发人员完成概要设计文档，详细设计文档。此两份文档成为测试人员撰写测试用例的补充材料。</p><p>4.测试用例完成后，测试和开发需要进行评审。</p><p>5.测试人员搭建环境</p><p>6.开发人员提交第一个版本，可能存在未完成功能，需要说明。测试人员进行测试，发现BUG后提交给BugZilla。</p><p>7.开发提交第二个版本，包括Bug Fix以及增加了部分功能，测试人员进行测试。</p><p>8.重复上面的工作，一般是3-4个版本后BUG数量减少，达到出货的要求。</p><p>9.如果有客户反馈的问题，需要测试人员协助重现并重新测试。<br><br></p><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/96853248" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/96853248</a></p>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试流程 </tag>
            
            <tag> 用例特性 </tag>
            
            <tag> 用例要素 </tag>
            
            <tag> 用例步骤 </tag>
            
            <tag> 用例方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章加密测试</title>
      <link href="/2019/10/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/10/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('别搞了，你破解不了的');const txt = document.getElementById('enc_content').innerHTML;// alert(txt,"1")// alert(pwd,"2")// alert(onError,"3")let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);if(plaintext == ""){document.getElementById("enc_pwd_input").value="";document.getElementById("enc_error").innerHTML = "密码错误!";return}// alert(plaintext)} catch(err) {if(onError) {// alert(onError,"4")// alert(err,"5")onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none">U2FsdGVkX19A2YULZ60vsCLiVneGpcHS74i7DeeedGwbTVsOtA50KFmrCac4uquYtZpOzgLqQxT7+ey2M5/iFjF1xbYA2YwT0S/LvngT0jCXoVgNc8Nx0ZyNxZnG3sMi4G4a8zCm+XIGscW6U18U5ff72AhxGsgxolpFPuem3fHwWAqExQOnKunKSGFAkzRO</div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" placeholder="请输入文章密码" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "密码错误!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
