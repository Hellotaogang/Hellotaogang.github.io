<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python接口自动化测试框架实战开发（二）</title>
      <link href="/2019/11/16/Python%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/11/16/Python%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#七丶接口自动化框架设计到开发"><span style="color:#4ea1db">七丶接口自动化框架设计到开发</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#八丶持续集成"><span style="color:#4ea1db">八丶持续集成</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#九丶获取cookie及请求处理"><span style="color:#4ea1db">九丶获取cookie及请求处理</span></a></li><a id="more"></a><h1 id="七丶接口自动化框架设计到开发"><a href="#七丶接口自动化框架设计到开发" class="headerlink" title="七丶接口自动化框架设计到开发"></a>七丶接口自动化框架设计到开发</h1><p><strong>14.数据依赖问题从设计思路开始</strong></p><p><strong>说明：</strong>博主之前的测试的app不存在数据依赖的接口，所以博主这里下载了苏宁易购，用其下单以及支付两个接口来说明接口数据依赖</p><ul><li>在苏宁易购上选择一款手机，点击立即购买后选择购买的内存以及颜色后，点击确定跳转到订单页面，如下图所示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190624114046158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>通过fiddler抓取下单的接口，该接口返回的数据中可以看出cart2No=620200000207514372，该商品的订单编号以及customerNo=7157450907客户编号</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190624114122985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在订单页面，点击提交订单，抓取提交订单接口，该接口post请求data数据中的cart2No参数的值，该值就是服务器返回下单接口的数据，这就是所谓的接口数据依赖，需要说明的是，提交订单的接口服务器返回的响应为errorMessage=销售火爆，请稍后再试(E234)，博主测试其他的商品都是提示该错误信息，说明苏定的app此时不能进行购买商品</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190624114606834.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>博主整理了一下整个下单和支付的接口已经请求数据和响应数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"># 下单</span><br><span class="line">request_url = &quot;https://shopping.suning.com/app/addcart/private/quickBuy.do&quot;</span><br><span class="line">request_data = &#123;</span><br><span class="line">    &quot;data&quot;:&#123;&quot;cartHeadInfo&quot;:</span><br><span class="line">    &#123;&quot;userFlag&quot;:&quot;0&quot;,&quot;directFlag&quot;:&quot;1&quot;,&quot;operationChannel&quot;:&quot;50&quot;,</span><br><span class="line">    &quot;operationTerminal&quot;:&quot;01&quot;,&quot;operationEquipment&quot;:&quot;02&quot;,&quot;operationUser&quot;:&quot;&quot;,</span><br><span class="line">    &quot;token&quot;:&quot;0706172998861561345578681_3989FF3858C23E2FE49FB96928935FC51BC2D7E2B00145D19087E1232123D1E2F6AEA7E5A1D95F2B9BC731F5FA0F0B48&quot;,</span><br><span class="line">    &quot;detect&quot;:&quot;mmds_a_._920c68ed-4fcc-440e-a717-28b23d2a26fd_._YQQQ**1_PaaX*C****4*n**1_Paa0*C**1-D*n******2_*****oy****1_PbTSXH*1J54.o*******1XH**1LD.o*o1_PaA7XH****k.o******Pv****Pdy****1_P0DZcc**iU4Mq**1_P0DZcc**1-DMq**1_PcB_c2**lm4M9**1_PcB_c2**1-DM9******MS****OHy****1_Pc9*ce**GH4YZ**1_Pc9*ce**1kDYZ**1_Pc9*ce**Iq4YZ**1_Pc9*ce**17DYZ**1_Pc9*cH**DU4Yn**1_Pc9*cH**1CDYn**1_Pc9*cc**3m4Yn**1_Pc9*cc**P3DYn**1_Pc9*cd**X0441**1_Pc9*cd**1AD41**1_Pc9*cm**3R44Z**1_Pc9*cZ**1-D4Z**1_Pc9*cZ**Pa44Z**1_Pc9*cZ**1oD4Z*******1cZ**1p44Z**1_Pc9*cZ**ReD4Z**1_Pc9*cZ**1m44Z**1_Pc9*cZ**1lD4Z**1_Pc9*cm**1X44Z**1_Pc9*cm**1eD4Z**1_Pc9*ck**1l44Z**1_Pc9*ck**1lD4Z**1_Pc9*ck**Px44Z**1_Pc9*ck****D4Z**1_Pc9*cL**9m4Y_**1_Pc9*cL**1kDY_*******1cL**1S4Y_**1_Pc9*cL**RkD41**1_Pc9*cJ**18441**1_Pc9*cJ**1iD41**1_Pc9*cJ**1m441**1_Pc9*cJ**1kD41**1_Pc9*ch*1Sx441**1_Pc9*ch**1aD41**1_P0jS*yPUup4*4**1_P0jS*y**1_D*4******Pv*****ty****1_P0DZch*1WE4Ob**1_P0DZch**1xDOb**1_PcB_c0**fx4M0**1_PcB_c0**1oDM0******MS****3Sy********Pv***J*Ey********2_****ixy****1_PbTS*y**UZ4*d**1_PaPK*y**1XD*d******2N*****By****1_PaPi*v**KZ4*n**1_PaPi*v**POD*n******RA*****hy****1_PcVIcd**qr449*******1cd**POD49**1_PbZJM1**if4YK**1_PavoM1**PXDYK******.p****13y****1_PcjG2E*EhR42N*******12E**1oD2N******Pv****POy****1_PaaX*5*.xf4*j**1_Paa0*5**1CD*j******.p*****qy****1_PcjG2a**uo42x*******12a**PeD2x******Pv****1zy****1_P0DZcc**C84O4**1_P0DZcc**P*DO4**1_PcB_cc*P9m42a**1_PcB_cc**P3D2aQQQNvJjJhSpefQQQMMceTs**aYcXDfPGXDsuXcYGMXuCaebCQQQMDYaPPYKtBQQQMDMYuQQQMQQQP*sPYDCXXPDsaQQQMQPQMf46724f27b81204df0356ffa5666c5ec&quot;,&quot;dfpToken&quot;:&quot;TFItvV179MauUij2SsWqz0b18&quot;,&quot;operationStoreCode&quot;:&quot;&quot;,&quot;provinceCode&quot;:&quot;020&quot;,&quot;cityCode&quot;:&quot;021&quot;,&quot;districtCode&quot;:&quot;02111&quot;,&quot;logContent&quot;:&quot;&quot;&#125;,</span><br><span class="line">    &quot;immediateBuyItems&quot;:[&#123;&quot;itemHeadInfo&quot;:&#123;&quot;itemNo&quot;:&quot;1&quot;,&quot;activityType&quot;:&quot;01&quot;,&quot;activityId&quot;:&quot;&quot;&#125;,</span><br><span class="line">    &quot;mainCmmdtyInfo&quot;:&#123;&quot;basicInfo&quot;:&#123;&quot;itemNo&quot;:&quot;1&quot;,&quot;cmmdtyCode&quot;:&quot;000000010985369117&quot;,&quot;shopCode&quot;:&quot;0000000000&quot;,&quot;shopAddCode&quot;:&quot;0030001790&quot;,&quot;shopName&quot;:&quot;苏宁自营&quot;,&quot;overSeasFlag&quot;:&quot;&quot;,&quot;cmmdtyQty&quot;:&quot;1&quot;,&quot;serviceStoreCode&quot;:&quot;&quot;,&quot;serviceStoreName&quot;:&quot;&quot;,&quot;commodityType&quot;:&quot;&quot;,&quot;carShopSerWay&quot;:&quot;&quot;&#125;&#125;&#125;],</span><br><span class="line">    &quot;supportYB&quot;:&quot;1&quot;,&quot;publishDate&quot;:&quot;20190508&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">response_data = &#123;</span><br><span class="line">&quot;api&quot;:&quot;ccf.cart1.quickbuy&quot;,</span><br><span class="line">&quot;code&quot;:&quot;1&quot;,</span><br><span class="line">&quot;data&quot;:&#123;&quot;errorInfos&quot;:[],&quot;result&quot;:&#123;&quot;cart2No&quot;:&quot;620200000207521425&quot;,&quot;customerNo&quot;:&quot;7157450907&quot;,&quot;isSuccess&quot;:&quot;Y&quot;,&quot;reserve&quot;:&quot;&quot;,&quot;safeDps&quot;:&quot;0&quot;,&quot;showRecommend&quot;:&quot;1&quot;&#125;&#125;,</span><br><span class="line">&quot;msg&quot;:&quot;&quot;,&quot;v&quot;:&quot;1.0&quot;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">cart2No = response_data[&quot;data&quot;][&quot;result&quot;][&quot;cart2No&quot;]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># 支付</span><br><span class="line">request_url = &quot;https://shopping.suning.com/app/V2/private/confirmOrder.do&quot;</span><br><span class="line">request_data = &#123;&quot;cart2No&quot;:cart2No,</span><br><span class="line">&quot;salesPerson&quot;:&quot;&quot;,</span><br><span class="line">&quot;channelType&quot;:02,</span><br><span class="line">&quot;terminalVersion&quot;:MOBILE|02|01|7.7.3|11007,</span><br><span class="line">&quot;terminalModel&quot;:HUAWEI|DUK-AL20,</span><br><span class="line">&quot;orderMemoJson&quot;:[],</span><br><span class="line">&quot;saleChannel&quot;:000000011116457666|9264|121.492479|31.247221|00|06|;000000011039772482|9264|121.492479|31.247221|00|06|,</span><br><span class="line">&quot;showGift&quot;:1,</span><br><span class="line">&quot;cipher&quot;:&quot;&quot;,  </span><br><span class="line">&quot;detect&quot;:&quot;mmds_a_._920c68ed-4fcc-440e-a717-28b23d2a26fd_._YQQQ**1_Pc9*cd****DY5**1_Pc9*cd**jx4Y5**1_Pc9*cd**PODY5**1_Pc9*cd**9T4Y5**1_Pc9*cd**PMDY5**1_Pc9*cd**X04Y5**1_Pc9*cd**PeDY5**1_Pc9*cd**4q4Y5**1_Pc9*cd**PkDY5**1_Pc9*cd**Dm4Y5**1_Pc9*cd**PkDY5**1_Pc9*cd**E34Y5**1_Pc9*cd**PlDY5**1_P0jS*y*SjM4*X**1_P0jS*y**1ND*X******Pv*****ty****1_P0DZcH*11i42u**1_P0DZcH**1_D2u**1_PcB_cD**mY42A**1_PcB_cD**1oD2A******MS****Muy****1_P0jS*_**pG4*m**1_P0jS*_**1SD*m******Pv*****qy****1_P0DZci*3bJ4MK**1_P0DZci**1-DMK**1_PcB_c**YjB4RB**1_PcB_c***1oDRB******MS****MPy****1_Pc9*ct*1To4YC**1_Pc9*ct**1CDYC**1_P0jS*C1sPt4*J**1_P0jS*C**1CD*J******Pv*****yy****1_PaaX*C**E-4*n**1_Paa0*C**1-D*n******2_*****oy****1_PbTSXH*1J54.o*******1XH**1LD.o*o1_PaA7XH****k.o******Pv****Pdy****1_P0DZcc**iU4Mq**1_P0DZcc**1-DMq**1_PcB_c2**lm4M9**1_PcB_c2**1-DM9******MS****OHy****1_Pc9*ce**GH4YZ**1_Pc9*ce**1kDYZ**1_Pc9*ce**Iq4YZ**1_Pc9*ce**17DYZ**1_Pc9*cH**DU4Yn**1_Pc9*cH**1CDYn**1_Pc9*cc**3m4Yn**1_Pc9*cc**P3DYn**1_Pc9*cd**X0441**1_Pc9*cd**1AD41**1_Pc9*cm**3R44Z**1_Pc9*cZ**1-D4Z**1_Pc9*cZ**Pa44Z**1_Pc9*cZ**1oD4Z*******1cZ**1p44Z**1_Pc9*cZ**ReD4Z**1_Pc9*cZ**1m44Z**1_Pc9*cZ**1lD4Z**1_Pc9*cm**1X44Z**1_Pc9*cm**1eD4Z**1_Pc9*ck**1l44Z**1_Pc9*ck**1lD4Z**1_Pc9*ck**Px44Z**1_Pc9*ck****D4Z**1_Pc9*cL**9m4Y_**1_Pc9*cL**1kDY_*******1cL**1S4Y_**1_Pc9*cL**RkD41**1_Pc9*cJ**18441**1_Pc9*cJ**1iD41**1_Pc9*cJ**1m441**1_Pc9*cJ**1kD41**1_Pc9*ch*1Sx441**1_Pc9*ch**1aD41QQQNvJjJhSpefQQQMMceTs**aYcXDfPGXDsuXcYGMXuCaebCQQQsaCMDCXuDYQQQMDMYuQQQMQQQP*sPYDCMMusCuQQQMQPQM73a04a9cdb50e2faa2bf8d79252434e3&quot;,</span><br><span class="line">&quot;dfpToken&quot;:&quot;TFItvV179MauUij2SsWqz0b18&quot;,</span><br><span class="line">&quot;deviceNo&quot;:&quot;868334782216554&quot;,</span><br><span class="line">&quot;specDesc&quot;:[&#123;&quot;itemNo&quot;:&quot;620200000344251973&quot;,&quot;pictureLink&quot;:&quot;\/\/imgservice.suning.cn\/uimg1\/b2c\/image\/5lHDNQYOPSu5tQWQt9JdHA.jpg&quot;,&quot;specInfos&quot;:[&#123;&quot;specTypeName&quot;:&quot;颜色&quot;,&quot;specContent&quot;:&quot;秘境黑&quot;&#125;,&#123;&quot;specTypeName&quot;:&quot;规格&quot;,&quot;specContent&quot;:&quot;6GB+64GB&quot;&#125;]&#125;],</span><br><span class="line">&quot;splitFlag&quot;:01,</span><br><span class="line">&quot;publishDate&quot;: 20190508,</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">response_data = &#123;</span><br><span class="line">&quot;api&quot;:&quot;ccf.cart2.submitOrder&quot;,</span><br><span class="line">&quot;code&quot;:&quot;1&quot;,</span><br><span class="line">&quot;data&quot;:&#123;&quot;cardInfoss&quot;:[],&quot;cartHeadInfo&quot;:&#123;&quot;alipayWakeFlag&quot;:&quot;1&quot;,&quot;cart2No&quot;:&quot;&quot;,&quot;customerNo&quot;:&quot;&quot;,&quot;dfpTokenStatus&quot;:&quot;&quot;,&quot;isSuccess&quot;:&quot;N&quot;,&quot;miniCartRouteSwitch&quot;:&quot;&quot;,&quot;payStatus&quot;:&quot;&quot;,&quot;toastTime&quot;:&quot;5&quot;&#125;,</span><br><span class="line">&quot;errorInfos&quot;:[&#123;&quot;cmmdtyPrice&quot;:&quot;&quot;,&quot;dareType&quot;:&quot;&quot;,&quot;earlyPrice&quot;:&quot;&quot;,</span><br><span class="line">&quot;errorCode&quot;:&quot;CSC-71-0002&quot;,</span><br><span class="line">&quot;errorMessage&quot;:&quot;销售火爆，请稍后再试(E234)&quot;,</span><br><span class="line">&quot;itemNo&quot;:&quot;0&quot;,&quot;itemType&quot;:&quot;0&quot;,&quot;needImageCode&quot;:&quot;&quot;,&quot;ticket&quot;:&quot;&quot;&#125;],</span><br><span class="line">&quot;orderItems&quot;:[],&quot;voucherInfoss&quot;:[]&#125;,</span><br><span class="line">&quot;msg&quot;:&quot;&quot;,&quot;v&quot;:&quot;1.0&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>接下来博主就需要将框架最开始的基础信息进行变更，在excel表中中添加一列header数据，因为订单先关的接口需要传递header来验证登录状态</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019062415093278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>就需要在data_conf.py文件中进行添加获取该列的索引值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">global_var</span>:</span></span><br><span class="line">    id = <span class="string">'0'</span>  <span class="comment"># id</span></span><br><span class="line">    module = <span class="string">'1'</span>  <span class="comment"># 模块</span></span><br><span class="line">    url = <span class="string">'2'</span>  <span class="comment"># url</span></span><br><span class="line">    run = <span class="string">'3'</span>  <span class="comment"># 是否运行</span></span><br><span class="line">    request_type = <span class="string">'4'</span>  <span class="comment"># 请求类型</span></span><br><span class="line">    request_header = <span class="string">'5'</span>  <span class="comment"># 是否携带header</span></span><br><span class="line">    case_depend = <span class="string">'6'</span>  <span class="comment"># case依赖</span></span><br><span class="line">    response_data_depend = <span class="string">'7'</span>  <span class="comment"># 依赖的返回数据</span></span><br><span class="line">    data_depend = <span class="string">'8'</span>  <span class="comment">#  数据依赖</span></span><br><span class="line">    request_header_data = <span class="string">'9'</span>  <span class="comment"># header值</span></span><br><span class="line">    request_data = <span class="string">'10'</span>  <span class="comment"># 请求数据</span></span><br><span class="line">    expect_result = <span class="string">'11'</span>  <span class="comment"># 预期结果</span></span><br><span class="line">    reality_result = <span class="string">'12'</span>  <span class="comment"># 实际结果</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_request_header_data</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.request_header_data</span><br></pre></td></tr></table></figure><ul><li>在data_get.py数据获取模块中需要添加两个方法来分别获取excel表header列的数据以及操作获取json表中的键为header值的请求数据data和请求头数据header</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_request_header_data</span><span class="params">(self, x)</span>:</span></span><br><span class="line">    <span class="string">"""获取excel表中的header的数据"""</span></span><br><span class="line">    y = int(data_conf.get_request_header_data())</span><br><span class="line">    header_data = self.op_excel.get_cell_value(x, y)</span><br><span class="line">    <span class="comment"># print("header_data", header_data)</span></span><br><span class="line">    <span class="keyword">if</span> header_data == <span class="string">''</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">return</span> header_data</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data_for_header</span><span class="params">(self, x)</span>:</span></span><br><span class="line">    <span class="string">"""通过在excel表中获取的关键字数据到json表中获取对应的数据"""</span></span><br><span class="line">    op_header = operationJson()</span><br><span class="line">    header_data = op_header.get_key_words(self.get_request_header_data(x))</span><br><span class="line">    <span class="comment"># print("header_data", header_data)</span></span><br><span class="line">    <span class="keyword">return</span> header_data</span><br></pre></td></tr></table></figure><ul><li>还需要修改启动文件中的header的获取调用方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> row_count <span class="keyword">in</span> range(<span class="number">1</span>, row_counts):</span><br><span class="line">    <span class="comment"># print(row_count) 1,2,3,4</span></span><br><span class="line">    url = self.data.get_request_url(row_count)  <span class="comment"># y行不变遍历获取x列的请求地址</span></span><br><span class="line">    method = self.data.get_request_method(row_count)  <span class="comment"># y行不变遍历获取x列的请求方式</span></span><br><span class="line">    is_run = self.data.get_is_run(row_count)  <span class="comment"># y行不变遍历获取x列的是否运行</span></span><br><span class="line">    data = self.data.get_data_for_json(row_count)  <span class="comment"># y行不变遍历获取x列的请求数据，这里面时三次调用，依次分别是get_data_for_json丶get_key_words丶get_request_data</span></span><br><span class="line">    <span class="comment"># header = self.data.get_is_header(row_count)  #行不变遍历获取x列获取header</span></span><br><span class="line">    header = self.data.get_data_for_header(row_count)</span><br><span class="line">    module = self.data.get_module_name(row_count)  <span class="comment">#行不变遍历获取x列获取模块名</span></span><br><span class="line">    expect = self.data.get_expect_data(row_count)  <span class="comment">#行不变遍历获取x列获取预期结果</span></span><br><span class="line">    print(<span class="string">"模块名:"</span>, module)</span><br><span class="line">    print(<span class="string">'请求地址:'</span>, url)</span><br><span class="line">    print(<span class="string">'请求方式:'</span>, method)</span><br><span class="line">    print(<span class="string">'是否运行:'</span>, is_run)</span><br><span class="line">    print(<span class="string">'请求数据:'</span>, data)</span><br><span class="line">    print(<span class="string">'请求头:'</span>, header)</span><br><span class="line">    print(<span class="string">'预期结果:'</span>, expect)</span><br></pre></td></tr></table></figure><ul><li>在json文档中增加excel表中的cart_data请求数据以及cart_header数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190624151837863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>最后运行启动文件run_test查看获取excel文档以及json文档数据是否正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190624152050419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>整体测试接口，首先在excel表中填写预期结果</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190624162129801.png" alt></fancybox></p><ul><li>因为该接口与之前接口不属于一个服务器，所以返回的响应数据不一样，所以需要修改common_util模块中修改判断</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/21 18:43'</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CommonUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_contains</span><span class="params">(self, expect, reality)</span>:</span></span><br><span class="line">        flag = <span class="literal">None</span></span><br><span class="line">        reality = json.loads(reality)</span><br><span class="line">        expect = json.loads(expect)</span><br><span class="line">        <span class="keyword">if</span> expect[<span class="string">'isSuccess'</span>] == reality[<span class="string">'data'</span>][<span class="string">'result'</span>][<span class="string">'isSuccess'</span>]:</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> flag</span><br></pre></td></tr></table></figure><ul><li>运行启动测试文件，结果为测试成功，并将数据实际结果数据成功写入到excel实际结果列中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190624162542719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>15.数据依赖问题方法封装之通过case_id获取case数据</strong></p><ul><li>在excel测试数据中case依赖丶依赖的返回数据丶数据依赖这三个字段是根据当前的接口的请求数据中是否需要从其他接口的响应中获取，根据上一步中的分析，进行如下填写</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190624170006981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>服务器给下单接口返回的响应数据中的cartNo与支付接口请求数据中的cartNo一致，具体看图就明白了，首先查看服务器给下单接口返回的响应数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190624170453524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>再查看支付接口向服务器发送的请求数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190624170528314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在op_excel.py中定义如下方法，根据传入的case_id值来获取excel表字段的行数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_x_values</span><span class="params">(self, case_id)</span>:</span></span><br><span class="line">    <span class="string">"""通过获取到的x坐标num值来获取到对应的内容"""</span></span><br><span class="line">    x_num = self.get_x_nums(case_id)</span><br><span class="line">    x_datas = self.get_x_data(x_num)</span><br><span class="line">    print(x_datas)</span><br><span class="line">    <span class="keyword">return</span> x_datas</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_x_nums</span><span class="params">(self, case_id)</span>:</span></span><br><span class="line">    <span class="string">"""根据传入的case_id的值来获取在表格x坐标的数值x=num"""</span></span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    x_datas = self.get_y_data()</span><br><span class="line">    <span class="keyword">for</span> x_data <span class="keyword">in</span> x_datas:</span><br><span class="line">        <span class="keyword">if</span> case_id <span class="keyword">in</span> x_data:</span><br><span class="line">            <span class="keyword">return</span> num</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_x_data</span><span class="params">(self, x=None)</span>:</span></span><br><span class="line">    <span class="string">"""获取表格某一行所有数据"""</span></span><br><span class="line">    tables = self.data</span><br><span class="line">    <span class="keyword">if</span> x <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        x_data = tables.row_values(x)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        x_data = tables.row_values(<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># print(x_data)</span></span><br><span class="line">    <span class="keyword">return</span> x_data</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_y_data</span><span class="params">(self, y=None)</span>:</span></span><br><span class="line">    <span class="string">"""获取表格某一列数据"""</span></span><br><span class="line">    <span class="keyword">if</span> y <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        y_data = self.data.col_values(y)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        y_data = self.data.col_values(<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># print(y_data)</span></span><br><span class="line">    <span class="keyword">return</span> y_data</span><br></pre></td></tr></table></figure><ul><li>调用以上方法测试获取case_id为suning-02所在的行所有数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190624181520469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>16.数据依赖问题之根据规则提取响应数据</strong></p><ul><li>在data目录下新建一个handle_data_dependent.py文件用于处理数据依赖，说白了就是获取到传入的case_id所在的行的所有数据，再从该数据中将数据依赖字段cart2No的值提取出来即可，<font style="color:red">需要说明的一点是，之前博主测试使用的是看书吧app接口所以没有去调用base/run_method模块中的run_main方法向接口发送数据，而是直接在方法中使用requests模块进行数据的发送</font></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/24 17:07'</span></span><br><span class="line"><span class="keyword">from</span> utils.op_excel <span class="keyword">import</span> operationExcel</span><br><span class="line"><span class="keyword">from</span> data.data_get <span class="keyword">import</span> getData</span><br><span class="line"><span class="keyword">import</span> requests, json</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HandleData</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, case_id)</span>:</span></span><br><span class="line">        self.case_id = case_id</span><br><span class="line">        self.op_excel = operationExcel()</span><br><span class="line">        self.data = getData()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_case_line_data</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""获取case所在行数据"""</span></span><br><span class="line">        x_datas = self.op_excel.get_x_values(self.case_id)</span><br><span class="line">        <span class="comment"># ['suning-01', '下单', 'https://shopping.suning.com/app/addcart/private/quickBuy.do', 'yes', 'post', 'yes', '', '', '', 'cart_header', 'cart_data', '&#123;"isSuccess":"Y"&#125;', 'pass']</span></span><br><span class="line">        <span class="keyword">return</span> x_datas</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_dependent_case</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""执行获取case所在的整行数据"""</span></span><br><span class="line">        <span class="comment"># run = RunMain()</span></span><br><span class="line">        x = self.op_excel.get_x_nums(self.case_id)</span><br><span class="line">        request_header = self.data.get_data_for_header(x)</span><br><span class="line">        request_data = self.data.get_data_for_json(x)</span><br><span class="line">        request_url = self.data.get_request_url(x)</span><br><span class="line">        request_method = self.data.get_request_method(x)</span><br><span class="line">        is_run = self.data.get_is_run(x)</span><br><span class="line">        module = self.data.get_module_name(x)</span><br><span class="line">        expect = self.data.get_expect_data(x)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> is_run:</span><br><span class="line">            res = requests.post(url=request_url, data=request_data, headers=request_header, verify=<span class="literal">False</span>)</span><br><span class="line">            print(res.text)</span><br><span class="line">            print(json.loads(res.text)[<span class="string">'data'</span>][<span class="string">'result'</span>][<span class="string">'cart2No'</span>])</span><br><span class="line"> </span><br><span class="line">HandleData(<span class="string">"suning-01"</span>).run_dependent_case()</span><br></pre></td></tr></table></figure><ul><li>运行以上代码，手动传入case_id以及依赖数据的key，成功的提取出数据依赖字段数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190624191126269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>对上一部中的返回的响应数据进行关键字数据的提取，将提取代码进行封装，首先是调用data_get模块中的get_dependent_key方法获取依赖的返回数据中的key，也就是excel表中的value值，然后再调用run_dependent_case方法获取返回的响应数据，通过依赖的返回数据中的key，来提取响应数据中的value值，这里需要安装jsonpath_rw，通过其parse方法来定义path规则，通过该规则找到返回的响应数据中的key的数据集，通过列表生成式将第0个元素进行返回</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data_for_key</span><span class="params">(self, x)</span>:</span></span><br><span class="line">    <span class="string">"""获取依赖返回数据中的key"""</span></span><br><span class="line">    dependent_data = self.data.get_dependent_key(x)</span><br><span class="line">    response_data = self.run_dependent_case()</span><br><span class="line">    json_rule = parse(dependent_data)</span><br><span class="line">    madle = json_rule.find(response_data)</span><br><span class="line">    <span class="keyword">return</span>  [m.value <span class="keyword">for</span> m <span class="keyword">in</span> madle][<span class="number">0</span>]</span><br></pre></td></tr></table></figure><ul><li>在excel表中依赖返回数据中添加的返回响应的关键字必须是以这种格式进行层级关系的填写</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625100337367.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>17.数据依赖问题之依赖结构构建</strong></p><ul><li>在启动文件中run_test模块中，在run方法for循环中，首先需要获取excel表中的data_dependent数据依赖字段的值，然后再获取到case依赖的值，要获取case依赖的值，还需要到data_get模块中定义以下方法进行获取</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_case_dependent</span><span class="params">(self, x)</span>:</span></span><br><span class="line">    <span class="string">"""获取case依赖的值"""</span></span><br><span class="line">    y = int(data_conf.get_case_depend())</span><br><span class="line">    case_dependent = self.op_excel.get_cell_value(x, y)</span><br><span class="line">    <span class="keyword">if</span> case_dependent == <span class="string">''</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> case_dependent</span><br></pre></td></tr></table></figure><ul><li>回到run_test模块中的for循环中进行获取，判断当excel表中的数据依赖字段的值不为空是，则通过实例化HandleData，并调用类中的核心方法get_data_for_key，在该核心方法中又调用run_dependent_case向接口发送请求数据，并将服务器返回的数据返回回来，在get_data_for_key中使用jsonpath_rw中的parse方法进行建立path规则，最终提取到我们想要的返回数据中的cart2No键的值，进行打印测试</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">    res = <span class="literal">None</span></span><br><span class="line">    row_counts = self.data.get_case_lines()  <span class="comment"># 获取excel表格行数</span></span><br><span class="line">    <span class="comment"># print(row_counts) 5</span></span><br><span class="line">    <span class="keyword">for</span> row_count <span class="keyword">in</span> range(<span class="number">1</span>, row_counts):</span><br><span class="line">        <span class="comment"># print(row_count) 1,2,3,4</span></span><br><span class="line">        url = self.data.get_request_url(row_count)  <span class="comment"># y行不变遍历获取x列的请求地址</span></span><br><span class="line">        method = self.data.get_request_method(row_count)  <span class="comment"># y行不变遍历获取x列的请求方式</span></span><br><span class="line">        is_run = self.data.get_is_run(row_count)  <span class="comment"># y行不变遍历获取x列的是否运行</span></span><br><span class="line">        data = self.data.get_data_for_json(row_count)  <span class="comment"># y行不变遍历获取x列的请求数据，这里面时三次调用，依次分别是get_data_for_json丶get_key_words丶get_request_data</span></span><br><span class="line">        <span class="comment"># header = self.data.get_is_header(row_count)  #行不变遍历获取x列获取header</span></span><br><span class="line">        header = self.data.get_data_for_header(row_count)</span><br><span class="line">        module = self.data.get_module_name(row_count)  <span class="comment">#行不变遍历获取x列获取模块名</span></span><br><span class="line">        expect = self.data.get_expect_data(row_count)  <span class="comment">#行不变遍历获取x列获取预期结果</span></span><br><span class="line">        data_dependent = self.data.get_data_dependent(row_count)  <span class="comment"># 数据依赖</span></span><br><span class="line">        case_dependent = self.data.get_case_dependent(row_count)  <span class="comment"># case依赖</span></span><br><span class="line">        <span class="keyword">if</span> data_dependent != <span class="literal">None</span>:</span><br><span class="line">            <span class="comment"># 当数据依赖不为空时，则实例化handle_data_dependent模块中的HandleData类，并调用类中的get_data_for_key方法将需要的cart2No数据获取到</span></span><br><span class="line">            self.hd = HandleData(case_dependent)</span><br><span class="line">            dependent_response_data = self.hd.get_data_for_key(row_count)</span><br><span class="line">            print(dependent_response_data)</span><br></pre></td></tr></table></figure><ul><li>将不需要的打印数据进行注释掉后，运行启动文件成功打印出dependent_response_data数据，即就是服务器响应数据中的cart2No键的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625105858649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>为了进一步的测试，需要在excel表中填写下单接口的请求数据json的key值，博主这里命令为cart_data2</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625114450940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后在json文件中，需要定义名为cart_data2的json数据，请留意请求数据中的cart2No得值，因为在接下来的测试代码中会自动的去跟新cart2No的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625114802300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>经过测试成功打印出接口数据依赖的key的值，说明在excel表中填写的依赖返回数据的格式是没问题的成功的被jsonpath_rw进行匹配并获取出，接下来则需要将获取到的cart2No的值赋给请求数据data中的cart2No键的值，而cart2No键就是通过get_data_dependent方法获取到excel表中数据依赖字段的值，最后通过requests模块post请求向目标接口发送请求数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625114940648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>重点：</strong><font style="color:red">大家看到这里应该也没啥不明白的吧，如果有请不要着急，博主把整个实现过程讲一下，代码写到这里其实分为两个部分，第一个部分就是获取case_id也就是存在依赖字段的case中的case依赖的值，根据该值来获取其在excel表中的x坐标列，因为y坐标是固定的，所以就可以获取依赖的case的所有行数据，紧接着就可以发送接口数据获的服务器返回的响应数据了，然后在对服务器返回的响应数据中通过jsonpath_rw模块中的方法提取我们想要的cart2No字段的值；第二部分就是在启动文件run_test模块中首先去获取依赖的数据以及case依赖数据，根据依赖数据不为空时去调用第一部分的核心代码来获取cart2No得值，然后将这个值赋值给请求数据data，也就是excel表中cart_data2键的值，可能有些人有点晕，为啥在run_test启动文件中只向存在依赖关系的case发送请求呢，那是因为做了判断了；</font>为了演示出两个部分发送的请求所需的参数以及对应在excel表中的字段数据，博主在handle_data_dependent模块中也进行了打印</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625120220801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>现在运行run_test启动文件，查看结果完全没问题，之前特意说明了json文件中的cart_data2的数据中的cart2No的值，现在运行代码后，将下单接口返回的响应数据中的cart2No的值赋给请求数据data，所以这里打印出来的请求数据的值的cart2No键的值与下单接口的响应数据中的值一致，需要说明的是支付的接口是测试失败，返回的响应数据中的错误信息为”errorMessage”:”销售火爆，请稍后再试(E234)”</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625132542788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>因为在APP购买中也是提示此错误，这是其接口关闭或者不能在app苏宁易购中购买</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625120627126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>18.数据依赖问题之流程实施</strong></p><ul><li>上一步中已经成功的提取cart2No得值以及向支付接口发送数据，现在则需要判断返回的响应数据中的isSuccess字段的值是否为Y，并将最终的测试结果写入到excel表实际结果字段中去，那么首先需要在excel表中填写预测结果</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625130047145.png" alt></fancybox></p><ul><li>从下单和支付两个接口返回的响应数据中看出isSuccess字段存在不一样的层级，所以在common_util模块中需要添加支付接口返回响应数据的字典层级判断来获取正确为的isSuccess字段的值，因为苏宁易购app这边cookie需要经常更换，所以博主添加了异常处理</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/21 18:43'</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CommonUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_contains</span><span class="params">(self, expect, reality)</span>:</span></span><br><span class="line">        flag = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            reality = json.loads(reality)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">"Cookie已过期，请及时更新!!!"</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        expect = json.loads(expect)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'result'</span> <span class="keyword">in</span> reality[<span class="string">'data'</span>]:</span><br><span class="line">            <span class="keyword">if</span> expect[<span class="string">'isSuccess'</span>] == reality[<span class="string">'data'</span>][<span class="string">'result'</span>][<span class="string">'isSuccess'</span>]:</span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> expect[<span class="string">'isSuccess'</span>] == reality[<span class="string">'data'</span>][<span class="string">'cartHeadInfo'</span>][<span class="string">'isSuccess'</span>]:</span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> flag</span><br></pre></td></tr></table></figure><ul><li><p>因为博主这里想要两个接口的测试结果并将数据写入到excel实际结果中去，所以需要分别在handle_data_dependent模块以及run_test模块中进行调用common_util模块中的is_contains，并根据返回的结果将数据写入到excel实际结果字段中去</p></li><li><p>run_test模块中</p></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625130712723.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>handle_data_dependent模块中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625130837483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试前首先需要关闭excel表，然后运行代码成功将正确的测试数据结果写入到excel对应字段中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625133026474.gif" alt></fancybox></p><p><strong>19.case运行结果统计</strong></p><ul><li>博主在handle_data_dependent模块中定义一个方法print_test_data用于打印出我们想要的测试数据，代码很简单就不说了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HandleData</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, case_id)</span>:</span></span><br><span class="line">        self.case_id = case_id</span><br><span class="line">        self.op_excel = operationExcel()</span><br><span class="line">        self.data = getData()</span><br><span class="line">        self.com_util = CommonUtil()</span><br><span class="line">        self.pass_count = []</span><br><span class="line">        self.fail_count = []</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print_test_data</span><span class="params">(self,url,method,module,is_run,data,header,expect,res,x)</span>:</span></span><br><span class="line">        <span class="string">"""打印测试数据"""</span></span><br><span class="line">        print(<span class="string">"模块名:"</span>, module)</span><br><span class="line">        print(<span class="string">'请求地址:'</span>, url)</span><br><span class="line">        print(<span class="string">'请求方式:'</span>, method)</span><br><span class="line">        print(<span class="string">'是否运行:'</span>, is_run)</span><br><span class="line">        print(<span class="string">'请求数据:'</span>, data)</span><br><span class="line">        print(<span class="string">'请求头:'</span>, header)</span><br><span class="line">        print(<span class="string">'预期结果:'</span>, expect)</span><br><span class="line">        print(res.text)</span><br><span class="line">        <span class="keyword">if</span> self.com_util.is_contains(expect, res.text):</span><br><span class="line">            print(<span class="string">"测试通过"</span>)</span><br><span class="line">            print(<span class="string">"*"</span> * <span class="number">60</span> + <span class="string">"分割线"</span> + <span class="string">"*"</span> * <span class="number">60</span>)</span><br><span class="line">            self.data.write_reality_data(x, <span class="string">'pass'</span>)</span><br><span class="line">            self.pass_count.append(x)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"测试失败"</span>)</span><br><span class="line">            print(<span class="string">"*"</span> * <span class="number">60</span> + <span class="string">"分割线"</span> + <span class="string">"*"</span> * <span class="number">60</span>)</span><br><span class="line">            self.data.write_reality_data(x, <span class="string">'fail'</span>)</span><br><span class="line">            self.fail_count.append(x)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> self.pass_count, self.fail_count</span><br></pre></td></tr></table></figure><ul><li>然后在run_dependent_case方法中去调用以上定义的打印测试数据的方法</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625173335783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>以及在run_test模块中调用print_test_data方法，并接收返回值，最后打印出统计的case测试结果数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625173836200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>运行启动文件run_test，成功打印出case成功失败以及测试case总量数</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625173945106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>20.构建发送邮件服务</strong></p><p><strong>说明：</strong>博主这里使用163邮箱POP3/SMTP服务向qq邮箱发送邮件</p><ul><li>首先需要进入163个人邮箱中，开启POP3/SMTP服务</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625201641775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后开启客户端授权密码并进行设置，改授权密码需要记住，用于第三方也就是我们代码中需要填写的password</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625201802993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>紧接着在项目utils工具包下创建send_email.py文件，在该文件中编写代码登录连接163邮箱的POP3/SMTP服务向目标邮箱发送指定主题以及内容的邮件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/25 18:05'</span></span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SendEmail</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> send_user</span><br><span class="line">    <span class="keyword">global</span> pwd</span><br><span class="line">    <span class="keyword">global</span> email_host</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">send_mail</span><span class="params">(self,user_list,content,sub)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :param user_list: 收件人列表</span></span><br><span class="line"><span class="string">        :param content: 邮件内容</span></span><br><span class="line"><span class="string">        :param sub: 主题</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        send_user = <span class="string">"cdtaogang@163.com"</span></span><br><span class="line">        password = <span class="string">"设置的授权码"</span></span><br><span class="line">        email_host = <span class="string">"smtp.163.com"</span></span><br><span class="line">        sender_msg = <span class="string">"cdtaogang"</span>+<span class="string">"&lt;"</span>+send_user+<span class="string">"&gt;"</span></span><br><span class="line">        message = MIMEText(content, _subtype=<span class="string">'plain'</span>, _charset=<span class="string">'utf-8'</span>)</span><br><span class="line">        message[<span class="string">'Subject'</span>] = sub</span><br><span class="line">        message[<span class="string">'From'</span>] = sender_msg</span><br><span class="line">        message[<span class="string">'To'</span>] = <span class="string">";"</span>.join(user_list)</span><br><span class="line">        server = smtplib.SMTP()</span><br><span class="line">        server.connect(email_host)</span><br><span class="line">        server.login(send_user,password)</span><br><span class="line">        server.sendmail(sender_msg,user_list,message.as_string())</span><br><span class="line">        server.close()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    user_list = [<span class="string">'2384005622@qq.com'</span>]</span><br><span class="line">    sub = <span class="string">"测试邮件"</span></span><br><span class="line">    content = <span class="string">"这是用来测试的邮件!!!"</span></span><br><span class="line">    SendEmail().send_mail(user_list,content,sub)</span><br></pre></td></tr></table></figure><ul><li>然后运行以上代码，登录<a href="mailto:2384005622@qq.com" target="_blank" rel="noopener">2384005622@qq.com</a>邮箱，查看是否收到邮件，并核实邮件内容和主题是否与设置的一致</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625202319928.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>21.结果统计+报告通知</strong></p><ul><li>首先在send_email模块中定义send_main方法，该方法用于自动化测试结果的统计</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_main</span><span class="params">(self, pass_num, fail_num)</span>:</span></span><br><span class="line">    pass_num = float(pass_num)</span><br><span class="line">    fail_num = float(fail_num)</span><br><span class="line">    count_nums = pass_num + fail_num</span><br><span class="line">    <span class="comment"># 计算通过率</span></span><br><span class="line">    pass_result = <span class="string">"%.2f%%"</span> %(pass_num/count_nums*<span class="number">100</span>)</span><br><span class="line">    fail_result = <span class="string">"%.2f%%"</span> %(fail_num/count_nums*<span class="number">100</span>)</span><br><span class="line">    user_list = [<span class="string">'2384005622@qq.com'</span>]</span><br><span class="line">    sub = <span class="string">"接口自动化测试报告"</span></span><br><span class="line">    content = <span class="string">"本次自动化测试一共运行的接口数为:%d个, 通过个数为:%d个, 失败个数为:%d个, 通过率为:%s, 失败率为:%s"</span> %(count_nums,pass_num,fail_num,pass_result,fail_result)</span><br><span class="line">    print(content)</span><br></pre></td></tr></table></figure><ul><li>调用send_main方法，测试打印的content内容数据是否正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625205213678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后在send_main中调用send_mail方法，将自动化测试报告发送到目标邮箱中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625205535342.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看邮箱邮件，成功将自动化测试报告发送至邮箱中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019062520570972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>最后只需要在启动文件run_test中，实例化SendEmail对象，调用其send_main方法，将pass_count和fail_count传递即可，这样就可以完成自动化邮件测试报告的发送</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625210725930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试运行run_test启动文件，将测试结果报告发送至邮箱</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625211235768.gif" alt></fancybox></p><h1 id="八丶持续集成"><a href="#八丶持续集成" class="headerlink" title="八丶持续集成"></a>八丶持续集成</h1><p><strong>1.持续集成环境搭建</strong></p><ul><li>除了在编辑器中直接run运行run_test.py启动文件以外，还可以在windows cmd终端以及Pycharm Terminal终端使用python解释器直接运行，如下图所示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625214038711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>如上图提示找到不到base模块，明明在Pycharm中都能运行成功为啥在终端却提示找不到导入的模块呢，原因是在PyCharm中根据其的path查找路径进行查找，而在编辑器外使用终端进行运行模块时，则是从系统路径中进行查找，解决方法在run_test模块中导入sys模块，将文件所在的目录添加到sys的path路径中去，记得添加你的run_test文件所在的路径</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.append(<span class="string">"D:/PycharmProjects/testItems"</span>)</span><br></pre></td></tr></table></figure><ul><li>再次在终端执行则提示成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625215712800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看邮箱已收到自动化测试报告邮件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625215840124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>下载安装<a href="https://jenkins.io/zh/" target="_blank" rel="noopener">Jenkins</a>，进入其官网下载页面，如下图所示，各种版本的下载，博主这里就不下载windows版本的Jenkins，因为安装太简单，只需要一直下一步，博主下载Generic Java package (.war)版本</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625220853622.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>没有java环境的朋友就下载windows版本的，下载完成后，在java安装目录下新建Jenkins目录将jenkins.war文件拷贝进入，然后在cmd终端中执行java -jar jenkins.war，如下图所示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625225716979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后在浏览器中访问<a href="http://127.0.0.1:8080" target="_blank" rel="noopener">http://127.0.0.1:8080</a>，进入以下页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625230941270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在如上页面中路径打开initialAdminPassword文件或者是在cmd运行窗口日志中查看管理员密码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625231242282.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在页面输入管理员密码后，进入如下页面，选择安装推荐的插件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625231436956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>安装插件需要等待</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625231549824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>插件安装完成后，即进入如下页面，创建管理员用户</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190625234214609.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>进入到Jenkins的管理页面，点击创建一个item，如下图所示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190626001503767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>输入任务名字，选择一个主题风格，然后点击确定，如下图</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190626001736139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后对创建的任务进行配置，首先配置这个任务所在的工作区间位置也就是我们的项目启动文件的目录</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190626003227992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>构建任务的触发器，设定下一此执行任务的时间</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019062600341445.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>构建运行项目的windows命令，点击保存</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190626003402879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>保存完后，到如下页面，点击Build Now立即创建，则在Build History构建历史中，生成记录，如下图所示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019062600535695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>紧接着点击构建的#5进入控制台输出，查看输出结果成功的执行了python run_test.py 命令，成功的执行了自动化测试启动文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190626010125318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看目标邮箱成功收到邮件，说明使用Jenkins工具进行持续化集成项目成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190626005812657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="九丶获取cookie及请求处理"><a href="#九丶获取cookie及请求处理" class="headerlink" title="九丶获取cookie及请求处理"></a>九丶获取cookie及请求处理</h1><p><strong>1.获取cookie思路分析</strong></p><ul><li>如苏宁易购的提交订单接口，是需要用户登录后才能进行的操作，之前获取下单的接口都是在app中进行获取的，博主在这里登录网页版的苏宁官网，抓取下单的接口</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628094132699.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后退出登录，在浏览器中输入以上fiddler抓取的下单接口，服务器就会重定向到登录的接口</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628094535185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在登录页面，输入选择手机号验证码登录，输入手机号以及验证码，点击登录</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628095017853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>点击登录成功后，查看fiddler抓取的接口，第一个接口未检查用户的登录状态，服务返回的json数据中的result值为True时，表示用户是已经登录成功的，那么即就会去跳转到之前下单的接口，当然访问检查登录接口时同时也会将下单targetUrl地址携带到请求参数中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628095358467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><font style="color:red"><strong>重点：</strong></font>从fiddler抓取的接口看来，首先苏宁这边用户下单接口必须是在用户登录成功的状态才能进行的，当博主退出登录后，然后在浏览器中直接访问下单的<a href="https://reg.suning.com/smsLogin/checkLoginAccount.do?" target="_blank" rel="noopener">https://reg.suning.com/smsLogin/checkLoginAccount.do?</a>接口，此时就会触发苏宁的服务器去调用检查登录的令牌来检验用户是否已经登录，如不存在此令牌则会跳转到苏宁的登录接口进行用户登录，点击登录后则会去访问<a href="https://passport.suning.com/ids/login?" target="_blank" rel="noopener">https://passport.suning.com/ids/login?</a>接口，当登录成功后，服务器会返回一个名为 secureToken的cookie回来，并且会跳转到登录请求参数中的referenceURL地址中也就是<a href="https://passport.suning.com/ids/login?service=https://shopping.suning.com/auth?targetUrl=https%3A%2F%2Fshopping.suning.com%2Forder.do%3Fcart2No%3D620200000212045085" target="_blank" rel="noopener">https://passport.suning.com/ids/login?service=https://shopping.suning.com/auth?targetUrl=https%3A%2F%2Fshopping.suning.com%2Forder.do%3Fcart2No%3D620200000212045085</a>这个地址，要想进入此下单页面则需要在请求的cookie中携带secureToken的值，不然无法进入下单页面，则会跳转到登录页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628103720257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628104011706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.模拟登录获取cookie请求订单接口</strong></p><ul><li><font style="color:red"><strong>第一步：</strong></font>首先在电脑端退出苏宁易购的登录，然后在浏览器中输入<a href="https://shopping.suning.com/order.do?cart2No=620200000212045085" target="_blank" rel="noopener">https://shopping.suning.com/order.do?cart2No=620200000212045085</a>，去访问下单接口，此时会跳转到登录页面，然后在登录页面输入用户名密码后，点击登录，最后回到fiddler上查看抓取的苏宁易购登录接口<a href="https://passport.suning.com/ids/login" target="_blank" rel="noopener">https://passport.suning.com/ids/login</a>，通过查看该接口获取请求header中携带的cookie值，将其拷贝</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628115803371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><font style="color:red"><strong>第二步：</strong></font>在fiddler上获取登录接口请求中的data数据，因为是POST请求嘛所以在WebForms可以查看得到，同样的将其拷贝</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628115942664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><font style="color:red"><strong>第三步：</strong></font>模拟登录，在项目utils工具目录下，创建analog_login.py文件，在文件中使用requests模块向登录接口发送请求获取响应内容，实现模拟登录，该请求需要携带cookie并传递data数据，才能成功的实现苏宁网站的登录</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628122207562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><font style="color:red"><strong>第四步：</strong></font>运行程序，查看苏宁服务器返回的数据，对比与博主在官网登录成功后fiddler工具抓取的登录成功服务器返回的响应数据一致，表示模拟登录成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628120734475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628120928438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><font style="color:red"><strong>第五步：</strong></font>也就是直接打印出返回的响应数据res中的cookie即可，但是苏宁这边的登录安全防护这边做的很好，毕竟是大企业嘛，所以过了一段时间运行代码服务器就会返回验证码的错误代码数据，就好比一个网站你在很短的时间内不停的登录，就会出现安全验证比如验证码就是那种极其恶心拖动验证</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628123229794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><font style="color:red"><strong>第六步：</strong></font>再次重复第一步到第四步的步骤，博主在网页上进行拖动验证通过后，通过抓包工具fiddler可以明显看出，这次登录请求的data数据中明显多了些参数，这些参数就是验证码这块的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628123609876.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><font style="color:red"><strong>第七步：</strong></font>通过很多次的登录尝试，发现请求data中的数据中的iarVerifyCode的值的过期时间很短，所以需要不停的在网页上来进行登录通过fiddler抓取登录接口请求数据中的iarVerifyCode值，这个值的过期时间只有1分钟，所以需要更换代码中的iarVerifyCode值，这样才能进行模拟登录，打印服务返回的数据中的cookie数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628132747731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><font style="color:red"><strong>第八步：</strong></font>然后将从<a href="https://passport.suning.com/ids/login" target="_blank" rel="noopener">https://passport.suning.com/ids/login</a>接口中获取到的响应数据中的cookie数据作为下单接口<a href="https://shopping.suning.com/order.do?cart2No=620200000212045085" target="_blank" rel="noopener">https://shopping.suning.com/order.do?cart2No=620200000212045085</a>的请求数据中的cookie，来访问下单页面，这样就完成了模拟登录获取cookie请求订单接口</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628145912690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>最后一步运行程序，成功的利用登录成功服务器返回的cookie数据，成功的访问下单接口，获取下单页面数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628134443206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/93235627" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/93235627</a></p>]]></content>
      
      
      <categories>
          
          <category> 自动化接口框架开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fiddler </tag>
            
            <tag> Unittest </tag>
            
            <tag> HTMLTestRunner </tag>
            
            <tag> 接口自动化测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python接口自动化测试框架实战开发（一）</title>
      <link href="/2019/11/16/Python%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/11/16/Python%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><fancybox><img src="https://cdn.jsdelivr.net/gh/Hellotaogang/cdn@4.6.7/images/interface_test.png" width="900px" height="300px" align></fancybox><br>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶叙述"><span style="color:#4ea1db">一丶叙述</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶接口基础知识"><span style="color:#4ea1db">二丶接口基础知识</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶接口测试工具"><span style="color:#4ea1db">三丶接口测试工具</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶Fiddler的使用"><span style="color:#4ea1db">四丶Fiddler的使用</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶unittest使用"><span style="color:#4ea1db">五丶unittest使用</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶mock服务入门到实战"><span style="color:#4ea1db">六丶mock服务入门到实战</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#七丶接口自动化框架设计到开发"><span style="color:#4ea1db">七丶接口自动化框架设计到开发</span></a></li><a id="more"></a><h1 id="一丶叙述"><a href="#一丶叙述" class="headerlink" title="一丶叙述"></a>一丶叙述</h1><p><strong>1.项目介绍</strong></p><p>整个项目分为四个部分：接口基础丶接口开发丶Unittest与接口测试结合以及接口自动化框架从设计到开发</p><p>接口基础包括：HTTP接口 / 常见接口 / 接口工具 / 接口基础知识</p><p>接口开发：通过Django来开发get/post接口</p><p>Unittest与接口测试结合：unittest应用 / 断言 / requests引入 / HTMLTestRunner / case的管理</p><p>接口自动化框架从设计到开发：如何设计框架 / 封装工具类 / 重构基类 / 错误调试 / 结果收集以及处理 / 解决数据依赖 / 结果统计及报告发送</p><p>项目整体思路：通过对接口数据文档的读写操作，来获取文档中case的所有数据，然后通过requests模块来发送请求获取的响应数据，通过返回的响应数据中的某个标志性字段的值来判断是否测试成功或者失败，最后将测试的结果数据写入到测试文档或者是html页面又或者是将结果以邮件的形式发送到指定邮箱，这是整个大框架思路，要完成这一系列自动化的测试框架，则需要有一定的python代码基础，博主这里只是粗略的叙述了思路，有很多地方就不细说了比如数据依赖等就请大家慢慢的阅读吧</p><p><strong>2.测试报告效果预览</strong></p><ul><li>unittest和HTMLTestRunner结合生成报告（新版本的）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628152401691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>unittest和HTMLTestRunner结合生成报告（经典版本的）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628154501118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试报告邮件通知</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190628152856823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶接口基础知识"><a href="#二丶接口基础知识" class="headerlink" title="二丶接口基础知识"></a>二丶接口基础知识</h1><p><strong>1.什么是接口</strong></p><p>连接前后端以及移动端，通俗来说就是前端和后端之间的桥梁，比如网站需要去调用银行丶微信及支付宝的接口来完成业务需求</p><p><strong>2.接口的种类</strong></p><p>外部接口和内部接口；内部接口又分为上层服务与下层服务以及同级服务</p><p><strong>3.接口的分类</strong></p><p>请求方式：post丶get丶delete丶put</p><p><strong>4.为什么要做接口测试</strong></p><p>原因：不同端的工作进度肯定是不一致的，那么就需要对最开始开发出来的接口进行测试；对于项目来说缩短项目周期，提高开发效率以及提高系统的健壮性</p><p><strong>5.接口测试流程</strong></p><p>需求讨论——需求评审——场景设计——用例设计——数据准备——执行</p><p><strong>6.为什么要设计测试用例</strong></p><ul><li>理清思路，避免侧漏</li><li>提高测试效率</li><li>跟进测试进度</li><li>告诉领导做过</li><li>跟进重复重复性工作</li></ul><p><strong>7.用例设计分类</strong></p><p><strong>功能用例测试：</strong>测试功能是否正常丶测试功能是否按照接口文档实现</p><p><strong>逻辑用例设计：</strong>是否存在依赖业务，例如有些操作是需要用户登录成功的状态下才能进行的操作</p><p><strong>异常测试用例设计：</strong>参数异常以及数据异常；参数异常包括关键字参数丶参数为空丶多参数丶少参数丶错误参数，数据异常包括关键字数据丶数据为空丶长度不一致丶错误数据</p><p><strong>安全测试用例设计：</strong>cookie丶header丶唯一识别码</p><h1 id="三丶接口测试工具"><a href="#三丶接口测试工具" class="headerlink" title="三丶接口测试工具"></a>三丶接口测试工具</h1><p><strong>1.接口测试工具分类</strong></p><ul><li>抓取接口工具</li></ul><p><strong>httpwatch：</strong>集成于IE和Firefox浏览器中，在其他浏览器中无法使用，查看数据也比较麻烦</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190613155140400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>wireshark：</strong>只要是经过电脑的所有请求都会去抓取，导致数据量比较庞大，看数据也比较麻烦</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190613154236162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>fiddler：</strong>轻量级抓包工具，功能比较全，只会记录http请求不会像wireshark工具记录tcp和udp等请求</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190613154620501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试接口工具：</li></ul><p><strong>loadrunner：</strong>不仅仅是性能测试工具，由于该工具几乎都是基于http请求，所以也可以用来测试接口</p><p><strong>fiddler：</strong>它除了可以抓包还可以向接口发送各种请求</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190613160113688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>soapui：</strong>接口和自动化测试工具，功能也比较强大</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190613165752320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>jmeter：</strong>跟loadrunner一样不仅仅是做性能测试，也可以对接口进行测试</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190613170926541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>postman：</strong>谷歌旗下的接口测试工具</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190613173122840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶Fiddler的使用"><a href="#四丶Fiddler的使用" class="headerlink" title="四丶Fiddler的使用"></a>四丶Fiddler的使用</h1><p><strong>1.抓取不同类型接口数据（http以及https）</strong></p><ul><li>查看windows本机的IP</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616102151181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>配置fiddler</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616102331496.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>需要保证要抓取的手机与电脑保持同一网段，博主这里使用逍遥模拟器模拟安卓手机，修改手机网络</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616102410932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在高级选项中设置手动代理IP为windows本机IP地址，端口设置与fiddler抓取端口保持一致</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616102534420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>再安卓手机中打开知乎app，抓取知乎app的http服务的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616102745974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>现在的移动app都是基于https请求的，所以需要在fiddler中设置https请求</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616104754560.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后在手机端浏览器中访问windows电脑IP+port，进行网络安全证书的下载安装</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616105536697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>点击下面一个下载证书</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616105820923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后设置密码即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616105838526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>证书安装成功后，重新打开知乎app，则成功抓取https请求的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616110323708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在知乎app中随便对一文章进行评论，抓取该app评论接口</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616111626177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.数据模拟以及过滤规则</strong></p><ul><li>如下图进行选择要过滤的hosts类型，并在输入框添加要过滤的hosts即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019061611221693.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>对知乎上的一篇文章进行回答后，获取<a href="https://api.zhihu.com/answers" target="_blank" rel="noopener">https://api.zhihu.com/answers</a>接口，查看发送的post请求数据中的content字段内容也就是博主回答的内容</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616114209893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后进行数据模拟，也就是点击fiddler软件上的replay对<a href="https://api.zhihu.com/answers" target="_blank" rel="noopener">https://api.zhihu.com/answers</a>接口进行post请求数据的而二次发送，由于知乎这边设定对一个问题只能进行一次回答，所以知乎服务器返回的json数据提示我们失败，同时也说明对接口进行二次数据发送成功，只是规则逻辑失败</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616114632147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.如何模拟接口响应数据</strong></p><ul><li>首先第一步，访问知乎app热榜，在fiddler软件中获取接口查看服务器响应的json格式数据，从服务器返回的json数据看出热榜标题字段名为title_area</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616130323517.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后选择服务器返回的数据类型为TextView，点击.View in Notepad即打开数据记事本，如下图在记事本中找到title_area字段的内容，该字段内容进行了将中文转换为一串字符串</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616130511999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>将记事本中的title_area字段的数据修改为this is a test for cdtaogang</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616130918229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>点击文件——另存为保存到桌面 </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616131927773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>回到fiddler中，左侧选中热榜接口，右侧选中AutoResponder，在此窗口下点击Add Rule将左侧的接口添加进去，在右侧下方导入保存在桌面的zhihu_hot.htm文件，最后点击sava保存</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019061613103271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>回到知乎app中刷新当前热榜页面，则成功返回修改的热榜标题</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616132055358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.使用fiddler进行评论接口测试</strong></p><ul><li>对一篇文章进行评论，抓取评论接口，因为get请求的接口测试太简单，所以博主这里选择评论接口即POST请求方式</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616143241904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>右击评论接口选择copy复制接口的url地址</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616143341130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>右侧选择Composer，将复制的评论接口url粘贴到地址栏，并选择POST请求方式</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616143435678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>因为评论接口涉及到用户身份验证也就是登录后才能进行评论的，所以需要将comments接口中request headers请求头中的所有请求数据以及请求数据中的TextView的值进行复制</li></ul><p><strong>请求头数据</strong></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616143752238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>请求体数据</strong></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616143823354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>将上面复制的请求头和请求体数据分别粘贴到如下输入框中，点击Execute执行发送，然后在左侧则出现了另一个comments接口数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616144037902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看该comments接口，服务器返回的响应数据中与第一个comments接口一致，说明接口测试成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190616144407794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶unittest使用"><a href="#五丶unittest使用" class="headerlink" title="五丶unittest使用"></a>五丶unittest使用</h1><p><strong>1.unittest简单使用</strong></p><ul><li>在IDE中使用python的环境随便创建个py文件，需要注意的是该py文件的名字不能是test.py，否在运行时会出错，unittest包是python自带的不需要下载安装，代码如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/17 13:10'</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestMethod</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUpClass</span><span class="params">(cls)</span>:</span></span><br><span class="line">        print(<span class="string">"Method before class execution"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDownClass</span><span class="params">(cls)</span>:</span></span><br><span class="line">        print(<span class="string">"Method after class execution"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"------setUp------"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tearDown</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"------tearDown------"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_01</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"First test method"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_02</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"The second test method"</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure><ul><li>直接run运行以上代码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190617132533712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.unittest和request重构封装</strong></p><p><strong>说明：</strong>使用requests模块对接口url地址发送请求，通过unittest测试框架进行case测试</p><ul><li>首先博主在逍遥安卓模拟器中下载了一个看书app，通过fiddler对app上的某一接口进行获取，之所以选择对此app进行接口测试，是因为该app的所有接口全是POST请求</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190617203242327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在PyCharm下新建工程目录，目录下创建base包，在包下创建一个demo.py文件以及test_method.py文件，用于使用unittest框架来测试以上app接口</li></ul><p><img src="https://img-blog.csdnimg.cn/20190617204015343.png" alt></p><ul><li>在demo.py文件中，使用requests get以及post方法进行了封装，主要是根据传递的参数method来对get以及post方法进行分别调用而已，具体实现如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RunMain</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_get</span><span class="params">(self,url,data)</span>:</span></span><br><span class="line">res = requests.get(url=url,data=data).json()</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_post</span><span class="params">(self,url,data)</span>:</span></span><br><span class="line">res = requests.post(url=url,data=data).json()</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_main</span><span class="params">(self,url,method,data=None)</span>:</span></span><br><span class="line">res = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> method == <span class="string">'GET'</span>:</span><br><span class="line">res = self.send_get(url,data)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">res = self.send_post(url,data)</span><br><span class="line"><span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><ul><li>在test_method.py文件中则创建测试类以及test方法，在test方法中调用demo.py中的run_main方法，即使用requests模块向传递的接口url地址和请求方式以及请求体发送对应的请求，这里使用setUp方法则是利用其优先调用而对RunMain类进行实例化</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> HtmlTestRunner</span><br><span class="line"><span class="keyword">from</span> .demo <span class="keyword">import</span> RunMain</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestMethod</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.run = RunMain()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_01</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = <span class="string">'http://api.ishugui.com/asg/portal/call/265.do'</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"sstoken"</span>:<span class="string">"eyJleHAiOjE1Njg1MzgyNTczMzUsImlhdCI6MTU2MDc2MjI1NzMzNSwicHAiOiIxMTQwNTQ1Njg5MDYwMDQ0ODAwQHNvaHUuY29tIiwidGsiOiIwZkNYSHpjTUZzR0dFMEswbVdvUVFCNWVCanpXa0hmWiIsInYiOjB9.SDYkT9FpWrBbko6xRrESN74IXJhzkqQLtijKjGiVrqA"</span>,</span><br><span class="line">            <span class="string">"gidinf"</span>:<span class="string">"x011060802ff0fd40695d68140002799751474c540b3"</span>,</span><br><span class="line">            <span class="string">"ppinf"</span>:<span class="string">"2|1560762257|1561971857|bG9naW5pZDowOnx1c2VyaWQ6Mjg6MTE0MDU0NTY4OTA2MDA0NDgwMEBzb2h1LmNvbXxzZXJ2aWNldXNlOjMwOjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMHxjcnQ6MTA6MjAxOS0wNi0xN3xlbXQ6MTowfGFwcGlkOjY6MTEwNjA4fHRydXN0OjE6MXxwYXJ0bmVyaWQ6MTowfHJlbGF0aW9uOjA6fHV1aWQ6MTY6czk1YWIwNDk5NjE3YmJhNnx1aWQ6MTY6czk1YWIwNDk5NjE3YmJhNnx1bmlxbmFtZTowOnw"</span>,</span><br><span class="line">            <span class="string">"pprdig"</span>:<span class="string">"kaKPdU0WwIdzL58CqxNz5pgMyv23P0-Y5GRnd5ufPlXIGzrk7_7TlIK5XFQiuoqAHNqGVXHCVd4cB1DIkR5yFZ_nExnSjIZbBJWYlMkrsiIjDYqWCvedZRLm8sZqS0WqA0FcKXuSn3Z0gVRus9YpEonNz5wyuWdUqxaSmzlzygY"</span>,</span><br><span class="line">            <span class="string">"ppsmu"</span>:<span class="string">"1|1560762257|1561971857|dXNlcmlkOjI4OjExNDA1NDU2ODkwNjAwNDQ4MDBAc29odS5jb218dWlkOjA6fHV1aWQ6MDo|byWcaoPqy02s2_9GHLhZFAQ6Ov_GazMPFLrq115HiSTBS9Ijr33a55quRq2Mr1_6ZMruKEk-BYFpShUaMtwRYA"</span></span><br><span class="line">        &#125;</span><br><span class="line">        res1 = self.run.run_main(url, <span class="string">"POST"</span>, json.dumps(data))</span><br><span class="line">        print(res1)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_02</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = <span class="string">'http://api.ishugui.com/asg/portal/call/265.do'</span></span><br><span class="line">        data = &#123;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">        res2 = self.run.run_main(url, <span class="string">'POST'</span>, data)</span><br><span class="line"> </span><br><span class="line">        print(res2)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure><ul><li>运行test_method模块，查看测试接口，test_02则是错误测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190617205903518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.unittest中assert的使用</strong></p><ul><li>首先根据返回的结果字典dict数据中的status状态值来判断测试是否通过或者失败，逻辑很基础就不细说了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestMethod</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.run = RunMain()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_01</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = <span class="string">'http://api.ishugui.com/asg/portal/call/265.do'</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"sstoken"</span>:<span class="string">"eyJleHAiOjE1Njg1MzgyNTczMzUsImlhdCI6MTU2MDc2MjI1NzMzNSwicHAiOiIxMTQwNTQ1Njg5MDYwMDQ0ODAwQHNvaHUuY29tIiwidGsiOiIwZkNYSHpjTUZzR0dFMEswbVdvUVFCNWVCanpXa0hmWiIsInYiOjB9.SDYkT9FpWrBbko6xRrESN74IXJhzkqQLtijKjGiVrqA"</span>,</span><br><span class="line">            <span class="string">"gidinf"</span>:<span class="string">"x011060802ff0fd40695d68140002799751474c540b3"</span>,</span><br><span class="line">            <span class="string">"ppinf"</span>:<span class="string">"2|1560762257|1561971857|bG9naW5pZDowOnx1c2VyaWQ6Mjg6MTE0MDU0NTY4OTA2MDA0NDgwMEBzb2h1LmNvbXxzZXJ2aWNldXNlOjMwOjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMHxjcnQ6MTA6MjAxOS0wNi0xN3xlbXQ6MTowfGFwcGlkOjY6MTEwNjA4fHRydXN0OjE6MXxwYXJ0bmVyaWQ6MTowfHJlbGF0aW9uOjA6fHV1aWQ6MTY6czk1YWIwNDk5NjE3YmJhNnx1aWQ6MTY6czk1YWIwNDk5NjE3YmJhNnx1bmlxbmFtZTowOnw"</span>,</span><br><span class="line">            <span class="string">"pprdig"</span>:<span class="string">"kaKPdU0WwIdzL58CqxNz5pgMyv23P0-Y5GRnd5ufPlXIGzrk7_7TlIK5XFQiuoqAHNqGVXHCVd4cB1DIkR5yFZ_nExnSjIZbBJWYlMkrsiIjDYqWCvedZRLm8sZqS0WqA0FcKXuSn3Z0gVRus9YpEonNz5wyuWdUqxaSmzlzygY"</span>,</span><br><span class="line">            <span class="string">"ppsmu"</span>:<span class="string">"1|1560762257|1561971857|dXNlcmlkOjI4OjExNDA1NDU2ODkwNjAwNDQ4MDBAc29odS5jb218dWlkOjA6fHV1aWQ6MDo|byWcaoPqy02s2_9GHLhZFAQ6Ov_GazMPFLrq115HiSTBS9Ijr33a55quRq2Mr1_6ZMruKEk-BYFpShUaMtwRYA"</span></span><br><span class="line">        &#125;</span><br><span class="line">        res1 = self.run.run_main(url, <span class="string">"POST"</span>, json.dumps(data))</span><br><span class="line">        <span class="comment"># print(type(res1))</span></span><br><span class="line">        <span class="comment"># print(res1['pub'])</span></span><br><span class="line">        <span class="comment"># print(type(res1['pub']))</span></span><br><span class="line">        <span class="keyword">if</span> res1[<span class="string">'pub'</span>][<span class="string">'status'</span>] == <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"测试通过"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"测试失败"</span>)</span><br><span class="line">        print(res1)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_02</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = <span class="string">'http://api.ishugui.com/asg/portal/call/265.do'</span></span><br><span class="line">        data = &#123;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">        res2 = self.run.run_main(url, <span class="string">'POST'</span>, data)</span><br><span class="line">        <span class="keyword">if</span> res2[<span class="string">'pub'</span>][<span class="string">'status'</span>] == <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"测试通过"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"测试失败"</span>)</span><br><span class="line">        print(res2)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure><ul><li>运行以上代码，查看结果与预期一样</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019062009303826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>将if判断代码更换成unittest模块中的assert断言进行判断，这里使用assertEqual方法来判断两个值是否相等，当两个值相等则返回OK，当不相同时返回assertEqual方法msg变量自定义的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestMethod</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setUp</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.run = RunMain()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_01</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = <span class="string">'http://api.ishugui.com/asg/portal/call/265.do'</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"sstoken"</span>:<span class="string">"eyJleHAiOjE1Njg1MzgyNTczMzUsImlhdCI6MTU2MDc2MjI1NzMzNSwicHAiOiIxMTQwNTQ1Njg5MDYwMDQ0ODAwQHNvaHUuY29tIiwidGsiOiIwZkNYSHpjTUZzR0dFMEswbVdvUVFCNWVCanpXa0hmWiIsInYiOjB9.SDYkT9FpWrBbko6xRrESN74IXJhzkqQLtijKjGiVrqA"</span>,</span><br><span class="line">            <span class="string">"gidinf"</span>:<span class="string">"x011060802ff0fd40695d68140002799751474c540b3"</span>,</span><br><span class="line">            <span class="string">"ppinf"</span>:<span class="string">"2|1560762257|1561971857|bG9naW5pZDowOnx1c2VyaWQ6Mjg6MTE0MDU0NTY4OTA2MDA0NDgwMEBzb2h1LmNvbXxzZXJ2aWNldXNlOjMwOjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMHxjcnQ6MTA6MjAxOS0wNi0xN3xlbXQ6MTowfGFwcGlkOjY6MTEwNjA4fHRydXN0OjE6MXxwYXJ0bmVyaWQ6MTowfHJlbGF0aW9uOjA6fHV1aWQ6MTY6czk1YWIwNDk5NjE3YmJhNnx1aWQ6MTY6czk1YWIwNDk5NjE3YmJhNnx1bmlxbmFtZTowOnw"</span>,</span><br><span class="line">            <span class="string">"pprdig"</span>:<span class="string">"kaKPdU0WwIdzL58CqxNz5pgMyv23P0-Y5GRnd5ufPlXIGzrk7_7TlIK5XFQiuoqAHNqGVXHCVd4cB1DIkR5yFZ_nExnSjIZbBJWYlMkrsiIjDYqWCvedZRLm8sZqS0WqA0FcKXuSn3Z0gVRus9YpEonNz5wyuWdUqxaSmzlzygY"</span>,</span><br><span class="line">            <span class="string">"ppsmu"</span>:<span class="string">"1|1560762257|1561971857|dXNlcmlkOjI4OjExNDA1NDU2ODkwNjAwNDQ4MDBAc29odS5jb218dWlkOjA6fHV1aWQ6MDo|byWcaoPqy02s2_9GHLhZFAQ6Ov_GazMPFLrq115HiSTBS9Ijr33a55quRq2Mr1_6ZMruKEk-BYFpShUaMtwRYA"</span></span><br><span class="line">        &#125;</span><br><span class="line">        res1 = self.run.run_main(url, <span class="string">"POST"</span>, json.dumps(data))</span><br><span class="line">        <span class="comment"># print(type(res1))</span></span><br><span class="line">        <span class="comment"># print(res1['pub'])</span></span><br><span class="line">        <span class="comment"># print(type(res1['pub']))</span></span><br><span class="line">        <span class="comment"># if res1['pub']['status'] == 0:</span></span><br><span class="line">        <span class="comment">#     print("测试通过")</span></span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     print("测试失败")</span></span><br><span class="line">        self.assertEqual(res1[<span class="string">'pub'</span>][<span class="string">'status'</span>], <span class="number">0</span>, <span class="string">"测试失败"</span>)</span><br><span class="line">        print(res1)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_02</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = <span class="string">'http://api.ishugui.com/asg/portal/call/265.do'</span></span><br><span class="line">        data = &#123;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">        res2 = self.run.run_main(url, <span class="string">'POST'</span>, data)</span><br><span class="line">        <span class="comment"># if res2['pub']['status'] == 0:</span></span><br><span class="line">        <span class="comment">#     print("测试通过")</span></span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     print("测试失败")</span></span><br><span class="line">        self.assertEqual(res2[<span class="string">'pub'</span>][<span class="string">'status'</span>], <span class="number">0</span>, <span class="string">"测试失败"</span>)</span><br><span class="line">        print(res2)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure><ul><li>测试查看结果，断言失败，测试结果如下很清晰</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620094641513.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.unittest中case的管理及运用</strong></p><ul><li>在测试一些接口时，有些接口的返回数据需要在下一个接口进行使用，所以需要定义全局变量，方便每个case都能够得着，当在test_01中定义全局变量userid，然后在test_02中进行打印</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019062009594167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在unittest中，是按照字母数字来进行case先后执行顺序的，将test_01改为test_03后，运行代码后，会提示test_02中的userid未定义，原因是程序先去执行了test_02这个case，所以出现该提示是正常的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620100316940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>当在测试代码中有很多case时，我想跳过某个case，则在该case方法上定义unittest的skip方法装饰器，并需要传递此方法名作为实参进行传递</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620101028245.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>除了在if <strong>name</strong> == ‘<strong>main</strong>‘中使用unittest.main方法执行所有的case以外，还可以将要测试的case添加到unittest.TestSuite集合中执行想要执行的case，若想要全部都执行则需要一个一个的添加</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620102828506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>5.unittest和HTMLTestRunner结合生成报告（博主这里给大家展现两种）</strong></p><p><font style="color:red"><strong>第一种：比较新版本的htmltestrunner报告</strong></font></p><ul><li>安装HTMLTestRunner，在<a href="https://pypi.org/project/html-testRunner/#files" target="_blank" rel="noopener">https://pypi.org/project/html-testRunner/#files</a> 网站上进行下载whl文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620104550852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后将下载好的whl文件放在你的项目环境的Scripts目录下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620104723582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>最后在Terminal终端或者cmd终端中进入以上目录，执行如下命令即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620105004508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>安装成功后，即在以下路径中可以找到安装的HTMLTestRunner的包了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620105136939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在if <strong>name</strong> == ‘<strong>main</strong>‘中只需要调用HtmlTestRunner模块中的HtmlTestRunner类，向该类传递报告标题参数值即可，其他均默认，需要注意的时启动文件run为当前的py文件，如果是Unittests开头的启动文件，则不会运行if <strong>name</strong> == ‘<strong>main</strong>‘下的代码，只会执行unittest框架的setUp以及test开头的case代码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620123843461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>运行test_method.py文件，成功在base目录下创建reports目录，并在该目录下生成对应时间的测试报告</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620125533418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>打开reports目录下生成的html测试报告，查看测试内容，与预期设定一样，test_02失败test_03成功，说明一下报告中的乱码为中文</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620124212640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><font style="color:red"><strong>第二种：比较经典版本的htmltestrunner报告</strong></font></p><ul><li>为了方便演示效果，博主在testItems项目目录下，创建base2的模块，将base模块下的demo.py和test_method.py文件拷贝到base2目录下并将test_method.py命令为test_method2.py免得搞混淆，然后在base2目录下新建HTMLTestRunner.py文件用于存放其源码，目录结构如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620124855218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>紧接着到<a href="http://tungwaiyip.info/software/HTMLTestRunner_0_8_2/HTMLTestRunner.py" target="_blank" rel="noopener">http://tungwaiyip.info/software/HTMLTestRunner_0_8_2/HTMLTestRunner.py</a> 地址中将HTMLTestRunner.py的代码全选拷贝，然后粘贴到base2/HTMLTestRunner.py文件中，因为该版本的HTMLTestRunner代码是以py2进行编写的，博主的环境使用的是py3，所以需要进行修改，修改的内容如下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第94行， 将import StringIO修改成import io</span><br><span class="line">第539行，将self.outputBuffer = StringIO.StringIO()修改成self.outputBuffer = io.StringIO()</span><br><span class="line">第642行，将if not rmap.has_key(cls):修改成if not cls in rmap:</span><br><span class="line">第631行，将print &gt;&gt; sys.stderr, &apos;\nTime Elapsed: %s&apos; % (self.stopTime-self.startTime)修改成print(sys.stderr, &apos;\nTime Elapsed: %s&apos; % (self.stopTime-self.startTime))</span><br><span class="line">第766行，将uo = o.decode(&apos;latin-1&apos;)修改成uo = e</span><br><span class="line">第775行，将ue = e.decode(&apos;latin-1&apos;)修改成ue = e</span><br></pre></td></tr></table></figure><ul><li>在test_method2模块中首先需要从base2模块中去导入HTMLTestRunner文件，然后if <strong>name</strong> == ‘<strong>main</strong>‘中，需要创建一个文件源，同样是调用HTMLTestRunner模块中的HTMLTestRunner类，不同的是需要将创建的文件源传递给实例属性stream变量</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620130110696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>运行test_method2.py，成功在上一级report目录下生成html_report.html报告文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620130310900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>打开html_report.html测试报告，测试结果与代码设定一致</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620130443400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="六丶mock服务入门到实战"><a href="#六丶mock服务入门到实战" class="headerlink" title="六丶mock服务入门到实战"></a>六丶mock服务入门到实战</h1><p><strong>1.mock简介</strong></p><p>mock测试就是在测试过程中，对于某些不容易构造或者不容易获取的对象，用一个虚拟的对象来创建以便测试的测试方法，mock是在测试过程中，对于一些不容易构造/获取的对象，创建一个mock对象来模拟对象的行为即就是模拟fiddler返回接口响应数据的一个过程。</p><p><strong>2.mock安装</strong></p><ul><li>在终端使用pip进行安装即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019062015412713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.在case中通过底层函数实现mock</strong></p><ul><li>在test_method模块中导入mock，然后在test_03函数中通过以下代码设置返回的return_value的值为请求的data数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mock_data = mock.Mock(return_value=data)</span><br><span class="line">print(mock_data)</span><br></pre></td></tr></table></figure><ul><li>run运行Unittests in test_method.py，打印出Mock id的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019062016200462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>将调用run_main方法的值设定为mock_data，即print(res1)则表示打印请求的data数据的值，<font style="color:red">因为res1的数据不再是接口返回的响应数据，则arrest断言是会提示报错的，这是正常的</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620162246859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.重构封装mock服务</strong></p><ul><li>在base目录下创建mock_demo.py文件，构造一个mock_test方法，该方法就是将test_03方法中self.run.run_main = mock.Mock(return_value=data) 和 res1 = self.run.run_main(url, “POST”, json.dumps(data))方法的调用进行了封装成为test_02和test_03方法通用的一个方法，上一步骤中的代码mock_data = mock.Mock(return_value=data) 和self.run.run_main = mock_data，即就相当于self.run.run_main = mock.Mock(return_value=data)而已，都是python基本的调用封装基础知识，mock_demo.py中的代码如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/20 16:26'</span></span><br><span class="line"><span class="keyword">from</span> mock <span class="keyword">import</span> mock</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mock_test</span><span class="params">(mock_method, request_data, url, method, response_data)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :param mock_method:</span></span><br><span class="line"><span class="string">    :param request_data:</span></span><br><span class="line"><span class="string">    :param url:</span></span><br><span class="line"><span class="string">    :param method:</span></span><br><span class="line"><span class="string">    :param response_data:</span></span><br><span class="line"><span class="string">    :return: res</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    mock_method = mock.Mock(return_value=response_data)</span><br><span class="line">    print(<span class="string">'mock_method:'</span>, mock_method)</span><br><span class="line">    res = mock_method(url, method, json.dumps(request_data))</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><ul><li>那么在test_03方法中，如下进行调用即可</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">res1 = mock_test(self.run.run_main, data, url, &apos;POST&apos;, &apos;ssssssss&apos;)</span><br><span class="line">print(&apos;res1:&apos;, res1)</span><br></pre></td></tr></table></figure><ul><li>运行Unittests in test_method.py，查看运行结果和博主设定一样成功返回自定义的response_data数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019062016550410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="七丶接口自动化框架设计到开发"><a href="#七丶接口自动化框架设计到开发" class="headerlink" title="七丶接口自动化框架设计到开发"></a>七丶接口自动化框架设计到开发</h1><p><strong>1.如何设计一个接口自动化测试框架</strong></p><p>根据接口地址丶接口类型丶请求数据丶预期结果来进行设计，对于需要登录后才能进行操作的接口那么则需要进行header cookie等数据的传递，自动化测试的难点就是数据依赖。</p><p><strong>2.python操作excel获得内容</strong></p><ul><li>首先python操作excel，需要安装两个包，分别是xlrd和xlwt这两个库，xlrd这个库是负责读取excel数据的，而xlwt库是负责向excel写入数据的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620172617439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在项目目录下创建utils工具包，在该包下创建op_excel.py文件，在该文件中通过导入xlrd包，对excel表的数据进行读取操作</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620181401309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.重构操作excel函数</strong></p><ul><li>根据上一步骤读取excel表的内容代码后，进行了一个简单的封装，提高代码的通用性，过程相当的简单，实现代码如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/20 17:33'</span></span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"> </span><br><span class="line">data = xlrd.open_workbook(<span class="string">"../test_data/rs.xls"</span>)</span><br><span class="line">tables = data.sheets()[<span class="number">0</span>]  <span class="comment"># 获取表格数据对象</span></span><br><span class="line">print(tables.nrows) <span class="comment"># 打印表格行数</span></span><br><span class="line">print(tables.cell_value(<span class="number">0</span>,<span class="number">0</span>))  <span class="comment"># 打印excel表格数据，需要传递数据所在的坐标(x,y)</span></span><br><span class="line">print(tables.cell_value(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">print(<span class="string">"*"</span>*<span class="number">50</span>+<span class="string">"封装前后数据对比"</span>+<span class="string">"*"</span>*<span class="number">50</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">operationExcel</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, file_path=<span class="string">"../test_data/rs.xls"</span>, sheet_id=<span class="number">0</span>)</span>:</span></span><br><span class="line">        self.file_path = file_path</span><br><span class="line">        self.sheet_id = sheet_id</span><br><span class="line">        self.data = self.get_data()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_data</span><span class="params">(self)</span>:</span></span><br><span class="line">        data = xlrd.open_workbook(self.file_path)</span><br><span class="line">        tables = data.sheets()[self.sheet_id]</span><br><span class="line">        <span class="keyword">return</span> tables</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_rows</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""获取单元格的排数"""</span></span><br><span class="line">        <span class="keyword">return</span> self.data.nrows</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_cell_value</span><span class="params">(self, x=<span class="number">0</span>, y=<span class="number">0</span>)</span>:</span></span><br><span class="line">        <span class="string">"""获取某个单元格的数据"""</span></span><br><span class="line">        <span class="keyword">return</span> self.data.cell_value(x, y)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(operationExcel().get_rows())</span><br><span class="line">    print(operationExcel().get_cell_value())</span><br><span class="line">    print(operationExcel().get_cell_value(<span class="number">0</span>,<span class="number">1</span>))</span><br></pre></td></tr></table></figure><ul><li>运行op_excel.py文件后，结果与封装之前代码结果一致，表示重构封装代码成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620184824963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.学习操作json文件</strong></p><ul><li>自定义一个登录的json文件名为login.json，文件内容如下，存放在test_data目录下</li></ul><p><img src="https://img-blog.csdnimg.cn/20190620190132820.png" alt></p><ul><li>在utils工具包下创建op_json.py文件，在文件中对login.json文件内容进行读取操作，代码如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019062019082690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>5.重构json工具类</strong></p><ul><li>将上一步操作json的代码进行封装</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">operationJson</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, file_path=<span class="string">"../test_data/login.json"</span>)</span>:</span></span><br><span class="line">        self.file_path = file_path</span><br><span class="line">        self.data = self.get_data()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_data</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> open(self.file_path) <span class="keyword">as</span> f:</span><br><span class="line">            data = json.load(f)</span><br><span class="line">            <span class="keyword">return</span> data</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_key_words</span><span class="params">(self, key=None)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> key:</span><br><span class="line">            <span class="keyword">return</span> self.data[key]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.data</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(operationJson().get_key_words())</span><br><span class="line">    print(operationJson().get_key_words(<span class="string">"login"</span>))</span><br><span class="line">    print(operationJson().get_key_words(<span class="string">"login"</span>)[<span class="string">'username'</span>])</span><br></pre></td></tr></table></figure><ul><li>运行op_json.py文件，结果与封装之前代码结果一致，表示重构封装代码成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190620193959689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>6.封装获取常量方法</strong></p><ul><li>首先打开excel表格，查看需要获取的字段有哪些</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621094819611.png" alt></fancybox></p><ul><li>对excel表的字段进行获取，在项目目录下创建名为data的python包，在该包下创建data_conf.py，代码就是简单的获取对应的变量值，具体如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/21 9:29'</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">global_var</span>:</span></span><br><span class="line">    id = <span class="string">'0'</span>  <span class="comment"># id</span></span><br><span class="line">    module = <span class="string">'1'</span>  <span class="comment"># 模块</span></span><br><span class="line">    url = <span class="string">'2'</span>  <span class="comment"># url</span></span><br><span class="line">    run = <span class="string">'3'</span>  <span class="comment"># 是否运行</span></span><br><span class="line">    request_type = <span class="string">'4'</span>  <span class="comment"># 请求类型</span></span><br><span class="line">    request_header = <span class="string">'5'</span>  <span class="comment"># 是否携带header</span></span><br><span class="line">    case_depend = <span class="string">'6'</span>  <span class="comment"># case依赖</span></span><br><span class="line">    response_data_depend = <span class="string">'7'</span>  <span class="comment"># 依赖的返回数据</span></span><br><span class="line">    data_depend = <span class="string">'8'</span>  <span class="comment">#  数据依赖</span></span><br><span class="line">    request_data = <span class="string">'9'</span>  <span class="comment"># 请求数据</span></span><br><span class="line">    expect_result = <span class="string">'10'</span>  <span class="comment"># 预期结果</span></span><br><span class="line">    reality_result = <span class="string">'11'</span>  <span class="comment"># 实际结果</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_id</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.id</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_module</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.module</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_url</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.url</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_run</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.run</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_request_type</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.request_type</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_request_header</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.request_header</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_case_depend</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.case_depend</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_response_data_depend</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.response_data_depend</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data_depend</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.data_depend</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_request_data</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.request_data</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_expect_result</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.expect_result</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_reality_result</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> global_var.reality_result</span><br></pre></td></tr></table></figure><p><strong>7.封装获取接口数据</strong></p><ul><li>在data目录下创建data_get.py文件，在该文件中对excel表数据以及json数据结合上一步封装的常量方法整合后的实现，代码如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/21 10:01'</span></span><br><span class="line"><span class="keyword">from</span> utils.op_excel <span class="keyword">import</span> operationExcel</span><br><span class="line"><span class="keyword">from</span> utils.op_json <span class="keyword">import</span> operationJson</span><br><span class="line"><span class="keyword">from</span> data <span class="keyword">import</span> data_conf</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">getData</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.op_excel = operationExcel()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_case_lines</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""获取表格行数"""</span></span><br><span class="line">        <span class="keyword">return</span> self.op_excel.get_rows()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_is_run</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""获取case是否运行"""</span></span><br><span class="line">        flag = <span class="literal">None</span></span><br><span class="line">        y = data_conf.get_run()</span><br><span class="line">        run_value = self.op_excel.get_cell_value(x, y)</span><br><span class="line">        <span class="keyword">if</span> run_value == <span class="string">'yes'</span>:</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> flag</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_is_header</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""是否携带header"""</span></span><br><span class="line">        y = data_conf.get_request_header()</span><br><span class="line">        header = self.op_excel.get_cell_value(x, y)</span><br><span class="line">        <span class="keyword">if</span> header == <span class="string">'yes'</span>:</span><br><span class="line">            <span class="keyword">return</span> data_conf.get_header_value()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_request_method</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""获取请求方式"""</span></span><br><span class="line">        y = data_conf.get_request_type()</span><br><span class="line">        request_method = self.op_excel.get_cell_value(x, y)</span><br><span class="line">        <span class="keyword">return</span> request_method</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_request_url</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""获取请求地址"""</span></span><br><span class="line">        y = data_conf.get_url()</span><br><span class="line">        request_url = self.op_excel.get_cell_value(x, y)</span><br><span class="line">        <span class="keyword">return</span> request_url</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_request_data</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""获取请求数据"""</span></span><br><span class="line">        y = data_conf.get_request_data()</span><br><span class="line">        request_data = self.op_excel.get_cell_value(x, y)</span><br><span class="line">        <span class="keyword">if</span> request_data == <span class="string">''</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> request_data</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_data_for_json</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""通过excel中的关键字去获取json数据"""</span></span><br><span class="line">        op_json = operationJson()</span><br><span class="line">        data = op_json.get_key_words(self.get_request_data(x))</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_expect_data</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">"""获取预期结果数据"""</span></span><br><span class="line">        y = data_conf.get_expect_result()</span><br><span class="line">        expect_data = self.op_excel.get_cell_value(x, y)</span><br><span class="line">        <span class="keyword">if</span> expect_data == <span class="string">''</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> expect_data</span><br></pre></td></tr></table></figure><p><strong>8.post、get基类的封装</strong></p><ul><li>在base包下创建run_method.py文件，在文件中重新编写对get丶post请求方式的代码封装，具体如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/21 11:19'</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RunMain</span><span class="params">(object)</span>:</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_main</span><span class="params">(self, url, data=None, header=None)</span>:</span></span><br><span class="line">        res = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> header <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            res = requests.get(url=url, data=data, headers=header).json()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res = requests.get(url=url, data=data).json()</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post_main</span><span class="params">(self, url, data, header=None)</span>:</span></span><br><span class="line">        res = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> header <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            res = requests.post(url=url, data=data, headers=header).json()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res = requests.post(url=url, data=data).json()</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_main</span><span class="params">(self, url, method, data=None, header=None)</span>:</span></span><br><span class="line">        res = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> method.lower() == <span class="string">'post'</span>:</span><br><span class="line">            res = self.post_main(url, data, header)</span><br><span class="line">        <span class="keyword">elif</span> method.lower() == <span class="string">'get'</span>:</span><br><span class="line">            res = self.get_main(url, data, header)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"what ?????"</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><p><strong>9.主流程封装及错误解决调试</strong></p><ul><li>首先在testItems项目目录下新建一个名为main的python包，在该包下创建名为run_test的py文件，该文件为主程序启动文件，代码的逻辑就是将前面封装的方法进行了调用核心就是读取excel表的数据，通过读取到的数据，发送请求，其中包括某一些变量的判断，根据该判断然后到json数据中获取请求的数据，最后就这么的简单，代码如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/21 11:57'</span></span><br><span class="line"><span class="keyword">from</span> base.run_method <span class="keyword">import</span> RunMain</span><br><span class="line"><span class="keyword">from</span> data.data_get <span class="keyword">import</span> getData</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RunTest</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.runmain = RunMain()</span><br><span class="line">        self.data = getData()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        res = <span class="literal">None</span></span><br><span class="line">        row_counts = self.data.get_case_lines()  <span class="comment"># 获取excel表格行数</span></span><br><span class="line">        <span class="comment"># print(row_counts) 5</span></span><br><span class="line">        <span class="keyword">for</span> row_count <span class="keyword">in</span> range(<span class="number">1</span>, row_counts):</span><br><span class="line">            <span class="comment"># print(row_count) 1,2,3,4</span></span><br><span class="line">            url = self.data.get_request_url(row_count)  <span class="comment"># y行不变遍历获取x列的请求地址</span></span><br><span class="line">            method = self.data.get_request_method(row_count)  <span class="comment"># y行不变遍历获取x列的请求方式</span></span><br><span class="line">            is_run = self.data.get_is_run(row_count)  <span class="comment"># y行不变遍历获取x列的是否运行</span></span><br><span class="line">            data = self.data.get_data_for_json(row_count)  <span class="comment"># y行不变遍历获取x列的请求数据，这里面时三次调用，依次分别是get_data_for_json丶get_key_words丶get_request_data</span></span><br><span class="line">            header = self.data.get_is_header(row_count)</span><br><span class="line">            print(<span class="string">'url:'</span>, url)</span><br><span class="line">            print(<span class="string">'method:'</span>, method)</span><br><span class="line">            print(<span class="string">'is_run:'</span>, is_run)</span><br><span class="line">            print(<span class="string">'data:'</span>, data)</span><br><span class="line">            print(<span class="string">'header:'</span>, header)</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> is_run:</span><br><span class="line">                res = self.runmain.run_main(url,method,data,header)</span><br><span class="line">                print(<span class="string">"*"</span>*<span class="number">60</span>+<span class="string">"分割线"</span>+<span class="string">"*"</span>*<span class="number">60</span>)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'res:'</span>, RunTest().run())</span><br></pre></td></tr></table></figure><ul><li>运行run_test，成功的将excel以及json数据正确打印出来，返回res服务器返回结果，<font style="color:red">需要说明的是excel表中的所有数据都不是真实存在的，包括json文档数据也是，这里主要是测试整个框架的正确性读取excel以及json文档数据，并正确的发送请求获得相应数据</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621134112979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>运行结果出现红色的内容，是由requests模块发送请求的安全请求警告，如不想显示此警告，可以在run_method.py发送请求核心代码进行禁用，禁用代码如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621134337526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>重新运行run_test，安全请求警告不再显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621134450944.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>根据代码运行结果，对比excel表以及json数据文档内容，数据正确无误</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621134714363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>10.返回数据格式处理以及调错</strong></p><ul><li>为了测试返回的接口的响应数据，博主这里在excel文档以及json文档中添加了一条数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621145504252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>因为在excel文档中小说的接口不携带header所以在向接口发送请求数据核心代码块，进行了如下修改，因为在excel文档中的最后一个接口时真实的，所以只需要对最后一个接口url返回的字典类型的响应数据进行转换成json格式的数据，并按照关键字进行排序</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621150728390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>运行run_test，在最后一个接口中成功打印出我们想要的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621150859489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>11.获取接口返回状态</strong></p><ul><li>在发送请求数据核心代码中，进行打印返回的状态码status_code即可，最后一个接口比较特殊，返回的响应数据中没有status_code，所以需要对返回的json数据中的status进行判断，并向其返回数据中添加我们所要的status_code的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621183201455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>运行代码，当返回的状态码为404表示接口不存在，只要是存在响应数据，则status_code为200，必须说明一点的就是status_code为200不一定表示接口存在，有些大型网站会对其域名下不存在的接口返回200的错误页面显示，所以在测试文档中会体现预期结果和实际结果两项数据需要一致才能表示测试通过</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621183501974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>12.通过预期结果判断case是否执行成功</strong></p><ul><li>进行接下来的测试，博主这里重新准备了另一个excel表来进行测试，需要对json文件中的数据进行添加，在excel表Book-05中的请求数据book5关键字对应的json文件的数据故意为空，可以对测试结果有一个对比</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621200131880.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在数据获取核心类中定义了一个方法来获取excel表模块字段的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621200316628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>回过头在启动文件中获取模块名预期结果并进行打印</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621200438610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>运行启动文件，查看运行结果</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621200722687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在utils目录下，创建common_util.py文件，在该文件代码中通过启动文件传递过来的数据来判断excel表预期结果数据的status状态码与res结果中的status状态码是否一致，一致表示测试通过，不一致则失败，代码如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/21 18:43'</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CommonUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_contains</span><span class="params">(self, expect, reality)</span>:</span></span><br><span class="line">        flag = <span class="literal">None</span></span><br><span class="line">        reality = json.loads(reality)</span><br><span class="line">        expect = json.loads(expect)</span><br><span class="line">        <span class="keyword">if</span> expect[<span class="string">'status'</span>] == reality[<span class="string">'pub'</span>][<span class="string">'status'</span>]:</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> flag</span><br></pre></td></tr></table></figure><ul><li>在启动文件中需要注释掉res响应数据，利于查看测试结果，还需要在启动文件调用is_contains方法来根据其返回值判断测试是否通过</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019062120253318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>运行启动文件，查看测试结果</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621202646676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>13.将测试结果写入到excel中</strong></p><ul><li>首先在op_excel.py中定义一个方法，该方法实现读取excel的数据，并进行copy复制，然后再write方法将数据写入到坐标位置</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019062121041584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后在data_get.py中需要定义一个方法，在该方法中核心逻辑为获取y坐标的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621210553955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>最后在启动文件中，调用data_get模块中的write_reality_data方法，并将剩余的x坐标的值以及data数据传递给最终的核心方法write_reality_result_data来完成对excel表中的实际结果数据的写入</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621210850261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>将excel表进行关闭后，运行启动文件，再次打开excel表，实际结果数据写入正确，之所以需要关闭excel是避免提示提示错误，无法写入保存数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190621211153696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/91841130" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/91841130</a></p>]]></content>
      
      
      <categories>
          
          <category> 自动化接口框架开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fiddler </tag>
            
            <tag> Unittest </tag>
            
            <tag> HTMLTestRunner </tag>
            
            <tag> 接口自动化测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django与Elasticsearch交互打造搜索引擎网站（二）</title>
      <link href="/2019/11/16/Django%E4%B8%8EElasticsearch%E4%BA%A4%E4%BA%92%E6%89%93%E9%80%A0%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%BD%91%E7%AB%99%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/11/16/Django%E4%B8%8EElasticsearch%E4%BA%A4%E4%BA%92%E6%89%93%E9%80%A0%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%BD%91%E7%AB%99%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶Django搭建搜索网站"><span style="color:#4ea1db">一丶Django搭建搜索网站</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶通过scrapyd部署scrapy爬虫"><span style="color:#4ea1db">二丶通过scrapyd部署scrapy爬虫</span></a></li><a id="more"></a><h1 id="一丶Django搭建搜索网站"><a href="#一丶Django搭建搜索网站" class="headerlink" title="一丶Django搭建搜索网站"></a>一丶Django搭建搜索网站</h1><p><strong>1.</strong>es完成搜索建议</p><ul><li>搜索建议接口文档：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.1/search-suggesters-completion.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/5.1/search-suggesters-completion.html</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604101226610.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在接口文档中已经说明要使用此接口，需要添加suggest字段的映射，如果将suggest的analyzer直接设置为”ik_analyzer”在进行初始化的时候会报错，解决这个bug，则需要定义一个类并继承elasticsearch_dsl.analysis模块下的CustomAnalyzer类，并重写父类的get_analysis_definition方法，该方法只需要返回一个空字典即可解决此bug</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomAnalyzer</span><span class="params">(_CustomAnalyzer)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_analysis_definition</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">ik_analyzer = CustomAnalyzer(<span class="string">"ik_max_word"</span>, filter=[<span class="string">"lowercase"</span>])</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleType</span><span class="params">(DocType)</span>:</span></span><br><span class="line">    suggest = Completion(analyzer=ik_analyzer)</span><br></pre></td></tr></table></figure><ul><li>在elasticsearch-head页面中删除之前创建的jobbole索引，重新运行es_type模块，查看新生成的jobbole索引信息中的suggest字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604103154431.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>搜索建议字段保存</p><ul><li>在接口文档中详细说明了搜索建议查询匹配的预期文本，但没有告知我们要如何设置input的值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PUT music / song / 1？refresh </span><br><span class="line">&#123; </span><br><span class="line">    “suggest”：[ </span><br><span class="line">        &#123; </span><br><span class="line">            “input”：“Nevermind”，</span><br><span class="line">            “weight”：10 </span><br><span class="line">        &#125;，</span><br><span class="line">        &#123; </span><br><span class="line">            “input”：“Nirvana”，</span><br><span class="line">            “weight”：3 </span><br><span class="line">        &#125; </span><br><span class="line">    ] </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在上一篇博客在使用Kibana工具时，查看分析器解析的结果是对数据进行了分词操作，那么就可以利用这个接口进行数据分词</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604104102418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在pipelines文件中定义一个全局方法，在这个方法需要接收两个参数，index为索引名称info_tuple为元组类型接收多个字段参数与其的权重值，在方法中遍历获取字段内容与权重值，通过链接的ArticleType实例对象analyze方法获取解析结果，再从解析结果words中获取token分词数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> elasticsearch_dsl.connections <span class="keyword">import</span> connections</span><br><span class="line">es = connections.create_connection(ArticleType._doc_type.using)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_suggests</span><span class="params">(index, info_tuple)</span>:</span></span><br><span class="line">    <span class="comment">#根据字符串生成搜索建议数组</span></span><br><span class="line">    used_words = set()</span><br><span class="line">    suggests = []</span><br><span class="line">    <span class="keyword">for</span> text, weight <span class="keyword">in</span> info_tuple:</span><br><span class="line">        <span class="keyword">if</span> text:</span><br><span class="line">            <span class="comment">#调用es的analyze接口分析字符串</span></span><br><span class="line">            words = es.indices.analyze(index=index, analyzer=<span class="string">"ik_max_word"</span>, params=&#123;<span class="string">'filter'</span>:[<span class="string">"lowercase"</span>]&#125;, body=text)</span><br><span class="line">            anylyzed_words = set([r[<span class="string">"token"</span>] <span class="keyword">for</span> r <span class="keyword">in</span> words[<span class="string">"tokens"</span>] <span class="keyword">if</span> len(r[<span class="string">"token"</span>])&gt;<span class="number">1</span>])</span><br><span class="line">            new_words = anylyzed_words - used_words</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            new_words = set()</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> new_words:</span><br><span class="line">            suggests.append(&#123;<span class="string">"input"</span>:list(new_words), <span class="string">"weight"</span>:weight&#125;)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> suggests</span><br></pre></td></tr></table></figure><ul><li>在ElasticsearchPipeline管道类中调用save方法之前生成搜索建议词的保存，调用gen_suggests方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">article.suggest = gen_suggests(ArticleType._doc_type.index, ((article.title,10),(article.tags, 7)))</span><br></pre></td></tr></table></figure><ul><li>Debug测试生成搜索建议分词</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604114015102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>刷新elasticsearch-head可视化页面jobbole索引数据浏览</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604114605480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>创建Django项目</p><ul><li>安装项目虚拟环境</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604123135221.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在Pycharm中创建一个新的Django项目</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604124809601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>创建完成后，项目目录结构如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604124938296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Debug测试运行项目成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604125900573.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>快速搭建搜索网站主页</p><ul><li>在项目根目录下创建static目录，存放静态资源文件，并将模板文件拷贝到templates目录下</li></ul><p><img src="https://img-blog.csdnimg.cn/20190604145045350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>在项目根级urls中使用TemplateView类的as_view方法将index模板也就是主页面渲染显示</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'admin/'</span>, admin.site.urls),</span><br><span class="line">    url(<span class="string">r'^$'</span>, TemplateView.as_view(template_name=<span class="string">"index.html"</span>), name=<span class="string">'index'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>在settings文件中将static目录添加配置中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    os.path.join(BASE_DIR, &apos;static&apos;)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>在index.html模板文件中动态获取静态资源路径</li></ul><p><img src="https://img-blog.csdnimg.cn/20190604145518569.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>访问<a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a>地址，成功渲染出index页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604145624677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>5.</strong>elasticsearch模糊查询来完成搜索关键字自动补全功能</p><ul><li>这里需要使用fuzzy关键字也就是模糊查询来完成在搜索框输入不完整的关键字自动补全该关键字，如输入pyth则会提示补全后的python关键字，查看elasticsearch5.1.1版本提供的接口文档示例</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604161957733.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在Kibana工具页面中使用如上接口测试自动补全</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604170231354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>6.</strong>django实现elasticsearch的搜索建议</p><ul><li>首先需要将es_types中python与elasticsearch_dsl交互的代码拷贝到django项目models中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="keyword">from</span> elasticsearch_dsl <span class="keyword">import</span> DocType, Date, Nested, Boolean, analyzer,Completion, Keyword, Text, Integer</span><br><span class="line"><span class="keyword">from</span> elasticsearch_dsl.connections <span class="keyword">import</span> connections</span><br><span class="line"><span class="keyword">from</span> elasticsearch_dsl.analysis <span class="keyword">import</span> CustomAnalyzer <span class="keyword">as</span> _CustomAnalyzer</span><br><span class="line">connections.create_connection(hosts=[<span class="string">"localhost"</span>])</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomAnalyzer</span><span class="params">(_CustomAnalyzer)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_analysis_definition</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">ik_analyzer = CustomAnalyzer(<span class="string">"ik_max_word"</span>, filter=[<span class="string">"lowercase"</span>])</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleType</span><span class="params">(DocType)</span>:</span></span><br><span class="line">    suggest = Completion(analyzer=ik_analyzer)</span><br><span class="line">    title = Text(analyzer=<span class="string">"ik_max_word"</span>)</span><br><span class="line">    create_date = Date()</span><br><span class="line">    url = Keyword()</span><br><span class="line">    url_object_id = Keyword()</span><br><span class="line">    cover_image_url = Keyword()</span><br><span class="line">    cover_image_path = Keyword()</span><br><span class="line">    praise_nums = Integer()</span><br><span class="line">    comment_nums = Integer()</span><br><span class="line">    fav_nums = Integer()</span><br><span class="line">    tags = Text(analyzer=<span class="string">"ik_max_word"</span>)</span><br><span class="line">    content = Text(analyzer=<span class="string">"ik_max_word"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        index = <span class="string">"jobbole"</span></span><br><span class="line">        doc_type = <span class="string">"article"</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    ArticleType.init()</span><br></pre></td></tr></table></figure><ul><li>需要在当前虚拟环境中安装elasticsearch_dsl</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604181904835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在search应用views中定义类视图get方法，返回搜索建议title字段数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SearchSuggest</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        key_words = request.GET.get(<span class="string">'s'</span>, <span class="string">''</span>)</span><br><span class="line">        re_datas = []</span><br><span class="line">        <span class="keyword">if</span> key_words:</span><br><span class="line">            s = ArticleType.search()</span><br><span class="line">            s = s.suggest(<span class="string">'song_suggest'</span>, key_words, completion=&#123;</span><br><span class="line">                <span class="string">"field"</span>: <span class="string">"suggest"</span>, <span class="string">"fuzzy"</span>: &#123;</span><br><span class="line">                    <span class="string">"fuzziness"</span>: <span class="number">2</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">10</span></span><br><span class="line">            &#125;)</span><br><span class="line">            suggestions = s.execute_suggest()</span><br><span class="line">            <span class="keyword">for</span> match <span class="keyword">in</span> suggestions.song_suggest[<span class="number">0</span>].options:</span><br><span class="line">                source = match._source</span><br><span class="line">                re_datas.append(source[<span class="string">"title"</span>])</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(json.dumps(re_datas), content_type=<span class="string">"application/json"</span>)</span><br></pre></td></tr></table></figure><ul><li>在index模板文件中定义js代码，通过ajax异步get请求方式向接口发送请求</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> suggest_url = <span class="string">"&#123;% url "</span>suggest<span class="string">" %&#125;"</span></span><br><span class="line">    <span class="keyword">var</span> search_url = <span class="string">'/search'</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">$(<span class="string">'.searchList'</span>).on(<span class="string">'click'</span>, <span class="string">'.searchItem'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">'.searchList .searchItem'</span>).removeClass(<span class="string">'current'</span>);</span><br><span class="line">$(<span class="keyword">this</span>).addClass(<span class="string">'current'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">removeByValue</span>(<span class="params">arr, val</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i] == val) &#123;</span><br><span class="line">          arr.splice(i, <span class="number">1</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 搜索建议</span></span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">'.searchInput'</span>).bind(<span class="string">' input propertychange '</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> searchText = $(<span class="keyword">this</span>).val();</span><br><span class="line">            <span class="keyword">var</span> tmpHtml = <span class="string">""</span></span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                cache: <span class="literal">false</span>,</span><br><span class="line">                type: <span class="string">'get'</span>,</span><br><span class="line">                dataType:<span class="string">'json'</span>,</span><br><span class="line">                url:suggest_url+<span class="string">"?s="</span>+searchText+<span class="string">"&amp;s_type="</span>+$(<span class="string">".searchItem.current"</span>).attr(<span class="string">'data-type'</span>),</span><br><span class="line">                <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;data.length;i++)&#123;</span><br><span class="line">                        tmpHtml += <span class="string">'&lt;li&gt;&lt;a href="'</span>+search_url+<span class="string">'?q='</span>+data[i]+<span class="string">'"&gt;'</span>+data[i]+<span class="string">'&lt;/a&gt;&lt;/li&gt;'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    $(<span class="string">".dataList"</span>).html(<span class="string">""</span>)</span><br><span class="line">                    $(<span class="string">".dataList"</span>).append(tmpHtml);</span><br><span class="line">                    <span class="keyword">if</span> (data.length == <span class="number">0</span>)&#123;</span><br><span class="line">                        $(<span class="string">'.dataList'</span>).hide()</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        $(<span class="string">'.dataList'</span>).show()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; );</span><br><span class="line">    &#125;)</span><br><span class="line"> </span><br><span class="line">    hideElement($(<span class="string">'.dataList'</span>), $(<span class="string">'.searchInput'</span>));</span><br><span class="line"> </span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>为了方便测试搜索建议提示，博主运行AirticSpider项目疯狂爬取伯乐在线网站的文章数据并写入到elasticsearch jobbole索引文档数据中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604175821525.gif" alt></fancybox></p><ul><li>在elasticsearch-head页面中数据概览中jobbole索引的docs数据量为2783</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604180318980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>重启运行django项目，强制刷新index页面，输入搜索关键字，成功加载出搜索建议以及自动补全关键字</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019060418100077.gif" alt></fancybox></p><p><strong>7.</strong>django实现elasticsearch的搜索功能</p><ul><li>在页面输入搜索关键字后点击搜索按钮，即跳转到相关相关文章的列表页，在文章标题部分的关键字应该显示为高亮状态，即所以根据官网提供的接口文档，在Kibana工具页面中进行测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604185056134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在应用search/views中使用如下代码测试如上接口是否成功获取对匹配的字段内容进行高亮处理</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">client = Elasticsearch(hosts=[<span class="string">"127.0.0.1"</span>])</span><br><span class="line">response = client.search(</span><br><span class="line">    index=<span class="string">"jobbole"</span>,</span><br><span class="line">    body=&#123;</span><br><span class="line">        <span class="string">"query"</span>: &#123;</span><br><span class="line">            <span class="string">"multi_match"</span>: &#123;</span><br><span class="line">                <span class="string">"query"</span>: <span class="string">"python"</span>,</span><br><span class="line">                <span class="string">"fields"</span>: [<span class="string">"tags"</span>, <span class="string">"title"</span>, <span class="string">"content"</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"from"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"size"</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">"highlight"</span>: &#123;</span><br><span class="line">            <span class="string">"pre_tags"</span>: [<span class="string">'&lt;span class="keyWord"&gt;'</span>],</span><br><span class="line">            <span class="string">"post_tags"</span>: [<span class="string">'&lt;/span&gt;'</span>],</span><br><span class="line">            <span class="string">"fields"</span>: &#123;</span><br><span class="line">                <span class="string">"title"</span>: &#123;&#125;,</span><br><span class="line">                <span class="string">"content"</span>: &#123;&#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line">total_nums = response[<span class="string">"hits"</span>][<span class="string">"total"</span>]</span><br></pre></td></tr></table></figure><ul><li>Debug断点测试如上代码，成功获取到Kibana工具中接口测试获取到python关键字的_shards和hits数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604191458490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604191632996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>通过上面的代码可以获取到匹配关键字的数据，现在就将这些数据保存到一个数组中，再传递到result.html模板中进行显示，首先需要获取用户输入的搜索关键字到elasticsearch索引jobbole中匹配所有的相关的文章标签标题以及内容，并对相关文章的标题和内容匹配的搜索内容进行高亮系显示，最后是获取hits字典中的数据数据并保存到hit_list字典中传递到模板result中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SearchView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""搜索功能"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        key_words = request.GET.get(<span class="string">"q"</span>, <span class="string">""</span>)</span><br><span class="line">        response = client.search(</span><br><span class="line">            index=<span class="string">"jobbole"</span>,</span><br><span class="line">            body=&#123;</span><br><span class="line">                <span class="string">"query"</span>: &#123;</span><br><span class="line">                    <span class="string">"multi_match"</span>: &#123;</span><br><span class="line">                        <span class="string">"query"</span>: key_words,</span><br><span class="line">                        <span class="string">"fields"</span>: [<span class="string">"tags"</span>, <span class="string">"title"</span>, <span class="string">"content"</span>]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"from"</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">10</span>,</span><br><span class="line">                <span class="string">"highlight"</span>: &#123;</span><br><span class="line">                    <span class="string">"pre_tags"</span>: [<span class="string">'&lt;span class="keyWord"&gt;'</span>],</span><br><span class="line">                    <span class="string">"post_tags"</span>: [<span class="string">'&lt;/span&gt;'</span>],</span><br><span class="line">                    <span class="string">"fields"</span>: &#123;</span><br><span class="line">                        <span class="string">"title"</span>: &#123;&#125;,</span><br><span class="line">                        <span class="string">"content"</span>: &#123;&#125;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">        total_nums = response[<span class="string">"hits"</span>][<span class="string">"total"</span>]</span><br><span class="line">        hit_list = []</span><br><span class="line">        <span class="comment"># 获取响应中国的hits字段数据，并保存到hit_dict字典中</span></span><br><span class="line">        <span class="keyword">for</span> hit <span class="keyword">in</span> response[<span class="string">"hits"</span>][<span class="string">"hits"</span>]:</span><br><span class="line">            hit_dict = &#123;&#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"title"</span> <span class="keyword">in</span> hit[<span class="string">"highlight"</span>]:</span><br><span class="line">                hit_dict[<span class="string">"title"</span>] = <span class="string">""</span>.join(hit[<span class="string">"highlight"</span>][<span class="string">"title"</span>])</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                hit_dict[<span class="string">"title"</span>] = hit[<span class="string">"_source"</span>][<span class="string">"title"</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"content"</span> <span class="keyword">in</span> hit[<span class="string">"highlight"</span>]:</span><br><span class="line">                hit_dict[<span class="string">"content"</span>] = <span class="string">""</span>.join(hit[<span class="string">"highlight"</span>][<span class="string">"content"</span>])[:<span class="number">500</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                hit_dict[<span class="string">"content"</span>] = hit[<span class="string">"_source"</span>][<span class="string">"content"</span>][:<span class="number">500</span>]</span><br><span class="line"> </span><br><span class="line">            hit_dict[<span class="string">"create_date"</span>] = hit[<span class="string">"_source"</span>][<span class="string">"create_date"</span>]</span><br><span class="line">            hit_dict[<span class="string">"url"</span>] = hit[<span class="string">"_source"</span>][<span class="string">"url"</span>]</span><br><span class="line">            hit_dict[<span class="string">"score"</span>] = hit[<span class="string">"_score"</span>]</span><br><span class="line"> </span><br><span class="line">            hit_list.append(hit_dict)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"result.html"</span>, &#123;<span class="string">"all_hits"</span>:hit_list, <span class="string">"key_words"</span>: key_words&#125;)</span><br></pre></td></tr></table></figure><ul><li>在result模板中对后端传递的数据进行打印显示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"resultList"</span>&gt;</span></span><br><span class="line">    &#123;% for hit in all_hits %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"resultItem"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"itemHead"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; hit.url &#125;&#125;"</span>  <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>&#123;% autoescape off %&#125;&#123;&#123; hit.title &#125;&#125;&#123;% endautoescape %&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"divsion"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fileType"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label"</span>&gt;</span>来源：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>伯乐在线<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"dependValue"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label"</span>&gt;</span>得分：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>&#123;&#123; hit.score &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"itemBody"</span>&gt;</span></span><br><span class="line">                &#123;% autoescape off %&#125;&#123;&#123; hit.content &#125;&#125;&#123;% endautoescape %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"itemFoot"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span>网站：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>伯乐在线<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span>发布时间：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>2017-04-23<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在根级urls中配置路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^search/$'</span>,SearchView.as_view(), name=<span class="string">'search'</span>)</span><br></pre></td></tr></table></figure><ul><li>还需要在主页模板index中定义search_url的链接地址使用反向解析进行定义，然后就是定义搜索方法完成页面的跳转</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> search_url = <span class="string">"&#123;% url 'search' %&#125;"</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> searchArr;</span><br><span class="line">    <span class="comment">//定义一个search的，判断浏览器有无数据存储（搜索历史）</span></span><br><span class="line">    <span class="keyword">if</span>(localStorage.search)&#123;</span><br><span class="line">    <span class="comment">//如果有，转换成 数组的形式存放到searchArr的数组里（localStorage以字符串的形式存储，所以要把它转换成数组的形式）</span></span><br><span class="line">        searchArr= localStorage.search.split(<span class="string">","</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//如果没有，则定义searchArr为一个空的数组</span></span><br><span class="line">        searchArr = [];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//把存储的数据显示出来作为搜索历史</span></span><br><span class="line">    MapSearchArr();</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">add_search</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> val = $(<span class="string">".searchInput"</span>).val();</span><br><span class="line">        <span class="keyword">if</span> (val.length&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="comment">//点击搜索按钮时，去重</span></span><br><span class="line">            KillRepeat(val);</span><br><span class="line">            <span class="comment">//去重后把数组存储到浏览器localStorage</span></span><br><span class="line">            localStorage.search = searchArr;</span><br><span class="line">            <span class="comment">//然后再把搜索内容显示出来</span></span><br><span class="line">            MapSearchArr();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">window</span>.location.href=search_url+<span class="string">'?q='</span>+val+<span class="string">"&amp;s_type="</span>+$(<span class="string">".searchItem.current"</span>).attr(<span class="string">'data-type'</span>)</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">MapSearchArr</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tmpHtml = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> arrLen = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> (searchArr.length &gt;= <span class="number">5</span>)&#123;</span><br><span class="line">            arrLen = <span class="number">5</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            arrLen = searchArr.length</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arrLen;i++)&#123;</span><br><span class="line">            tmpHtml += <span class="string">'&lt;a href="'</span>+search_url+<span class="string">'?q='</span>+searchArr[i]+<span class="string">'"&gt;'</span>+searchArr[i]+<span class="string">'&lt;/a&gt;'</span></span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">".mysearch .all-search"</span>).html(tmpHtml);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//去重</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">KillRepeat</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> kill = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;searchArr.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(val===searchArr[i])&#123;</span><br><span class="line">                kill ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(kill&lt;<span class="number">1</span>)&#123;</span><br><span class="line">            searchArr.unshift(val);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            removeByValue(searchArr, val)</span><br><span class="line">            searchArr.unshift(val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>重新启动项目，在主页进行搜索功能测试，点击输入python时的自动补全提示跳转到搜索结果列表页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604201741613.gif" alt></fancybox></p><ul><li>直接在搜索框输入python点击搜索按钮，跳转到搜索结果列表页，并在主页我的搜索项中显示用户搜索历史</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604203924270.gif" alt></fancybox></p><ul><li>在搜索结果页面中也就是result页面，同样有搜索框，该搜索框除了会将主页搜索的关键字设置结果页面input value中外，还应该向首页搜索框一样具备搜索功能，这里需要重点说明一点，当在搜索结果页对搜索与主页一样的内容时，点击搜索功能按钮则不会触发页面搜索；在结构页面的搜索功能与主页搜索功能一样，即在result模板中定义js函数，当用户点击搜索时激活此input的onclick属性调用add_search函数，向后端接口SearchView发送请求数据，完成搜索功能</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> search_url = <span class="string">"&#123;% url 'search' %&#125;"</span>;</span><br><span class="line">    <span class="keyword">var</span> searchArr;</span><br><span class="line">    <span class="comment">//定义一个search的，判断浏览器有无数据存储（搜索历史）</span></span><br><span class="line">    <span class="keyword">if</span>(localStorage.search)&#123;</span><br><span class="line">        <span class="comment">//如果有，转换成 数组的形式存放到searchArr的数组里（localStorage以字符串的形式存储，所以要把它转换成数组的形式）</span></span><br><span class="line">        searchArr= localStorage.search.split(<span class="string">","</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//如果没有，则定义searchArr为一个空的数组</span></span><br><span class="line">        searchArr = [];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//把存储的数据显示出来作为搜索历史</span></span><br><span class="line">    MapSearchArr();</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">add_search</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        &#123;#alert(search_url);#&#125;</span><br><span class="line">        <span class="keyword">var</span> val = $(<span class="string">".searchInput"</span>).val();</span><br><span class="line">        &#123;#alert(val);#&#125;</span><br><span class="line">        <span class="keyword">if</span> (val.length&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="comment">//点击搜索按钮时，去重</span></span><br><span class="line">            KillRepeat(val);</span><br><span class="line">            <span class="comment">//去重后把数组存储到浏览器localStorage</span></span><br><span class="line">            localStorage.search = searchArr;</span><br><span class="line">            <span class="comment">//然后再把搜索内容显示出来</span></span><br><span class="line">            MapSearchArr();</span><br><span class="line">        &#125;</span><br><span class="line">        &#123;#alert(111);#&#125;</span><br><span class="line">        &#123;#window.location.href=search_url+'?q='+val+"&amp;s_type="+$(".searchItem.current").attr('data-type');#&#125;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">window</span>.location.href=search_url+<span class="string">'?q='</span>+val+<span class="string">"&amp;s_type="</span>+$(<span class="string">".searchItem.current"</span>).attr(<span class="string">'data-type'</span>);</span><br><span class="line">        &#125;,<span class="number">100</span>)</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">MapSearchArr</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tmpHtml = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">var</span> arrLen = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> (searchArr.length &gt;= <span class="number">5</span>)&#123;</span><br><span class="line">            arrLen = <span class="number">5</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            arrLen = searchArr.length</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arrLen;i++)&#123;</span><br><span class="line">            tmpHtml += <span class="string">'&lt;a href="'</span>+search_url+<span class="string">'?q='</span>+searchArr[i]+<span class="string">'"&gt;'</span>+searchArr[i]+<span class="string">'&lt;/a&gt;'</span></span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">".mysearch .all-search"</span>).html(tmpHtml);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//去重</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">KillRepeat</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> kill = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;searchArr.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(val===searchArr[i])&#123;</span><br><span class="line">                kill ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(kill&lt;<span class="number">1</span>)&#123;</span><br><span class="line">            searchArr.unshift(val);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            removeByValue(searchArr, val)</span><br><span class="line">            searchArr.unshift(val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在result模板中根据后端接口返回的数据，进行页面字段数据的打印</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"resultList"</span>&gt;</span></span><br><span class="line">    &#123;% for hit in all_hits %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"resultItem"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"itemHead"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; hit.url &#125;&#125;"</span>  <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>&#123;% autoescape off %&#125;&#123;&#123; hit.title &#125;&#125;&#123;% endautoescape %&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"divsion"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fileType"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label"</span>&gt;</span>来源：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>伯乐在线<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"dependValue"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label"</span>&gt;</span>得分：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>&#123;&#123; hit.score &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"itemBody"</span>&gt;</span></span><br><span class="line">                &#123;% autoescape off %&#125;&#123;&#123; hit.content &#125;&#125;&#123;% endautoescape %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"itemFoot"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span>网站：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>伯乐在线<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span>发布时间：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>&#123;&#123; hit.create_date &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试在搜索结构页面进行字段搜索</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605100844740.gif" alt></fancybox></p><p><strong>8.</strong>django实现搜索结果分页</p><ul><li>使用js完成数据的分页显示，首先在result模板中定义分页js代码函数，来完成页面标签div类选择器pagination的分页数据填充</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> key_words = <span class="string">"&#123;&#123; key_words &#125;&#125;"</span></span><br><span class="line"><span class="comment">//分页</span></span><br><span class="line">$(<span class="string">".pagination"</span>).pagination(&#123;&#123; total_nums|add:<span class="string">'-1'</span> &#125;&#125;, &#123;</span><br><span class="line">current_page :&#123;&#123; page|add:<span class="string">'-1'</span> &#125;&#125;, <span class="comment">//当前页码</span></span><br><span class="line">items_per_page :<span class="number">10</span>,</span><br><span class="line">display_msg :<span class="literal">true</span>,</span><br><span class="line">callback :pageselectCallback</span><br><span class="line">&#125;);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pageselectCallback</span>(<span class="params">page_id, jq</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> pageid = page_id +<span class="built_in">Number</span>(<span class="number">1</span>);</span><br><span class="line">        &#123;#alert(pageid)#&#125;</span><br><span class="line"><span class="built_in">window</span>.location.href=search_url+<span class="string">'?q='</span>+key_words+<span class="string">'&amp;p='</span>+pageid</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在上面定义的js代码中需要在后端接口中获取total_nums总页数以及page当前页的值并传递给result模板中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">page = request.GET.get(&quot;p&quot;, &quot;1&quot;)</span><br><span class="line">total_nums = response[&quot;hits&quot;][&quot;total&quot;]</span><br><span class="line">if(page%10) &gt;0:</span><br><span class="line">    page_nums = int(total_nums/10)+1</span><br><span class="line">else:</span><br><span class="line">    page_nums = int(total_nums/10)</span><br></pre></td></tr></table></figure><ul><li>测试搜索结果页result.html分页功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605113150255.gif" alt></fancybox></p><ul><li>在搜索结果页面搜索框下会显示对搜索字段数据的数据量页码数以及搜索用时时间，总页面数page_nums以及数据量total_nums在进行分页数据显示时已经在视图中进行获取并传递给模板了，现在只需要在视图中通过执行代码段时记录当前时间，执行搜索代码后再获取结束搜索的时间，进行减法操作即可获取搜索时间</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">start_time = datetime.now()</span><br><span class="line">response = client.search(</span><br><span class="line">    index=&quot;jobbole&quot;,</span><br><span class="line">    body=&#123;</span><br><span class="line">        &quot;query&quot;: &#123;</span><br><span class="line">            &quot;multi_match&quot;: &#123;</span><br><span class="line">                &quot;query&quot;: key_words,</span><br><span class="line">                &quot;fields&quot;: [&quot;tags&quot;, &quot;title&quot;, &quot;content&quot;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;from&quot;: (page-1)*10,</span><br><span class="line">        &quot;size&quot;: 10,</span><br><span class="line">        &quot;highlight&quot;: &#123;</span><br><span class="line">            &quot;pre_tags&quot;: [&apos;&lt;span class=&quot;keyWord&quot;&gt;&apos;],</span><br><span class="line">            &quot;post_tags&quot;: [&apos;&lt;/span&gt;&apos;],</span><br><span class="line">            &quot;fields&quot;: &#123;</span><br><span class="line">                &quot;title&quot;: &#123;&#125;,</span><br><span class="line">                &quot;content&quot;: &#123;&#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line">end_time = datetime.now()</span><br><span class="line">last_seconds = (end_time-start_time).total_seconds()</span><br></pre></td></tr></table></figure><ul><li>在模板中进行数据填坑</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;info&quot;&gt;找到约&amp;nbsp;&lt;span class=&quot;totalResult&quot;&gt;&#123;&#123; total_nums &#125;&#125;&lt;/span&gt;&amp;nbsp;条结果(用时&lt;span class=&quot;time&quot;&gt;&#123;&#123; last_seconds &#125;&#125;&lt;/span&gt;秒)，共约&lt;span class=&quot;totalPage&quot;&gt;&#123;&#123; page_nums &#125;&#125;&lt;/span&gt;页&lt;/span&gt;</span><br></pre></td></tr></table></figure><ul><li>测试搜索华为，则成功显示搜索信息 </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605114004904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>9.</strong>搜索记录、热门搜索功能实现</p><ul><li>在搜索结果页面左侧显示伯乐在线网站条目数据，该数据是通过scrapy爬取并写入到jobbole索引doc库中获取的数据，因此数据是随时变化的，所以需要将该数据保存到redis数据，这样读写效率就比较高了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605123701420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>首先需要在ArticleSpider伯乐在线爬虫项目环境中安装redis</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605123542616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在ArticleSpider项目pipelines/ElasticsearchPipeline管道类中使用redis incr方法往本地redis数据库0中保存名为jobbole的key并加1操作，当向es中保存一条数据时，则在redis数据库0中使jobbole_count的值+1，这样就可以统计伯乐在线网站文章数目</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605125510484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>为了测试是否向我们预期那样每当执行redis_cli.incr(“jobbole_count”)代码时jobbole_count的值进行+1操作，在项目目录下新建一个test.py文件，测试代码如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/5 12:48'</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line">redis_cli = redis.StrictRedis()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">redis_cli.incr(<span class="string">"jobbole_count"</span>)</span><br></pre></td></tr></table></figure><ul><li>通过run运行test.py成功后，查看redis 0数据库的数据，测试成功</li></ul><p><img src="https://img-blog.csdnimg.cn/20190605125744128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>回到LcvSearch django项目中在views视图中，获取redis数据库中的jobbole_count的值然后传递到模板中，在LcvSearch 环境中同样也需要安装redis，这个就不在演示了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jobbole_count = redis_cli.get(<span class="string">"jobbole_count"</span>)</span><br></pre></td></tr></table></figure><ul><li>在模板中找到对应的标签字段打印jobbole_count的值即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"name"</span>&gt;</span>伯乐在线<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"unit"</span>&gt;</span>(&#123;&#123; jobbole_count &#125;&#125;)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面，则成功显示出保存到redis数据的jobbole的值，需要说明的是，因为没有运行ArticleSpider爬虫项目即当然不会执行ElasticsearchPipeline管道类中的代码，所以页面上显示的伯乐在线网站的数目为1</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605130850203.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>为了好看博主打算花一段时间重新爬取伯乐在线网站的文章数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019060513173487.gif" alt></fancybox></p><ul><li>爬取一定时间后，不断刷新页面，伯乐在线网站的数据条目在不断的增加，因为爬虫项目同时在不停的爬取并写入的es中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605132643917.gif" alt></fancybox></p><ul><li>在主页和搜索结果页面都会有我的搜索记录以及热门搜索排行显示，我的搜索实现过程就是当点击搜索按钮时会调用js中的add_search函数，在函数中获取input输入框中的关键字然后在函数中调用KillRepeat函数并将获取的关键字传递到该函数中，在KillRepeat函数中如果出现该关键字出现在我的搜索列表中，则会去删除列表中的该关键字也就是去重操作，然后将搜索的关键字保存到浏览器的localStorage缓存中，最后再调用MapSearchArr函数将搜索内容显示出来，之前在主页面已经通过js代码实现了我的搜索功能数据显示，所以现在重点是做热门搜索功能，在search模板中定义与index模板中相同的js代码即可，这个就不细说了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605133404239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>热门搜索功能数据显示，实现逻辑需要将热门搜索的关键字通过redis的zincrby命令将关键字keyword保存到redis数据库search_keywords_set键中并设定其increment增量值为1，再通过redis的zrangebyscore命令获取min 和 max 可以是 -inf 和 +inf区间分值的数据，具体的命令文档可以访问<a href="http://redisdoc.com/redis" target="_blank" rel="noopener">http://redisdoc.com/redis</a>官方文档进行查阅</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605150809759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在views视图中编写以下代码即可，上面已经说明代码的作用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis_cli.zincrby(<span class="string">"search_keywords_set"</span>, <span class="number">1</span>, key_words)</span><br><span class="line">hot_search = redis_cli.zrangebyscore(<span class="string">"search_keywords_set"</span>, <span class="string">"-inf"</span>, <span class="string">"+inf"</span>, start=<span class="number">0</span>, num=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><ul><li>在result模板中遍历打印显示出热门搜索关键字</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hotSearch"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h6</span>&gt;</span>热门搜索<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"historyList"</span>&gt;</span></span><br><span class="line">        &#123;% for search_word in hot_search %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/search?q=&#123;&#123; search_word &#125;&#125;"</span>&gt;</span>&#123;&#123; search_word &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>强制刷新搜索结果页面，成功显示出热门搜索关键词</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605152744589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在主页面，搜索框下的热门搜索也需要进行数据设置获取，之前显示主页面使用django提供的view，这里因为要向首页模板中传递redis数据库中的search_keywords_set键的数据，所以需要定义主页类视图IndexView get方法来渲染模板以及向模板传递数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""主页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        hot_search = redis_cli.zrangebyscore(<span class="string">"search_keywords_set"</span>, <span class="string">"-inf"</span>, <span class="string">"+inf"</span>, start=<span class="number">0</span>, num=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>, &#123;<span class="string">"hot_search"</span>:hot_search&#125;)</span><br></pre></td></tr></table></figure><ul><li>然后在index模板中进行打印热门数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"history"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>热门搜索：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    &#123;% for search_words in hot_search %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/search?q=&#123;&#123; search_words &#125;&#125;"</span>&gt;</span>&#123;&#123; search_words &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>强制刷新主页，成功显示热门搜索关键词</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605153859933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶通过scrapyd部署scrapy爬虫"><a href="#二丶通过scrapyd部署scrapy爬虫" class="headerlink" title="二丶通过scrapyd部署scrapy爬虫"></a>二丶通过scrapyd部署scrapy爬虫</h1><p><strong>1.</strong>在ArticleSpider项目的虚拟环境中安装scrapyd</p><ul><li>scrapyd的参考文档：<a href="https://scrapyd.readthedocs.io/en/stable/" target="_blank" rel="noopener">https://scrapyd.readthedocs.io/en/stable/</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605201837778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在scrapy_py3虚拟环境中安装scrapyd</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605202011115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>安装scrapyd后，启动运行scrapyd命令成功，当访问<a href="http://127.0.0.1:6800/" target="_blank" rel="noopener">http://127.0.0.1:6800/</a>后点击进入jobs后，则出现如下错误</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605203942122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>回到控制台查看运行报错日志，发现是全是指向twisted包的错误，博主猜想是twisted版本与scrapyd版本不兼容问题，于是回退安装twisted==18.9.0版本</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605204123433.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>安装twisted==18.9.0版本</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605204325768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>重新刷新页面则不再报错，问题解决</li></ul><p><img src="https://img-blog.csdnimg.cn/20190605204407703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>启动scrapyd命令说白了可就是运行其服务器，运行成功后会在其目录下创建dbs目录，因为博主是在scrapy_p3虚拟环境中使用pip安装的scrapyd包，所以需要在d盘也就是博主的项目盘下创建test目录在test目录下创建scrapyd目录，然后在Terminal命令终端中进入创建好的scrapyd目录，执行scrapyd命令后，成功生成了dbs目录</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605204806896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>安装及配置scrapyd客户端</p><ul><li>安装scrapy-client包</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605205118227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在ArticleSpider爬虫项目下的scrapy.cfg配置文件中打开注释掉的url，并对deploy定义一个任意名称</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[settings]</span><br><span class="line">default = ArticleSpider.settings</span><br><span class="line"> </span><br><span class="line">[deploy:cdtaogang]</span><br><span class="line">url = http://localhost:6800/</span><br><span class="line">project = ArticleSpider</span><br></pre></td></tr></table></figure><ul><li>在虚拟环境scrapy_py3/Scripts目录下可以看到安装scrapyd-client包后生成的scrapyd-deploy文件，这个文件在linux系统中可以直接执行scrapyd-deploy命令，但是在windows中该文件并没有后缀名，所以无法执行scrapyd-deploy命令，这是一个巨坑；要想在windows中执行scrapyd-deploy命令，则需要在scrapy_py3/Scripts目录下新建一个scrapyd-deploy.bat批处理文件，并编写该文件如下内容；第一个路径为虚拟环境中使用的python解释器路径，第二个为scrapyd-deploy路径</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line"> </span><br><span class="line">&quot;D:\scrapy_py3\Scripts\python.exe&quot; &quot;D:\scrapy_py3\Scripts\scrapyd-deploy&quot; %1 %2 %3 %4 %5 %6 %7 %8 %9</span><br></pre></td></tr></table></figure><ul><li>测试运行scrapyd-deploy -l命令打印出ArticleSpider项目scrapy.cfg配置数据，即配置scrapyd-client成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605210702415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在正式部署项目之前，需要执行scrapy list命令，确保能够打印出scrapy项目的name名称</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605210943887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>项目部署</p><ul><li>在ArticleSpider项目settings配置文件中还需要将ArticleSpider项目目录添加进来</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">BASE_DIR = os.path.dirname(os.path.abspath(os.path.dirname(__file__)))</span><br><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(BASE_DIR, <span class="string">'ArticleSpider'</span>))</span><br></pre></td></tr></table></figure><ul><li>在Terminal终端中执行scrapyd-deploy cdtaogang -p ArticleSpider命令，参数就是之前的配置信息这个不多说，这个命令就相当于打包文件的意思</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605211656808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后在test/scrapyd目录中生成了eggs/ArticleSpider目录下的1559740467.egg文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605211744164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用scrapyd-deploy cdtaogang -p ArticleSpider命令将项目打包上传到服务器后，但是并没有运行，需要根据文档API说明执行文档中的curl命令</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605214659990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>curl命令windows本身是没有的，但博主以前写项目的时候，安装过windows版本的curl命令程序，安装过Anaconda时也会默认安装curl命令，还有一种方法就是在windows中安装cmder程序，启动该程序可以执行curl命令</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019060521510273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>执行curl <a href="http://localhost:6800/daemonstatus.json命令可以查看scrapyd的状态" target="_blank" rel="noopener">http://localhost:6800/daemonstatus.json命令可以查看scrapyd的状态</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605215238942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>根据scrapyd文档上执行curl <a href="http://localhost:6800/schedule.json" target="_blank" rel="noopener">http://localhost:6800/schedule.json</a> -d project=myproject -d spider=somespider命令来启动scrapy项目</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605215654687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>启动ArticleSpider项目下的jobbole爬虫应用成功后，回到scrapyd服务器页面<a href="http://127.0.0.1:6800/jobs" target="_blank" rel="noopener">http://127.0.0.1:6800/jobs</a>进行强制刷新后，则运行成功，因为页面不是自动刷新的，从下图可以看见运行时间，随时刷新页面这个时间都是在变化的，客户端运行结束后，就会显示finish的时间</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605215903840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>演示以上博主所说的爬虫启动一直运行，而页面是需要手动刷新的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190605220735965.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/90763712" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/90763712</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
            <tag> Python Scrapy分布式爬虫 </tag>
            
            <tag> 数据抓取 </tag>
            
            <tag> Django 网站搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django与Elasticsearch交互打造搜索引擎网站（一）</title>
      <link href="/2019/11/16/Django%E4%B8%8EElasticsearch%E4%BA%A4%E4%BA%92%E6%89%93%E9%80%A0%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%BD%91%E7%AB%99%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/11/16/Django%E4%B8%8EElasticsearch%E4%BA%A4%E4%BA%92%E6%89%93%E9%80%A0%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%BD%91%E7%AB%99%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><fancybox><img src="https://cdn.jsdelivr.net/gh/Hellotaogang/cdn@4.6.5/images/django_search.png" width="900px" height="300px" align></fancybox><br>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶叙述"><span style="color:#4ea1db">一丶叙述</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶elasticsearch-rtf的安装与测试"><span style="color:#4ea1db">二丶elasticsearch-rtf的安装与测试</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶elasticsearch-head插件以及kibana的安装"><span style="color:#4ea1db">三丶elasticsearch-head插件以及kibana的安装</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶elasticsearch搜索引擎的使用"><span style="color:#4ea1db">四丶elasticsearch搜索引擎的使用</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶使用scrapy爬取知名技术文章网站"><span style="color:#4ea1db">五丶使用scrapy爬取知名技术文章网站</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶将scrapy爬取到的数据写入到elasticsearch中"><span style="color:#4ea1db">六丶将scrapy爬取到的数据写入到elasticsearch中</span></a></li><a id="more"></a><h1 id="一丶叙述"><a href="#一丶叙述" class="headerlink" title="一丶叙述"></a>一丶叙述</h1><p><strong>1.项目介绍</strong></p><p>通过scrapy爬取<a href="http://blog.jobbole.com/all-posts/" target="_blank" rel="noopener">伯乐在线</a>网站的全部文章数据通过<a href="https://github.com/elastic/elasticsearch-dsl-py" target="_blank" rel="noopener">elasticsearch_dsl</a>工具将数据写入到<a href="https://github.com/elastic/elasticsearch" target="_blank" rel="noopener">elasticsearch</a>中；再使用django开发一个搜索网站并且与elasticsearch进行数据交互来打造出一个高大上的搜索引擎网站。</p><p><strong>2.项目展示</strong></p><ul><li>搜索引擎网站首页页面展示，当输入不完整的关键字时，会自动补全以及会显示出搜索建议</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604201315810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>搜索结果页面显示，会对搜索的内容进行分词处理，并且在文章列表中会对分词后的字段进行高亮标红显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604201456947.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>动态效果展示，点击在搜索框输入python时的自动补全提示内容跳转到搜索结果列表页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604201601817.gif" alt></fancybox></p><ul><li>动态效果展示，直接在搜索框输入python后点击搜索按钮，跳转到搜索结果列表页，并在主页我的搜索项中显示搜索历史</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190604203425606.gif" alt></fancybox></p><ul><li>在搜索结果页面同样有个搜索框，同样跟主页一样进行关键字搜索</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019060421505589.gif" alt></fancybox></p><p><strong>3.什么是ElasticSearch</strong></p><p>ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。</p><p>我们建立一个网站或应用程序，并要添加搜索功能，但是想要完成搜索工作的创建是非常困难的。我们希望搜索解决方案要运行速度快，我们希望能有一个零配置和一个完全免费的搜索模式，我们希望能够简单地使用JSON通过HTTP来索引数据，我们希望我们的搜索服务器始终可用，我们希望能够从一台开始并扩展到数百台，我们要实时搜索，我们要简单的多租户，我们希望建立一个云的解决方案。因此我们利用Elasticsearch来解决所有这些问题及可能出现的更多其它问题。</p><p><strong>4.什么是Elasticsearch-RTF</strong></p><p>RTF是Ready To Fly的缩写，在航模里面，表示无需自己组装零件即可直接上手即飞的航空模型，Elasticsearch-RTF是针对中文的一个发行版，即使用最新稳定的elasticsearch版本，并且帮你下载测试好对应的插件，如中文分词插件等，目的是让你可以下载下来就可以直接的使用（虽然es已经很简单了，但是很多新手还是需要去花时间去找配置，中间的过程其实很痛苦），当然等你对这些都熟悉了之后，你完全可以自己去diy了，跟linux的众多发行版是一个意思。</p><h1 id="二丶elasticsearch-rtf的安装与测试"><a href="#二丶elasticsearch-rtf的安装与测试" class="headerlink" title="二丶elasticsearch-rtf的安装与测试"></a>二丶elasticsearch-rtf的安装与测试</h1><p><strong>1.</strong>安装elasticsearch-rtf</p><ul><li>在github上搜索<a href="https://github.com/medcl/elasticsearch-rtf" target="_blank" rel="noopener">elasticsearch-rtf</a>，选择第一个点击进入如下页面下载即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190531182204644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>将下载好的elasticsearch-5.1.1.zip包，进行解压，需要注意的是解压的目录名称不能带中文，否则运行elasticsearch则会报错</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190531182415546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>因为elasticsearch是由java进行开发的，所以要运行elasticsearch则需要先安装java jdk8+；因为博主以前就安装过，所以这里不进行演示，网上有很多教程，安装完jdk后，在cmd窗口输入java -version则显示出安装成功后的jdk版本信息</li></ul><p><img src="https://img-blog.csdnimg.cn/20190531183422563.png" alt></p><ul><li>在cmd中进入解压的elasticsearch文件bin目录下，执行elasticsearch.bat批处理文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190531182808384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>测试</p><ul><li>在浏览器中访问上图日志中的ip及端口<a href="http://127.0.0.1:9200/" target="_blank" rel="noopener">http://127.0.0.1:9200/</a>，成功则出现如下页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190531183033385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶elasticsearch-head插件以及kibana的安装"><a href="#三丶elasticsearch-head插件以及kibana的安装" class="headerlink" title="三丶elasticsearch-head插件以及kibana的安装"></a>三丶elasticsearch-head插件以及kibana的安装</h1><p><strong>1.</strong>elasticsearch-head插件安装</p><ul><li>在github上搜索<a href="https://github.com/mobz/elasticsearch-head" target="_blank" rel="noopener">elasticsearch-head</a>，选择第一个点击进入如下页面下载即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019053118455098.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>博主这里直接使用git命令将elassearch-head下载下来，也可以直接在如上页面点击download进行下载</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190531184925426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>cd进入elassearch-head目录后，使用npm命令进行安装，需要注意的是npm命令就好比python中的pip一样，要想使用npm命令则需要下载安装windows版本的Node.js，安装Node.js成功后就可以直接使用npm命令了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190531190027961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>运行elasticsearch-head插件，运行成功后，访问<a href="http://localhost:9100/" target="_blank" rel="noopener">http://localhost:9100/</a>页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190531190348305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190531190419945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在elasticsearch-head插件页面无法连接<a href="http://127.0.0.1:9200/" target="_blank" rel="noopener">http://127.0.0.1:9200/</a>地址，如上图显示集群健康值:未连接，需要在elasticsearch解压文件config目录下elasticsearch.yml配置文件添加如下配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http.cors.enabled: true</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br><span class="line">http.cors.allow-methods: OPTIONS, HEAD, GET, POST, PUT, DELETE</span><br><span class="line">http.cors.allow-headers: &quot;X-Requested-With, Content-Type, Content-Length, X-User&quot;</span><br></pre></td></tr></table></figure><ul><li>重启elasticsearch，回到<a href="http://localhost:9100/elasticsearch-head" target="_blank" rel="noopener">http://localhost:9100/elasticsearch-head</a>插件页面测试连接<a href="http://127.0.0.1:9200/" target="_blank" rel="noopener">http://127.0.0.1:9200/</a>接口，点击右上角的信息菜单选择信息则看到访问<a href="http://127.0.0.1:9200/" target="_blank" rel="noopener">http://127.0.0.1:9200/</a>接口所显示内容</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190531192517438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.kibana的安装</strong></p><ul><li>下载与elastsearch一致版本的<a href="https://www.elastic.co/cn/downloads/past-releases/kibana-5-1-1" target="_blank" rel="noopener">kibana</a>，否则会出错</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190531193952107.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>下载成功后进行解压，然后打开cmd窗口进入解压文件bin目录下，执行kibana.bat批处理文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190531194645302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在浏览器访问日志中监听的ip端口<a href="http://localhost:5601/" target="_blank" rel="noopener">http://localhost:5601/</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019053119481480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶elasticsearch搜索引擎的使用"><a href="#四丶elasticsearch搜索引擎的使用" class="headerlink" title="四丶elasticsearch搜索引擎的使用"></a>四丶elasticsearch搜索引擎的使用</h1><p><strong>说明：</strong>什么是Kibana：Kibana是一个针对Elasticsearch的开源分析及可视化平台，用来搜索、查看交互存储在Elasticsearch索引中的数据。使用Kibana，可以通过各种图表进行高级数据分析及展示；举例说明就好比mysql数据库的工具navicat一样</p><p><strong>1.</strong>elasticsearch基本的索引和文档CRUD操作</p><ul><li>启动Kibana服务</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601150730229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在浏览器中访问<a href="http://127.0.0.1:5601" target="_blank" rel="noopener">http://127.0.0.1:5601</a>则进行Kibana可视化页面，在页面中选择Dev-Tools可以创建索引以及对查询索引的配置</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601151206558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>如上图创建lagou索引后，回到elasticsearch-head工具页面，刷新后则出现创建的lagou索引</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019060115153262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>修改lagou索引配置</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601152355394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>获取所有的索引信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601153432347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>向索引中保存文档（向数据库添加表数据），注重说明一下可以将索引看做成数据库，type看作成数据表下的表后面跟着表的id，即PUT lagou/job/1，当添加数据时不指明id则也能添加成功能，系统会默认将id生成一个uuid的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601154523450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>回到elasticsearch-head页面，点击数据浏览选择lagou就能看到在Kibana中添加的数据信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601155049385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>获取lagou下的job表数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601155602996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>获取lagou下的job表某个字段以及多个字段的数据，需要注意的是,后面不能留空格</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601160027993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>修改lagou下的job表id为1数据，也是使用PUT进行修改，这种修改时覆盖式的修改</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601160423488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用POST修改lagou下的job表id为1的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601160913591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>删除lagou/job表下id为1的所有数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601161439497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>删除lagou索引 </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601161738645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>elasticsearch的mget和bulk批量操作</p><ul><li>在使用mget查询之前需要添加些查询数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PUT testdb/job1/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;test_job1_1&quot;</span><br><span class="line">&#125;</span><br><span class="line">PUT testdb/job1/2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;test_job1_2&quot;</span><br><span class="line">&#125;</span><br><span class="line">PUT testdb/job2/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;test_job2_1&quot;</span><br><span class="line">&#125;</span><br><span class="line">PUT testdb/job2/2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;test_job2_2&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>查看添加后的索引数据信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601163154917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用mget查询多个条件数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601163820753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>当index一致时，就可以进行如下查询</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET testdb/_mget</span><br><span class="line">&#123;</span><br><span class="line">  &quot;docs&quot;:[</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_type&quot;:&quot;job1&quot;,</span><br><span class="line">      &quot;_id&quot;:1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_type&quot;:&quot;job2&quot;,</span><br><span class="line">      &quot;_id&quot;:2</span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>以此类推当index和type相同都是job1时只有id不同的情况下，可以进行如下查询</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601164559154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用bulk批量操作，添加lagou索引并在其下创建job1和job2两个type以及对应的id</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601170922445.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>elasticsearch的mapping映射管理</p><p><strong>说明：</strong>关于elasticsearch的mapping的概念可以百度进行了解</p><ul><li>为了方便演示创建索引的映射，博主需要将之前创建的索引全部删除</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601173232871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>创建索引映射</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601175524887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>向创建好的索引映射中插入数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601175637419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>获取索引下的mapping</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601175834955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>获取集群下的所有mapping</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601180042865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>elasticsearch的简单查询</p><ul><li>删除lagou索引，然后创建新的lagou索引并添加映射</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601181622731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>向索引中添加查询数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601182837143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用match匹配查询title字段包含python开发的数据，在创建索引映射时title字段使用的是ik_max_word，该工具会对此字段不管大小写都会转换成小写并且会对title字段进行中英文分词处理，所以在使用match进行匹配查询时，就会查询到如下两条数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601183849211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>而使用term进行查询时，会根据传入的title的值也就是python开发进行全局匹配不会进行分词处理，通俗来说在数据title字段内容必须不多不少是”python开发”才能查询到数据，所以如下没有查询到数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601184423574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用terms进行查询，对满足数组中的任何内容的title字段数据就会查询出来</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601184838820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>控制查询数据返回数量，实际匹配出两条数据，但form从0开始取只往后取一个，即结果只显示出一条数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601185700667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用match_all查询所有数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601190127458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用match_phrase查询，会将查询的内容进行分词，slop表示的是分词之间的长度，也就是说python和总监之间的长度，要满足该长度内才能查询出数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019060119093148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>multi_match查询，指定在title和desc字段中查询包含python的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601204034808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>指定返回title以及company_name字段数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601204511794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>通过sort把结果排序</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190601205059688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>range范围查询comments大于等于1000小于等于2000的数据，boost表示权重</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019060209324094.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用range对时间范围进行查询</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602093757527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>5.</strong>elasticsearch的bool组合查询</p><p><strong>说明</strong> bool组合查询包括：must丶should丶must_not丶filter来完成</p><ul><li>bool组合查询的格式如下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bool:&#123;</span><br><span class="line">  &quot;must&quot;:[],</span><br><span class="line">  &quot;should&quot;:[],</span><br><span class="line">  &quot;must_not&quot;:[],</span><br><span class="line">  &quot;filter&quot;:[]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>删除之前的索引，重新创建测试数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602100151654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>从查询到的所有数据中筛选出salary为2000的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602101051615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用ik_max_word查看分析器解析的结果</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602102008588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用ik_smart查看分析器解析结果</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602102553367.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>组合过滤查询薪资等于2000或者工作为Python的数据并且满足薪水不为3000的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602104124236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>嵌套查询工作为python或者工作为django并且工资为3000的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602104918289.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>过滤空和非空数据，首先创建测试数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602105555324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查询tags字段不为null的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019060210590515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>整个在Kibana中的操作命令如下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br></pre></td><td class="code"><pre><span class="line"># 创建lagou索引</span><br><span class="line">PUT lagou</span><br><span class="line">&#123;</span><br><span class="line">  &quot;settings&quot;: &#123;</span><br><span class="line">    &quot;index&quot;:&#123;</span><br><span class="line">      &quot;number_of_shards&quot;:5,</span><br><span class="line">      &quot;number_of_replicas&quot;:1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 获取lagou的配置</span><br><span class="line">GET lagou/_settings</span><br><span class="line"># 获取所有索引的配置</span><br><span class="line">GET _all/_settings</span><br><span class="line"># 获取kibana和lagou索引配置</span><br><span class="line">GET .kibana,lagou/_settings</span><br><span class="line"># 修改lagou索引的配置,shards一旦设置了值就无法修改</span><br><span class="line">PUT lagou/_settings</span><br><span class="line">&#123;</span><br><span class="line">  &quot;number_of_replicas&quot;: &quot;3&quot;</span><br><span class="line">&#125;</span><br><span class="line"># 获取所有的索引信息</span><br><span class="line">GET _all</span><br><span class="line"># 向索引中保存文档</span><br><span class="line">PUT lagou/job/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;Python分布式爬虫打造搜索引擎&quot;,</span><br><span class="line">  &quot;min_salary&quot;:15000,</span><br><span class="line">  &quot;city&quot;:&quot;成都&quot;,</span><br><span class="line">  &quot;company&quot;:&#123;</span><br><span class="line">    &quot;name&quot;:&quot;百度&quot;,</span><br><span class="line">    &quot;company_add&quot;:&quot;天府软件园&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;publish_date&quot;:&quot;2019-06-01&quot;,</span><br><span class="line">  &quot;comments&quot;:20</span><br><span class="line">&#125;</span><br><span class="line"># 获取lagou下的job表数据</span><br><span class="line">GET lagou/job/1</span><br><span class="line"># 获取lagou下的job表某个字段的数据</span><br><span class="line">GET lagou/job/1?_source=title</span><br><span class="line"># 获取lagou下的job表多个字段的数据</span><br><span class="line">GET lagou/job/1?_source=title,city</span><br><span class="line">#使用PUT修改lagou下的job表id为1的数据</span><br><span class="line">PUT lagou/job/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;Python分布式爬虫打造搜索引擎&quot;,</span><br><span class="line">  &quot;min_salary&quot;:20000,</span><br><span class="line">  &quot;city&quot;:&quot;成都&quot;,</span><br><span class="line">  &quot;company&quot;:&#123;</span><br><span class="line">    &quot;name&quot;:&quot;百度&quot;,</span><br><span class="line">    &quot;company_add&quot;:&quot;天府软件园&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;publish_date&quot;:&quot;2019-06-01&quot;,</span><br><span class="line">  &quot;comments&quot;:20</span><br><span class="line">&#125;</span><br><span class="line"># 使用POST修改lagou下的job表id为1的数据</span><br><span class="line">POST lagou/job/1/_update</span><br><span class="line">&#123;</span><br><span class="line">  &quot;doc&quot;: &#123;</span><br><span class="line">   &quot;comments&quot;:50 </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 删除lagou/job表下id为1的所有数据</span><br><span class="line">DELETE lagou/job/1</span><br><span class="line"># 删除lagou索引 </span><br><span class="line">DELETE lagou</span><br><span class="line"> </span><br><span class="line">PUT testdb/job1/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;test_job1_1&quot;</span><br><span class="line">&#125;</span><br><span class="line">PUT testdb/job1/2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;test_job1_2&quot;</span><br><span class="line">&#125;</span><br><span class="line">PUT testdb/job2/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;test_job2_1&quot;</span><br><span class="line">&#125;</span><br><span class="line">PUT testdb/job2/2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;test_job2_2&quot;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 使用mget查询多个条件数据</span><br><span class="line">GET _mget</span><br><span class="line">&#123;</span><br><span class="line">  &quot;docs&quot;:[</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_index&quot;:&quot;testdb&quot;,</span><br><span class="line">      &quot;_type&quot;:&quot;job1&quot;,</span><br><span class="line">      &quot;_id&quot;:1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_index&quot;:&quot;testdb&quot;,</span><br><span class="line">      &quot;_type&quot;:&quot;job2&quot;,</span><br><span class="line">      &quot;_id&quot;:2</span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"># 当index一致时，就可以进行如下查询</span><br><span class="line">GET testdb/_mget</span><br><span class="line">&#123;</span><br><span class="line">  &quot;docs&quot;:[</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_type&quot;:&quot;job1&quot;,</span><br><span class="line">      &quot;_id&quot;:1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_type&quot;:&quot;job2&quot;,</span><br><span class="line">      &quot;_id&quot;:2</span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"># 当index和type相同都是job1时只有id不同</span><br><span class="line">GET testdb/job1/_mget</span><br><span class="line">&#123;</span><br><span class="line">  &quot;docs&quot;:[</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_id&quot;:1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_id&quot;:2</span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># 使用bulk批量操作</span><br><span class="line">POST _bulk</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_index&quot;:&quot;lagou&quot;, &quot;_type&quot;:&quot;job1&quot;, &quot;_id&quot;:1&#125;&#125;</span><br><span class="line">&#123;&quot;title&quot;:&quot;Python分布式爬虫打造搜索引擎&quot;, &quot;min_salary&quot;:16000,&quot;city&quot;:&quot;成都&quot;,&quot;comany&quot;:&#123;&quot;name&quot;:&quot;百度&quot;,&quot;company_addr&quot;:&quot;天府软件A园&quot;&#125;,&quot;publish_date&quot;:&quot;2019-06-01&quot;,&quot;comments&quot;:15&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_index&quot;:&quot;lagou&quot;, &quot;_type&quot;:&quot;job2&quot;, &quot;_id&quot;:2&#125;&#125;</span><br><span class="line">&#123;&quot;title&quot;:&quot;Django Web开发&quot;, &quot;min_salary&quot;:20000,&quot;city&quot;:&quot;成都&quot;,&quot;comany&quot;:&#123;&quot;name&quot;:&quot;腾讯&quot;,&quot;company_addr&quot;:&quot;天府软件B园&quot;&#125;,&quot;publish_date&quot;:&quot;2019-05-20&quot;,&quot;comments&quot;:30&#125;</span><br><span class="line"> </span><br><span class="line"># 创建索引映射   </span><br><span class="line">PUT lagou</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;job&quot;:&#123;</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;title&quot;:&#123;</span><br><span class="line">          &quot;type&quot;: &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;min_salary&quot;:&#123;</span><br><span class="line">          &quot;type&quot;: &quot;integer&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;city&quot;:&#123;</span><br><span class="line">          &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;company&quot;:&#123;</span><br><span class="line">          &quot;properties&quot;: &#123;</span><br><span class="line">            &quot;name&quot;:&#123;</span><br><span class="line">              &quot;type&quot;:&quot;text&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;company_addr&quot;:&#123;</span><br><span class="line">              &quot;type&quot;:&quot;text&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;employee_count&quot;:&#123;</span><br><span class="line">              &quot;type&quot;:&quot;integer&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;publish_date&quot;:&#123;</span><br><span class="line">          &quot;type&quot;: &quot;date&quot;,</span><br><span class="line">          &quot;format&quot;: &quot;yyyy-MM-dd&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;comments&quot;:&#123;</span><br><span class="line">          &quot;type&quot;: &quot;integer&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 向索引插入数据</span><br><span class="line">PUT lagou/job/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;Python分布式爬虫打造搜索引擎&quot;,</span><br><span class="line">  &quot;min_salary&quot;:20000,</span><br><span class="line">  &quot;city&quot;:&quot;成都&quot;,</span><br><span class="line">  &quot;company&quot;:&#123;</span><br><span class="line">    &quot;name&quot;:&quot;百度&quot;,</span><br><span class="line">    &quot;company_add&quot;:&quot;天府软件园&quot;,</span><br><span class="line">    &quot;employee&quot;:200</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;publish_date&quot;:&quot;2019-06-01&quot;,</span><br><span class="line">  &quot;comments&quot;:20</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 获取索引下的mapping</span><br><span class="line">GET lagou/_mapping</span><br><span class="line"> </span><br><span class="line"># 获取集群下的所有mapping</span><br><span class="line">GET _all/_mapping</span><br><span class="line"> </span><br><span class="line"># 添加映射</span><br><span class="line">PUT lagou</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;job&quot;:&#123;</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;title&quot;:&#123;</span><br><span class="line">          &quot;store&quot;: true,</span><br><span class="line">          &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">          &quot;analyzer&quot;: &quot;ik_max_word&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;company_name&quot;:&#123;</span><br><span class="line">          &quot;store&quot;: true,</span><br><span class="line">          &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;desc&quot;:&#123;</span><br><span class="line">          &quot;type&quot;: &quot;text&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;comments&quot;:&#123;</span><br><span class="line">          &quot;type&quot;: &quot;integer&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;add_time&quot;:&#123;</span><br><span class="line">          &quot;type&quot;: &quot;date&quot;,</span><br><span class="line">          &quot;format&quot;: &quot;yyyy-MM-dd&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 向索引中添加查询数据</span><br><span class="line">POST lagou/job/</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;Django Web开发工程师&quot;,</span><br><span class="line">  &quot;company_name&quot;:&quot;阿里巴巴网络技术有限公司&quot;,</span><br><span class="line">  &quot;desc&quot;:&quot;精通Python&quot;,</span><br><span class="line">  &quot;comments&quot;:1200,</span><br><span class="line">  &quot;add_time&quot;:&quot;2019-02-14&quot;</span><br><span class="line">&#125;</span><br><span class="line">POST lagou/job/</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;数据挖掘工程师&quot;,</span><br><span class="line">  &quot;company_name&quot;:&quot;百度在线网络技术有限公司&quot;,</span><br><span class="line">  &quot;desc&quot;:&quot;10年工作经验&quot;,</span><br><span class="line">  &quot;comments&quot;:1000,</span><br><span class="line">  &quot;add_time&quot;:&quot;2019-03-16&quot;</span><br><span class="line">&#125;</span><br><span class="line">POST lagou/job/</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;:&quot;Python人工智能技术总监&quot;,</span><br><span class="line">  &quot;company_name&quot;:&quot;华为技术有限公司&quot;,</span><br><span class="line">  &quot;desc&quot;:&quot;能分析和解决疑难问题&quot;,</span><br><span class="line">  &quot;comments&quot;:3000,</span><br><span class="line">  &quot;add_time&quot;:&quot;2019-06-18&quot;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 使用match查询</span><br><span class="line">GET lagou/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &quot;python开发&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 使用term查询</span><br><span class="line">GET lagou/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &quot;python开发&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 使用terms查询</span><br><span class="line">GET lagou/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;terms&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: [&quot;智能&quot;, &quot;挖掘&quot;, &quot;web&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 控制查询数据返回数量</span><br><span class="line">GET lagou/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &quot;工程师&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;from&quot;: 0,</span><br><span class="line">  &quot;size&quot;: 1</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># match_all查询所有数据</span><br><span class="line">GET lagou/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># match_phrase查询</span><br><span class="line">GET lagou/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_phrase&quot;: &#123;</span><br><span class="line">      &quot;title&quot;:&#123;</span><br><span class="line">        &quot;query&quot;: &quot;python总监&quot;,</span><br><span class="line">        &quot;slop&quot;:6</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"># multi_match查询,指定在title和desc字段中查询</span><br><span class="line">#包含python的数据</span><br><span class="line">GET lagou/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;multi_match&quot;: &#123;</span><br><span class="line">      &quot;query&quot;: &quot;python&quot;,</span><br><span class="line">      &quot;fields&quot;: [&quot;title&quot;, &quot;desc&quot;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 指定返回的哪些字段数据</span><br><span class="line">GET lagou/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;stored_fields&quot;: [&quot;title&quot;, &quot;company_name&quot;],</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &quot;pythona&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 通过sort把结果排序</span><br><span class="line">GET lagou/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;comments&quot;: &#123;</span><br><span class="line">        &quot;order&quot;: &quot;desc&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"># range范围查询</span><br><span class="line">GET lagou/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;range&quot;: &#123;</span><br><span class="line">      &quot;comments&quot;: &#123;</span><br><span class="line">        &quot;gte&quot;: 1000,</span><br><span class="line">        &quot;lte&quot;: 2000,</span><br><span class="line">        &quot;boost&quot;: 1</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 使用range对时间范围进行查询</span><br><span class="line">GET lagou/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;range&quot;: &#123;</span><br><span class="line">      &quot;add_time&quot;: &#123;</span><br><span class="line">        &quot;gte&quot;: &quot;2019-01-01&quot;,</span><br><span class="line">        &quot;lte&quot;: &quot;now&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># bool查询 </span><br><span class="line">#bool:&#123;</span><br><span class="line">#  &quot;must&quot;:[],</span><br><span class="line">#  &quot;should&quot;:[],</span><br><span class="line">#  &quot;must_not&quot;:[],</span><br><span class="line">#  &quot;filter&quot;:[]</span><br><span class="line">#&#125;</span><br><span class="line"># 建立测试数据</span><br><span class="line">POST lagou/testjob/_bulk</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:1&#125;&#125;</span><br><span class="line">&#123;&quot;salary&quot;:1000, &quot;title&quot;:&quot;Python&quot;&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:2&#125;&#125;</span><br><span class="line">&#123;&quot;salary&quot;:2000, &quot;title&quot;:&quot;Django&quot;&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:3&#125;&#125;</span><br><span class="line">&#123;&quot;salary&quot;:3000, &quot;title&quot;:&quot;Flask&quot;&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:4&#125;&#125;</span><br><span class="line">&#123;&quot;salary&quot;:4000, &quot;title&quot;:&quot;Scrapy&quot;&#125;</span><br><span class="line"> </span><br><span class="line"># 从查询到的所有数据中筛选出salary为2000的数据</span><br><span class="line"># 对应数据库查询语句为</span><br><span class="line"># select * from testjob where salary=2000;</span><br><span class="line">GET lagou/testjob/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: [</span><br><span class="line">        &#123;&quot;match_all&quot;: &#123;&#125;&#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;term&quot;: &#123;</span><br><span class="line">          &quot;salary&quot;: &quot;2000&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 查看分析器解析的结果</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;ik_max_word&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;Python Web开发工程师&quot;</span><br><span class="line">&#125;</span><br><span class="line"># 查看分析器解析的结果</span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;ik_smart&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;Python Web开发工程师&quot;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 组合过滤查询薪资等于2000或者工作为Python的数据并且满足薪水不为3000的数据</span><br><span class="line"># select * from testjob where (salary=2000 or title=&quot;Python&quot;) and (salary !=3000);</span><br><span class="line"> </span><br><span class="line">GET lagou/testjob/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123;&quot;term&quot;: &#123;</span><br><span class="line">          &quot;salary&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;2000&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;,</span><br><span class="line">        &#123;&quot;term&quot;: &#123;</span><br><span class="line">          &quot;title&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;python&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;must_not&quot;: [</span><br><span class="line">        &#123;&quot;term&quot;: &#123;</span><br><span class="line">          &quot;salary&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;3000&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 嵌套查询工作为python或者工作为django并且工资为3000的数据</span><br><span class="line"># select * from testjob where title=&quot;python&quot; or (title=&quot;django&quot; and salary=3000)</span><br><span class="line"> </span><br><span class="line">GET lagou/testjob/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123;&quot;term&quot;: &#123;</span><br><span class="line">          &quot;title&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;python&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;&#125;,</span><br><span class="line">        &#123;&quot;bool&quot;: &#123;</span><br><span class="line">          &quot;must&quot;: [</span><br><span class="line">            &#123;&quot;term&quot;: &#123;</span><br><span class="line">              &quot;title&quot;: &#123;</span><br><span class="line">                &quot;value&quot;: &quot;django&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;&#125;,</span><br><span class="line">            &#123;&quot;term&quot;: &#123;</span><br><span class="line">              &quot;salary&quot;: &#123;</span><br><span class="line">                &quot;value&quot;: &quot;3000&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;&#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 过滤空和非空数据，首先创建测试数据</span><br><span class="line">POST lagou/testjob2/_bulk</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:1&#125;&#125;</span><br><span class="line">&#123;&quot;tags&quot;:[&quot;search&quot;]&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:2&#125;&#125;</span><br><span class="line">&#123;&quot;tags&quot;:[&quot;search&quot;, &quot;python&quot;]&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:3&#125;&#125;</span><br><span class="line">&#123;&quot;other_field&quot;:[&quot;some data&quot;]&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:4&#125;&#125;</span><br><span class="line">&#123;&quot;tags&quot;:null&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:5&#125;&#125;</span><br><span class="line">&#123;&quot;tags&quot;:[&quot;search&quot;, null]&#125;</span><br><span class="line"> </span><br><span class="line"># 查询tags字段不为null的数据</span><br><span class="line"># select tags from testjob2 where tags is not null;</span><br><span class="line">GET lagou/testjob2/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;filter&quot;: &#123;</span><br><span class="line">        &quot;exists&quot;: &#123;</span><br><span class="line">          &quot;field&quot;: &quot;tags&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五丶使用scrapy爬取知名技术文章网站"><a href="#五丶使用scrapy爬取知名技术文章网站" class="headerlink" title="五丶使用scrapy爬取知名技术文章网站"></a>五丶使用scrapy爬取知名技术文章网站</h1><p><strong>1.</strong>创建爬虫项目虚拟环境</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602111031851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>进入虚拟环境安装scrapy以及requests</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602111313892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602112518257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>创建scrapy项目</p><ul><li>在cmd终端中执行scrapy startproject ArticleSpider即创建scrapy 爬虫项目ArticleSpider</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602113111938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在Pycharm中打开ArticleSpider项目</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602113446291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>创建jobbole爬虫文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20190602120927566.png" alt></p><ul><li>即在项目spider目录下生成jobbole.py文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602120955367.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>运行scrapy项目测试是否能够运行成功</p><ul><li>在终端执行scrapy crawl jobbole命令，结果报错了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602121332628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>对于windows系统而言报这个错是正常的，使用pip命令安装pypiwin32包即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602121628766.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>安装成功后再次运行则启动scrapy成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602143947242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>5.</strong>爬取<a href="http://blog.jobbole.com/114690/" target="_blank" rel="noopener">伯乐在线</a>网站的某篇文章</p><ul><li>在网站全部文章分类中爬取该篇文章</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602195658961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>博主这里使用xpath来匹配要爬取的文章的标题丶发布时间丶标签丶文章内容丶点赞数丶收藏数以及评论数</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602195906673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>因为Pycharm未提供scrapy模板，要想使用Debug进行断点测试，需要在项目根目录下创建main.py文件，文件代码如下，也就是执行爬虫的命令scrapy crawl jobbole</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.cmdline <span class="keyword">import</span> execute</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">sys.path.append(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line">execute([<span class="string">"scrapy"</span>, <span class="string">"crawl"</span>, <span class="string">"jobbole"</span>])</span><br></pre></td></tr></table></figure><ul><li>在jobbole.py文件parse方法中使用xpath匹配获取标题丶发布时间丶标签丶文章内容丶点赞数丶收藏数以及评论数数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">    <span class="comment"># 标题</span></span><br><span class="line">    title = response.xpath(<span class="string">"//div[@class='entry-header']/h1/text()"</span>).extract()[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 发表时间</span></span><br><span class="line">    create_date = response.xpath(<span class="string">"//p[@class='entry-meta-hide-on-mobile']/text()"</span>).extract()[<span class="number">0</span>].strip().replace(<span class="string">" ·"</span>, <span class="string">""</span>)</span><br><span class="line">    <span class="comment"># 点赞数</span></span><br><span class="line">    praise_num = response.xpath(<span class="string">"//h10/text()"</span>).extract()[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 收藏数</span></span><br><span class="line">    fav_nums = response.xpath(<span class="string">"//span[contains(@class, 'bookmark-btn')]/text()"</span>).extract()[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 使用re正则匹配获取收藏数</span></span><br><span class="line">    match_re = re.match(<span class="string">".*(\d+).*"</span>, fav_nums)</span><br><span class="line">    <span class="keyword">if</span> match_re:</span><br><span class="line">        fav_nums = match_re.group(<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 评论数</span></span><br><span class="line">    comment_nums = response.xpath(<span class="string">"//span[contains(@class, 'hide-on-480')]/text()"</span>).extract()[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 使用re正则匹配获取评论数</span></span><br><span class="line">    match_re = re.match(<span class="string">".*(\d+).*"</span>, comment_nums)</span><br><span class="line">    <span class="keyword">if</span> match_re:</span><br><span class="line">        comment_nums = match_re.group(<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 文章内容</span></span><br><span class="line">    content = response.xpath(<span class="string">"//div[@class='entry']"</span>).extract()[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 获取文章的tag标签</span></span><br><span class="line">    tag_list = response.xpath(<span class="string">"//p[@class='entry-meta-hide-on-mobile']/a/text()"</span>).extract()</span><br><span class="line">    <span class="comment"># 使用列表生成式过滤评论标签</span></span><br><span class="line">    tag_list = [element <span class="keyword">for</span> element <span class="keyword">in</span> tag_list <span class="keyword">if</span> <span class="keyword">not</span> element.strip().endswith(<span class="string">'评论'</span>)]</span><br><span class="line">    tags = <span class="string">','</span>.join(tag_list)</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li>因为是爬取某一篇文章，所以在jobbole.py中的start_urls需要修改成要爬取的文章地址</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start_urls = [&apos;http://blog.jobbole.com/114690/&apos;]</span><br></pre></td></tr></table></figure><ul><li>Debug运行main.py文件，断点测试获取数据成功且正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602200826716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>6.</strong>爬取伯乐在线网站中的所有文章</p><ul><li>首先在<a href="http://blog.jobbole.com/all-posts/" target="_blank" rel="noopener">http://blog.jobbole.com/all-posts/</a> 伯乐在线网站所有文章页面使用xpath 谷歌插件来获取页面中的20篇文章的url地址</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602203545952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在Terminal终端中通过scrapy shell 命令测试获取所有文章页面的数据，并使用xpath来获取页面中文章url地址，命令为scrapy shell <a href="http://blog.jobbole.com/all-posts/" target="_blank" rel="noopener">http://blog.jobbole.com/all-posts/</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602203817335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>当获取到列表页中20篇文章的url后，当scrapy进行页面数据下载后，需要回调给parse_detail方法进行页面字段的提取操作，这是第一步，第二步就是获取列表下一页的页面数据在parse函数中只要next_url提取存在，则会将此页面数据交给parse函数进行处理依次类推重复循环直到news_url不存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JobboleSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'jobbole'</span></span><br><span class="line">    allowed_domains = [<span class="string">'blog.jobbole.com'</span>]</span><br><span class="line">    start_urls = [<span class="string">'http://blog.jobbole.com/all-posts/'</span>]</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        1.获取所有文章列表页中文章的url并交给解析函数对具体字段进行解析</span></span><br><span class="line"><span class="string">        2.获取列表页下一页的url地址并交给scrapy进行页面数据下载，下载完后交给parse函数进行字段获取</span></span><br><span class="line"><span class="string">        :param response:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="comment"># 1.获取列表页中所有文章url</span></span><br><span class="line">        post_urls = response.xpath(<span class="string">"//div[@class='post floated-thumb']/div[@class='post-thumb']/a/@href"</span>).extract()</span><br><span class="line">        <span class="keyword">for</span> post_url <span class="keyword">in</span> post_urls:</span><br><span class="line">            <span class="comment"># 为了防止有些文章链接不带域名前缀，所以需要对对链接地址进行域名凭借，需使用urllib提供的parse工具中的urljoin方法</span></span><br><span class="line">            <span class="comment"># 使用scrapy提供的Request类，将获取的文章内容通过callback回调函数交给parse_detail方法对页面内容字段进行获取</span></span><br><span class="line">            <span class="keyword">yield</span> Request(url=parse.urljoin(response.url, post_url), callback=self.parse_detail)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 2.获取列表页下一页的url地址并交给scrapy进行页面数据下载</span></span><br><span class="line">        next_url = response.xpath(<span class="string">"//a[@class='next page-numbers']/@href"</span>).extract_first(<span class="string">""</span>)</span><br><span class="line">        <span class="keyword">if</span> next_url:</span><br><span class="line">            <span class="keyword">yield</span> Request(url=parse.urljoin(response.url, next_url), callback=self.parse)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_detail</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="string">"""获取文章详情页中的字段数据"""</span></span><br><span class="line">        <span class="comment"># 标题</span></span><br><span class="line">        title = response.xpath(<span class="string">"//div[@class='entry-header']/h1/text()"</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 发表时间</span></span><br><span class="line">        create_date = response.xpath(<span class="string">"//p[@class='entry-meta-hide-on-mobile']/text()"</span>).extract()[<span class="number">0</span>].strip().replace(<span class="string">" ·"</span>, <span class="string">""</span>)</span><br><span class="line">        <span class="comment"># 点赞数</span></span><br><span class="line">        praise_num = response.xpath(<span class="string">"//h10/text()"</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 收藏数</span></span><br><span class="line">        fav_nums = response.xpath(<span class="string">"//span[contains(@class, 'bookmark-btn')]/text()"</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 使用re正则匹配获取收藏数</span></span><br><span class="line">        match_re = re.match(<span class="string">".*(\d+).*"</span>, fav_nums)</span><br><span class="line">        <span class="keyword">if</span> match_re:</span><br><span class="line">            fav_nums = match_re.group(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 评论数</span></span><br><span class="line">        comment_nums = response.xpath(<span class="string">"//span[contains(@class, 'hide-on-480')]/text()"</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 使用re正则匹配获取评论数</span></span><br><span class="line">        match_re = re.match(<span class="string">".*(\d+).*"</span>, comment_nums)</span><br><span class="line">        <span class="keyword">if</span> match_re:</span><br><span class="line">            comment_nums = match_re.group(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 文章内容</span></span><br><span class="line">        content = response.xpath(<span class="string">"//div[@class='entry']"</span>).extract()[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 获取文章的tag标签</span></span><br><span class="line">        tag_list = response.xpath(<span class="string">"//p[@class='entry-meta-hide-on-mobile']/a/text()"</span>).extract()</span><br><span class="line">        <span class="comment"># 使用列表生成式过滤评论标签</span></span><br><span class="line">        tag_list = [element <span class="keyword">for</span> element <span class="keyword">in</span> tag_list <span class="keyword">if</span> <span class="keyword">not</span> element.strip().endswith(<span class="string">'评论'</span>)]</span><br><span class="line">        tags = <span class="string">','</span>.join(tag_list)</span><br></pre></td></tr></table></figure><ul><li>Debug测试是否成功爬取文章指定字段数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602211242281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在上图中红框提取的评论数显示的不是数字而是评论，访问该篇文章，发现该文章并没有评论</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602211527259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>回到代码中对评论数和收藏数正则匹配不成功时需要进行逻辑判断，不存在默认为0</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">match_re = re.match(<span class="string">".*(\d+).*"</span>, fav_nums)</span><br><span class="line"><span class="keyword">if</span> match_re:</span><br><span class="line">    fav_nums = int(match_re.group(<span class="number">1</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    fav_nums = <span class="number">0</span></span><br><span class="line"> </span><br><span class="line">match_re = re.match(<span class="string">".*(\d+).*"</span>, comment_nums)</span><br><span class="line"><span class="keyword">if</span> match_re:</span><br><span class="line">    comment_nums = int(match_re.group(<span class="number">1</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    comment_nums = <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>再次测试则显示评论数为0</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190602212014688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>7.</strong>将爬取的数据保存到本地项目中</p><p><strong>分析：</strong>除了需要提取文章详情里面的字段内容外，在文章列表页中每篇文章的封面图的URL地址也是需要进行提取的</p><ul><li>因为文章的链接地址与封面图片地址都在a标签节点之下，所以需要修改之前的代码获取a节点列表，再通过遍历获取每一个a节点，在根据a节点来匹配获取文章地址以及封面图地址</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603092422863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在parse_detail方法中获取response中meta字典属性中cover_image_url的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603094150483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在items文件中定义数据模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JobBoleArticleItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    create_date = scrapy.Field()</span><br><span class="line">    url = scrapy.Field()</span><br><span class="line">    url_object_id = scrapy.Field()</span><br><span class="line">    cover_image_url = scrapy.Field()</span><br><span class="line">    cover_image_path = scrapy.Field()</span><br><span class="line">    praise_nums = scrapy.Field()</span><br><span class="line">    comment_nums = scrapy.Field()</span><br><span class="line">    fav_nums = scrapy.Field()</span><br><span class="line">    tags = scrapy.Field()</span><br><span class="line">    content = scrapy.Field()</span><br></pre></td></tr></table></figure><ul><li>在jobbole文件parse_detail方法中将提取的数据保存到items对应字段中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 将提取到的字段数据传递给items中</span><br><span class="line">article = JobBoleArticleItem()</span><br><span class="line">article[&apos;title&apos;] = title</span><br><span class="line">article[&apos;create_date&apos;] = create_date</span><br><span class="line">article[&apos;url&apos;] = response.url</span><br><span class="line">article[&apos;cover_image_url&apos;] =  cover_image_url</span><br><span class="line">article[&apos;praise_nums&apos;] = praise_nums</span><br><span class="line">article[&apos;comment_nums&apos;] = comment_nums</span><br><span class="line">article[&apos;fav_nums&apos;] = fav_nums</span><br><span class="line">article[&apos;tags&apos;] = tags</span><br><span class="line">article[&apos;content&apos;] = content</span><br><span class="line">yield article</span><br></pre></td></tr></table></figure><ul><li>在settings中配置使用pipelines数据管道文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">'ArticleSpider.pipelines.ArticlespiderPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Debug测试在pipelines中获取item数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603103051314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>需要将封面图片下载到项目根目录下的images目录下，首先需要在根目录下新建images目录，用于存放下载的封面图；然后需要在settings中pipeline配置中添加scrapy提供的图片下载的管道类ImagesPipeline；紧接着需要settings中指定items中的cover_image_url字段为图片下载地址，最后一步就是settings中指定图片下载后保存的目录路径images</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603110133543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>直接run运行main.py文件启动scrapy爬虫项目，结果提示如下错误</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603110310624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>因为PIL属于pillow包下的模块，所以安装pillow即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603110700157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>重新run运行项目，结果又报错了，原因是使用scrapy的ImagesPipeline类，会将settings中配置的IMAGES_URLS_FIELD的值也就是封面图地址数据当作列表数据，但在代码中设置的article[‘cover_image_url’]的值不是列表数据，所以就出现如下异常错误</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603110944749.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>即在parse_detail函数中将提取的cover_image_url变量修改列表数据即可</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">article[&apos;cover_image_url&apos;] =  [cover_image_url]</span><br></pre></td></tr></table></figure><ul><li>重新启动项目，则成功下载文章封面图到images目录下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603111909670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在下载图片的时候也需要将图片保存的路径保存起来，需要继承scrapy提供的ImagesPipeline类，并重新父类的item_completed方法在方法中将遍历获取的图片路径保存到items中cover_image_path字段中，首先需要在pipelines文件中定义ArticleImagePipeline类完成逻辑</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleImagePipeline</span><span class="params">(ImagesPipeline)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">item_completed</span><span class="params">(self, results, item, info)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"cover_image_url"</span> <span class="keyword">in</span> item:</span><br><span class="line">            <span class="keyword">for</span> ok, value <span class="keyword">in</span> results:</span><br><span class="line">                image_file_path = value[<span class="string">"path"</span>]</span><br><span class="line">            item[<span class="string">"cover_image_path"</span>] = image_file_path</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><ul><li>紧接着在settings中修改管道文件配置为上面定义的管道类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   &apos;ArticleSpider.pipelines.ArticlespiderPipeline&apos;: 300,</span><br><span class="line">   # &apos;scrapy.pipelines.images.ImagesPipeline&apos;: 1,</span><br><span class="line">   &apos;ArticleSpider.pipelines.ArticleImagePipeline&apos;: 1,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Debug断点测试在执行ArticlespiderPipeline管道类中时是否获取到cover_image_path图片存放路径，说明因为在以上settings中配置的继承scrapy的ImagesPipeline类的管道类ArticleImagePipeline的优先级为1，所以程序在执行管道文件时是先将image_file_path的值也就是图片路径保存到item实例对象的cover_image_path字段中的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019060312103698.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>接下来在items字段中只差url_object_id的值了，这个值是将response.url也就是文章的地址通过hashlib库中的md5对象的update方法将文章url转换成唯一且长度一致的值，在项目目录下创建utils包并在该包下创建common.py文件，文件代码如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_md5</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> isinstance(url, str):</span><br><span class="line">        url = url.encode(<span class="string">"utf-8"</span>)</span><br><span class="line">    m = hashlib.md5()</span><br><span class="line">    m.update(url)</span><br><span class="line">    <span class="keyword">return</span> m.hexdigest()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">print</span> (get_md5(<span class="string">"http://jobbole.com"</span>))</span><br></pre></td></tr></table></figure><ul><li>执行以上代码，则将<a href="http://jobbole.com转换成唯一标识符" target="_blank" rel="noopener">http://jobbole.com转换成唯一标识符</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603122652804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在parse_detail函数中设置url_object_id的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">article[<span class="string">'url_object_id'</span>] = get_md5(response.url)</span><br></pre></td></tr></table></figure><ul><li>Debug测试items中是否存在url_object_id的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603123218195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>将文章详情页中提取的字段数据保存到本地，需要在pipelines文件中定义管道类将item数据保存到本地文件中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JsonWithEncodingPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#自定义json文件的导出</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.file = codecs.open(<span class="string">'article.json'</span>, <span class="string">'w'</span>, encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        lines = json.dumps(dict(item), ensure_ascii=<span class="literal">False</span>) + <span class="string">"\n"</span></span><br><span class="line">        self.file.write(lines)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">spider_closed</span><span class="params">(self, spider)</span>:</span></span><br><span class="line">        self.file.close()</span><br></pre></td></tr></table></figure><ul><li>在settings中配置以上管道文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   &apos;ArticleSpider.pipelines.JsonWithEncodingPipeline&apos;:2,</span><br><span class="line">   # &apos;ArticleSpider.pipelines.ArticlespiderPipeline&apos;: 300,</span><br><span class="line">   # &apos;scrapy.pipelines.images.ImagesPipeline&apos;: 1,</span><br><span class="line">   &apos;ArticleSpider.pipelines.ArticleImagePipeline&apos;: 1,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>运行项目，在下项目根目录成功创建article.json文件，并将爬取到的字段数据写入到文件中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603125807178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>还有一种方法就是使用scrapy提供的JsonItemExporter类实例对象的exporting方法将item数据写入到文件对象中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JsonExporterPipleline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#调用scrapy提供的json export导出json文件</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.file = open(<span class="string">'articleexport.json'</span>, <span class="string">'wb'</span>)</span><br><span class="line">        self.exporter = JsonItemExporter(self.file, encoding=<span class="string">"utf-8"</span>, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">        self.exporter.start_exporting()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span><span class="params">(self, spider)</span>:</span></span><br><span class="line">        self.exporter.finish_exporting()</span><br><span class="line">        self.file.close()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        self.exporter.export_item(item)</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><ul><li>在settings配置文件中配置以上管道类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   &apos;ArticleSpider.pipelines.JsonExporterPipleline&apos;:2,</span><br><span class="line">   # &apos;ArticleSpider.pipelines.JsonWithEncodingPipeline&apos;:2,</span><br><span class="line">   # &apos;ArticleSpider.pipelines.ArticlespiderPipeline&apos;: 300,</span><br><span class="line">   # &apos;scrapy.pipelines.images.ImagesPipeline&apos;: 1,</span><br><span class="line">   &apos;ArticleSpider.pipelines.ArticleImagePipeline&apos;: 1,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>运行项目，在下项目根目录成功创建articleexport.json文件，并将爬取到的字段数据写入到文件中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603130301333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>8.</strong>将爬取的数据保存到数据库中</p><ul><li>在mysql数据库中创建数据库以及表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603164953998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>需要在parse_detail方法中对create_date字段数据转换成date格式的数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    create_date = datetime.datetime.strptime(create_date, <span class="string">"%Y/%m/%d"</span>).date()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    create_date = datetime.datetime.now().date()</span><br></pre></td></tr></table></figure><ul><li>安装mysqlclient驱动包</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019060314515676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在管道文件中编写存储数据到mysql的管道类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MysqlPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#采用同步的机制写入mysql</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.conn = MySQLdb.connect(<span class="string">'localhost'</span>, <span class="string">'root'</span>, <span class="string">'mysql'</span>, <span class="string">'article_spider'</span>, charset=<span class="string">"utf8"</span>, use_unicode=<span class="literal">True</span>)</span><br><span class="line">        self.cursor = self.conn.cursor()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        insert_sql = <span class="string">"""insert into article(url_object_id, title, url, create_date, fav_nums)VALUES (%s, %s, %s, %s, %s)"""</span></span><br><span class="line">        self.cursor.execute(insert_sql, (item[<span class="string">"url_object_id"</span>], item[<span class="string">"title"</span>], item[<span class="string">"url"</span>], item[<span class="string">"create_date"</span>], item[<span class="string">"fav_nums"</span>]))</span><br><span class="line">        self.conn.commit()</span><br></pre></td></tr></table></figure><ul><li>在settings中配置以上管道类，为了演示将数据保存到mysql数据库所以博主这里将图片管道文件注释掉了</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   &apos;ArticleSpider.pipelines.JsonExporterPipleline&apos;:2,</span><br><span class="line">   # &apos;ArticleSpider.pipelines.JsonWithEncodingPipeline&apos;:2,</span><br><span class="line">   # &apos;ArticleSpider.pipelines.ArticlespiderPipeline&apos;: 300,</span><br><span class="line">   # &apos;scrapy.pipelines.images.ImagesPipeline&apos;: 1,</span><br><span class="line">   # &apos;ArticleSpider.pipelines.ArticleImagePipeline&apos;: 1,</span><br><span class="line">   &apos;ArticleSpider.pipelines.MysqlPipeline&apos;: 1,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Debug断点测试是否将要保存到数据库的字段数据成功保存到数据库</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603165606967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用Navicat工具打开article表数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603165714518.png" alt></fancybox></p><ul><li>退出Debug模式直接run运行后，在Navicat工具中查看爬取的字段数据，由于文章太多所以只爬取一定时间的文字字段数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603172349254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>当爬取的数据量比较大时，可以使用异步方式将数据写入到数据库中，首先需要在pipelines文件中定义MysqlTwistedPipeline类，逻辑代码如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MysqlTwistedPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, dbpool)</span>:</span></span><br><span class="line">        self.dbpool = dbpool</span><br><span class="line"> </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">from_settings</span><span class="params">(cls, settings)</span>:</span></span><br><span class="line">        dbparms = dict(</span><br><span class="line">            host = settings[<span class="string">"MYSQL_HOST"</span>],</span><br><span class="line">            db = settings[<span class="string">"MYSQL_DBNAME"</span>],</span><br><span class="line">            user = settings[<span class="string">"MYSQL_USER"</span>],</span><br><span class="line">            passwd = settings[<span class="string">"MYSQL_PASSWORD"</span>],</span><br><span class="line">            charset=<span class="string">'utf8'</span>,</span><br><span class="line">            cursorclass=MySQLdb.cursors.DictCursor,</span><br><span class="line">            use_unicode=<span class="literal">True</span>,</span><br><span class="line">        )</span><br><span class="line">        dbpool = adbapi.ConnectionPool(<span class="string">"MySQLdb"</span>, **dbparms)</span><br><span class="line">        <span class="keyword">return</span> cls(dbpool)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        <span class="comment"># 使用twisted将mysql插入变成异步执行</span></span><br><span class="line">        query = self.dbpool.runInteraction(self.do_insert, item)</span><br><span class="line">        query.addErrback(self.handle_error, item, spider)  <span class="comment"># 处理异常</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_error</span><span class="params">(self, failure, item, spider)</span>:</span></span><br><span class="line">        <span class="comment"># 处理异步插入的异常</span></span><br><span class="line">        print(failure)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">do_insert</span><span class="params">(self, cursor, item)</span>:</span></span><br><span class="line">        insert_sql = <span class="string">"""insert into article(url_object_id, title, url, create_date, fav_nums)VALUES (%s, %s, %s, %s, %s)"""</span></span><br><span class="line">        cursor.execute(insert_sql, (item[<span class="string">"url_object_id"</span>], item[<span class="string">"title"</span>], item[<span class="string">"url"</span>], item[<span class="string">"create_date"</span>], item[<span class="string">"fav_nums"</span>]))</span><br></pre></td></tr></table></figure><ul><li>在settings配置文件中配置连接mysql数据库的配置项</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MYSQL_HOST = &quot;localhost&quot;</span><br><span class="line">MYSQL_DBNAME = &quot;article_spider&quot;</span><br><span class="line">MYSQL_USER = &quot;root&quot;</span><br><span class="line">MYSQL_PASSWORD = &quot;mysql&quot;</span><br></pre></td></tr></table></figure><ul><li>在settings中配置定义异步写入数据库数据的管道类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   # &apos;ArticleSpider.pipelines.JsonExporterPipleline&apos;:2,</span><br><span class="line">   &apos;ArticleSpider.pipelines.JsonWithEncodingPipeline&apos;:2,</span><br><span class="line">   # &apos;ArticleSpider.pipelines.ArticlespiderPipeline&apos;: 300,</span><br><span class="line">   # &apos;scrapy.pipelines.images.ImagesPipeline&apos;: 1,</span><br><span class="line">   # &apos;ArticleSpider.pipelines.ArticleImagePipeline&apos;: 1,</span><br><span class="line">   # &apos;ArticleSpider.pipelines.MysqlPipeline&apos;: 1,</span><br><span class="line">   &apos;ArticleSpider.pipelines.MysqlTwistedPipeline&apos;: 1,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六丶将scrapy爬取到的数据写入到elasticsearch中"><a href="#六丶将scrapy爬取到的数据写入到elasticsearch中" class="headerlink" title="六丶将scrapy爬取到的数据写入到elasticsearch中"></a>六丶将scrapy爬取到的数据写入到elasticsearch中</h1><p><font style="color:red"><strong>重点：</strong></font>因为博主使用的Elasticsearch版本为5.1.1，所以在安装elasticsearch-dsl工具的版本应该在5.0.0,&lt;6.0.0之间，最新的elasticsearch-dsl版本为7.0，该最新版本与前面版本做了一些修改所涉及的代码以及用法都不一样，参考github上的文档即可<a href="https://github.com/elastic/elasticsearch-dsl-py" target="_blank" rel="noopener">https://github.com/elastic/elasticsearch-dsl-py</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Elasticsearch 7.x</span><br><span class="line">elasticsearch-dsl&gt;=7.0.0,&lt;8.0.0</span><br><span class="line"> </span><br><span class="line"># Elasticsearch 6.x</span><br><span class="line">elasticsearch-dsl&gt;=6.0.0,&lt;7.0.0</span><br><span class="line"> </span><br><span class="line"># Elasticsearch 5.x</span><br><span class="line">elasticsearch-dsl&gt;=5.0.0,&lt;6.0.0</span><br><span class="line"> </span><br><span class="line"># Elasticsearch 2.x</span><br><span class="line">elasticsearch-dsl&gt;=2.0.0,&lt;3.0.0</span><br></pre></td></tr></table></figure><ul><li>安装elasticsearch-dsl</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603185723491.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在项目models下创建es_types.py文件，在文件中创建索引mapping</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/6/2 12:45'</span></span><br><span class="line"><span class="keyword">from</span> elasticsearch_dsl <span class="keyword">import</span> DocType, Date, Nested, Boolean, analyzer,Completion, Keyword, Text, Integer</span><br><span class="line"><span class="keyword">from</span> elasticsearch_dsl.connections <span class="keyword">import</span> connections</span><br><span class="line">connections.create_connection(hosts=[<span class="string">"localhost"</span>])</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleType</span><span class="params">(DocType)</span>:</span></span><br><span class="line">    title = Text(analyzer=<span class="string">"ik_max_word"</span>)</span><br><span class="line">    create_date = Date()</span><br><span class="line">    url = Keyword()</span><br><span class="line">    url_object_id = Keyword()</span><br><span class="line">    cover_image_url = Keyword()</span><br><span class="line">    cover_image_path = Keyword()</span><br><span class="line">    praise_nums = Integer()</span><br><span class="line">    comment_nums = Integer()</span><br><span class="line">    fav_nums = Integer()</span><br><span class="line">    tags = Text(analyzer=<span class="string">"ik_max_word"</span>)</span><br><span class="line">    content = Text(analyzer=<span class="string">"ik_max_word"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        index = <span class="string">"jobbole"</span></span><br><span class="line">        doc_type = <span class="string">"article"</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    ArticleType.init()</span><br></pre></td></tr></table></figure><ul><li>运行es_types.py文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603192800724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>回到elasticsearch-head可视化页面，成功生成jobbole索引</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603192836353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在pipelines文件中定义管道类ElasticsearchPipeline将数据写入到es中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ElasticsearchPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 将数据写入到es中</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        article = ArticleType()</span><br><span class="line">        article.title = item[<span class="string">'title'</span>]</span><br><span class="line">        article.create_date = item[<span class="string">'create_date'</span>]</span><br><span class="line">        article.url = item[<span class="string">'url'</span>]</span><br><span class="line">        article.meta.id = item[<span class="string">'url_object_id'</span>]</span><br><span class="line">        article.cover_image_url = item[<span class="string">'cover_image_url'</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"cover_image_path"</span> <span class="keyword">in</span> item:</span><br><span class="line">            article.cover_image_path = item[<span class="string">'cover_image_path'</span>]</span><br><span class="line">        article.praise_nums = item[<span class="string">'praise_nums'</span>]</span><br><span class="line">        article.comment_nums = item[<span class="string">'comment_nums'</span>]</span><br><span class="line">        article.fav_nums = item[<span class="string">'fav_nums'</span>]</span><br><span class="line">        article.tags = item[<span class="string">'tags'</span>]</span><br><span class="line">        article.content = remove_tags(item[<span class="string">'content'</span>])</span><br><span class="line"> </span><br><span class="line">        article.save()</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><ul><li>Debug断点测试没有任何报错</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603193808969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在elasticsearch-head页面中查看jobbole索引的doc数据，成功将爬取的数据写入到es中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603193955883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在Kibana页面中对jobbole索引doc内容的tags标签进行匹配搜索，是否能够搜索出来此篇文章内容</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603194343404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>退出Debug，运行项目一段时间，爬取大量数据并写入到es中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190603194724840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/90720889" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/90720889</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
            <tag> Python Scrapy分布式爬虫 </tag>
            
            <tag> 数据抓取 </tag>
            
            <tag> Django 网站搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目于之在线教育平台网站的实战开发（完结）</title>
      <link href="/2019/11/15/Django%E9%A1%B9%E7%9B%AE%E4%BA%8E%E4%B9%8B%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%AE%8C%E7%BB%93%EF%BC%89/"/>
      <url>/2019/11/15/Django%E9%A1%B9%E7%9B%AE%E4%BA%8E%E4%B9%8B%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%AE%8C%E7%BB%93%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶常见web攻击及防范"><span style="color:#4ea1db">一丶常见web攻击及防范</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶Xadmin多种配置"><span style="color:#4ea1db">二丶Xadmin多种配置</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶Xadmin插件开发（富文本编辑器）"><span style="color:#4ea1db">三丶Xadmin插件开发（富文本编辑器）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶Xadmin插件开发（导出excel）"><span style="color:#4ea1db">四丶Xadmin插件开发（导出excel）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶项目部署上线"><span style="color:#4ea1db">五丶项目部署上线</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶项目总结"><span style="color:#4ea1db">六丶项目总结</span></a></li><a id="more"></a><h1 id="一丶常见web攻击及防范"><a href="#一丶常见web攻击及防范" class="headerlink" title="一丶常见web攻击及防范"></a>一丶常见web攻击及防范</h1><p><strong>1.</strong>sql注入攻击与防范</p><p>① sql注入的危害</p><ul><li>非法读取丶篡改丶删除数据库中的数据</li><li>盗取用户的各类敏感信息，获取利益</li><li>通过修改数据库来修改网页上的内容</li><li>注入木马等</li></ul><p>② sql注入登录演示</p><ul><li>定义原始方法登录视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sql注入登录演示</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UnsafeLoginView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""不安全登录,使用最原始的方法进行登录"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        user_name = request.POST.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">        pass_word = request.POST.get(<span class="string">"password"</span>, <span class="string">""</span>)</span><br><span class="line">        <span class="keyword">import</span> MySQLdb</span><br><span class="line">        conn = MySQLdb.connect(host=<span class="string">"127.0.0.1"</span>, user=<span class="string">"root"</span>, passwd=<span class="string">"mysql"</span>, db=<span class="string">"mxonline"</span>, charset=<span class="string">"utf8"</span>)</span><br><span class="line">        cursor = conn.cursor()</span><br><span class="line">        sql = <span class="string">"select * from  users_userprofile where username = '&#123;0&#125;' and password = '&#123;1&#125;' "</span>.format(user_name, pass_word)</span><br><span class="line">        res = cursor.execute(sql)</span><br><span class="line">        <span class="comment"># 获取用户所有数据</span></span><br><span class="line">        all_users = cursor.fetchall()</span><br></pre></td></tr></table></figure><ul><li>在根级urls中修改登录视图为上一步定义的视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^login/$'</span>, UnsafeLoginView.as_view(), name=<span class="string">"login"</span>),  <span class="comment"># 登录页</span></span><br></pre></td></tr></table></figure><ul><li>Debug测试输入不存在的用户名和密码，res变量的值为0，表示未查询到结果</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515204301676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在登录页面，输入特殊的用户名，密码随便输入，如下图所示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051520460357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Debug测试的结果是，居然查询到了数据，原因是1=1此条件为真所以肯定能查询到数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515205052355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用以上的sql语句在数据库进行查询，同样也能查询到数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515210440435.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>xss攻击原理及防范</p><p>① xss跨站脚本攻击(Cross Site Scripting)的危害</p><ul><li>盗取各类用户账号，如用户网银账号丶各类管理员账号</li><li>盗窃企业重要的具有商业价值的资料</li><li>非法转账</li><li>控制受害者机器向其他网站发起攻击丶注入木马等</li></ul><p>② xss攻击原理</p><ul><li>服务器对用户发送的请求地址中的name属性的值，直接做回显，并没有做任何加密处理，当黑客将请求地址中的name属性的值修改成一段js脚本，比如下图所示的获取cookie并进行alert打印，那么就会获取到用户的保存在本地的cookie</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051609305013.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>③ xss攻击流程图 </p><ul><li>以下的js脚本只是其中的一种而已，而黑客是怎么将url发送给受害者的比如邮件，QQ等等</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516093648942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>④ xss攻击防范</p><ul><li>首先代码里对用户输入的地方和变量都需要仔细检查长度和对(“ &lt;” &gt;” ; ‘)等字符做过滤</li><li>避免直接在cookie中泄露用户隐私，例如email丶密码等等</li><li>通过使cookie和系统ip进行绑定来降低cookie泄露后的危险</li><li>尽量采用POST进行表单提交而不使用GET（也就是请求地址中不出现参数）</li></ul><p><strong>3.</strong>csrf攻击与防范</p><p>① csrf跨站请求伪造(Cross-site request forgery)的危害</p><ul><li>以你的名义进行邮件发送</li><li>盗取你的账号</li><li>购买商品</li><li>虚拟货币转账</li></ul><p>② csrf攻击原理</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516103625603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>③ csrf防范</p><ul><li>表单提交时加上打印出csrf_token的值即可对跨站攻击进行有效的防范{% csrf_token %}</li></ul><h1 id="二丶Xadmin多种配置"><a href="#二丶Xadmin多种配置" class="headerlink" title="二丶Xadmin多种配置"></a>二丶Xadmin多种配置</h1><p><strong>1.</strong>导航栏icon的修改</p><ul><li>首先登陆<a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">Font Awesome</a>官网，下载最新版本图标字体库以及CSS框架</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516112741369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在xadmin源码中查看当前使用的font-awesome的版本为4.0.3</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516113325879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>将下载好的font-awesome-4.7.0进行解压后，替换编辑器源码中的font-awesome目录文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516113640176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在xadmin后端页面中左侧导航栏，修改用户心下的邮箱验证码图标</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051611541422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在xadmin源码中auth.py模块中找到UserAdmin模型类中的图标属性变量为model_icon</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516114037847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>即在users/adminx中找到邮箱验证码的EmailVerifyRecordAdmin类，在类中添加model_icon属性，具体需要改成什么样的图标，需要在官网上找到要修改图片样式，如下图所示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516120246589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>然后紧接着在EmailVerifyRecordAdmin邮箱验证码注册类中执行model_icon属性为上图的样式</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516120408721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Ctrl+F5强制刷新xadmin后台，用户信息邮箱验证码的图标就修改成功了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516120543846.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>xadmin后台表数据设定默认字段排序</p><ul><li>比如当用户点击查看课程列表时，整个列表数据是乱序的，比如点击数</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516121457155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>想让课程列表中的数据按照点击数的倒序进行排序，就需要在对应的注册类中添加如下ordering属性即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>, <span class="string">'click_nums'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'students'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br></pre></td></tr></table></figure><ul><li>刷新页面，成功按照课程点击数倒序排列显示数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051612191927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>xadmin后台管理中字段设置为只读</p><ul><li>在课程数据中如点击数丶收藏认识丶学习人数应该是只读而不能进行修改编辑的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051612364660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在注册类中添加readonly_fields属性指向要只读的字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readonly_fields = [<span class="string">'students'</span>, <span class="string">'click_nums'</span>, <span class="string">'fav_nums'</span>]</span><br></pre></td></tr></table></figure><ul><li>刷新页面则，指定只读的字段则显示在页面底部</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516124110786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>在xadmin后台中不显示某些字段</p><ul><li>在注册类中添加exclude属性的值即可，需要注意的是exclude属性与readonly_fields属性时冲突的，所以需要去除readonly_fields属性中的click_nums字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">readonly_fields = [<span class="string">'students'</span>, <span class="string">'fav_nums'</span>]</span><br><span class="line">exclude = [<span class="string">'click_nums'</span>]</span><br></pre></td></tr></table></figure><ul><li>刷新页面则，不显示点击数字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516124611632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>5.</strong>增加课程时修改外键选择的样式</p><ul><li>增加一门课程，需要通过下拉框来选择对应课程的机构，当数据庞大时，使用下拉框就没有搜索框来的方便</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516125132375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在organization/adminx中找到外键所指向的注册类，在该类中设置样式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">relfield_style = &apos;fk-ajax&apos;</span><br></pre></td></tr></table></figure><ul><li>刷新页面，在选择课程机构时则成功显示出搜索框</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516125619931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>6.</strong>inline的使用</p><ul><li>在xadmin后台管理中为课程添加章节信息时，不能在增加课程页面直接添加，而是需要退出课程到章节字段中去选择课程后才能添加课程的章节信息，在xadmin中也能像django admin那样去做到在一个页面直接添加外键的信息，在课程管理的adminx中需要定义一个类LessonInline，通过课程注册类中添加inlines的属性指向LessonInline对象即可达到效果</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LessonInline</span><span class="params">(object)</span>:</span></span><br><span class="line">    model = Lesson</span><br><span class="line">    extra = <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>, <span class="string">'click_nums'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'students'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'students'</span>, <span class="string">'fav_nums'</span>]</span><br><span class="line">    exclude = [<span class="string">'click_nums'</span>]</span><br><span class="line">    inlines = [LessonInline]</span><br></pre></td></tr></table></figure><ul><li>刷洗页面，增加课程页面底部就会出现章节，点击+则可以添加该课程对应的章节信息，很是方便</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516130943309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>需要注意的是，inline只能完成一成嵌套，不能完成多层，比如课程—章节—视频这就没法，但一个课程对应多个外键，就可以在inlines 属性中添加多个类，因为是列表类型的变量，在课程增加页面，除了添加章节还可以添加课程资源</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class LessonInline(object):</span><br><span class="line">    model = Lesson</span><br><span class="line">    extra = 0</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class CourseResourceInline(object):</span><br><span class="line">    model = CourseResource</span><br><span class="line">    extra = 0</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class CourseAdmin(object):</span><br><span class="line">    list_display = [&apos;name&apos;, &apos;desc&apos;, &apos;detail&apos;, &apos;degree&apos;, &apos;learn_times&apos;, &apos;students&apos;, &apos;click_nums&apos;]</span><br><span class="line">    search_fields = [&apos;name&apos;, &apos;desc&apos;, &apos;detail&apos;, &apos;degree&apos;, &apos;students&apos;]</span><br><span class="line">    list_filter = [&apos;name&apos;, &apos;desc&apos;, &apos;detail&apos;, &apos;degree&apos;, &apos;learn_times&apos;, &apos;students&apos;]</span><br><span class="line">    ordering = [&apos;-click_nums&apos;]</span><br><span class="line">    readonly_fields = [&apos;students&apos;, &apos;fav_nums&apos;]</span><br><span class="line">    exclude = [&apos;click_nums&apos;]</span><br><span class="line">    inlines = [LessonInline, CourseResourceInline]</span><br></pre></td></tr></table></figure><ul><li>刷新页面，在增加课程页面就可以同时添加章节信息以及课程资源数据了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516131654870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>7.</strong>自定义列表返回数据，同一个model注册两个管理器</p><ul><li>在之前主页动态数据展示时，因公开课程栏中嵌套了轮播图，就需要在课程所在的模型类Course添加is_banner是否轮播字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516150242268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>如果想在课程管理中产生另一个表数据，这个表数据只显示轮播的课程数据那么就需要在courses/models中创建一个轮播课程模型类，这个类必须继承Course，只需要在类中编写Meta类并定义名称即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BannerCourse</span><span class="params">(Course)</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">"轮播课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line">        proxy = <span class="literal">True</span></span><br></pre></td></tr></table></figure><ul><li>将上面定义的模型类，在courses/adminx中进行导入注册</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BannerCourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>, <span class="string">'click_nums'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'students'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'students'</span>, <span class="string">'fav_nums'</span>]</span><br><span class="line">    exclude = [<span class="string">'click_nums'</span>]</span><br><span class="line">    inlines = [LessonInline, CourseResourceInline]</span><br><span class="line"> </span><br><span class="line">xadmin.site.register(BannerCourse, BannerCourseAdmin)</span><br></pre></td></tr></table></figure><ul><li>强制刷新页面后，在课程管理导航栏下成功创建一个轮播课程表数据，这个数据说白了跟课程的数据一模一样只是名称变了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516151538842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>如何让轮播课程表中数据只显示轮播的课程，在轮播课程对应的注册类中定义一个方法，该方法用于对父类Course模型类中的is_banner字段进行过滤，将过滤后的数据进行返回即可，<font style="color:red">为什么可以对is_banner字段进行过滤，因为BannerCourseAdmin与BannerCourse进行注册关联，并且BannerCourse这个模型类又继承Course模型类，即可以对is_banner字段进行过滤处理了</font></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BannerCourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>, <span class="string">'click_nums'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'students'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'students'</span>, <span class="string">'fav_nums'</span>]</span><br><span class="line">    exclude = [<span class="string">'click_nums'</span>]</span><br><span class="line">    inlines = [LessonInline, CourseResourceInline]</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        qs = super(BannerCourseAdmin, self).queryset()</span><br><span class="line">        qs = qs.filter(is_banner=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> qs</span><br></pre></td></tr></table></figure><ul><li>刷新页面查看轮播课程数据，则成功只显示轮播的课程数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516152520633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>既然在轮播课程中只显示轮播课程数据，那么在课程中也应当只显示出不轮播的课程数据，跟上面同理在CourseAdmin注册类中定义queryset方法，只需要修改父类名以及将filter方法中的条件改成False即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>, <span class="string">'click_nums'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'students'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>]</span><br><span class="line">    ordering = [<span class="string">'-click_nums'</span>]</span><br><span class="line">    readonly_fields = [<span class="string">'students'</span>, <span class="string">'fav_nums'</span>]</span><br><span class="line">    exclude = [<span class="string">'click_nums'</span>]</span><br><span class="line">    inlines = [LessonInline, CourseResourceInline]</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        qs = super(CourseAdmin, self).queryset()</span><br><span class="line">        qs = qs.filter(is_banner=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">return</span> qs</span><br></pre></td></tr></table></figure><ul><li>查看课程下的数据，只有13条，总共课程16条数据，轮播课程3条，所以数据筛选正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516153036362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>8.</strong>list_editable属性</p><ul><li>在课程注册类CourseAdmin中添加list_editable属性，这个属性可以在列表中对设定的字段直接进行编辑，而不需要点击进入课程详情中进行编辑</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_editable = [<span class="string">'name'</span>, <span class="string">'degree'</span>]</span><br></pre></td></tr></table></figure><ul><li>刷新课程列表页面，则指定可编辑的name字段以及degree字段则出现编辑按钮，点击按钮可直接进行编辑保存了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516154618195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>9.</strong>在课程列表中显示对应课程的章节数</p><ul><li>之前在页面模板中为了显示课程的章节数，在Course模型类中定义了get_zj_nums方法，用于获取课程的章节数，short_description方法是用于在xadmin后台显示的字段名称</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_zj_nums</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment">#获取课程章节数</span></span><br><span class="line">    <span class="keyword">return</span> self.lesson_set.all().count()</span><br><span class="line">get_zj_nums.short_description = <span class="string">"章节数"</span></span><br></pre></td></tr></table></figure><ul><li>在课程注册类CourseAdmin中list_display属性中添加该方法名，对应django来说判断该字段为方法名时，则会去调用此方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_display = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>, <span class="string">'click_nums'</span>, <span class="string">"get_zj_nums"</span>]</span><br></pre></td></tr></table></figure><ul><li>刷新课程列表页，则成功显示出课程对应的章节数</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516155353577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>10.</strong>在课程列表字段添加跳转按钮，指定跳转的链接地址</p><ul><li>在Course模型类中定义go_to方法，具体如下，说明一下make_safe方法是让链接地址安全不进行转义操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">go_to</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">from</span> django.utils.safestring <span class="keyword">import</span> mark_safe</span><br><span class="line">    <span class="keyword">return</span> mark_safe(<span class="string">"&lt;a href='http://www.baidu.com'&gt;跳转&lt;/a&gt;"</span>)</span><br><span class="line">go_to.short_description = <span class="string">"跳转"</span></span><br></pre></td></tr></table></figure><ul><li>在注册类CourseAdmin中将以上方法名添加到list_display属性中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_display = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>, <span class="string">'click_nums'</span>, <span class="string">"get_zj_nums"</span>, <span class="string">"go_to"</span>]</span><br></pre></td></tr></table></figure><ul><li>测试显示跳转字段并进行目标地址的跳转</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516160525307.gif" alt></fancybox></p><p><strong>11.</strong>页面定时刷新插件</p><ul><li>xadmin提供了此功能，在RefreshPlugin类中refresh_times为空列表，表示未进行设置刷新时间</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516161807189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在CourseAdmin中添加refresh_times属性，并设定其值为3秒或5秒刷新条件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">refresh_times = [<span class="number">3</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><ul><li>测试自动刷新，选择3秒进行刷新测试，请注意链接地址的自动刷新</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516163654304.gif" alt></fancybox></p><p><strong>12.</strong>在保存课程的时候统计课程机构的课程数</p><ul><li>在CourseAdmin注册类中重写父类的save_models方法，当对课程进行修改或者增加时都会对数据进行保存，那么就会去调用重写的save_models方法，就可以在这个方法中查询获取对应的课程机构的课程数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_models</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment"># 在保存课程的时候统计课程机构的课程数</span></span><br><span class="line">    obj = self.new_obj</span><br><span class="line">    obj.save()</span><br><span class="line">    <span class="keyword">if</span> obj.course_org <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        course_org = obj.course_org</span><br><span class="line">        course_org.course_nums = Course.objects.filter(course_org=course_org).count()</span><br><span class="line">        course_org.save()</span><br></pre></td></tr></table></figure><ul><li>在课程机构中查看第一条数据同济大学的课程数，这里显示为0</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516165316557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Debug 断点测试，在课程中对Mysql主从复制课程所属的课程机构修改成同济大学，后点击保存</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516170535424.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Debug断点测试完成后，查看课程机构中同济大学的课程数</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516170658990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶Xadmin插件开发（富文本编辑器）"><a href="#三丶Xadmin插件开发（富文本编辑器）" class="headerlink" title="三丶Xadmin插件开发（富文本编辑器）"></a>三丶Xadmin插件开发（富文本编辑器）</h1><p><strong>说明：</strong> django ueditor富文本编辑器的集成</p><p><strong>1.</strong>Xadmin插件制作官方中文文档 <a href="https://xadmin.readthedocs.io/en/docs-chinese/make_plugin.html" target="_blank" rel="noopener">https://xadmin.readthedocs.io/en/docs-chinese/make_plugin.html</a></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516173843375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>DjangoUeditor源码文档 <a href="https://github.com/zhangfisher/DjangoUeditor" target="_blank" rel="noopener">https://github.com/zhangfisher/DjangoUeditor</a></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516174316811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>DjangoUeditor使用</p><ul><li>安装DjangoUeditor</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516175231995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在INSTALL_APPS里面增加DjangoUeditor</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    .......,</span><br><span class="line">    .......,</span><br><span class="line">    &quot;pure_pagination&quot;,</span><br><span class="line">    &quot;DjangoUeditor&quot;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>配置urls</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^ueditor/'</span>,include(<span class="string">'DjangoUeditor.urls'</span> )),</span><br></pre></td></tr></table></figure><ul><li>在需要使用富文本编辑器的模型类中导入UEditorField类，项目中Course模型类中的课程详情字段是需要使用富文本的，所以对detail字段进行如下修改</li><li>说明：UEditorField继承自models.TextField,因此你可以直接将model里面定义的models.TextField直接改成UEditorField即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">detail = UEditorField(verbose_name=<span class="string">u"课程详情"</span>,width=<span class="number">600</span>, height=<span class="number">300</span>, imagePath=<span class="string">"courses/ueditor/"</span>,</span><br><span class="line">                                         filePath=<span class="string">"courses/ueditor/"</span>, default=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><ul><li>在xadmin/plugins目录下创建ueditor.py文件，在文件中进行如下编写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xadmin</span><br><span class="line"><span class="keyword">from</span> xadmin.views <span class="keyword">import</span> BaseAdminPlugin, CreateAdminView, ModelFormAdminView, UpdateAdminView</span><br><span class="line"><span class="keyword">from</span> DjangoUeditor.models <span class="keyword">import</span> UEditorField</span><br><span class="line"><span class="keyword">from</span> DjangoUeditor.widgets <span class="keyword">import</span> UEditorWidget</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XadminUEditorWidget</span><span class="params">(UEditorWidget)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,**kwargs)</span>:</span></span><br><span class="line">        self.ueditor_options=kwargs</span><br><span class="line">        self.Media.js = <span class="literal">None</span></span><br><span class="line">        super(XadminUEditorWidget,self).__init__(kwargs)</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UeditorPlugin</span><span class="params">(BaseAdminPlugin)</span>:</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_field_style</span><span class="params">(self, attrs, db_field, style, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> style == <span class="string">'ueditor'</span>:</span><br><span class="line">            <span class="keyword">if</span> isinstance(db_field, UEditorField):</span><br><span class="line">                widget = db_field.formfield().widget</span><br><span class="line">                param = &#123;&#125;</span><br><span class="line">                param.update(widget.ueditor_settings)</span><br><span class="line">                param.update(widget.attrs)</span><br><span class="line">                <span class="keyword">return</span> &#123;<span class="string">'widget'</span>: XadminUEditorWidget(**param)&#125;</span><br><span class="line">        <span class="keyword">return</span> attrs</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">block_extrahead</span><span class="params">(self, context, nodes)</span>:</span></span><br><span class="line">        js = <span class="string">'&lt;script type="text/javascript" src="%s"&gt;&lt;/script&gt;'</span> % (settings.STATIC_URL + <span class="string">"ueditor/ueditor.config.js"</span>)         <span class="comment">#自己的静态目录</span></span><br><span class="line">        js += <span class="string">'&lt;script type="text/javascript" src="%s"&gt;&lt;/script&gt;'</span> % (settings.STATIC_URL + <span class="string">"ueditor/ueditor.all.min.js"</span>)   <span class="comment">#自己的静态目录</span></span><br><span class="line">        nodes.append(js)</span><br><span class="line"> </span><br><span class="line">xadmin.site.register_plugin(UeditorPlugin, UpdateAdminView)</span><br><span class="line">xadmin.site.register_plugin(UeditorPlugin, CreateAdminView)</span><br><span class="line">在xadmin/plugins目录下的__init__.py文件中，将ueditor插件注册进去</span><br><span class="line">PLUGINS = (</span><br><span class="line">    <span class="string">'actions'</span>, </span><br><span class="line">    <span class="string">'.......'</span>,</span><br><span class="line">    <span class="string">'ueditor'</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>4.</strong>错误修正 </p><p><strong>说明：</strong><font style="color:red">DjangoUeditor是基于Python 2.7的进行开发的，博主这里的开发环境为python3，所以需要对DjangoUeditor安装包下的models.py丶settings.py丶widgets.py丶commands.py丶urls.py丶views.py进行修改</font></p><ul><li>models.py </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># from widgets import UEditorWidget,AdminUEditorWidget</span></span><br><span class="line"><span class="keyword">from</span> .widgets <span class="keyword">import</span> UEditorWidget, AdminUEditorWidget</span><br></pre></td></tr></table></figure><ul><li>settings.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">更新配置：从用户配置文件settings.py重新读入配置UEDITOR_SETTINGS,覆盖默认</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">UpdateUserSettings</span><span class="params">()</span>:</span></span><br><span class="line">    UserSettings=getattr(gSettings,<span class="string">"UEDITOR_SETTINGS"</span>,&#123;&#125;).copy()</span><br><span class="line">    <span class="comment"># if UserSettings.has_key("config"):UEditorSettings.update(UserSettings["config"])</span></span><br><span class="line">    <span class="comment"># if UserSettings.has_key("upload"):UEditorUploadSettings.update(UserSettings["upload"])</span></span><br><span class="line">    <span class="keyword">if</span> UserSettings.get(<span class="string">"config"</span>):UEditorSettings.update(UserSettings[<span class="string">"config"</span>])</span><br><span class="line">    <span class="keyword">if</span> UserSettings.get(<span class="string">"upload"</span>):UEditorUploadSettings.update(UserSettings[<span class="string">"upload"</span>])</span><br></pre></td></tr></table></figure><ul><li>widgets.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># import settings as USettings</span></span><br><span class="line"><span class="comment"># from  commands import *</span></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> settings <span class="keyword">as</span> USettings</span><br><span class="line"><span class="keyword">from</span> .commands <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><ul><li>commands.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># import settings as USettings</span></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> settings <span class="keyword">as</span> USettings</span><br></pre></td></tr></table></figure><ul><li>urls.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="comment"># from django import VERSION</span></span><br><span class="line"><span class="comment"># if VERSION[0:2]&gt;(1,3):</span></span><br><span class="line"><span class="comment">#     from django.conf.urls import patterns, url</span></span><br><span class="line"><span class="comment"># else:</span></span><br><span class="line"><span class="comment">#     from django.conf.urls.defaults import patterns, url</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># from views import get_ueditor_controller</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># urlpatterns = patterns('',</span></span><br><span class="line"><span class="comment">#     url(r'^controller/$',get_ueditor_controller)</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"><span class="keyword">from</span> .widgets <span class="keyword">import</span> UEditorWidget, AdminUEditorWidget</span><br><span class="line"><span class="keyword">from</span> .views <span class="keyword">import</span> get_ueditor_controller</span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^controller/$'</span>, get_ueditor_controller),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>views.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># import settings as USettings</span></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> settings <span class="keyword">as</span> USettings</span><br><span class="line"> </span><br><span class="line"><span class="comment">#保存上传的文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_upload_file</span><span class="params">(PostFile,FilePath)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        f = open(FilePath, <span class="string">'wb'</span>)</span><br><span class="line">        <span class="keyword">for</span> chunk <span class="keyword">in</span> PostFile.chunks():</span><br><span class="line">            f.write(chunk)</span><br><span class="line">    <span class="comment"># except Exception,E:</span></span><br><span class="line">    <span class="comment">#     f.close()</span></span><br><span class="line">    <span class="comment">#     return u"写入文件错误:"+ E.message</span></span><br><span class="line">    <span class="comment"># f.close()</span></span><br><span class="line">    <span class="comment"># return u"SUCCESS"</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> E:</span><br><span class="line">        f.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="string">u"写入文件错误:"</span>+ E.message</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">u"SUCCESS"</span></span><br></pre></td></tr></table></figure><ul><li>重启项目进入xadmin后台进行增加课程操作时，结果报错了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516204950643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>回到编辑器，查看错误位置</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516205039452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看安装包DjangoUeditor中发现并没有ueditor.html，甚至连templates目录都没有</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516205525918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>解决方法有三种</strong>：第一种就是在github上将别人修正好的适合python3的DjangoUeditor源码拷贝进行源码安装；第二种就是自己下载DjangoUeditor免安装源码放在项目extra_apps目录下；第三种就是下载DjangoUeditor源码安装，在对其下的模块进行修正</p><ul><li>博主选择第三种，将下载好的DjangoUeditor-master.zip进行解压，将解压后的文件放在项目根目录下，具体操作如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516214632815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>完成上一步后，刷新页面则成功在课程详情字段加载出富文本编辑器</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190516214815400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>添加新的课程使用富文本编辑器</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190519132812572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看课程列表，在刚新增的课程详情页中显示全是HTML代码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190519132844125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在进入课程详情后，详情页面显示出转义的内容</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190519134243589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>需要在course-detail模板中找到课程详情数据块，对数据块内容进行转义关闭</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab_cont tab_cont1"</span>&gt;</span></span><br><span class="line">    &#123;% autoescape off %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; course.detail &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &#123;% endautoescape %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面，成功显示出在富文本编写的内容</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051913443960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>5.</strong>总结步骤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">安装</span><br><span class="line">1.pip install DjangoUeditor</span><br><span class="line">2.settings.py 中加入DjangoUeditor</span><br><span class="line">3.url(r&apos;ueditor/&apos;, include(&apos;DjangoUeditor.urls&apos;))</span><br><span class="line">4.detail = UeditorField()</span><br><span class="line"></span><br><span class="line">xadmin</span><br><span class="line">1.plugins中添加ueditor.py文件，在__init__中加入ueditor</span><br><span class="line">2.adminx中添加style_fields = &#123;&apos;detail&apos;:&apos;ueditor&apos;&#125;</span><br></pre></td></tr></table></figure><h1 id="四丶Xadmin插件开发（导出excel）"><a href="#四丶Xadmin插件开发（导出excel）" class="headerlink" title="四丶Xadmin插件开发（导出excel）"></a>四丶Xadmin插件开发（导出excel）</h1><p><strong>说明</strong>：excel的导入插件开发</p><p><strong>1.</strong>在xadmin/plugins中创建excel.py文件，拷贝如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import xadmin</span><br><span class="line">from xadmin.views import BaseAdminPlugin, ListAdminView</span><br><span class="line">from django.template import loader</span><br><span class="line">from xadmin.plugins.utils import get_context_dict</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">#excel 导入</span><br><span class="line">class ListImportExcelPlugin(BaseAdminPlugin):</span><br><span class="line">    import_excel = False</span><br><span class="line"> </span><br><span class="line">    def init_request(self, *args, **kwargs):</span><br><span class="line">        return bool(self.import_excel)</span><br><span class="line"> </span><br><span class="line">    def block_top_toolbar(self, context, nodes):</span><br><span class="line">        nodes.append(loader.render_to_string(&apos;xadmin/excel/model_list.top_toolbar.import.html&apos;, context=get_context_dict(context)))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">xadmin.site.register_plugin(ListImportExcelPlugin, ListAdminView)</span><br></pre></td></tr></table></figure><p><strong>2.</strong>在xadmin/templates/xadmin目录下创建excel目录，在目录下创建model_list.top_toolbar.import.html文件，文件内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load i18n %&#125;</span><br><span class="line">&lt;div class=&quot;btn-group export&quot;&gt;</span><br><span class="line">  &lt;a class=&quot;dropdown-toggle btn btn-default btn-sm&quot; data-toggle=&quot;dropdown&quot; href=&quot;#&quot;&gt;</span><br><span class="line">    &lt;i class=&quot;icon-share&quot;&gt;&lt;/i&gt; 导入 &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">  &lt;ul class=&quot;dropdown-menu&quot; role=&quot;menu&quot; aria-labelledby=&quot;dLabel&quot;&gt;</span><br><span class="line">      &lt;li&gt;&lt;a data-toggle=&quot;modal&quot; data-target=&quot;#export-modal-import-excel&quot;&gt;&lt;i class=&quot;icon-circle-arrow-down&quot;&gt;&lt;/i&gt; 导入 Excel&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        function fileChange(target)&#123;</span><br><span class="line">//检测上传文件的类型</span><br><span class="line">            var imgName = document.all.submit_upload.value;</span><br><span class="line">            var ext,idx;</span><br><span class="line">            if (imgName == &apos;&apos;)&#123;</span><br><span class="line">                document.all.submit_upload_b.disabled=true;</span><br><span class="line">                alert(&quot;请选择需要上传的 xls 文件!&quot;);</span><br><span class="line">                return;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                idx = imgName.lastIndexOf(&quot;.&quot;);</span><br><span class="line">                if (idx != -1)&#123;</span><br><span class="line">                    ext = imgName.substr(idx+1).toUpperCase();</span><br><span class="line">                    ext = ext.toLowerCase( );</span><br><span class="line">&#123;#                    alert(&quot;ext=&quot;+ext);#&#125;</span><br><span class="line">                    if (ext != &apos;xls&apos; &amp;&amp; ext != &apos;xlsx&apos;)&#123;</span><br><span class="line">                        document.all.submit_upload_b.disabled=true;</span><br><span class="line">                        alert(&quot;只能上传 .xls 类型的文件!&quot;);</span><br><span class="line"> </span><br><span class="line">                        return;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    document.all.submit_upload_b.disabled=true;</span><br><span class="line">                    alert(&quot;只能上传 .xls 类型的文件!&quot;);</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;div id=&quot;export-modal-import-excel&quot; class=&quot;modal fade&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;modal-dialog&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;modal-content&quot;&gt;</span><br><span class="line">          &lt;form method=&quot;post&quot; action=&quot;&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">              &#123;% csrf_token %&#125;</span><br><span class="line">          &lt;div class=&quot;modal-header&quot;&gt;</span><br><span class="line">            &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot; aria-hidden=&quot;true&quot;&gt;&amp;times;&lt;/button&gt;</span><br><span class="line">            &lt;h4 class=&quot;modal-title&quot;&gt;导入 Excel&lt;/h4&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;modal-body&quot;&gt;</span><br><span class="line">               &lt;input type=&quot;file&quot; οnchange=&quot;fileChange(this)&quot; name=&quot;excel&quot; id=&quot;submit_upload&quot;&gt;</span><br><span class="line"> </span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;modal-footer&quot;&gt;</span><br><span class="line">            &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; data-dismiss=&quot;modal&quot;&gt;&#123;% trans &quot;Close&quot; %&#125;&lt;/button&gt;</span><br><span class="line">            &lt;button class=&quot;btn btn-success&quot; type=&quot;submit&quot; id=&quot;submit_upload_b&quot;&gt;&lt;i class=&quot;icon-share&quot;&gt;&lt;/i&gt; 导入&lt;/button&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;/form&gt;</span><br><span class="line">        &lt;/div&gt;&lt;!-- /.modal-content --&gt;</span><br><span class="line">      &lt;/div&gt;&lt;!-- /.modal-dalog --&gt;</span><br><span class="line">    &lt;/div&gt;&lt;!-- /.modal --&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>3.</strong>在courses/adminx下的CourseAdmin类中添加import_excel = True属性，并定义一个post方法，在这个方法中可以任意添加任何逻辑代码，这里就不进行逻辑代码的演示了，直接pass，但必须返回如下调用，不然会出错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'excel'</span> <span class="keyword">in</span> request.FILES:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> super(CourseAdmin, self).post(request, args, kwargs)</span><br></pre></td></tr></table></figure><p><strong>4.</strong>在plugins/<strong>init</strong>.py中注册此插件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PLUGINS = (</span><br><span class="line">    <span class="string">'actions'</span>, </span><br><span class="line">    <span class="string">'filters'</span>, </span><br><span class="line">    <span class="string">'bookmark'</span>, </span><br><span class="line">    <span class="string">'export'</span>, </span><br><span class="line">    <span class="string">'ueditor'</span>,</span><br><span class="line">    <span class="string">'excel'</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>测试刷新课程列表页，在右上角菜单栏中显示出导入按钮，因为没有写对上传excel文件操作，所以这里只能显示出此功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051915312782.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶项目部署上线"><a href="#五丶项目部署上线" class="headerlink" title="五丶项目部署上线"></a>五丶项目部署上线</h1><p><strong>1.</strong>指定python3版本创建django_py3虚拟环境，并进入此环境</p><p><img src="https://img-blog.csdnimg.cn/20190523105246252.png" alt></p><p><strong>2.</strong>安装项目所需的包</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523102815441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>查看当前虚拟环境下的包</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523103038921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>运行项目</p><ul><li>在终端执行python3 manage.py runserver</li></ul><p><img src="https://img-blog.csdnimg.cn/2019052311280649.png" alt></p><ul><li>结果报错了，这个错无非就是安装的DjangoUeditor包中源码为python2编写的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523112639602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>将windows虚拟环境D:\django_py3\Lib\site-packages下的DjangoUeditor包替换掉ubuntu虚拟环境django_py3/lib/python3.5/site-packages下的DjangoUeditor</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523114219308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>再次使用命令启动项目，结果又报错了，原因是没有mxonline的数据库</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523114332718.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>5.</strong>将windows上的mxonline数据库数据传输到ubuntu中</p><ul><li>在ubuntu中创建mxonline数据库 </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523115521579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看ubuntu上的IP地址</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523114838833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>博主这里在使用Navicat软件时，不小心将mxonline数据库数据表数据清空了，所以导致博主需要花大量时间在xadmin后台进行数据的添加，所以博主先将数据库mxonline进行备份，免得再出现该情况</li></ul><p><img src="https://img-blog.csdnimg.cn/20190523143018771.png" alt></p><ul><li>使用Navicat软件测试在windows上测试连接ubuntu中的mysql </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523122354434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在Windows上打开Navicat软件，通过该软件数据传输功能将mxonline数据库数据传输到ubuntu中的mxonline数据中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523115929819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>点击开始后，出现success表示成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019052312000254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>回到ubuntu中，重新启动项目，则启动成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523120349518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>打开浏览器访问成功访问主页并显示动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523145201680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>6.</strong>安装nginx</p><p><strong>说明：</strong>安装过程不用演示，很简单</p><ul><li>因博主在之前Django电商项目中已经安装过了所以这里不用安装，并且ngin.conf配置文件中的配置为Django电商项目的配置；在Django电商项目部署配置nginx时，将默认的配置文件进行了备份（nginx.conf.fefault），所以只需要指定该配置文件来启动nginx即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523152152788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在浏览器中直接输入ubuntu IP地址即默认访问80端口，则显示nginx服务启动成功页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523152347509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>7.</strong>安装uwsgi</p><ul><li>进入虚拟环境中安装uwsgi</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523153335635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用uwsgi启动项目</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523155710986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在浏览器中输入<a href="http://192.168.4.63:8000/" target="_blank" rel="noopener">http://192.168.4.63:8000/</a> 则成功加载出页面动态数据；但静态资源无法加载出来</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523155815460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>8.</strong>nginx配置</p><ul><li>拷贝nginx默认的配置文件到当前目录下并命名为mx_nginx.conf</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523163245339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>编写mx_nginx.conf文件内容，具体如下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  192.168.4.63 www.mxonline.com;</span><br><span class="line"> </span><br><span class="line">        #charset koi8-r;</span><br><span class="line"> </span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line">location /static &#123;</span><br><span class="line">            alias /home/taogang/Desktop/MxOnline/static;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        location /media &#123;</span><br><span class="line">            alias /home/taogang/Desktop/MxOnline/media;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        location / &#123;</span><br><span class="line">            include   uwsgi_params;</span><br><span class="line">            uwsgi_pass  127.0.0.1:8000;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>指定以上配置文件启动nginx服务器</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523165152468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>9.</strong>将项目所用到的所有静态资源文件收集到static目录下</p><ul><li>需要在settings配置文件中配置收集静态文件路径，之前<a href="https://blog.csdn.net/qq_41782425/article/details/89059800#%E5%9B%9B%E4%B8%B6%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2" target="_blank" rel="noopener">Django电商项目</a>也是这样的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019052811044542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>进入项目虚拟环境，执行命令进行收集</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523171950568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>10.</strong>创建并配置uwsgi.ini文件</p><ul><li>在项目根目录下创建一个uwsgi.ini配置文件，编写以下内容</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523203340331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在配置文件settings中，设置为线上环境</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DEBUG = False</span><br><span class="line"> </span><br><span class="line">ALLOWED_HOSTS = [&apos;*&apos;]</span><br></pre></td></tr></table></figure><p><strong>11.</strong>测试使用uwsgi启动项目</p><ul><li>启动uwsgi</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523203743999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在浏览器直接访问<a href="http://192.168.4.63/" target="_blank" rel="noopener">http://192.168.4.63/</a> 成功加载动态数据以及静态资源文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523203848934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>12.</strong>在windows中使用域名访问网站</p><ul><li>切换到windows中，在浏览器输入<a href="http://192.168.4.63/" target="_blank" rel="noopener">http://192.168.4.63/</a>  成功访问ubuntu中uwsgi启动的网站，之所以能够访问是因为通过vmware虚拟机搭建的ubuntu桥接模式为同一网段ip，即可以互相ping通</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523204208236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>接下来想要在浏览器地址栏中输入<a href="http://www.mxonline.com域名来访问网站主页，则需要在windows电脑hosts文件中添加如下内容，则表示输入此域名相当于访问192.168.4.63IP地址，因为没有购买域名，所以只能这样做，仅限于本地可以使用该域名访问" target="_blank" rel="noopener">www.mxonline.com域名来访问网站主页，则需要在windows电脑hosts文件中添加如下内容，则表示输入此域名相当于访问192.168.4.63IP地址，因为没有购买域名，所以只能这样做，仅限于本地可以使用该域名访问</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523204943316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试在浏览器中输入<a href="http://www.mxonline.com/" target="_blank" rel="noopener">http://www.mxonline.com/</a> 是否成功访问主页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190523205219328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="六丶项目总结"><a href="#六丶项目总结" class="headerlink" title="六丶项目总结"></a>六丶项目总结</h1><p><strong>1.数据库设计</strong></p><ul><li>users app model用户信息相关数据表设计</li><li>organization app model课程机构数据表设计</li><li>courses app model课程相关数据表设计</li><li>operation app model用户操作相关数据表设计</li></ul><p><strong>2.后台管理系统开发</strong></p><ul><li>xadmin安装以及model注册</li><li>xadmin全局配置</li></ul><p><strong>3.登录和注册以及找回密码</strong></p><ul><li>登录(session和cookie机制)</li><li>注册(form表单提交和图片验证码以及发送邮件)</li><li>找回密码(邮件发送)</li></ul><p><strong>4.课程机构</strong></p><ul><li>机构列表(分页和筛选以及排序)</li><li>机构详情(收藏和富文本编辑)</li><li>咨询提交(modelform验证和保存)</li></ul><p><strong>5.课程功能</strong></p><ul><li>课程列表(分页和排序)</li><li>课程详情(收藏丶章节展示丶资源展示丶评论)</li></ul><p><strong>6.讲师功能</strong></p><ul><li>讲师列表(分页和排序)</li><li>讲师详情(收藏)</li></ul><p><strong>7.个人中心</strong></p><ul><li>用户信息修改(修改密码丶头像丶邮箱丶基本信息)</li><li>我的课程</li><li>我的收藏(取消收藏)</li><li>我的消息</li></ul><p><strong>8.全局功能</strong></p><ul><li>搜索功能(公开课丶课程机构丶授课老师)</li><li>全局404和500页面配置</li><li>首页开发</li><li>点击数和收藏数修改以及退出功能</li></ul><p><strong>9.web攻击及防范</strong></p><ul><li>sql注入攻击</li><li>xss攻击</li><li>csrf攻击</li></ul><p><strong>10.xadmin进阶开发</strong></p><ul><li>userprofile注册和设置</li><li>xadmin常见功能设置</li><li>inlinemode注册和proxy代理注册</li><li>django ueditor富文本编辑器集成</li><li>excel导入插件集成</li></ul><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/90243762" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/90243762</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目于之在线教育平台网站的实战开发（五）</title>
      <link href="/2019/11/15/Django%E9%A1%B9%E7%9B%AE%E4%BA%8E%E4%B9%8B%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%94%EF%BC%89/"/>
      <url>/2019/11/15/Django%E9%A1%B9%E7%9B%AE%E4%BA%8E%E4%B9%8B%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶全局搜索功能"><span style="color:#4ea1db">一丶全局搜索功能</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶用户个人中心（个人资料）"><span style="color:#4ea1db">二丶用户个人中心（个人资料）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶用户个人中心（我的课程） "><span style="color:#4ea1db">三丶用户个人中心（我的课程）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶用户个人中心（我的收藏） "><span style="color:#4ea1db">四丶用户个人中心（我的收藏）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶用户个人中心（我的消息）"><span style="color:#4ea1db">五丶用户个人中心（我的消息）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶用户个人中心（退出）"><span style="color:#4ea1db">六丶用户个人中心（退出）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#七丶 首页、全局功能细节和404以及500页面配置"><span style="color:#4ea1db">七丶 首页、全局功能细节和404以及500页面配置</span></a></li><a id="more"></a><h1 id="一丶全局搜索功能"><a href="#一丶全局搜索功能" class="headerlink" title="一丶全局搜索功能"></a>一丶全局搜索功能</h1><p><strong>分析：</strong>当用户在首页搜索框进行搜索时，可以选择搜索课程和机构以及讲师，默认搜索类为公开课，点击搜索调转到各个列表页面；搜索按钮点击使用js代码进行链接地址调转，当用户没有输入任何搜索内容时，则跳转到用户选择的类别下的列表页，即链接地址为<a href="http://127.0.0.1:8000/course/list/?keywords=" target="_blank" rel="noopener">http://127.0.0.1:8000/course/list/?keywords=</a> ；其中keywords=空；反之<a href="http://127.0.0.1:8000/course/list/?keywords=python" target="_blank" rel="noopener">http://127.0.0.1:8000/course/list/?keywords=python</a></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513135831553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>1.</strong>公开课搜索</p><p><strong>说明：</strong>三个类别使用同一js代码</p><ul><li>在static/js目录下的deco-common.js文件中，编写如下js代码，以下js代码逻辑很简单，就不细说了</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顶部搜索栏搜索方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">search_click</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> type = $(<span class="string">'#jsSelectOption'</span>).attr(<span class="string">'data-value'</span>),</span><br><span class="line">        keywords = $(<span class="string">'#search_keywords'</span>).val(),</span><br><span class="line">        request_url = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">if</span>(keywords == <span class="string">""</span>)&#123;</span><br><span class="line">        request_url = <span class="string">"/"</span>+type+<span class="string">"/list?keywords="</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(type == <span class="string">"course"</span>)&#123;</span><br><span class="line">        request_url = <span class="string">"/course/list?keywords="</span>+keywords</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(type == <span class="string">"teacher"</span>)&#123;</span><br><span class="line">        request_url = <span class="string">"/org/teacher/list?keywords="</span>+keywords</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(type == <span class="string">"org"</span>)&#123;</span><br><span class="line">        request_url = <span class="string">"/org/list?keywords="</span>+keywords</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">window</span>.location.href = request_url</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$(<span class="string">'#jsSearchBtn'</span>).on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        search_click()</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><ul><li>在courses/views下的课程列表视图中，获取请求地址keywords参数的值，根据搜索的关键字到对获取到的所有课程再进行此条件的筛选，需要注意的是不仅仅对Course模型表的name字段，还需要对课程简介desc以及课程详情detail字段进行关键字匹配搜索，字段__icontains为django提供的匹配方式，contains前面加i表示不区分大小写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局搜索功能</span></span><br><span class="line">search_keywords = request.GET.get(<span class="string">"keywords"</span>, <span class="string">""</span>)</span><br><span class="line"><span class="keyword">if</span> search_keywords:</span><br><span class="line">    all_courses = all_courses.filter(Q(name__icontains=search_keywords)|Q(desc__icontains=search_keywords)|Q(detail__icontains=search_keywords))</span><br></pre></td></tr></table></figure><ul><li>Debug测试公开课类搜索python关键字</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513153601306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试公开课搜索功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513153627459.gif" alt></fancybox></p><p><strong>2.</strong>课程机构搜索</p><ul><li>同理在organization/views下的机构列表视图中，通过获取keywords关键字到CourseOrg机构模型表中去匹配name字段以及desc字段的数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局机构搜索功能</span></span><br><span class="line">search_keywords = request.GET.get(<span class="string">"keywords"</span>, <span class="string">""</span>)</span><br><span class="line"><span class="keyword">if</span> search_keywords:</span><br><span class="line">    all_orgs = all_orgs.filter(</span><br><span class="line">        Q(name__icontains=search_keywords) | Q(desc__icontains=search_keywords))</span><br></pre></td></tr></table></figure><ul><li>测试机构搜索功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513160432685.gif" alt></fancybox></p><p><strong>3.</strong>课程讲师搜索</p><ul><li>在organization/views下的讲师列表视图中，通过获取keywords关键字到Teacher讲师模型表中去匹配name字段和work_company字段以及work_position的数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局讲师搜索功能</span></span><br><span class="line">search_keywords = request.GET.get(<span class="string">"keywords"</span>, <span class="string">""</span>)</span><br><span class="line"><span class="keyword">if</span> search_keywords:</span><br><span class="line">    all_teachers = all_teachers.filter(</span><br><span class="line">        Q(name__icontains=search_keywords) | Q(work_company__icontains=search_keywords)| Q(work_position__icontains=search_keywords))</span><br></pre></td></tr></table></figure><ul><li>测试课程讲师搜索功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513161239432.gif" alt></fancybox></p><h1 id="二丶用户个人中心（个人资料）"><a href="#二丶用户个人中心（个人资料）" class="headerlink" title="二丶用户个人中心（个人资料）"></a>二丶用户个人中心（个人资料）</h1><p><strong>分析：</strong>在用户个人中心一共有4个大页面，跟机构页面类似，用户个人中心页面包括个人资料（usercenter-info）丶我的课程（usercenter-mycourse）丶我的收藏包括三个页面（usercenter-fav-course丶usercenter-fav-teacher丶usercenter-fav-org）丶我的消息（usercenter-message），整个用户中心页面为6个页面</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513161441551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>1.</strong>提取父模板文件usercenter_base.html</p><ul><li>因个人中心所有页面的样式除了各种内容不一样，其他都一样，所以利用模板继承来解决模板内容重复性</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051316510881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>将usercenter-info模板内容复制到userc_base父模板中，在父模板中进行不同模块的提取操作，也就是挖坑</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513165453492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>显示用户信息页面</p><ul><li>模板继承</li></ul><p><img src="https://img-blog.csdnimg.cn/20190513171227476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>在根级urls中将users应用下的urls包含进来</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(r&apos;users/&apos;, include(&apos;users.urls&apos;, namespace=&quot;users&quot;)),  # 用户应用users下的urls</span><br></pre></td></tr></table></figure><ul><li>在users/views中定义用户信息类视图，需要注意的就是此页面必须为登录后才能进行访问的页面，所以该视图需要继承于LoginRequiredMixin类，来验证用户是否登录</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfoView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""用户信息页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_page = <span class="string">"info"</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"usercenter-info.html"</span>, &#123;<span class="string">"current_page"</span>:current_page&#125;)</span><br></pre></td></tr></table></figure><ul><li>在父模板中修改个人资料链接地址以及判断按钮激活状态</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_page == 'info' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:user_info' %&#125;"</span>&gt;</span>个人资料<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在浏览器中访问<a href="http://127.0.0.1:8000/users/info/" target="_blank" rel="noopener">http://127.0.0.1:8000/users/info/</a> 成功进入用户信息页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513171617780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>动态显示出用户信息页面数据</p><p><strong>说明：</strong>因为当用户登录成功后，则request中就记录了登录成功后的用户信息user对象，所以通过该user对象即可以在模板中直接打印显示出动态数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"clearfix"</span> <span class="attr">id</span>=<span class="string">"jsAvatarForm"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">target</span>=<span class="string">'frameFile'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"changearea"</span> <span class="attr">for</span>=<span class="string">"avatarUp"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"avatardiv"</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> <span class="attr">class</span>=<span class="string">"js-img-show"</span> <span class="attr">id</span>=<span class="string">"avatarShow"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; request.user.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl upload-inp-box"</span> <span class="attr">style</span>=<span class="string">"margin-left:70px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"button btn-green btn-w100"</span> <span class="attr">id</span>=<span class="string">"jsAvatarBtn"</span>&gt;</span>修改头像<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"image"</span> <span class="attr">id</span>=<span class="string">"avatarUp"</span> <span class="attr">class</span>=<span class="string">"js-img-up"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"perinform"</span> <span class="attr">novalidate</span> <span class="attr">id</span>=<span class="string">"jsEditUserForm"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>昵&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;称：</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"nick_name"</span> <span class="attr">id</span>=<span class="string">"nick_name"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; request.user.nick_name &#125;&#125;"</span> <span class="attr">maxlength</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"error-tips"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>生&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;日：</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"birth_day"</span> <span class="attr">name</span>=<span class="string">"birday"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; request.user.birday &#125;&#125;"</span> <span class="attr">readonly</span>=<span class="string">"readonly"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"error-tips"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>性&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;别：</span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"male"</span> &#123;% <span class="attr">if</span> <span class="attr">request.user.gender</span> == <span class="string">'male'</span> %&#125;<span class="attr">checked</span>=<span class="string">"checked"</span>&#123;% <span class="attr">endif</span> %&#125;&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"female"</span></span></span><br><span class="line"><span class="tag">                                                              &#123;% <span class="attr">if</span> <span class="attr">request.user.gender</span> == <span class="string">'female'</span> %&#125;<span class="attr">checked</span>=<span class="string">"checked"</span>&#123;% <span class="attr">endif</span> %&#125;&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"p_infor_city"</span>&gt;</span>地&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;址：</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"address"</span> <span class="attr">id</span>=<span class="string">"address"</span> <span class="attr">placeholder</span>=<span class="string">"请输入你的地址"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; request.user.address &#125;&#125;"</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">maxlength</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"error-tips"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>手&amp;nbsp;&amp;nbsp;机&amp;nbsp;&amp;nbsp;号：</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"mobile"</span> <span class="attr">id</span>=<span class="string">"mobile"</span> <span class="attr">placeholder</span>=<span class="string">"请输入你的手机号码"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; request.user.mobile &#125;&#125;"</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">maxlength</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>邮&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;箱：</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"borderno"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">readonly</span>=<span class="string">"readonly"</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">value</span>=<span class="string">"&#123;&#123; request.user.email &#125;&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"green changeemai_btn"</span>&gt;</span>[修改]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"button heibtn"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"jsEditUserBtn"</span> <span class="attr">value</span>=<span class="string">"保存"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面成功显示出登录成功后的用户动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513173855538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>修改用户头像</p><ul><li>在模板文件中修改头像为form表单内容块，即所以需要在users/forms中定义上传图片的表单，使用forms.ModelForm进行完成</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UploadImageForm</span><span class="params">(forms.ModelForm)</span>:</span></span><br><span class="line">    <span class="string">"""上传头像表单"""</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = UserProfile</span><br><span class="line">        fields = [<span class="string">"image"</span>]  <span class="comment"># 只保留想要的模型中的字段</span></span><br></pre></td></tr></table></figure><ul><li>需要注意的是，UploadImageForm表单类中指定的UserProfile模型类中的image字段名必须要与模板中form表单中修改头像所在的input标签的name属性的值必须相同</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl upload-inp-box"</span> <span class="attr">style</span>=<span class="string">"margin-left:70px;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"button btn-green btn-w100"</span> <span class="attr">id</span>=<span class="string">"jsAvatarBtn"</span>&gt;</span>修改头像<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"image"</span> <span class="attr">id</span>=<span class="string">"avatarUp"</span> <span class="attr">class</span>=<span class="string">"js-img-up"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"> 定义上传图片的类视图</span><br><span class="line">class UploadImageView(LoginRequiredMixin, View):</span><br><span class="line">    """修改用户头像"""</span><br><span class="line">    def post(self, request):</span><br><span class="line">        image_form = UploadImageForm(request.POST, request.FILES)</span><br><span class="line">        if image_form.is_valid():</span><br><span class="line">            pass</span><br></pre></td></tr></table></figure><ul><li>定义视图的路由</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(r'^image/upload/$', UploadImageView.as_view(), name="image_upload"),  # 上传用户头像</span><br></pre></td></tr></table></figure><ul><li>在static/js/deco-user.js中 ，定义js提交上传头像form表单代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//个人资料头像</span></span><br><span class="line">$(<span class="string">'.js-img-up'</span>).uploadPreview(&#123; <span class="attr">Img</span>: <span class="string">".js-img-show"</span>, <span class="attr">Width</span>: <span class="number">94</span>, <span class="attr">Height</span>: <span class="number">94</span> ,<span class="attr">Callback</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">'#jsAvatarForm'</span>).submit();</span><br><span class="line">&#125;&#125;);</span><br></pre></td></tr></table></figure><ul><li>Debug测试是否在image_form中生成了上传的图片数据，通过向UploadImageForm表单类中传递request.FILES对象也就是上传的图片对象，在变量image_form中就会生成cleaned_data字典对象中的image键值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513183125802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>即需要在视图中获取image_form对象cleaned_data字段中的image值，将该值保存到user对象的image属性中，则完成图片的修改以及保存</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UploadImageView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""修改用户头像"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="comment"># 向表单类中传递用户修改的头像文件</span></span><br><span class="line">        image_form = UploadImageForm(request.POST, request.FILES)</span><br><span class="line">        <span class="comment"># 表单验证成功则将在生成的表单独享image_form中获取cleaned_data字典属性的image键的值保存到user对象的image属性中</span></span><br><span class="line">        <span class="comment"># 即完成了用户上传保存头像的操作</span></span><br><span class="line">        <span class="keyword">if</span> image_form.is_valid():</span><br><span class="line">            request.user.image = image_form.cleaned_data[<span class="string">'image'</span>]</span><br><span class="line">            request.user.save()</span><br></pre></td></tr></table></figure><ul><li>测试修改用户头像功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513191607834.gif" alt></fancybox></p><ul><li>因为在上传头像图片表单类中继承的是forms.ModelForm类，所以在视图中可以定义instance属性指向当前的用户对象，即可完成上传图片操作，不需要从表单对象的cleaned_data属性中获取图片数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UploadImageView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""修改用户头像"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="comment"># 向表单类中传递用户修改的头像文件</span></span><br><span class="line">        image_form = UploadImageForm(request.POST, request.FILES, instance=request.user)</span><br><span class="line">        <span class="comment"># 表单验证成功则将在生成的表单独享image_form中获取cleaned_data字典属性的image键的值保存到user对象的image属性中</span></span><br><span class="line">        <span class="comment"># 即完成了用户上传保存头像的操作</span></span><br><span class="line">        <span class="keyword">if</span> image_form.is_valid():</span><br><span class="line">            <span class="comment"># request.user.image = image_form.cleaned_data['image']</span></span><br><span class="line">            request.user.save()</span><br></pre></td></tr></table></figure><ul><li>Debug测试，成功进入save方法，并没有抛出异常，则以上方式也能完成修改头像操作</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513192248522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在视图中定义返回前端的响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UploadImageView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""修改用户头像"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="comment"># 向表单类中传递用户修改的头像文件</span></span><br><span class="line">        image_form = UploadImageForm(request.POST, request.FILES, instance=request.user)</span><br><span class="line">        <span class="comment"># 表单验证成功则将在生成的表单独享image_form中获取cleaned_data字典属性的image键的值保存到user对象的image属性中</span></span><br><span class="line">        <span class="comment"># 即完成了用户上传保存头像的操作</span></span><br><span class="line">        <span class="keyword">if</span> image_form.is_valid():</span><br><span class="line">            <span class="comment"># request.user.image = image_form.cleaned_data['image']</span></span><br><span class="line">            image_form.save(commit=<span class="literal">True</span>)</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"success", "msg":"修改成功"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"fail", "msg":"修改失败"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><ul><li>修改成功则返回json格式的响应数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513194838993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>5.</strong>修改用户密码</p><p><strong>说明</strong>：之前在用户网站登录时，有个功能叫忘记密码，在忘记密码验证邮箱时成功时会在邮件中发送修改密码的链接地址，在进入密码修改页面进行密码修改，需要注意的是之前修改密码是在用户未登录的状态下进行的修改，而在用户中心进行密码修改则是用户登录成功后进行修改，所有不需要在进行逻辑编写时，不需要获取邮箱地址，其他获取参数与之前写的修改密码一致；因为用户是必须登录成功才能进入到个人中心页面，即不需要用户输入旧密码</p><ul><li>将之前定义的ModifyPwdView类视图代码复制一份，进行如下修改</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdatePwdView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""个人中心修改密码"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        modify_form = ModifyPwdForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> modify_form.is_valid():</span><br><span class="line">            pwd1 = request.POST.get(<span class="string">"password1"</span>, <span class="string">""</span>)</span><br><span class="line">            pwd2 = request.POST.get(<span class="string">"password2"</span>, <span class="string">""</span>)</span><br><span class="line">            <span class="comment"># 当用户两次密码不一致则提示错误信息到页面，一致时则通过用户名也就是邮箱来获取用户信息user对象，设置对象中的密码为用户填写的密码</span></span><br><span class="line">            <span class="comment"># 最后返回到登录页面</span></span><br><span class="line">            <span class="keyword">if</span> pwd1 != pwd2:</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"fail", "msg":"两次密码不一致"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            user = request.user</span><br><span class="line">            user.password = make_password(pwd2)</span><br><span class="line">            user.save()</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"success", "msg":"密码修改成功"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(modify_form.errors), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><ul><li>定义视图的路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^update/pwd/$'</span>, UpdatePwdView.as_view(), name=<span class="string">"update_pwd"</span>),  <span class="comment"># 个人中心修改密码</span></span><br></pre></td></tr></table></figure><ul><li>顺便提示一下吧，form表单的提交需要传递csrf_token，所以在usercenter_base模板中找到修改密码的form表单，添加csrf_token的值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"jsResetPwdForm"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"word2"</span>&gt;</span>新&amp;nbsp;&amp;nbsp;密&amp;nbsp;&amp;nbsp;码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"pwd"</span> <span class="attr">name</span>=<span class="string">"password1"</span> <span class="attr">placeholder</span>=<span class="string">"5-20位非中文字符"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"word2"</span>&gt;</span>确定密码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"repwd"</span> <span class="attr">name</span>=<span class="string">"password2"</span> <span class="attr">placeholder</span>=<span class="string">"5-20位非中文字符"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error btns"</span> <span class="attr">id</span>=<span class="string">"jsResetPwdTips"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"button"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"jsResetPwdBtn"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在deco-user.js中编写ajax post发送异步请求的js代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//个人资料修改密码</span></span><br><span class="line">$(<span class="string">'#jsUserResetPwd'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    Dml.fun.showDialog(<span class="string">'#jsResetDialog'</span>, <span class="string">'#jsResetPwdTips'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">$(<span class="string">'#jsResetPwdBtn'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        cache: <span class="literal">false</span>,</span><br><span class="line">        type: <span class="string">"POST"</span>,</span><br><span class="line">        dataType:<span class="string">'json'</span>,</span><br><span class="line">        url:<span class="string">"/users/update/pwd/"</span>,</span><br><span class="line">        data:$(<span class="string">'#jsResetPwdForm'</span>).serialize(),</span><br><span class="line">        <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(data.password1)&#123;</span><br><span class="line">                Dml.fun.showValidateError($(<span class="string">"#pwd"</span>), data.password1);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.password2)&#123;</span><br><span class="line">                Dml.fun.showValidateError($(<span class="string">"#repwd"</span>), data.password2);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status == <span class="string">"success"</span>)&#123;</span><br><span class="line">                Dml.fun.showTipsDialog(&#123;</span><br><span class="line">                    title:<span class="string">'提交成功'</span>,</span><br><span class="line">                    h2:<span class="string">'修改密码成功，请重新登录!'</span>,</span><br><span class="line">                &#125;);</span><br><span class="line">                Dml.fun.winReload();</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.msg)&#123;</span><br><span class="line">                Dml.fun.showValidateError($(<span class="string">"#pwd"</span>), data.msg);</span><br><span class="line">                Dml.fun.showValidateError($(<span class="string">"#repwd"</span>), data.msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>测试个人中心修改用户密码（输入长度不一致的以及两次密码不一致的密码）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513203118586.gif" alt></fancybox></p><ul><li>测试个人中心修改用户密码（输入一致的密码）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513203417482.gif" alt></fancybox></p><p><strong>6.</strong>完成网站页面顶部栏的用户信息显示</p><ul><li>说明：只需要在所有的父模板判断用户是否登录以及打印登录后的用户信息，登录后的用户信息直接从request中去获取即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513204859426.png" alt></fancybox></p><ul><li>在base.html和org_base.html以及usercenter_base.html三个模板中进行如下修改即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if request.user.is_authenticated %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"personal"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"user fr"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>&#123;&#123; request.user.username &#125;&#125;<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"down fr"</span></span></span><br><span class="line"><span class="tag">                                                <span class="attr">src</span>=<span class="string">"&#123;% static 'images/top_down.png' %&#125;"</span>/&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"20"</span> <span class="attr">height</span>=<span class="string">"20"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; request.user.image &#125;&#125;"</span>/&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"userdetail"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">height</span>=<span class="string">"80"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; request.user.image &#125;&#125;"</span>/&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; request.user.nick_name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; request.user.username &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"personcenter fl"</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:user_info' %&#125;"</span>&gt;</span>进入个人中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"fr"</span> <span class="attr">href</span>=<span class="string">"/logout/"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"usercenter-message.html"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"msg-num"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"MsgNum"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color:white"</span> <span class="attr">class</span>=<span class="string">"fr registerbtn"</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'register' %&#125;"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color:white"</span> <span class="attr">class</span>=<span class="string">"fr loginbtn"</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'login' %&#125;"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li>刷新页面成功在顶部栏中显示登录成功的用户数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051320534591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>7.</strong>个人中心修改邮箱</p><ul><li>定义视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SendEmailCodeView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""发送邮箱验证码"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        email = request.GET.get(<span class="string">"email"</span>, <span class="string">""</span>)</span><br><span class="line">        <span class="keyword">if</span> UserProfile.objects.filter(email=email):</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"email":"邮箱已存在"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        send_register_email(email, <span class="string">"update_email"</span>)</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"success"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><ul><li>定义视图路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^sendemail_code/$'</span>, SendEmailCodeView.as_view(), name=<span class="string">"sendemail_code"</span>),  <span class="comment"># 邮箱验证码</span></span><br></pre></td></tr></table></figure><ul><li>在deco-user.js文件中编写发送邮件验证码js代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改个人中心邮箱验证码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendCodeChangeEmail</span>(<span class="params">$btn</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> verify = verifyDialogSubmit(</span><br><span class="line">        [</span><br><span class="line">          &#123;<span class="attr">id</span>: <span class="string">'#jsChangeEmail'</span>, <span class="attr">tips</span>: Dml.Msg.epMail, <span class="attr">errorTips</span>: Dml.Msg.erMail, <span class="attr">regName</span>: <span class="string">'email'</span>, <span class="attr">require</span>: <span class="literal">true</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">if</span>(!verify)&#123;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        cache: <span class="literal">false</span>,</span><br><span class="line">        type: <span class="string">"get"</span>,</span><br><span class="line">        dataType:<span class="string">'json'</span>,</span><br><span class="line">        url:<span class="string">"/users/sendemail_code/"</span>,</span><br><span class="line">        data:$(<span class="string">'#jsChangeEmailForm'</span>).serialize(),</span><br><span class="line">        <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">        beforeSend:<span class="function"><span class="keyword">function</span>(<span class="params">XMLHttpRequest</span>)</span>&#123;</span><br><span class="line">            $btn.val(<span class="string">"发送中..."</span>);</span><br><span class="line">            $btn.attr(<span class="string">'disabled'</span>,<span class="literal">true</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(data.email)&#123;</span><br><span class="line">                Dml.fun.showValidateError($(<span class="string">'#jsChangeEmail'</span>), data.email);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status == <span class="string">'success'</span>)&#123;</span><br><span class="line">                Dml.fun.showErrorTips($(<span class="string">'#jsChangeEmailTips'</span>), <span class="string">"邮箱验证码已发送"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status == <span class="string">'failure'</span>)&#123;</span><br><span class="line">                 Dml.fun.showValidateError($(<span class="string">'#jsChangeEmail'</span>), <span class="string">"邮箱验证码发送失败"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status == <span class="string">'success'</span>)&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        complete: <span class="function"><span class="keyword">function</span>(<span class="params">XMLHttpRequest</span>)</span>&#123;</span><br><span class="line">            $btn.val(<span class="string">"获取验证码"</span>);</span><br><span class="line">            $btn.removeAttr(<span class="string">"disabled"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Debug测试输入已存在的邮箱地址，进行发送</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513220243258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Debug断点测试完成后，回到页面则提示邮箱已存在</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051322035075.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>为了测试发送邮件，将之前注册时的<a href="mailto:cdtaogang@sina.com" target="_blank" rel="noopener">cdtaogang@sina.com</a>邮箱修改成<a href="mailto:taogangshow@sina.com" target="_blank" rel="noopener">taogangshow@sina.com</a>，因为之前settings配置的是<a href="mailto:cdtaogang@sina.com" target="_blank" rel="noopener">cdtaogang@sina.com</a>邮箱的配置</li></ul><p><img src="https://img-blog.csdnimg.cn/20190513221758974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试发送邮箱验证码功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513222838177.gif" alt></fancybox></p><ul><li>但这个邮箱验证码过长，一般都是4位，即所以在send_register_email函数中进行判断</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> send_type == <span class="string">"update_email"</span>:</span><br><span class="line">    code = random_str(<span class="number">4</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    code = random_str(<span class="number">16</span>)</span><br></pre></td></tr></table></figure><ul><li>重新测试发送邮箱验证码，查看验证码位数</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513223622175.gif" alt></fancybox></p><ul><li>逻辑说明：<font style="color:red">紧接着就是根据邮箱验证码完成验证，验证通过后，在数据库中修改邮箱地址，需要说明一点就是当用户发送邮箱验证码成功后，则需要在邮件中记住或复制验证码到输入框中，点击完成按钮，则进行邮箱验证码的验证，当验证通过后则表示修改邮箱地址成功</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190513224238388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>定义修改邮箱类视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateEmailView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""修改个人邮箱"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        email = request.POST.get(<span class="string">"email"</span>, <span class="string">""</span>)</span><br><span class="line">        code = request.POST.get(<span class="string">"code"</span>, <span class="string">""</span>)</span><br><span class="line">        exited_records = EmailVerifyRecord.objects.filter(email=email, code=code, send_type=<span class="string">"update_email"</span>)</span><br><span class="line">        <span class="keyword">if</span> exited_records:</span><br><span class="line">            user = request.user</span><br><span class="line">            user.email = email</span><br><span class="line">            user.save()</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"success"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"email":"验证码错误"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><ul><li>定义视图路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^update_email/$'</span>, UpdateEmailView.as_view(), name=<span class="string">"update_email"</span>),  <span class="comment"># 修改邮箱</span></span><br></pre></td></tr></table></figure><ul><li>在deco-user.js中定义邮箱修改js代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//个人资料邮箱修改</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeEmailSubmit</span>(<span class="params">$btn</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> verify = verifyDialogSubmit(</span><br><span class="line">        [</span><br><span class="line">          &#123;<span class="attr">id</span>: <span class="string">'#jsChangeEmail'</span>, <span class="attr">tips</span>: Dml.Msg.epMail, <span class="attr">errorTips</span>: Dml.Msg.erMail, <span class="attr">regName</span>: <span class="string">'email'</span>, <span class="attr">require</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">        ]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">if</span>(!verify)&#123;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        cache: <span class="literal">false</span>,</span><br><span class="line">        type: <span class="string">'post'</span>,</span><br><span class="line">        dataType:<span class="string">'json'</span>,</span><br><span class="line">        url:<span class="string">"/users/update_email/ "</span>,</span><br><span class="line">        data:$(<span class="string">'#jsChangeEmailForm'</span>).serialize(),</span><br><span class="line">        <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">        beforeSend:<span class="function"><span class="keyword">function</span>(<span class="params">XMLHttpRequest</span>)</span>&#123;</span><br><span class="line">            $btn.val(<span class="string">"发送中..."</span>);</span><br><span class="line">            $btn.attr(<span class="string">'disabled'</span>,<span class="literal">true</span>);</span><br><span class="line">            $(<span class="string">"#jsChangeEmailTips"</span>).html(<span class="string">"验证中..."</span>).show(<span class="number">500</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(data.email)&#123;</span><br><span class="line">                Dml.fun.showValidateError($(<span class="string">'#jsChangeEmail'</span>), data.email);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status == <span class="string">"success"</span>)&#123;</span><br><span class="line">                Dml.fun.showErrorTips($(<span class="string">'#jsChangePhoneTips'</span>), <span class="string">"邮箱信息更新成功"</span>);</span><br><span class="line">                setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;location.reload();&#125;,<span class="number">1000</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 Dml.fun.showValidateError($(<span class="string">'#jsChangeEmail'</span>), <span class="string">"邮箱信息更新失败"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        complete: <span class="function"><span class="keyword">function</span>(<span class="params">XMLHttpRequest</span>)</span>&#123;</span><br><span class="line">            $btn.val(<span class="string">"完成"</span>);</span><br><span class="line">            $btn.removeAttr(<span class="string">"disabled"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Debug测试修改邮箱地址（输入不存在的验证码）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190514001223401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Debug断点测试完成后，查看修改页面，成功显示出错误信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190514001351120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试修改邮箱功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051400321450.gif" alt></fancybox></p><p><strong>8.</strong>个人资料修改</p><ul><li>因为使用post表单提交的请求方式，所以直接在UserInfoView类视图中定义post方法来完成用户个人资料的修改保存操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfoView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""用户信息页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_page = <span class="string">"info"</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"usercenter-info.html"</span>, &#123;<span class="string">"current_page"</span>:current_page&#125;)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        user_info_form = UserInfoForm(request.POST, instance=request.user)</span><br><span class="line">        <span class="keyword">if</span> user_info_form.is_valid():</span><br><span class="line">            user_info_form.save()</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"success"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(user_info_form.errors), content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><ul><li>在deco-user.js中编写js代码来操控表单的提交操作以及提示信息展示</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存个人资料</span></span><br><span class="line">$(<span class="string">'#jsEditUserBtn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _self = $(<span class="keyword">this</span>),</span><br><span class="line">        $jsEditUserForm = $(<span class="string">'#jsEditUserForm'</span>);</span><br><span class="line">        verify = verifySubmit(</span><br><span class="line">        [</span><br><span class="line">            &#123;<span class="attr">id</span>: <span class="string">'#nick_name'</span>, <span class="attr">tips</span>: Dml.Msg.epNickName, <span class="attr">require</span>: <span class="literal">true</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">if</span>(!verify)&#123;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        cache: <span class="literal">false</span>,</span><br><span class="line">        type: <span class="string">'post'</span>,</span><br><span class="line">        dataType:<span class="string">'json'</span>,</span><br><span class="line">        url:<span class="string">"/users/info/"</span>,</span><br><span class="line">        data:$jsEditUserForm.serialize(),</span><br><span class="line">        <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">        beforeSend:<span class="function"><span class="keyword">function</span>(<span class="params">XMLHttpRequest</span>)</span>&#123;</span><br><span class="line">            _self.val(<span class="string">"保存中..."</span>);</span><br><span class="line">            _self.attr(<span class="string">'disabled'</span>,<span class="literal">true</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(data.nick_name)&#123;</span><br><span class="line">                _showValidateError($(<span class="string">'#nick_name'</span>), data.nick_name);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.birday)&#123;</span><br><span class="line">               _showValidateError($(<span class="string">'#birth_day'</span>), data.birday);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.address)&#123;</span><br><span class="line">               _showValidateError($(<span class="string">'#address'</span>), data.address);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status == <span class="string">"failure"</span>)&#123;</span><br><span class="line">                 Dml.fun.showTipsDialog(&#123;</span><br><span class="line">                    title: <span class="string">'保存失败'</span>,</span><br><span class="line">                    h2: data.msg</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status == <span class="string">"success"</span>)&#123;</span><br><span class="line">                Dml.fun.showTipsDialog(&#123;</span><br><span class="line">                    title: <span class="string">'保存成功'</span>,</span><br><span class="line">                    h2: <span class="string">'个人信息修改成功！'</span></span><br><span class="line">                &#125;);</span><br><span class="line">                setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">window</span>.location.href = <span class="built_in">window</span>.location.href;&#125;,<span class="number">1500</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        complete: <span class="function"><span class="keyword">function</span>(<span class="params">XMLHttpRequest</span>)</span>&#123;</span><br><span class="line">            _self.val(<span class="string">"保存"</span>);</span><br><span class="line">            _self.removeAttr(<span class="string">"disabled"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>Debug测试输入空字段表单进行修改</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/201905140051143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Debug断点测试完成后回到个人信息页面，则成功出现form表单验证的错误提示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190514005317178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试个人资料修改功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190514010626450.gif" alt></fancybox></p><h1 id="三丶用户个人中心（我的课程）"><a href="#三丶用户个人中心（我的课程）" class="headerlink" title="三丶用户个人中心（我的课程）"></a>三丶用户个人中心（我的课程）</h1><p><strong>1.</strong>显示我的课程页面</p><ul><li>模板继承</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190514154724244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>定义个人资料类视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCourseView</span><span class="params">(LoginRequiredMixin,View)</span>:</span></span><br><span class="line">    <span class="string">"""我的课程"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_page = <span class="string">"course"</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"usercenter-mycourse.html"</span>, &#123;<span class="string">"current_page"</span>:current_page&#125;)</span><br></pre></td></tr></table></figure><ul><li>定义视图路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^mycourse/$'</span>, MyCourseView.as_view(), name=<span class="string">"mycourse"</span>),  <span class="comment"># 我的课程</span></span><br></pre></td></tr></table></figure><ul><li>修改模板中我的课程链接地址以及判断链接激活状态</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_page == 'course' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:mycourse' %&#125;"</span>&gt;</span>我的课程<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示我的课程页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190514155232660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>动态显示出我的课程数据</p><ul><li>在视图中根据当前的登录成功的user对象到UserCourse模型表中查询对应usercourse对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCourseView</span><span class="params">(LoginRequiredMixin,View)</span>:</span></span><br><span class="line">    <span class="string">"""我的课程"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_page = <span class="string">"course"</span></span><br><span class="line">        user_courses = UserCourse.objects.filter(user=request.user)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"usercenter-mycourse.html"</span>, &#123;<span class="string">"current_page"</span>:current_page, <span class="string">"user_courses"</span>:user_courses&#125;)</span><br></pre></td></tr></table></figure><ul><li>在模板中打印页面数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"group_list brief"</span>&gt;</span></span><br><span class="line">    &#123;% for user_course in user_courses %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"module1_5 box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_detail' user_course.course.id%&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"214"</span> <span class="attr">height</span>=<span class="string">"190"</span> <span class="attr">class</span>=<span class="string">"scrollLoading"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; user_course.course.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"des"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_detail' user_course.course.id%&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; user_course.course.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>课时：<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; user_course.course.learn_times &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span>学习人数：&#123;&#123; user_course.course.students &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>&#123;&#123; user_course.course.course_org.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star fr  notlogin"</span> <span class="attr">data-favid</span>=<span class="string">"15"</span>&gt;</span>&#123;&#123; user_course.course.fav_nums &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示我的课程页面动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190514160843805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶用户个人中心（我的收藏）"><a href="#四丶用户个人中心（我的收藏）" class="headerlink" title="四丶用户个人中心（我的收藏）"></a>四丶用户个人中心（我的收藏）</h1><p><strong>再次说明</strong>：我的收藏模块包括三个页面（课程机构丶授课教师丶公开课程）</p><p><strong>1.</strong>我的收藏——课程机构页面</p><ul><li>模板继承</li></ul><p><img src="https://img-blog.csdnimg.cn/20190514164215634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyFavOrgView</span><span class="params">(LoginRequiredMixin,View)</span>:</span></span><br><span class="line">    <span class="string">"""我的收藏——课程机构"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_page = <span class="string">"myfav"</span></span><br><span class="line">        current_fav_page_1 = <span class="string">"myfav_org"</span></span><br><span class="line">        org_list = []</span><br><span class="line">        fav_orgs = UserFavorite.objects.filter(user=request.user, fav_type=<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">for</span> fav_org <span class="keyword">in</span> fav_orgs:</span><br><span class="line">            org_id = fav_org.fav_id</span><br><span class="line">            org = CourseOrg.objects.get(id=org_id)</span><br><span class="line">            org_list.append(org)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"usercenter-fav-org.html"</span>, &#123;<span class="string">"current_page"</span>:current_page, <span class="string">"current_fav_page_1"</span>:current_fav_page_1, <span class="string">"org_list"</span>:org_list&#125;)</span><br></pre></td></tr></table></figure><ul><li>定义视图路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^myfav/org/$'</span>, MyFavOrgView.as_view(), name=<span class="string">"myfav_org"</span>),  <span class="comment"># 我的收藏——课程机构</span></span><br></pre></td></tr></table></figure><ul><li>修改父模板我的收藏链接地址以及判断点击激活状态</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_page == 'myfav' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:myfav_org' %&#125;"</span>&gt;</span>我的收藏<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改模板中课程机构链接地址以及判断点击激活状态，这里根据current_fav_page_1来判断我的收藏页面中的课程机构激活状态</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_fav_page_1 == 'myfav_org' %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:myfav_org' %&#125;"</span>&gt;</span>课程机构<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在模板中打印数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"messagelist"</span>&gt;</span></span><br><span class="line">    &#123;% for org in org_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"messages butler_list company company-fav-box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"des fr"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:org_home' org.id%&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"160"</span> <span class="attr">height</span>=<span class="string">"90"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; org.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:org_home' org.id%&#125;"</span>&gt;</span>&#123;&#123; org.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic fl"</span> <span class="attr">style</span>=<span class="string">"width:auto;"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/authentication.png' %&#125;"</span>/&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/gold.png' %&#125;"</span>/&gt;</span></span><br><span class="line"> </span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"c8 clear"</span>&gt;</span>&#123;&#123; org.address &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"delete jsDeleteFav_org"</span> <span class="attr">data-favid</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测显示我的收藏——课程机构页面动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190514164543308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试对机构进行收藏后，查看我的收藏——课程机构页面是否成功显示出收藏的机构 </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190514170023425.gif" alt></fancybox></p><p><strong>2.</strong>我的收藏——授课教师页面</p><ul><li>模板继承</li></ul><p><img src="https://img-blog.csdnimg.cn/20190514170409205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>逻辑跟课程机构页面一样，首先定义视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyFavTeacherView</span><span class="params">(LoginRequiredMixin,View)</span>:</span></span><br><span class="line">    <span class="string">"""我的收藏——授课讲师"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_page = <span class="string">"myfav"</span></span><br><span class="line">        current_fav_page_2 = <span class="string">"myfav_teacher"</span></span><br><span class="line">        teacher_list = []</span><br><span class="line">        fav_teachers = UserFavorite.objects.filter(user=request.user, fav_type=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">for</span> fav_teacher <span class="keyword">in</span> fav_teachers:</span><br><span class="line">            teacher_id = fav_teacher.fav_id</span><br><span class="line">            teacher = Teacher.objects.get(id=teacher_id)</span><br><span class="line">            teacher_list.append(teacher)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"usercenter-fav-teacher.html"</span>, &#123;<span class="string">"current_page"</span>:current_page, <span class="string">"current_fav_page_2"</span>:current_fav_page_2, <span class="string">"teacher_list"</span>:teacher_list&#125;)</span><br></pre></td></tr></table></figure><ul><li>定义视图路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^myfav/teacher/$'</span>, MyFavTeacherView.as_view(), name=<span class="string">"myfav_teacher"</span>),  <span class="comment"># 我的收藏——授课教师</span></span><br></pre></td></tr></table></figure><ul><li>修改模板中的授课教师链接地址，根据current_fav_page_2变量的值来判断授课教师按钮的激活状态</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_fav_page_2 == 'myfav_teacher' %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:myfav_teacher' %&#125;"</span>&gt;</span>授课教师 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>页面需要显示出课程数，则需要在Teacher模型类中定义一个方法，来获取教师的课程数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_course_nums</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> self.course_set.all().count()</span><br></pre></td></tr></table></figure><ul><li>在模板中打印数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"messagelist"</span>&gt;</span></span><br><span class="line">    &#123;% for teacher in teacher_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">" butler_list butler-fav-box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"des users"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:teacher_detail' teacher.id %&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; teacher.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:teacher_detail' teacher.id %&#125;"</span>&gt;</span></span><br><span class="line">                        &#123;&#123; teacher.name &#125;&#125;<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>认证教师<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"cont clearfix"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"time"</span>&gt;</span>工作年限：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.work_years &#125;&#125;年<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"c7"</span>&gt;</span>课程数：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.get_course_nums &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"cont clearfix"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"time"</span>&gt;</span>工作公司：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.work_company &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"c7"</span>&gt;</span>公司职位：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.work_position &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"delete jsDeleteFav_teacher"</span> <span class="attr">data-favid</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示我的收藏——授课教师页面动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515094832425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试对授课讲师进行收藏后，在个人中心我的收藏——授课教师页面，显示收藏的授课讲师</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515095644405.gif" alt></fancybox></p><p><strong>3.</strong>我的收藏——公开课程页面</p><ul><li>模板继承</li></ul><p><img src="https://img-blog.csdnimg.cn/20190515100503898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyFavCourseView</span><span class="params">(LoginRequiredMixin,View)</span>:</span></span><br><span class="line">    <span class="string">"""我的收藏——公开课程"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_page = <span class="string">"myfav"</span></span><br><span class="line">        current_fav_page_3 = <span class="string">"myfav_course"</span></span><br><span class="line">        course_list = []</span><br><span class="line">        fav_courses = UserFavorite.objects.filter(user=request.user, fav_type=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> fav_course <span class="keyword">in</span> fav_courses:</span><br><span class="line">            course_id = fav_course.fav_id</span><br><span class="line">            course = Course.objects.get(id=course_id)</span><br><span class="line">            course_list.append(course)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"usercenter-fav-course.html"</span>, &#123;<span class="string">"current_page"</span>:current_page, <span class="string">"current_fav_page_3"</span>:current_fav_page_3, <span class="string">"course_list"</span>:course_list&#125;)</span><br></pre></td></tr></table></figure><ul><li>定义视图路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^myfav/course/$'</span>, MyFavCourseView.as_view(), name=<span class="string">"myfav_course"</span>),  <span class="comment"># 我的收藏——公开课程</span></span><br></pre></td></tr></table></figure><ul><li>修改模板中公开课程链接地址，根据current_fav_page_3变量的值来判断我的收藏——公开课程点击激活状态</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_fav_page_3 == 'myfav_course' %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:myfav_course' %&#125;"</span>&gt;</span>公开课程<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在模板中打印页面数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"group_list brief"</span>&gt;</span></span><br><span class="line">    &#123;% for course in course_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"module1_5 box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_detail' course.id%&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"214"</span> <span class="attr">height</span>=<span class="string">"190"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; course.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"des"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"course-detail.html"</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; course.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>时长：<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; course.learn_times &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span>学习人数：&#123;&#123; course.students &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>&#123;&#123; course.course_org &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"delete-group fr jsDeleteFav_course"</span> <span class="attr">data-favid</span>=<span class="string">"12"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示我的收藏——公开课程页面动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/201905151036524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试在收藏公开课，回到个人中心我的收藏——公开课程页面，查看收藏的公开课</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515105513833.gif" alt></fancybox></p><p><strong>4.</strong>我的收藏所有页面中删除功能（取消收藏）</p><ul><li>在父模板usercenter_base模板中编写三个页面的点击事件，使用ajax post异步请求方式，向后端AddFavView视图接口发送请求完成数据库对UserFavorite模型表的数据删除操作</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    $(<span class="string">'.jsDeleteFav_course'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> _this = $(<span class="keyword">this</span>),</span><br><span class="line">            favid = _this.attr(<span class="string">'data-favid'</span>);</span><br><span class="line">        &#123;#alert(favid);#&#125;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">                cache: <span class="literal">false</span>,</span><br><span class="line">                type: <span class="string">"POST"</span>,</span><br><span class="line">                url: <span class="string">"/org/add_fav/"</span>,</span><br><span class="line">                data: &#123;</span><br><span class="line">                    fav_type: <span class="number">1</span>,</span><br><span class="line">                    fav_id: favid,</span><br><span class="line">                    csrfmiddlewaretoken: <span class="string">'&#123;&#123; csrf_token &#125;&#125;'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                    Dml.fun.winReload();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    $(<span class="string">'.jsDeleteFav_teacher'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _this = $(<span class="keyword">this</span>),</span><br><span class="line">                favid = _this.attr(<span class="string">'data-favid'</span>);</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                    cache: <span class="literal">false</span>,</span><br><span class="line">                    type: <span class="string">"POST"</span>,</span><br><span class="line">                    url: <span class="string">"/org/add_fav/"</span>,</span><br><span class="line">                    data: &#123;</span><br><span class="line">                        fav_type: <span class="number">3</span>,</span><br><span class="line">                        fav_id: favid,</span><br><span class="line">                        csrfmiddlewaretoken: <span class="string">'&#123;&#123; csrf_token &#125;&#125;'</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">                    success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                        Dml.fun.winReload();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    $(<span class="string">'.jsDeleteFav_org'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _this = $(<span class="keyword">this</span>),</span><br><span class="line">                favid = _this.attr(<span class="string">'data-favid'</span>);</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                    cache: <span class="literal">false</span>,</span><br><span class="line">                    type: <span class="string">"POST"</span>,</span><br><span class="line">                    url: <span class="string">"/org/add_fav/"</span>,</span><br><span class="line">                    data: &#123;</span><br><span class="line">                        fav_type: <span class="number">2</span>,</span><br><span class="line">                        fav_id: favid,</span><br><span class="line">                        csrfmiddlewaretoken: <span class="string">'&#123;&#123; csrf_token &#125;&#125;'</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">                    success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                        Dml.fun.winReload();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在三个页面对应的模板文件中，需要修改favid得值也就是删除按钮所在的标签中data-favid属性的值为页面模型表的id</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 课程机构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"delete jsDeleteFav_org"</span> <span class="attr">data-favid</span>=<span class="string">"&#123;&#123; org.id &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 授课教师 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"delete jsDeleteFav_teacher"</span> <span class="attr">data-favid</span>=<span class="string">"&#123;&#123; teacher.id &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 公开课程 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"delete-group fr jsDeleteFav_course"</span> <span class="attr">data-favid</span>=<span class="string">"&#123;&#123; course.id &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试我的收藏三个页面删除功能（取消收藏）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051511264687.gif" alt></fancybox></p><h1 id="五丶用户个人中心（我的消息）"><a href="#五丶用户个人中心（我的消息）" class="headerlink" title="五丶用户个人中心（我的消息）"></a>五丶用户个人中心（我的消息）</h1><p><strong>1.</strong>显示我的消息页面</p><ul><li>模板继承</li></ul><p><img src="https://img-blog.csdnimg.cn/20190515114139543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyMessageView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""我的消息"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_page = <span class="string">"message"</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"usercenter-message.html"</span>, &#123;<span class="string">"current_page"</span>: current_page&#125;)</span><br></pre></td></tr></table></figure><ul><li>定义视图路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^mymessage/$'</span>, MyMessageView.as_view(), name=<span class="string">"mymessage"</span>),  <span class="comment"># 我的消息</span></span><br></pre></td></tr></table></figure><ul><li>在父模板中修改我的消息链接地址，以及根据厚端传递的current_page的值判断点击激活状态</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_page == 'message' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:mymessage' %&#125;"</span> <span class="attr">style</span>=<span class="string">"position: relative;"</span>&gt;</span></span><br><span class="line">        我的消息</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示个人中心——我的消息页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515114456964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>动态显示我的消息页面数据</p><p><strong>说明：</strong>当用户注册成功后，应该在模型表UserMessage添加欢迎用户注册消息</p><p><strong>分析：</strong>除了在我的消息中显示所有的用户消息之外，在每个页面顶部会有个小喇叭按钮，该按钮会显示出用户未读的消息数量，当用户点击进入我的消息后，则小喇叭的数量为0</p><ul><li>首先在注册视图RegisterView中向UserMessage模型表中写入欢迎注册消息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 写入欢迎注册消息</span></span><br><span class="line">user_message = UserMessage()</span><br><span class="line">user_message.user = user_profile</span><br><span class="line">user_message.message = <span class="string">"欢迎注册慕学在线网"</span></span><br><span class="line">user_message.save()</span><br></pre></td></tr></table></figure><ul><li>在MyMessageView类视图中首先获取当前登录用户所有的消息，该获取的所有消息用于在我的消息页面进行显示，不管用户已读还是未读都进行显示到此页面；再从数据库中获取该用户的未读消息，遍历每个对象设置每个对象的has_read字段的值为True也就是设置为已读；接下来就是分页数据处理了，这个已经在很多列表页中进行说明了，就不细说了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyMessageView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""我的消息"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        current_page = <span class="string">"message"</span></span><br><span class="line">        <span class="comment"># 查询当前用户的所有消息</span></span><br><span class="line">        all_messages = UserMessage.objects.filter(user=request.user.id)</span><br><span class="line">        <span class="comment"># 用户进入个人消息后清空未读消息的记录</span></span><br><span class="line">        all_unread_messages = UserMessage.objects.filter(user=request.user.id, has_read=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">for</span> unread_message <span class="keyword">in</span> all_unread_messages:</span><br><span class="line">            unread_message.has_read = <span class="literal">True</span></span><br><span class="line">            unread_message.save()</span><br><span class="line">        <span class="comment"># 分页处理</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            page = request.GET.get(<span class="string">'page'</span>, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> PageNotAnInteger:</span><br><span class="line">            page = <span class="number">1</span></span><br><span class="line">        p = Paginator(all_messages, <span class="number">5</span>, request=request)</span><br><span class="line">        messages = p.page(page)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"usercenter-message.html"</span>, &#123;<span class="string">"current_page"</span>: current_page, <span class="string">"messages"</span>: messages&#125;)</span><br></pre></td></tr></table></figure><ul><li>在模板中打印显示页面动态数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"tab_header messagehead"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:mymessage' %&#125;"</span>&gt;</span>个人消息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"messagelist"</span>&gt;</span></span><br><span class="line">    &#123;% for message in messages.object_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"messages"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl time"</span>&gt;</span>&#123;&#123; message.add_time &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">class</span>=<span class="string">"fr btn foldbtn"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                &#123;&#123; message.message &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>页面分页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pageturn pagerright"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagelist"</span>&gt;</span></span><br><span class="line">    &#123;% if messages.has_previous %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"long"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; messages.previous_page_number.querystring &#125;&#125;"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    &#123;% for page in messages.pages %&#125;</span><br><span class="line">        &#123;% if page %&#125;</span><br><span class="line">            &#123;% ifequal page messages.number %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; page.querystring &#125;&#125;"</span>&gt;</span>&#123;&#123; page &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;% else %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; page.querystring &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"page"</span>&gt;</span>&#123;&#123; page &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;% endifequal %&#125;</span><br><span class="line">        &#123;% else %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"none"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    &#123;% if messages.has_next %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"long"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; messages.next_page_number.querystring &#125;&#125;"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>为了方便测试，所以在xadmin后台进行数据添加，需要注意的是用户字段（user）是填写用户的id，因为当初在模型类中user字段为int类型，默认是否已读字段为False</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515124821581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试显示页面动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515125413685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>在页面顶部栏小喇叭处显示未读消息</p><p><strong>说明</strong>：因为所有页面顶部都设计小喇叭消息，所以需要在UserProfile模型类中，需定义一个方法来获取当前用户未读消息数量，可以让每个模板进行调用此方法</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515125929589.png" alt></fancybox></p><ul><li>在UserProfile模型类中获取用户未读消息数量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_unread_nums</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""获取用户未读消息数量"""</span></span><br><span class="line">    <span class="keyword">from</span> operation.models <span class="keyword">import</span> UserMessage</span><br><span class="line">    <span class="keyword">return</span> UserMessage.objects.filter(user=self.id, has_read=<span class="number">0</span>).count()</span><br></pre></td></tr></table></figure><ul><li>因为每个页面都涉及顶部小喇叭消息，所以需要在所有父模板文件中，首先修改链接地址，然后通过request.user对象调用其模型类中的定义的get_user_unread_nums方法获取未读数量</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'users:mymessage' %&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"msg-num"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"MsgNum"</span>&gt;</span>&#123;&#123; request.user.get_user_unread_nums &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试之前需要在数据库中设置has_read字段的值为0也就表示未读消息，好方便进行测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515130726291.png" alt></fancybox></p><ul><li>测试查看各个页面顶部小喇叭未读消息数量是否显示正确成功，然后进入我的消息页面，即各个页面顶部小喇叭未读消息数量则显示为0</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515131442784.gif" alt></fancybox></p><h1 id="六丶用户个人中心（退出）"><a href="#六丶用户个人中心（退出）" class="headerlink" title="六丶用户个人中心（退出）"></a>六丶用户个人中心（退出）</h1><p><strong>1.</strong>定义退出视图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LogoutView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""退出登录"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        logout(request)</span><br><span class="line">        <span class="comment"># 重定向到主页</span></span><br><span class="line">        <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">'index'</span>))</span><br></pre></td></tr></table></figure><p><strong>2.</strong>在根级urls中定义视图路由</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^logout/$'</span>, LogoutView.as_view(), name=<span class="string">"logout"</span>),  <span class="comment"># 用户退出</span></span><br></pre></td></tr></table></figure><p><strong>3.</strong>在三个父模板中，修改退出功能按钮链接地址</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"fr"</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'logout' %&#125;"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>4.</strong>测试退出功能</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051514083068.gif" alt></fancybox></p><h1 id="七丶-首页、全局功能细节和404以及500页面配置"><a href="#七丶-首页、全局功能细节和404以及500页面配置" class="headerlink" title="七丶 首页、全局功能细节和404以及500页面配置"></a>七丶 首页、全局功能细节和404以及500页面配置</h1><p><strong>说明：</strong>将所有页涉及到的跳转链接地址进行修改（此细节就不做演示了）</p><p><strong>1.</strong>全局功能细节</p><ul><li>课程点击数增加（courses/views.CourseInfoView）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当用点击开始学习进入章节信息页后则学习人数</span></span><br><span class="line">course.students += <span class="number">1</span></span><br><span class="line">course.save()</span><br></pre></td></tr></table></figure><ul><li>教师点击数增加（organization/views.TeacherDetailView）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">teacher.click_nums += <span class="number">1</span></span><br><span class="line">teacher.save()</span><br></pre></td></tr></table></figure><ul><li>机构点击数增加（organization/views.OrgHomeView）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">course_org.click_nums += <span class="number">1</span></span><br><span class="line">course_org.save()</span><br></pre></td></tr></table></figure><ul><li>课程学习人数的增加（courses/views.VideoPlayView）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当用点击开始学习进入章节信息页后则学习人数</span></span><br><span class="line">course.students += <span class="number">1</span></span><br><span class="line">course.save()</span><br></pre></td></tr></table></figure><ul><li>课程丶课程机构丶讲师收藏数的增加（organization/views.AddFavView）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置课程丶机构丶讲师的收藏数+1</span></span><br><span class="line"><span class="keyword">if</span> int(fav_type) == <span class="number">1</span>:</span><br><span class="line">    course = Course.objects.get(id=int(fav_id))</span><br><span class="line">    course.fav_nums -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> course.fav_nums &lt; <span class="number">0</span>:</span><br><span class="line">        course.fav_nums = <span class="number">0</span></span><br><span class="line">    course.save()</span><br><span class="line"><span class="keyword">elif</span> int(fav_type) == <span class="number">2</span>:</span><br><span class="line">    course_org = CourseOrg.objects.get(id=int(fav_id))</span><br><span class="line">    course_org.fav_nums -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> course_org.fav_nums &lt; <span class="number">0</span>:</span><br><span class="line">        course_org.fav_nums = <span class="number">0</span></span><br><span class="line">    course_org.save()</span><br><span class="line"><span class="keyword">elif</span> int(fav_type) == <span class="number">3</span>:</span><br><span class="line">    teacher = Teacher.objects.get(id=int(fav_id))</span><br><span class="line">    teacher.fav_nums -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> teacher.fav_nums &lt; <span class="number">0</span>:</span><br><span class="line">        teacher.fav_nums = <span class="number">0</span></span><br><span class="line">    teacher.save()</span><br></pre></td></tr></table></figure><ul><li>课程丶课程机构丶讲师收藏数的减少（organization/views.AddFavView）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置课程丶机构丶讲师的收藏数-1</span></span><br><span class="line"><span class="keyword">if</span> int(fav_type) == <span class="number">1</span>:</span><br><span class="line">    course = Course.objects.get(id=int(fav_id))</span><br><span class="line">    course.fav_nums += <span class="number">1</span></span><br><span class="line">    course.save()</span><br><span class="line"><span class="keyword">elif</span> int(fav_type) == <span class="number">2</span>:</span><br><span class="line">    course_org = CourseOrg.objects.get(id=int(fav_id))</span><br><span class="line">    course_org.fav_nums += <span class="number">1</span></span><br><span class="line">    course_org.save()</span><br><span class="line"><span class="keyword">elif</span> int(fav_type) == <span class="number">3</span>:</span><br><span class="line">    teacher = Teacher.objects.get(id=int(fav_id))</span><br><span class="line">    teacher.fav_nums += <span class="number">1</span></span><br><span class="line">    teacher.save()</span><br></pre></td></tr></table></figure><p><strong>2.</strong>首页动态数据显示</p><ul><li>定义视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""主页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="comment"># 驱逐主页轮播图</span></span><br><span class="line">        all_banners = Banner.objects.all().order_by(<span class="string">'index'</span>)</span><br><span class="line">        <span class="comment"># 取出主页课程栏的6门课程</span></span><br><span class="line">        courses = Course.objects.filter(is_banner=<span class="literal">False</span>)[:<span class="number">6</span>]</span><br><span class="line">        <span class="comment"># 取出主页课程栏的3门轮播课程</span></span><br><span class="line">        banner_courses = Course.objects.filter(is_banner=<span class="literal">True</span>)[:<span class="number">3</span>]</span><br><span class="line">        <span class="comment"># 取出主页授课机构栏的15门机构</span></span><br><span class="line">        course_orgs = CourseOrg.objects.all()[:<span class="number">15</span>]</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>, &#123;<span class="string">"all_banners"</span>:all_banners, <span class="string">"courses"</span>:courses,</span><br><span class="line">                                              <span class="string">"banner_courses"</span>:banner_courses, <span class="string">"course_orgs"</span>:course_orgs&#125;)</span><br></pre></td></tr></table></figure><ul><li>在根据urls中配置路由对应的视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^$'</span>,  IndexView.as_view(), name=<span class="string">"index"</span>),  <span class="comment"># 主页</span></span><br></pre></td></tr></table></figure><ul><li>在xadmin后端中添加主页轮播图</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515165026382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在主页公开课程栏中还嵌套了一个小的轮播图，所以需要在Course模型类中增加一个字段，来判断该课程是否进行轮播标记</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">is_banner = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u"是否轮播"</span>)</span><br></pre></td></tr></table></figure><ul><li>生成对应数据表字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515163351494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>需要在xadmin后台中课程中设置要进行轮播的课程</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515164604671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在首页课程机构栏列表中的课程需要添加tag机构标签，所以需在organization/models中的CourseOrg模型表添加该字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tag = models.CharField(default=<span class="string">"全国知名"</span>, max_length=<span class="number">10</span>, verbose_name=<span class="string">u"机构标签"</span>)</span><br></pre></td></tr></table></figure><ul><li>生成对应的数据表字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515173252675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在index模板中打印页面动态数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-------------- 轮播图 --------------&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"imgslide"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"imgs"</span>&gt;</span></span><br><span class="line">        &#123;% for banner in all_banners %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; banner.url &#125;&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"1200"</span> <span class="attr">height</span>=<span class="string">"478"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; banner.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-------------- 公开课程 --------------&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"module1_1 left"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"228"</span> <span class="attr">height</span>=<span class="string">"614"</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/module1_1.jpg' %&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fisrt_word"</span>&gt;</span>名师授课<span class="tag">&lt;<span class="name">br</span>/&gt;</span>专业权威<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"more"</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_list' %&#125;"</span>&gt;</span>查看更多课程 &gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right group_list"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"module1_2 box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"imgslide2"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"imgs"</span>&gt;</span></span><br><span class="line">                &#123;% for banner_course in banner_courses %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_detail' banner_course.id %&#125;"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"470"</span> <span class="attr">height</span>=<span class="string">"300"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; banner_course.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"unslider-arrow2 prev"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"unslider-arrow2 next"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% for course in courses %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"module1_&#123;&#123; forloop.counter|add:2 &#125;&#125; box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_detail' course.id%&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"233"</span> <span class="attr">height</span>=<span class="string">"190"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; course.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"des"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"course-detail.html"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span> <span class="attr">title</span>=<span class="string">"django入门"</span>&gt;</span>&#123;&#123; course.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>难度：<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; course.get_degree_display &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span>学习人数：&#123;&#123; course.students &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span> <span class="attr">title</span>=<span class="string">"慕课网"</span>&gt;</span>&#123;&#123; course.course_org.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star fr"</span>&gt;</span>&#123;&#123; course.fav_nums &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-------------- 课程机构 --------------&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"module3 eachmod"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"module3_1 left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"228"</span> <span class="attr">height</span>=<span class="string">"463"</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/module3_1.jpg' %&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fisrt_word"</span>&gt;</span>名校来袭<span class="tag">&lt;<span class="name">br</span>/&gt;</span>权威认证<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"more"</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:org_list' %&#125;"</span>&gt;</span>查看更多机构 &gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            &#123;% for course_org in course_orgs %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if forloop.counter|divisibleby:'5' %&#125;five&#123;% endif %&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:org_home' course_org.id %&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"company"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"184"</span> <span class="attr">height</span>=<span class="string">"100"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; course_org.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"score"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"circle"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; course_org.tag &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"key"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; course_org.name &#125;&#125;"</span>&gt;</span>&#123;&#123; course_org.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示主页动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515175414827.gif" alt></fancybox></p><p><strong>3.</strong>404以及500页面配置</p><ul><li>在users/views中定义一个方法，获取404页面的响应数据并进行返回</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_not_found</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""全局404页面"""</span></span><br><span class="line">    <span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render_to_response</span><br><span class="line">    response = render_to_response(<span class="string">"404.html"</span>)</span><br><span class="line">    response.status_code = <span class="number">404</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><ul><li>在根级urls中配置全局404路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局404页面配置</span></span><br><span class="line">handler404 = <span class="string">"users.views.page_not_found"</span></span><br></pre></td></tr></table></figure><ul><li>还需要将项目开发环境配置成生产环境（线上环境）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DEBUG = <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line">ALLOWED_HOSTS = [<span class="string">"*"</span>]</span><br></pre></td></tr></table></figure><ul><li>访问不存在的页面<a href="http://127.0.0.1:8000/111" target="_blank" rel="noopener">http://127.0.0.1:8000/111</a> 结果成功渲染了指定的404页面，但页面的静态资源文件并没有加载成功，这个问题在之前的项目Django项目中已经说明过了，因为将settings中的DEBUG设置为False后django就不会帮我们管理静态资源文件了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515181453829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>解决方法就是：想要在线上环境加载静态资源文件，并且不使用代理服务器如apache或nginx，那么就像配置media静态目录上传的图片那样进行配置，首先在settings文件中添加静态资源目录static</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">'static'</span>)</span><br></pre></td></tr></table></figure><ul><li>然后在根级urls中配置静态文件处理函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^static/(?P&lt;path&gt;.*)$'</span>,  serve, &#123;<span class="string">"document_root"</span>:STATIC_ROOT&#125;),  <span class="comment"># 配置静态文件处理函数</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面成功加载出404页资源文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515182705156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>500页面跟上面逻辑代码啥的都一样，首先在users/views中定义一个方法，获取500页面的响应数据并进行返回</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_server_error</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""全局404页面"""</span></span><br><span class="line">    <span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render_to_response</span><br><span class="line">    response = render_to_response(<span class="string">"500.html"</span>)</span><br><span class="line">    response.status_code = <span class="number">500</span></span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><ul><li>在根级urls中配置全局500路由</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">handler500 = &quot;users.views.page_server_error&quot;</span><br></pre></td></tr></table></figure><ul><li>测试显示500服务器错误页面，完成该测试需要在主页视图IndexView中打印1/0则会抛出服务器错误500状态码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190515183406362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/90141577" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/90141577</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目于之在线教育平台网站的实战开发（四）</title>
      <link href="/2019/11/15/Django%E9%A1%B9%E7%9B%AE%E4%BA%8E%E4%B9%8B%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2019/11/15/Django%E9%A1%B9%E7%9B%AE%E4%BA%8E%E4%B9%8B%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶公开课（详情页）"><span style="color:#4ea1db">一丶公开课（详情页）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶公开课（开始学习））"><span style="color:#4ea1db">二丶公开课（开始学习）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶公开课（课程评论） "><span style="color:#4ea1db">三丶公开课（课程评论）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶公开课（课程播放） "><span style="color:#4ea1db">四丶公开课（课程播放）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶授课教师（列表页）"><span style="color:#4ea1db">五丶授课教师（列表页）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶授课教师（详情页）"><span style="color:#4ea1db">六丶授课教师（详情页）</span></a></li><a id="more"></a><h1 id="一丶公开课（详情页）"><a href="#一丶公开课（详情页）" class="headerlink" title="一丶公开课（详情页）"></a>一丶公开课（详情页）</h1><p><strong>1.</strong>显示课程详情页</p><ul><li>模板继承这个不用多说了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190510190345267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>定义类视图get方法，用于显示页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseDetailView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程详情页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, course_id)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-detail.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>定义url路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^detail/(?P&lt;course_id&gt;\d+)/$'</span>, CourseDetailView.as_view(), name=<span class="string">"course_detail"</span>),  <span class="comment"># 课程列表页</span></span><br></pre></td></tr></table></figure><ul><li>在课程列表页中修改课程详情链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;%  for course in all_courses.object_list %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_detail' course.id %&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"280"</span> <span class="attr">height</span>=<span class="string">"350"</span> <span class="attr">class</span>=<span class="string">"scrollLoading"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">src</span>=<span class="string">&#123;&#123;</span> <span class="attr">MEDIA_URL</span> &#125;&#125;&#123;&#123; <span class="attr">course.image</span> &#125;&#125;/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"des"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_detail' course.id %&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; course.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>时长：<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; course.learn_times &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span>学习人数：&#123;&#123; course.students &#125;&#125;&amp;nbsp;&amp;nbsp;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bottom"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_detail' course.id %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>来自&#123;&#123; course.course_org.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star fr  notlogin</span></span></span><br><span class="line"><span class="tag"><span class="string">        "</span> <span class="attr">data-favid</span>=<span class="string">"15"</span>&gt;</span></span><br><span class="line">        &#123;&#123; course.fav_nums &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li>测试在课程列表页点击课程，则显示课程详情页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190510191340503.gif" alt></fancybox></p><p><strong>2.</strong>动态显示出课程详情页数据</p><ul><li>在类视图中根据请求地址传递的课程id获取对应的课程信息数据，当用户点击进入课程详情页时，则点击数+1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseDetailView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程详情页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, course_id)</span>:</span></span><br><span class="line">        course = Course.objects.get(id=int(course_id))</span><br><span class="line">        <span class="comment"># 当用户点击进入课程详情页时，则课程点击数+1</span></span><br><span class="line">        course.click_nums += <span class="number">1</span></span><br><span class="line">        course.save()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-detail.html"</span>, &#123;<span class="string">"course"</span>:course&#125;)</span><br></pre></td></tr></table></figure><ul><li>分析课程详情页面中的（章节数和课程类别以及学习用户），在Course模型类中没有的字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190510195238783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>紧接着需要在模型类中，获取章节数以及学习用户信息，因为该两个字段是UserCourse模型表和Lesson表的外键，即可以使用django models提供self.小写表名_set方法获取字段信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_zj_nums</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment">#获取课程章节数</span></span><br><span class="line">    <span class="keyword">return</span> self.lesson_set.all().count()</span><br><span class="line">get_zj_nums.short_description = <span class="string">"章节数"</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_learn_users</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="comment"># 获取课程学习用户</span></span><br><span class="line"><span class="keyword">return</span> self.usercourse_set.all()[:<span class="number">5</span>]</span><br></pre></td></tr></table></figure><ul><li>课程类别则需要在Course模型表中添加category字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">category = models.CharField(default=<span class="string">u"后端开发"</span>, max_length=<span class="number">20</span>, verbose_name=<span class="string">u"课程类别"</span>)</span><br></pre></td></tr></table></figure><ul><li>生成对应的数据表category字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051019595147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>最后在课程详情模板中打印字段数据即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">title</span>=<span class="string">"django 从入门到精通体验开始了"</span>&gt;</span>&#123;&#123; course.name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; course.desc &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"prize"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>难度：<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; course.get_degree_display &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span>学习人数：&#123;&#123; course.students &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"parameter"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"pram word3"</span>&gt;</span>时&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;长：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; course.learn_times &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"pram word3"</span>&gt;</span>章&amp;nbsp;节&amp;nbsp;数：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; course.get_zj_nums &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"pram word3"</span>&gt;</span>课程类别：<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">""</span>&gt;</span>&#123;&#123; course.category &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"piclist"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"pram word4"</span>&gt;</span>学习用户：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            &#123;% for course_user in course.get_learn_users %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"40"</span> <span class="attr">height</span>=<span class="string">"40"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; course_user.user.image &#125;&#125;"</span>/&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>因为用户课程表并没有数据，则需要进行添加，为了显示详情页面中的学习用户</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190510200401740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>刷新课程详情页面，成功显示出详情页面动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190510200507525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看课程表中Mysql主从复制2的click_nums点击数字段，已经进行+1了</li></ul><p><img src="https://img-blog.csdnimg.cn/20190510200718562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>3.</strong>动态显示出课程详情页面右侧授课机构数据</p><ul><li>授课机构数据包括教师数，所以需要在CourseOrg模型表中获取教师数数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_teacher_nums</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment">#获取课程机构的教师数量</span></span><br><span class="line">    <span class="keyword">return</span> self.teacher_set.all().count()</span><br></pre></td></tr></table></figure><ul><li>在模板中进行打印字段数据即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>授课机构<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>世界名校，课程权威<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/company/14/"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"150"</span> <span class="attr">height</span>=<span class="string">"80"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; course.course_org.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/company/14/"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"center"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; course.course_org.name &#125;&#125;"</span>&gt;</span>&#123;&#123; course.course_org.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn  notlogin</span></span></span><br><span class="line"><span class="tag"><span class="string">     "</span><span class="attr">data-favid</span>=<span class="string">"14"</span> <span class="attr">id</span>=<span class="string">"jsRightBtn"</span>&gt;</span></span><br><span class="line">         已收藏</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>课 &amp;nbsp;程&amp;nbsp; 数：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;   &#123;&#123; course.course_org.course_nums &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>教 &amp;nbsp;师&amp;nbsp; 数：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &#123;&#123; course.course_org.get_teacher_nums &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>所在地区：&amp;nbsp;&amp;nbsp;&#123;&#123; course.course_org.address &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>认&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;证&amp;nbsp;:</span><br><span class="line">                &amp;nbsp;&amp;nbsp;</span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">title</span>=<span class="string">"金牌机构"</span>, <span class="attr">src</span>=<span class="string">"&#123;% static 'images/gold.png' %&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面成功动态加载出授课机构数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190510203214485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>相关课程推荐功能</p><p><strong>说明：</strong>完成该功能需要在Course课程模型类中添加tag标签字段，通过tag标签字段查找相等的课程，并且只获取一个结果，返回给模板</p><ul><li>在course模型类中添加标签字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tag = models.CharField(default=<span class="string">""</span>, verbose_name=<span class="string">u"课程标签"</span>, max_length=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><ul><li>生成对应数据表字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190510213527355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在类视图中查看tag标签相同的课程数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseDetailView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程详情页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, course_id)</span>:</span></span><br><span class="line">        course = Course.objects.get(id=int(course_id))</span><br><span class="line">        <span class="comment"># 当用户点击进入课程详情页时，则课程点击数+1</span></span><br><span class="line">        course.click_nums += <span class="number">1</span></span><br><span class="line">        course.save()</span><br><span class="line">        tag = course.tag</span><br><span class="line">        <span class="keyword">if</span> tag:</span><br><span class="line">            relate_courses = Course.objects.filter(tag=tag)[:<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            relate_courses = []</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-detail.html"</span>, &#123;<span class="string">"course"</span>:course, <span class="string">"relate_courses"</span>:relate_courses&#125;)</span><br></pre></td></tr></table></figure><ul><li>在模板文件中找到相关课程推荐标签，进行数据打印</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"group_recommend"</span>&gt;</span></span><br><span class="line">        &#123;% for relate_course in relate_courses%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"240"</span> <span class="attr">height</span>=<span class="string">"220"</span> <span class="attr">class</span>=<span class="string">"scrollLoading"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; relate_course.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span> &#123;&#123; relate_course.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>学习时长：<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; relate_course.learn_times &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>为了视图中获取的tag字段的值不为空，则需要登录xadmin后台进行添加课程中的标签字段的数据，博主这里将课程mysql主从复制以及mysql主从复制2添加相同标签mysql</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190510213956115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>刷新页面，正确显示出相关课程信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190510214108981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>5.</strong>课程详情页面收藏功能</p><ul><li>说明：在页面中有两个收藏功能，分别是课程收藏以及机构收藏，两个收藏功能逻辑与机构详情页面的收藏功能一致，公用AddFavView视图函数，完成同样逻辑，代码的重复性</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511091131722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>即不需要再编写收藏功能接口函数了，只需要在course-detail详情页模板中继承父模板base中预留custom_js数据块，完成ajxa post异步请求，完成此功能，<font style="color:red">在js代码中需要分别定义课程收藏以及机构收藏，因为它们两个功能在调用add_fav函数时，传递的fav_id以及fav_type是不一样的</font></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block custom_js %&#125;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="comment">//收藏分享</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">add_fav</span>(<span class="params">current_elem, fav_id, fav_type</span>)</span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            cache: <span class="literal">false</span>,</span><br><span class="line">            type: <span class="string">"POST"</span>,</span><br><span class="line">            url:<span class="string">"/org/add_fav/"</span>,</span><br><span class="line">            data:&#123;<span class="string">'fav_id'</span>:fav_id, <span class="string">'fav_type'</span>:fav_type&#125;,</span><br><span class="line">            <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">            beforeSend:<span class="function"><span class="keyword">function</span>(<span class="params">xhr, settings</span>)</span>&#123;</span><br><span class="line">                xhr.setRequestHeader(<span class="string">"X-CSRFToken"</span>, <span class="string">"&#123;&#123; csrf_token &#125;&#125;"</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(data.status == <span class="string">'fail'</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(data.msg == <span class="string">'用户未登录'</span>)&#123;</span><br><span class="line">                        <span class="built_in">window</span>.location.href=<span class="string">"login.html"</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        alert(data.msg)</span><br><span class="line">                    &#125;</span><br><span class="line"> </span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(data.status == <span class="string">'success'</span>)&#123;</span><br><span class="line">                    current_elem.text(data.msg)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    $(<span class="string">'#jsLeftBtn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        add_fav($(this), &#123;&#123; course.id &#125;&#125;, 1);  &#123;#课程#&#125;</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    $(<span class="string">'#jsRightBtn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        add_fav($(this), &#123;&#123; course.course_org.id &#125;&#125;, 2);  &#123;#课程机构#&#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endblock %&#125;</span></span><br></pre></td></tr></table></figure><ul><li>在视图中跟之前机构收藏一样，需要判断UserFavorite用户收藏表中是否存在数据，设置开关，向模板中传递开关，根据开关的值，来判断页面收藏功能块内容是显示收藏还是已收藏</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置默认为未收藏状态</span></span><br><span class="line">has_fav_course = <span class="literal">False</span></span><br><span class="line">has_fav_org = <span class="literal">False</span></span><br><span class="line"><span class="comment"># 当用户为登录状态才能根据条件查询该用户收藏数据</span></span><br><span class="line"><span class="keyword">if</span> request.user.is_authenticated():</span><br><span class="line">    <span class="comment"># 当用户已收藏课程时，即has_fav_course = True ，需注意这里的fav_type = 1 这个条件是固定的因此为课程收藏</span></span><br><span class="line">    <span class="keyword">if</span> UserFavorite.objects.filter(user=request.user, fav_id=int(course.id), fav_type=<span class="number">1</span>):</span><br><span class="line">        has_fav_course = <span class="literal">True</span></span><br><span class="line">    <span class="comment"># 当用户已收藏机构时，即has_fav_org = True ，需注意这里的fav_type = 2 这个条件是固定的因此为课程机构收藏</span></span><br><span class="line">    <span class="keyword">if</span> UserFavorite.objects.filter(user=request.user, fav_id=int(course.course_org.id), fav_type=<span class="number">2</span>):</span><br><span class="line">        has_fav_org = <span class="literal">True</span></span><br></pre></td></tr></table></figure><ul><li>测试课程详情页面课程收藏功能以及机构收藏功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511094816659.gif" alt></fancybox></p><h1 id="二丶公开课（开始学习）"><a href="#二丶公开课（开始学习）" class="headerlink" title="二丶公开课（开始学习）"></a>二丶公开课（开始学习）</h1><p><strong>说明：</strong>当用户在课程详情页面点击开始学习即跳转到课程章节信息页面，在该页面除了显示章节信息页面（course-video），还包含评论信息页面（course-comment）</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511100049959.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>1.</strong>显示出课程章节信息页面</p><ul><li>模板继承</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511104654605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>定义类视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseInfoView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""章节信息页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, course_id)</span>:</span></span><br><span class="line">        course = Course.objects.get(id=int(course_id))</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-video.html"</span>, &#123;<span class="string">"course"</span>: course&#125;)</span><br></pre></td></tr></table></figure><ul><li>定义路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^info/(?P&lt;course_id&gt;\d+)/$'</span>, CourseInfoView.as_view(), name=<span class="string">"course_info"</span>),  <span class="comment"># 课程章节信息页</span></span><br></pre></td></tr></table></figure><ul><li>测试显示课程章节信息页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511105647609.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>动态显示出课程章节信息页面数据 </p><ul><li>在xadmin后台对课程章节信息进行添加，有两种方式添加，第一种则是点击课程管理中的章节进行添加；第二种更快就是在课程中点击课程右侧的按钮，选择章节点击+进行添加，这个功能是根据外键关联由django提供进行设置的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019051111035290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>添加课程章节</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511112753331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>添加课程章节视频，需要在Video模型类中添加视频url地址字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = models.CharField(max_length=<span class="number">200</span>, default=<span class="string">""</span>, verbose_name=<span class="string">u"访问地址"</span>)</span><br></pre></td></tr></table></figure><ul><li>生成对应数据表字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511113306627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>添加课程章节视频</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511114149588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在课程章节信息中涉及到视频时长，所以老规矩需要在Video模型类中添加视频时长字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">learn_times = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习时长(分钟数)"</span>)</span><br></pre></td></tr></table></figure><ul><li>生成对应数据表字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511115909830.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在Course课程信息表中定义get_course_lesson方法获取课程所有章节信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_course_lesson</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment">#获取课程所有章节</span></span><br><span class="line">    <span class="keyword">return</span> self.lesson_set.all()</span><br></pre></td></tr></table></figure><ul><li>同样的在Lesson章节信息表中定义get_lesson_video方法获取课程下的章节视频信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_lesson_video</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment">#获取章节视频</span></span><br><span class="line">    <span class="keyword">return</span> self.video_set.all()</span><br></pre></td></tr></table></figure><ul><li>在模板文件course-video中打印章节信息</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"statics clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"static-item "</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"meta-value"</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; course.get_degree_display &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"meta"</span>&gt;</span>难度<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"static-item static-time"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"meta-value"</span>&gt;</span>&#123;&#123; course.learn_times &#125;&#125;分钟<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"meta"</span>&gt;</span>时长<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"static-item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"meta-value"</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; course.students &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"meta"</span>&gt;</span>学习人数<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ************************分割线*************************** --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mod-chapters"</span>&gt;</span></span><br><span class="line">    &#123;% for lesson in course.get_course_lesson %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"chapter chapter-active"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"state-expand"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>&#123;&#123; lesson.name &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"video"</span>&gt;</span></span><br><span class="line">            &#123;% for video in lesson.get_lesson_video %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">'&#123;&#123; video.url &#125;&#125;'</span> <span class="attr">class</span>=<span class="string">"J-media-item studyvideo"</span>&gt;</span>&#123;&#123; video.name &#125;&#125; (&#123;&#123; video.learn_times &#125;&#125;)</span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"study-state"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试成功显示对应课程的章节信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511121038428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>页面资料下载功能</p><p><strong>说明：</strong>在课程章节信息页面右侧栏有课程资料下载功能</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511121408252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>首先需要在xadmin后台课程资源表中添加Mysql主从配置2的课程资源数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511121805994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>添加Mysql主从复制2三个课程资源如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511122143463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在类视图中根据课程对象筛选出对应的课程资源数据，并返回给前端模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseInfoView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""章节信息页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, course_id)</span>:</span></span><br><span class="line">        course = Course.objects.get(id=int(course_id))</span><br><span class="line">        <span class="comment"># 获取课程下的所有课程资源</span></span><br><span class="line">        all_resources = CourseResource.objects.filter(course=course)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-video.html"</span>, &#123;<span class="string">"course"</span>: course, <span class="string">"all_resources"</span>:all_resources&#125;)</span><br></pre></td></tr></table></figure><ul><li>在模板中进行打印显示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box mb40"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>资料下载<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"downlist"</span>&gt;</span></span><br><span class="line">        &#123;% for course_resource in all_resources %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"aui-iconfont aui-icon-file"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>&amp;nbsp;&amp;nbsp;&#123;&#123; course_resource.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; course_resource.download &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"downcode"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">download</span>=<span class="string">""</span> <span class="attr">data-id</span>=<span class="string">"274"</span> <span class="attr">title</span>=<span class="string">""</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试成功在课程章节信息页面显示出对应课程的资源下载数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511123851100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>页面课程讲师提示动态数据显示</p><p><strong>说明</strong>：在课程章节页面右侧显示课程讲师信息</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511124330484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在Course模型表中添加课程讲师外键字段关联Teacher模型表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teacher = models.ForeignKey(Teacher, verbose_name=<span class="string">u"讲师"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><ul><li>生成对应的数据表字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511124516332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>紧接着老规矩在xadmin后台Mysql主从复制2课程中添加讲师字段信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511125036322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在讲师信息中包含课程须知和老师告诉你…的字段信息，但定义Course表并没有这两个字段，所以需要在Course模型类中添加此两个字段信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">youneed_know = models.CharField(default=<span class="string">""</span>, max_length=<span class="number">300</span>, verbose_name=<span class="string">u"课程须知"</span>)</span><br><span class="line">teacher_tell = models.CharField(default=<span class="string">""</span>, max_length=<span class="number">300</span>, verbose_name=<span class="string">u"老师告诉你"</span>)</span><br></pre></td></tr></table></figure><ul><li>生成对应的数据表字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511130113497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在xadmin中添加添加Mysql主从复制2课程的课程须知以及老师告诉你字段数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511130700724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在course-video模板中打印讲师提示数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box mb40"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>讲师提示<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"teacher-info"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/u/315464/courses?sort=publish"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; course.teacher.image &#125;&#125;'</span> <span class="attr">width</span>=<span class="string">'80'</span> <span class="attr">height</span>=<span class="string">'80'</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/u/315464/courses?sort=publish"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>&#123;&#123; course.teacher.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"job"</span>&gt;</span>&#123;&#123; course.teacher.work_position &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"course-info-tip"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"first"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span>课程须知<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"autowrap"</span>&gt;</span>&#123;&#123; course.youneed_know &#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span>老师告诉你能学到什么？<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"autowrap"</span>&gt;</span>&#123;&#123; course.teacher_tell &#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试成功显示出讲师提示动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511131059291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶公开课（课程评论）"><a href="#三丶公开课（课程评论）" class="headerlink" title="三丶公开课（课程评论）"></a>三丶公开课（课程评论）</h1><p><strong>1.</strong>显示课程评论页面</p><ul><li>模板继承</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511133839390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>定义类视图，因课程评论页面与课程章节页面右侧栏数据一致，即在课程章节类视图逻辑上获取评论数据即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseCommentView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程评论页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, course_id)</span>:</span></span><br><span class="line">        course = Course.objects.get(id=int(course_id))</span><br><span class="line">        <span class="comment"># 获取课程下的所有课程资源</span></span><br><span class="line">        all_resources = CourseResource.objects.filter(course=course)</span><br><span class="line">        <span class="comment"># 获取课程所有的评论数据</span></span><br><span class="line">        all_comments = CourseComments.objects.all()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-comment.html"</span>, &#123;<span class="string">"course"</span>: course, <span class="string">"all_resources"</span>: all_resources</span><br><span class="line">                                                       ,<span class="string">"all_comments"</span>:all_comments&#125;)</span><br></pre></td></tr></table></figure><ul><li>定义路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^comment/(?P&lt;course_id&gt;\d+)/$'</span>, CourseCommentView.as_view(), name=<span class="string">"course_comment"</span>),  <span class="comment"># 课程评论页</span></span><br></pre></td></tr></table></figure><ul><li>在课程章节course-video模板中修改评论链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"commentOn"</span> <span class="attr">class</span>=<span class="string">""</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_comment' course.id %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>评论<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>点击评论，成功进入课程评论页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511134725723.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>课程评论页面动态数据显示</p><p><strong>说明</strong>：课程章节页面与课程评论页面除了内容不一致，以下三个板块数据都是一样的，所以直接将course-video模板中对应标签块数据直接拷贝到course-comment模板中替换即可</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511140116288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>修改模板中的章节以及评论按钮的链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"course-menu clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"ui-tabs-active "</span> <span class="attr">id</span>=<span class="string">"learnOn"</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_info' course.id %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>章节<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"commentOn"</span> <span class="attr">class</span>=<span class="string">"active"</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_comment' course.id %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>评论<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面点击评论按钮进入评论页面，成功显示出页面动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511140354745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>发表评论功能实现以及显示评论信息</p><ul><li>定义类视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddCommentView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""发表评论"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> request.user.is_authenticated():</span><br><span class="line">            <span class="comment"># 用户未登录的返回错误响应</span></span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"fail", "msg":"用户未登录"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="comment"># 获取请求中的参数</span></span><br><span class="line">        course_id = request.POST.get(<span class="string">'course_id'</span>, <span class="number">0</span>)</span><br><span class="line">        comments = request.POST.get(<span class="string">'comments'</span>, <span class="string">''</span>)</span><br><span class="line">        <span class="comment"># 判断请求参数中的课程id大于0 以及评论内容不为空时，才会将数据保存至数据库表中</span></span><br><span class="line">        <span class="keyword">if</span> int(course_id) &gt; <span class="number">0</span> <span class="keyword">and</span> comments:</span><br><span class="line">            course_comments = CourseComments()</span><br><span class="line">            course = Course.objects.get(id=int(course_id))</span><br><span class="line">            course_comments.course = course</span><br><span class="line">            course_comments.comments = comments</span><br><span class="line">            course_comments.user = request.user</span><br><span class="line">            course_comments.save()</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"success", "msg":"评论成功"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"fail", "msg":"评论失败"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><ul><li>定义url路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^add_comment/$'</span>, AddCommentView.as_view(), name=<span class="string">"add_comment"</span>),  <span class="comment"># 发表评论功能</span></span><br></pre></td></tr></table></figure><ul><li>在course-comments模板中继承父模板base的custom_js数据块，完成发表评论功能js代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block custom_js %&#125;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="comment">//添加评论</span></span><br><span class="line">        $(<span class="string">'#js-pl-submit'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> comments = $(<span class="string">"#js-pl-textarea"</span>).val();</span><br><span class="line">            <span class="keyword">if</span> (comments == <span class="string">""</span>) &#123;</span><br><span class="line">                alert(<span class="string">"评论不能为空"</span>);</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                cache: <span class="literal">false</span>,</span><br><span class="line">                type: <span class="string">"POST"</span>,</span><br><span class="line">                url: <span class="string">"/course/add_comment/"</span>,</span><br><span class="line">                data: &#123;<span class="string">'course_id'</span>: &#123;&#123; course.id &#125;&#125;, <span class="string">'comments'</span>: comments&#125;,</span><br><span class="line">                <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">                beforeSend: <span class="function"><span class="keyword">function</span> (<span class="params">xhr, settings</span>) </span>&#123;</span><br><span class="line">                    xhr.setRequestHeader(<span class="string">"X-CSRFToken"</span>, <span class="string">"&#123;&#123; csrf_token &#125;&#125;"</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (data.status == <span class="string">'fail'</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (data.msg == <span class="string">'用户未登录'</span>) &#123;</span><br><span class="line">                            <span class="built_in">window</span>.location.href = <span class="string">"login.html"</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            alert(data.msg)</span><br><span class="line">                        &#125;</span><br><span class="line"> </span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.status == <span class="string">'success'</span>) &#123;</span><br><span class="line">                        <span class="built_in">window</span>.location.reload();<span class="comment">//刷新当前页面.</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endblock %&#125;</span></span><br></pre></td></tr></table></figure><ul><li>Debug测试发表评论功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511145013519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看数据表operation_coursecomments数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190511145237902.png" alt></p><ul><li>显示课程评论页面信息，因之前定义评论页面时，已经向模板传递了all_comments评论讯息，即只需要在模板中进行打印显示即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"mod-post"</span> <span class="attr">id</span>=<span class="string">"comment-list"</span>&gt;</span></span><br><span class="line">    &#123;% for comment in all_comments %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"post-row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"media"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; comment.user.image &#125;&#125;'</span></span></span><br><span class="line"><span class="tag">                                       <span class="attr">width</span>=<span class="string">'40'</span> <span class="attr">height</span>=<span class="string">'40'</span>/&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bd"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tit"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>&#123;&#123; comment.user.nick_name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"cnt"</span>&gt;</span>&#123;&#123; comment.comments &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer clearfix"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"创建时间"</span> <span class="attr">class</span>=<span class="string">"l timeago"</span>&gt;</span>时间：&#123;&#123; comment.add_time &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>刷新评论页面，则显示出评论信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511150924484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>完善评论页面评论信息显示</p><p><strong>说明</strong>：正常逻辑为在该课程评论页面应该只显示出，用户对本课程的评论，而不应该显示出用户对所有课程的评论信息，并且评论信息应该按照添加时间到的倒序进行排序，也就是后进先出这个意思</p><ul><li>即在课程评论视图中，应该对评论数据根据课程进行筛选，并按照添加时间倒序进行排序</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseCommentView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程评论页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, course_id)</span>:</span></span><br><span class="line">        course = Course.objects.get(id=int(course_id))</span><br><span class="line">        <span class="comment"># 获取课程下的所有课程资源</span></span><br><span class="line">        all_resources = CourseResource.objects.filter(course=course)</span><br><span class="line">        <span class="comment"># 获取课程所有的评论数据</span></span><br><span class="line">        all_comments = CourseComments.objects.filter(course=course).order_by(<span class="string">"-add_time"</span>)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-comment.html"</span>, &#123;<span class="string">"course"</span>: course, <span class="string">"all_resources"</span>: all_resources</span><br><span class="line">                                                       ,<span class="string">"all_comments"</span>:all_comments&#125;)</span><br></pre></td></tr></table></figure><ul><li>测试发表评论功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/201905111519580.gif" alt></fancybox></p><p><strong>5.</strong>补充章节页面以及评论页面右侧栏下方的该课的同学还学过的课程动态数据显示</p><p><strong>说明</strong>：由于两个页面都是共有此模块数据，则这里就演示课程章节页面</p><ul><li>在utils目录下创建mixin_utils.py模块，在模块中编写登录验证类，用于类视图验证操作必须登录状态才能进行的操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.decorators <span class="keyword">import</span> login_required</span><br><span class="line"><span class="keyword">from</span> django.utils.decorators <span class="keyword">import</span> method_decorator</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginRequiredMixin</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""登录验证器"""</span></span><br><span class="line"><span class="meta">    @method_decorator(login_required(login_url='/login/'))</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dispatch</span><span class="params">(self, request, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> super(LoginRequiredMixin, self).dispatch(request, *args, **kwargs)</span><br></pre></td></tr></table></figure><ul><li>在章节信息类视图CourseInfoView以及课程评论类视图CourseCommentView需继承于LoginRequiredMixin登录验证类，因为这两个页面上的操作都是需要用户在登录状态才能完成的</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseInfoView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseCommentView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br></pre></td></tr></table></figure><ul><li>测试登录验证器，在xadmin后台管理中退出登录，刷新页面是否跳转到登录页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511175558252.gif" alt></fancybox></p><ul><li>在CourseInfoView章节信息类视图中，进入章节信息则学习人数+1，获取用户和课程关联的用户课程对象，当不存在时则添加用户课程关联对象并保存到数据库中，如果存在则获取该用户学习的其他所有课程数据，返回给前端模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseInfoView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""章节信息页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, course_id)</span>:</span></span><br><span class="line">        course = Course.objects.get(id=int(course_id))</span><br><span class="line">        <span class="comment"># 当用点击开始学习进入章节信息页后则学习人数</span></span><br><span class="line">        course.students += <span class="number">1</span></span><br><span class="line">        course.save()</span><br><span class="line">        <span class="comment"># 获取用户和课程的关联对象</span></span><br><span class="line">        user_courses = UserCourse.objects.filter(user=request.user, course=course)</span><br><span class="line">        <span class="comment"># 当不存在时，则将用户与课程进行关联后保存到数据库中</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user_courses:</span><br><span class="line">            user_course = UserCourse(user=request.user, course=course)</span><br><span class="line">            user_course.save()</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 根据课程对象在UserCourse表中获取该课程下的用户信息</span></span><br><span class="line">        user_courses = UserCourse.objects.filter(course=course)</span><br><span class="line">        <span class="comment"># 使用列表生成式 获取用户的id</span></span><br><span class="line">        user_ids = [user_course.user.id <span class="keyword">for</span> user_course <span class="keyword">in</span> user_courses]</span><br><span class="line">        <span class="comment"># 筛选此user_ids列表中的所有用户的课程数据</span></span><br><span class="line">        all_user_courses = UserCourse.objects.filter(user_id__in=user_ids)</span><br><span class="line">        <span class="comment"># 使用列表生成式 获取课程的id</span></span><br><span class="line">        course_ids = [user_course.course.id <span class="keyword">for</span> user_course <span class="keyword">in</span> all_user_courses]</span><br><span class="line">        <span class="comment"># 获取学过该用户学习的其他所有课程</span></span><br><span class="line">        relate_courses = Course.objects.filter(id__in=course_ids).order_by(<span class="string">"-click_nums"</span>)</span><br><span class="line">        <span class="comment"># 获取课程下的所有课程资源</span></span><br><span class="line">        all_resources = CourseResource.objects.filter(course=course)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-video.html"</span>, &#123;<span class="string">"course"</span>: course, <span class="string">"all_resources"</span>:all_resources</span><br><span class="line">                                                     ,<span class="string">"relate_courses"</span>:relate_courses&#125;)</span><br></pre></td></tr></table></figure><ul><li>在course-video模板中进行打印该课的同学还学过的课程信息</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cp-tab-pannel js-comp-tab-pannel"</span> <span class="attr">data-pannel</span>=<span class="string">"course"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">style</span>=<span class="string">"display: block"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- img 200 x 112 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"other-list"</span>&gt;</span></span><br><span class="line">        &#123;% for relate_course in relate_courses %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"curr"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_detail' relate_course.id %&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; relate_course.image &#125;&#125;"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">alt</span>=<span class="string">"django与vuejs实战项目2"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"name autowrap"</span>&gt;</span>&#123;&#123; relate_course.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示该课的同学还学过的课程信息以及点击其他课程开始学习，查看该课的同学还学过的课程信息是否添加</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190511181526754.gif" alt></fancybox></p><h1 id="四丶公开课（课程播放）"><a href="#四丶公开课（课程播放）" class="headerlink" title="四丶公开课（课程播放）"></a>四丶公开课（课程播放）</h1><p><strong>1.</strong>上传视图到七牛云</p><ul><li>注册或登录七牛云，上传章节课程视频到存储空间，之前的<a href="https://blog.csdn.net/qq_41782425/article/details/86302733" target="_blank" rel="noopener">ihome-python</a>项目中有详细的七牛云教程</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512104038633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>需要注意的是如果上传到七牛云上的视频，播放时没有画面，那么需要将要上传的视频进行转码，转码格式为Web浏览器支持的视频格式，博主这里使用格式工厂将要上传到七牛云的视频转换成 WebM格式的视频</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512110418391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在七牛云内容管理列表中，点击视频右侧的操作栏，选择预览则可以检验该视频格式是否能正常播放，如下图所示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512110855545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>章节视频播放功能实现 </p><ul><li>分析视频播放页面，只有视频块为此页面独有的，页面其他部分与课程章节信息页和课程评论页一致</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512111120810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>模板继承</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512111624882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>定义视频播放类视图，与章节信息以及课程评论视图唯一不同的就是获取video对象，返回给前端模板页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VideoPlayView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""视频播放页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, video_id)</span>:</span></span><br><span class="line">        video = Video.objects.get(id=int(video_id))</span><br><span class="line">        course = video.lesson.course</span><br><span class="line">        <span class="comment"># 当用点击开始学习进入章节信息页后则学习人数</span></span><br><span class="line">        course.students += <span class="number">1</span></span><br><span class="line">        course.save()</span><br><span class="line">        <span class="comment"># 获取用户和课程的关联对象</span></span><br><span class="line">        user_courses = UserCourse.objects.filter(user=request.user, course=course)</span><br><span class="line">        <span class="comment"># 当不存在时，则将用户与课程进行关联后保存到数据库中</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user_courses:</span><br><span class="line">            user_course = UserCourse(user=request.user, course=course)</span><br><span class="line">            user_course.save()</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 根据课程对象在UserCourse表中获取该课程下的用户信息</span></span><br><span class="line">        user_courses = UserCourse.objects.filter(course=course)</span><br><span class="line">        <span class="comment"># 使用列表生成式 获取用户的id</span></span><br><span class="line">        user_ids = [user_course.user.id <span class="keyword">for</span> user_course <span class="keyword">in</span> user_courses]</span><br><span class="line">        <span class="comment"># 筛选此user_ids列表中的所有用户的课程数据</span></span><br><span class="line">        all_user_courses = UserCourse.objects.filter(user_id__in=user_ids)</span><br><span class="line">        <span class="comment"># 使用列表生成式 获取课程的id</span></span><br><span class="line">        course_ids = [user_course.course.id <span class="keyword">for</span> user_course <span class="keyword">in</span> all_user_courses]</span><br><span class="line">        <span class="comment"># 获取学过该用户学习的其他所有课程</span></span><br><span class="line">        relate_courses = Course.objects.filter(id__in=course_ids).order_by(<span class="string">"-click_nums"</span>)</span><br><span class="line">        <span class="comment"># 获取课程下的所有课程资源</span></span><br><span class="line">        all_resources = CourseResource.objects.filter(course=course)</span><br><span class="line">        <span class="comment"># 获取课程所有的评论数据</span></span><br><span class="line">        all_comments = CourseComments.objects.filter(course=course).order_by(<span class="string">"-add_time"</span>)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-play.html"</span>, &#123;<span class="string">"course"</span>: course, <span class="string">"all_resources"</span>: all_resources</span><br><span class="line">            , <span class="string">"all_comments"</span>: all_comments, <span class="string">"relate_courses"</span>: relate_courses, <span class="string">"video"</span>:video&#125;)</span><br></pre></td></tr></table></figure><ul><li>定义url路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^video/(?P&lt;video_id&gt;\d+)/$'</span>, VideoPlayView.as_view(), name=<span class="string">"video_play"</span>),  <span class="comment"># 视频播放页</span></span><br></pre></td></tr></table></figure><ul><li>回到七牛云空间管理，复制视频的外链地址，然后在xadmin后台中向章节视频url改成七牛云视频外链地址以及修改视频时长</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512112352755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在course-play视频播放模板中填充模板数据</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125;&#123;&#123; video.name &#125;&#125; - 慕学在线网&#123;% endblock %&#125;</span><br><span class="line">&lt;!-- ------------------------分割线------------------------ --&gt;</span><br><span class="line">&#123;% block custom_bread %&#125;</span><br><span class="line">    &lt;section&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"wp"</span>&gt;</span><br><span class="line">            &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"crumbs"</span>&gt;</span><br><span class="line">                &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'index' %&#125;"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">                &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_list' %&#125;"</span>&gt;</span>公开课程<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">                &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_detail' course.id %&#125;"</span>&gt;</span>&#123;&#123; course.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">                &lt;li&gt;&#123;&#123; video.name &#125;&#125;&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/u</span>l&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>section&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line">&lt;!-- ------------------------分割线------------------------ --&gt;</span><br><span class="line">&lt;div style=<span class="string">"width:1200px;height:675px; margin-left: 340px"</span>&gt;</span><br><span class="line">    &lt;video id=<span class="string">"example_video_1"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"video-js vjs-default-skin"</span> controls preload=<span class="string">"none"</span> width=<span class="string">"1200"</span></span><br><span class="line">           poster=<span class="string">"http://video-js.zencoder.com/oceans-clip.png"</span></span><br><span class="line">           data-setup=<span class="string">"&#123;&#125;"</span>&gt;</span><br><span class="line">        &lt;source src=<span class="string">"&#123;&#123; video.url &#125;&#125;"</span></span><br><span class="line">                type=<span class="string">'video/mp4'</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/video&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;!-- ------------------------分割线------------------------ --&gt;</span><br><span class="line">&lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"video"</span>&gt;</span><br><span class="line">    &#123;% <span class="keyword">for</span> video <span class="keyword">in</span> lesson.get_lesson_video %&#125;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">        &lt;a target=<span class="string">"_blank"</span> href=<span class="string">"&#123;% url 'course:video_play' video.id %&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"J-media-item studyvideo"</span>&gt;&#123;&#123; video.name &#125;&#125; (&#123;&#123; video.learn_times &#125;&#125;)</span><br><span class="line">            &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"study-state"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">        &lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>li&gt;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在course-video章节信息模板中修改章节视频链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"video"</span>&gt;</span></span><br><span class="line">    &#123;% for video in lesson.get_lesson_video %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:video_play' video.id %&#125;"</span> <span class="attr">class</span>=<span class="string">"J-media-item studyvideo"</span>&gt;</span>&#123;&#123; video.name &#125;&#125; (&#123;&#123; video.learn_times &#125;&#125;)</span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"study-state"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试章节视频播放功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512115002200.gif" alt></fancybox></p><h1 id="五丶授课教师（列表页）"><a href="#五丶授课教师（列表页）" class="headerlink" title="五丶授课教师（列表页）"></a>五丶授课教师（列表页）</h1><p><strong>1.</strong>显示授课教师列表页</p><ul><li>分析教师列表页面，与其他机构和公开课列表页面一致，顶部跟底部都一样</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512115727304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>模板继承</li></ul><p><img src="https://img-blog.csdnimg.cn/20190512121355589.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义类视图，因Teacher模型类时在organization应用models中创建的，所以还是在此应用views中进行定义</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TeacherListView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""教师列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"teachers-list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>在organization/urls中定义路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^teacher/list/$'</span>, TeacherListView.as_view(), name=<span class="string">"teacher_list"</span>),  <span class="comment">#课程讲师列表页</span></span><br></pre></td></tr></table></figure><ul><li>测试显示课程讲师页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512121653508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>动态显示出课程讲师列表页数据</p><ul><li>因课程讲师列表页讲师数据显示块包含教师年龄，所以需要在Teacher模型类中添加此字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">age = models.IntegerField(default=<span class="number">18</span>, verbose_name=<span class="string">u"年龄"</span>)</span><br></pre></td></tr></table></figure><ul><li>生成对应数据表字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512124246242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>定义类视图，获取所有的教师信息以及教师数量并传递给前端模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TeacherListView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""教师列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="comment"># 获取所有的课程教师</span></span><br><span class="line">        all_teachers = Teacher.objects.all()</span><br><span class="line">        <span class="comment"># 获取教师个数</span></span><br><span class="line">        teacher_nums = all_teachers.count()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"teachers-list.html"</span>, &#123;<span class="string">"all_teachers"</span>:all_teachers, <span class="string">"teacher_nums"</span>:teacher_nums&#125;)</span><br></pre></td></tr></table></figure><ul><li>定义路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^teacher/list/$'</span>, TeacherListView.as_view(), name=<span class="string">"teacher_list"</span>),  <span class="comment">#课程讲师列表页</span></span><br></pre></td></tr></table></figure><ul><li>在teacher-list模板文件中打印动态数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fr butler-num"</span>&gt;</span>共<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; teacher_nums &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>人&amp;nbsp;&amp;nbsp;&amp;nbsp;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;%  for teacher in all_teachers %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"des"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/org/teacher/detail/1/"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"picpic"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> <span class="attr">class</span>=<span class="string">"scrollLoading"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; teacher.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fr btn2 bdsharebuttonbox"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">data-text</span>=<span class="string">"授课教师-奥巴马-慕学在线"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">data-desc</span>=<span class="string">"我在#慕课网#发现了教师“奥巴马”，对学习中的小伙伴很有帮助，一起来看看吧。"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">data-comment</span>=<span class="string">"奥巴马金牌讲师，从业年限：5年"</span></span></span><br><span class="line"><span class="tag">            &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>分享<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"bds_more"</span> <span class="attr">data-cmd</span>=<span class="string">"more"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/org/teacher/detail/1/"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; teacher.name &#125;&#125;<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"key picbig"</span>&gt;</span>金牌讲师<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"cont"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>工作年限：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.work_years &#125;&#125;年<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>工作职位：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.work_position &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>就职公司：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.work_company &#125;&#125;&amp;nbsp;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>年龄：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.age &#125;&#125;岁<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>教学特点：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.points &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"buy buyservice"</span> <span class="attr">href</span>=<span class="string">"/org/teacher/detail/1/"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span>查看<span class="tag">&lt;<span class="name">br</span>/&gt;</span>详情<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li>测试显示课程讲师列表页动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512124848397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>讲师列表页数据分页功能实现</p><ul><li>首先在视图中对获取的教师数据进行分页数据处理</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TeacherListView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""教师列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="comment"># 获取所有的课程教师</span></span><br><span class="line">        all_teachers = Teacher.objects.all()</span><br><span class="line">        <span class="comment"># 获取教师个数</span></span><br><span class="line">        teacher_nums = all_teachers.count()</span><br><span class="line">        <span class="comment"># 分页处理</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            page = request.GET.get(<span class="string">'page'</span>, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> PageNotAnInteger:</span><br><span class="line">            page = <span class="number">1</span></span><br><span class="line">        p = Paginator(all_teachers, <span class="number">5</span>, request=request)</span><br><span class="line">        teachers = p.page(page)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"teachers-list.html"</span>, &#123;<span class="string">"all_teachers"</span>:teachers, <span class="string">"teacher_nums"</span>:teacher_nums&#125;)</span><br></pre></td></tr></table></figure><ul><li>在teachers-list模板中，填充分页数据块，这个代码跟之前机构以及公开课一样，就不细说了</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pageturn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagelist"</span>&gt;</span></span><br><span class="line">        &#123;% if all_teachers.has_previous %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"long"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; all_teachers.previous_page_number.querystring &#125;&#125;"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">        &#123;% for page in all_teachers.pages %&#125;</span><br><span class="line">            &#123;% if page %&#125;</span><br><span class="line">                &#123;% ifequal page all_teachers.number %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; page.querystring &#125;&#125;"</span>&gt;</span>&#123;&#123; page &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                &#123;% else %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; page.querystring &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"page"</span>&gt;</span>&#123;&#123; page &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                &#123;% endifequal %&#125;</span><br><span class="line">            &#123;% else %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"none"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        &#123;% if all_teachers.has_next %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"long"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; all_teachers.next_page_number.querystring &#125;&#125;"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试讲师列表页分页功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512131607230.gif" alt></fancybox></p><p><strong>4.</strong>课程讲师排序功能实现</p><ul><li>在视图中获取sort参数，根据参数判断数据库排序条件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TeacherListView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""教师列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="comment"># 获取所有的课程教师</span></span><br><span class="line">        all_teachers = Teacher.objects.all()</span><br><span class="line">        <span class="comment"># 获取教师个数</span></span><br><span class="line">        teacher_nums = all_teachers.count()</span><br><span class="line">        sort = request.GET.get(<span class="string">"sort"</span>, <span class="string">""</span>)</span><br><span class="line">        <span class="comment"># 讲师排序按照点击量</span></span><br><span class="line">        <span class="keyword">if</span> sort:</span><br><span class="line">            <span class="keyword">if</span> sort == <span class="string">"hot"</span>:</span><br><span class="line">                all_teachers = all_teachers.order_by(<span class="string">"-click_nums"</span>)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 分页处理</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            page = request.GET.get(<span class="string">'page'</span>, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> PageNotAnInteger:</span><br><span class="line">            page = <span class="number">1</span></span><br><span class="line">        p = Paginator(all_teachers, <span class="number">5</span>, request=request)</span><br><span class="line">        teachers = p.page(page)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"teachers-list.html"</span>, &#123;<span class="string">"all_teachers"</span>:teachers, <span class="string">"teacher_nums"</span>:teacher_nums, <span class="string">"sort"</span>:sort&#125;)</span><br></pre></td></tr></table></figure><ul><li>在模板中需要定义排序条件全部以及人气的url地址并判断点击激活按钮class样式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"fl tab_header"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if not sort %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?sort="</span>&gt;</span>全部<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if sort == 'hot' %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?sort=hot"</span>&gt;</span>人气 &amp;#8595;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>需要说明现在的讲师点击量都为0，所以为了演示出效果博主，这里在mysql数据库中对某些教师进行点击量的修改操作</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512132539559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试排序功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512132824879.gif" alt></fancybox></p><p><strong>5.</strong>讲师排行榜动态数据显示</p><p><strong>说明</strong>：讲师排行榜跟页面人气排行逻辑一样，唯一区别就是只显示前3个</p><ul><li>在视图中获取人气排行前三的讲师，并返回给模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 讲师排行榜</span></span><br><span class="line">sorted_teachers = all_teachers.order_by(<span class="string">"-click_nums"</span>)[:<span class="number">3</span>]</span><br></pre></td></tr></table></figure><ul><li>在模板中打印动态数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right layout"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head"</span>&gt;</span>讲师排行榜<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% for sorted_teacher in sorted_teachers %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"des"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"num fl"</span>&gt;</span>&#123;&#123; forloop.counter &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/diary/hk_detail/6/"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"50"</span> <span class="attr">height</span>=<span class="string">"50"</span> <span class="attr">class</span>=<span class="string">"scrollLoading"</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; sorted_teacher.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/diary/hk_detail/6/"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; sorted_teacher.name &#125;&#125;"</span>&gt;</span>&#123;&#123; sorted_teacher.name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>工作年限：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; sorted_teacher.work_years &#125;&#125;年<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面，成功显示讲师排行动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512134209454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="六丶授课教师（详情页）"><a href="#六丶授课教师（详情页）" class="headerlink" title="六丶授课教师（详情页）"></a>六丶授课教师（详情页）</h1><p><strong>1.</strong>显示授课教师详情页</p><ul><li>分析教师详情页，跟列表也一样顶部和底部是共有的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512135039702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>模板继承</li></ul><p><img src="https://img-blog.csdnimg.cn/20190512135847896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义类视图get方法用于显示讲师详情页，该视图需接收教师id，用于后面查询对应的教师详情信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TeacherDetailView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""教师详情页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, teacher_id)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"teacher-detail.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>定义url路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^teacher/detail/(?P&lt;teacher_id&gt;\d+)/$'</span>, TeacherDetailView.as_view(), name=<span class="string">"teacher_detail"</span>),  <span class="comment">#课程讲师详情页</span></span><br></pre></td></tr></table></figure><ul><li>在teachers-list模板中需要修改讲师详情页的链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:teacher_detail' teacher.id %&#125;"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示讲师详情页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512140439918.gif" alt></fancybox></p><p><strong>2.</strong>动态显示出讲师详情页数据</p><ul><li>在视图中获取用户点击的讲师id和该讲师下的所有课程，获取讲师排行榜的数据，全部传递给前端模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TeacherDetailView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""教师详情页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, teacher_id)</span>:</span></span><br><span class="line">        <span class="comment"># 获取点击的讲师信息</span></span><br><span class="line">        teacher = Teacher.objects.get(id=int(teacher_id))</span><br><span class="line">        <span class="comment"># 获取该讲师下的所有课程</span></span><br><span class="line">        all_courses = Course.objects.filter(teacher=teacher)</span><br><span class="line">        <span class="comment"># 讲师排行榜</span></span><br><span class="line">        sorted_teachers = Teacher.objects.all().order_by(<span class="string">"-click_nums"</span>)[:<span class="number">3</span>]</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"teacher-detail.html"</span>, &#123;<span class="string">"teacher"</span>:teacher, <span class="string">"all_courses"</span>:all_courses,</span><br><span class="line">                                                       <span class="string">"sorted_teachers"</span>:sorted_teachers&#125;)</span><br></pre></td></tr></table></figure><ul><li>在模板中进行动态数据打印，数据块内容比较多，但都很简单</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ------------------------讲师信息模块------------------------ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/diary/hk_detail/10/"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; teacher.name &#125;&#125;<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"key picbig"</span>&gt;</span>金牌讲师<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"cont"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>工作年限：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.work_years &#125;&#125;年<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>就职公司：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.work_company &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>工作职位：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.work_position &#125;&#125;&amp;nbsp;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>教学特点：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.points &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ------------------------全部课程模块------------------------ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"companycenter"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"group_list brief"</span>&gt;</span></span><br><span class="line">        &#123;% for teacher_course in all_courses %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"module1_5 box"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_detail' teacher_course.id %&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"214"</span> <span class="attr">height</span>=<span class="string">"190"</span> <span class="attr">class</span>=<span class="string">"scrollLoading"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; teacher_course.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"des"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_detail' teacher_course.id %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; teacher_course.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>时长：<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; teacher_course.learn_times &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span>学习人数：&#123;&#123; teacher_course.students &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bottom"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>&#123;&#123; teacher_course.course_org.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star fr  notlogin"</span> <span class="attr">data-favid</span>=<span class="string">"15"</span>&gt;</span>&#123;&#123; teacher_course.fav_nums &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ------------------------机构详情模块------------------------ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"butler_detail_list"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right butler-company-box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; teacher.org.name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>知名高校，权威教学<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"org-detail-homepage.html"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"150"</span> <span class="attr">height</span>=<span class="string">"80"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; teacher.org.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"org-detail-homepage.html"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span>&#123;&#123; teacher.org.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"center tell"</span>&gt;</span>地址：&#123;&#123; teacher.org.address &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">id</span>=<span class="string">"jsRightBtn"</span>&gt;</span>收藏<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- ------------------------讲师排行榜模块------------------------ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right layout"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head"</span>&gt;</span>讲师排行榜<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% for hot_teacher in sorted_teachers %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"des"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"num fl"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:teacher_detail' hot_teacher.id%&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"50"</span> <span class="attr">height</span>=<span class="string">"50"</span> <span class="attr">class</span>=<span class="string">"scrollLoading"</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; hot_teacher.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:teacher_detail' hot_teacher.id%&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; hot_teacher.name &#125;&#125;"</span>&gt;</span>&#123;&#123; hot_teacher.name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>工作年限：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; hot_teacher.work_years &#125;&#125;年<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>需要在teachers-list模板中将所有涉及跳转到讲师详情页的地址进行修改</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:teacher_detail' sorted_teacher.id %&#125;"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示讲师详情页动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512150616601.gif" alt></fancybox></p><p><strong>3.</strong>讲师收藏以及机构收藏功能实现</p><p><strong>说明</strong>：讲师详情页面的收藏功能与公开课课程详情以及机构详情中的收藏功能都是一样的逻辑，都是调用AddFavView类视图接口完成数据库表userfavorite的数据添加以及删除（添加收藏以及取消收藏）的操作</p><ul><li>在视图中添加前面公开课课程详情视图中的用户收藏逻辑代码即可，修改其中的fav_id以及fav_type即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">class TeacherDetailView(View):</span><br><span class="line">    """教师详情页"""</span><br><span class="line">    def get(self, request, teacher_id):</span><br><span class="line">        # 获取点击的讲师信息</span><br><span class="line">        teacher = Teacher.objects.get(id=int(teacher_id))</span><br><span class="line">        # 获取该讲师下的所有课程</span><br><span class="line">        all_courses = Course.objects.filter(teacher=teacher)</span><br><span class="line">        # 设置默认为未收藏状态</span><br><span class="line">        has_fav_teacher = False</span><br><span class="line">        has_fav_org = False</span><br><span class="line">        # 当用户为登录状态才能根据条件查询该用户收藏数据</span><br><span class="line">        if request.user.is_authenticated():</span><br><span class="line">            # 当用户已收藏讲师时，即has_fav_course = True ，需注意这里的fav_type = 3 这个条件是固定的因此为讲师收藏</span><br><span class="line">            if UserFavorite.objects.filter(user=request.user, fav_id=int(teacher.id), fav_type=3):</span><br><span class="line">                has_fav_teacher = True</span><br><span class="line">            # 当用户已收藏机构时，即has_fav_org = True ，需注意这里的fav_type = 2 这个条件是固定的因此为课程机构收藏</span><br><span class="line">            if UserFavorite.objects.filter(user=request.user, fav_id=int(teacher.org.id), fav_type=2):</span><br><span class="line">                has_fav_org = True</span><br><span class="line">        # 讲师排行榜</span><br><span class="line">        sorted_teachers = Teacher.objects.all().order_by("-click_nums")[:3]</span><br><span class="line">        return render(request, "teacher-detail.html", &#123;"teacher":teacher, "all_courses":all_courses,</span><br><span class="line">                                                       "sorted_teachers":sorted_teachers,</span><br><span class="line">                                                       "has_fav_teacher":has_fav_teacher,</span><br><span class="line">                                                       "has_fav_org":has_fav_org&#125;)</span><br></pre></td></tr></table></figure><ul><li>在模板文件数据块custom_js中进行js代码编写，实现ajax 异步请求调用后端接口完成收藏以及取消收藏功能</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block custom_js %&#125;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="comment">//收藏分享</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">add_fav</span>(<span class="params">current_elem, fav_id, fav_type</span>) </span>&#123;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                cache: <span class="literal">false</span>,</span><br><span class="line">                type: <span class="string">"POST"</span>,</span><br><span class="line">                url: <span class="string">"/org/add_fav/"</span>,</span><br><span class="line">                data: &#123;<span class="string">'fav_id'</span>: fav_id, <span class="string">'fav_type'</span>: fav_type&#125;,</span><br><span class="line">                <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">                beforeSend: <span class="function"><span class="keyword">function</span> (<span class="params">xhr, settings</span>) </span>&#123;</span><br><span class="line">                    xhr.setRequestHeader(<span class="string">"X-CSRFToken"</span>, <span class="string">"&#123;&#123; csrf_token &#125;&#125;"</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (data.status == <span class="string">'fail'</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (data.msg == <span class="string">'用户未登录'</span>) &#123;</span><br><span class="line">                            <span class="built_in">window</span>.location.href = <span class="string">"login.html"</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            alert(data.msg)</span><br><span class="line">                        &#125;</span><br><span class="line"> </span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.status == <span class="string">'success'</span>) &#123;</span><br><span class="line">                        current_elem.text(data.msg)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        $(<span class="string">'#jsLeftBtn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            add_fav($(this), &#123;&#123; teacher.id &#125;&#125;, 3);  &#123;#讲师#&#125;</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">        $(<span class="string">'#jsRightBtn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            add_fav($(this), &#123;&#123; teacher.org.id &#125;&#125;, 2);  &#123;#课程机构#&#125;</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endblock %&#125;</span></span><br></pre></td></tr></table></figure><ul><li>在模板中还需要判断页面收藏功能内容显示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl btn1 collectionbtn"</span> <span class="attr">id</span>=<span class="string">"jsLeftBtn"</span>&gt;</span></span><br><span class="line">     &#123;% if has_fav_teacher %&#125;已收藏&#123;% else %&#125;收藏&#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- --------------------------------------------------------- --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">id</span>=<span class="string">"jsRightBtn"</span>&gt;</span>&#123;% if has_fav_org %&#125;已收藏&#123;% else %&#125;收藏&#123;% endif %&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试讲师详情页面中讲师以及机构收藏功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512153538528.gif" alt></fancybox></p><p><strong>4.</strong>处理菜单块跳转显示Bug</p><p><strong>说明</strong>：相比认真仔细看完的同学会发现，当不管点击首页还是公开课或者是授课教师时，菜单栏一直显示激活为授课机构，这样肯定是大大的错误，如下图所示，点击授课讲师却显示授课机构为激活状态，正确应该是授课讲师</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512155142531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在父模板base.html中需要对这四个菜单块所在的li标签active激活状态进行判断；这里必须要说明一下，根据请求地址来精确判断当前用户点击的是哪个菜单块，request.path|slice 管道后面的slice则是精确判断请求地址为几个字符长度</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wp"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if request.path == '/' %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'index' %&#125;"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if request.path|slice:'7' == '/course' %&#125;active&#123;% endif %&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'course:course_list' %&#125;"</span>&gt;</span></span><br><span class="line">                公开课<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"hot"</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/nav_hot.png' %&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if request.path|slice:'12' == '/org/teacher' %&#125;active&#123;% endif %&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:teacher_list' %&#125;"</span>&gt;</span>授课教师<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if request.path|slice:'9' == '/org/list' %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:org_list' %&#125;"</span>&gt;</span>授课机构<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试菜单块点击激活是否正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190512160402753.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/90081752" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/90081752</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目于之在线教育平台网站的实战开发（三）</title>
      <link href="/2019/11/14/Django%E9%A1%B9%E7%9B%AE%E4%BA%8E%E4%B9%8B%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2019/11/14/Django%E9%A1%B9%E7%9B%AE%E4%BA%8E%E4%B9%8B%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶授课机构（列表页）"><span style="color:#4ea1db">一丶授课机构（列表页）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶授课机构（用户咨询）"><span style="color:#4ea1db">二丶授课机构（用户咨询）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶授课机构（详情页） "><span style="color:#4ea1db">三丶授课机构（详情页） </span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶授课机构（用户收藏） "><span style="color:#4ea1db">四丶授课机构（用户收藏）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶公开课（列表页）"><span style="color:#4ea1db">五丶公开课（列表页）</span></a></li><a id="more"></a><h1 id="一丶授课机构（列表页）"><a href="#一丶授课机构（列表页）" class="headerlink" title="一丶授课机构（列表页）"></a>一丶授课机构（列表页）</h1><p><strong>1.</strong>模板继承</p><ul><li>在授课机构列表页（org-list.html）与其他页面除了内容块不同，其他部分都是共用的，如页面头部与底部（这个不用多说django模板继承基础知识点）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507102752366.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507102916139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在templates模板目录下创建base.html父模板文件，然后将static目录下的org-list.html模板文件拷贝到templates目录下，并且将org-list模板内容剪切到base模板中，在base父模板文件中首先需要修改资源文件的加载方式这不用多说，然后需要对多个页面不一致的地方在父模板中进行挖坑处理（之前<a href="https://blog.csdn.net/qq_41782425/article/details/88842059" target="_blank" rel="noopener">Django 电商项目</a>已经详细说明过，这里简单说明下）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507110105808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在org-list模板文件中只需要继承父模板，重写父模板中的授课机构独有的数据块即可</li></ul><p><img src="https://img-blog.csdnimg.cn/20190507110223822.png" alt></p><p><strong>2.</strong>显示授课机构列表页面</p><ul><li>在organization/views中定义类视图get方法，用于显示授课机构列表页</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrgView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程机构列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"org-list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>在根级urls中定义路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^org_list/$'</span>, OrgView.as_view(), name=<span class="string">"org_list"</span>),  <span class="comment"># 课程机构列表页</span></span><br></pre></td></tr></table></figure><ul><li>在index模板文件中修改授课机构链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org_list' %&#125;"</span>&gt;</span>授课机构<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>运行项目，访问<a href="http://127.0.0.1:8000/org_list/" target="_blank" rel="noopener">http://127.0.0.1:8000/org_list/</a>页面则，显示授课机构列表页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507104416866.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>添加页面数据</p><ul><li>在xadmin后台管理系统中，在机构管理中添加城市信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507111552753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在xadmin后台管理系统中，在机构管理中添加授课机构信息，其中涉及到上传文件，所以需要定义保存文件路径</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507112038148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>上传资源文件配置，首先在项目根目录下创建medio目录，然后在settings中添加目录路径</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 资源文件配置</span><br><span class="line">MEDIA_URL = &apos;/media/&apos;</span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, &apos;media&apos;)</span><br></pre></td></tr></table></figure><ul><li>回到xadmin后台管理系统进行添加课程机构信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507113423324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看项目medio目录下已经成功创建生成上传的Logo图片文件，即在models中定义的image字段，在xadmin后台进行保存时，则会在settings配置的资源文件配置中指定的medio目录下创建当前的年/月的目录并将上传成功的图片文件放在该目录下（<font style="color:red">image = models.ImageField(upload_to=”org/%Y/%m”, verbose_name=u”logo”, max_length=100)</font>）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190507113602375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>博主这边直接添加了以下几所大学</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019050712074544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>增加数据表机构类别字段</p><ul><li>之前在定义CourseOrg模型类时，未添加机构类别字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507121348538.png" alt></fancybox></p><ul><li>即在CourseOrg模型类中增加此字段（该字端数据为固定数据）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">category = models.CharField(default=<span class="string">"pxjg"</span>, verbose_name=<span class="string">u"机构类别"</span>, max_length=<span class="number">20</span>, choices=((<span class="string">"pxjg"</span>,<span class="string">"培训机构"</span>),(<span class="string">"gr"</span>,<span class="string">"个人"</span>),(<span class="string">"gx"</span>,<span class="string">"高校"</span>)))</span><br></pre></td></tr></table></figure><ul><li>紧接着生成对应数据表字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019050712171477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看数据表结构</li></ul><p><img src="https://img-blog.csdnimg.cn/20190507121858206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>5.</strong>加载页面动态数据</p><ul><li>在类视图get方法中获取数据表数据，并传递给模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrgView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程机构列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        all_orgs = CourseOrg.objects.all()  <span class="comment"># 课程机构</span></span><br><span class="line">        org_nums = all_orgs.count()  <span class="comment"># 机构数量</span></span><br><span class="line">        all_citys = CityDict.objects.all()  <span class="comment"># 城市</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"org-list.html"</span>, &#123;<span class="string">"all_orgs"</span>:all_orgs, <span class="string">"org_nums"</span>:org_nums, <span class="string">"all_citys"</span>:all_citys&#125;)</span><br></pre></td></tr></table></figure><ul><li>在org-list模板文件中进行打印目前数据库中获取的模板信息，具体如下，为了让大家明白模板中显示内容，博主专门进行注释</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 城市信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cont"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?ct="</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"active2"</span>&gt;</span>全部<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    &#123;% for city in all_citys %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?city=1&amp;ct="</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span>&#123;&#123; city.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 机构数量 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"all"</span>&gt;</span>共<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; org_nums &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>家<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 机构列表 --&gt;</span></span><br><span class="line">&#123;% for org in all_orgs %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"des difdes"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"org-detail-homepage.html"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">height</span>=<span class="string">"120"</span> <span class="attr">class</span>=<span class="string">"scrollLoading"</span> <span class="attr">data-url</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; org.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"org-detail-homepage.html"</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; org.name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic fl"</span>&gt;</span></span><br><span class="line">                         <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/authentication.png' %&#125;"</span>/&gt;</span></span><br><span class="line"> </span><br><span class="line">                         <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/gold.png' %&#125;"</span>/&gt;</span></span><br><span class="line">                 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"cont"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"first"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"pic9"</span>&gt;</span>课程数：<span class="tag">&lt;<span class="name">span</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"c7"</span>&gt;</span>学习人数：<span class="tag">&lt;<span class="name">span</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"c8"</span> <span class="attr">style</span>=<span class="string">"padding-left:18px;"</span>&gt;</span>&#123;&#123; org.address &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"pic10"</span> <span class="attr">style</span>=<span class="string">"padding-left:18px;"</span>&gt;</span>经典课程：</span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/diary/19/"</span>&gt;</span>c语言基础入门<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/diary/16/"</span>&gt;</span>数据库基础<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"buy start_groupbuy jsShowPerfect2"</span> <span class="attr">data-id</span>=<span class="string">"22"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span>联系<span class="tag">&lt;<span class="name">br</span>/&gt;</span>服务<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">&#123;%  endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li>刷新页面成功显示模板中打印的动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507135839444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>6.</strong>实现页面分页功能</p><ul><li>安装第三方分页库<a href="https://github.com/jamespacileo/django-pure-pagination" target="_blank" rel="noopener">django-pure-pagination</a>，这个库在是Django本身的Paginator上进行封装的，而之前博主写的<a href="https://blog.csdn.net/qq_41782425/article/details/89015816" target="_blank" rel="noopener">Django电商项目</a>中则使用的是Django本身提供的Paginator进行分页的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507140230967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>添加到settings apps应用中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">    ...</span><br><span class="line">    &apos;pure_pagination&apos;,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>在视图中进行分页数据处理，之后将分页处理后的数据对象赋值给all_orgs变量，传递给模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrgView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程机构列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        all_orgs = CourseOrg.objects.all()  <span class="comment"># 课程机构</span></span><br><span class="line">        org_nums = all_orgs.count()  <span class="comment"># 机构数量</span></span><br><span class="line">        all_citys = CityDict.objects.all()  <span class="comment"># 城市</span></span><br><span class="line">        <span class="comment"># 分页处理</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            page = request.GET.get(<span class="string">'page'</span>, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> PageNotAnInteger:</span><br><span class="line">            page = <span class="number">1</span></span><br><span class="line">        p = Paginator(all_orgs, <span class="number">5</span>, request=request)</span><br><span class="line">        orgs = p.page(page)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"org-list.html"</span>, &#123;<span class="string">"all_orgs"</span>:orgs, <span class="string">"org_nums"</span>:org_nums, <span class="string">"all_citys"</span>:all_citys&#125;)</span><br></pre></td></tr></table></figure><ul><li>在模板文件中，需要修改机构列表数据遍历对象，因为视图传递过来的all_orgs变量的值为分页数据对象，需要调用object_list方法，获取数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for org in all_orgs.object_list %&#125;</span><br></pre></td></tr></table></figure><ul><li>在模板中打印显示分页信息，看不懂的话可根据django-pure-pagination上的文档进行参考</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pageturn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagelist"</span>&gt;</span></span><br><span class="line">        &#123;% if all_orgs.has_previous %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"long"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; all_orgs.previous_page_number.querystring &#125;&#125;"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">        &#123;% for page in all_orgs.pages %&#125;</span><br><span class="line">            &#123;% if page %&#125;</span><br><span class="line">                &#123;% ifequal page all_orgs.number %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; page.querystring &#125;&#125;"</span>&gt;</span>&#123;&#123; page &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                &#123;% else %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; page.querystring &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"page"</span>&gt;</span>&#123;&#123; page &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                &#123;% endifequal %&#125;</span><br><span class="line">            &#123;% else %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"none"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        &#123;% if all_orgs.has_next %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"long"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; all_orgs.next_page_number.querystring &#125;&#125;"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试授课机构列表页数据分页显示功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507150215370.gif" alt></fancybox></p><p><strong>7.</strong>页面数据筛选功能</p><ul><li>首选为了方便演示测试，博主这里打算添加各种机构类别的学校数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507163237460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在视图中进行地区以及机构内别进行条件筛选逻辑处理，逻辑很简单都是通过获取全部的课程all_orgs，在通过获取的所有授课分别根据城市以及机构条件进行数据筛选操作，最后需要将获取到的请求地址参数传递到模板文件中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrgView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程机构列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        all_orgs = CourseOrg.objects.all()  <span class="comment"># 课程机构</span></span><br><span class="line"> </span><br><span class="line">        all_citys = CityDict.objects.all()  <span class="comment"># 城市</span></span><br><span class="line">        <span class="comment"># 从请求地址中获取city_id</span></span><br><span class="line">        city_id = request.GET.get(<span class="string">"city"</span>, <span class="string">""</span>)</span><br><span class="line">        <span class="comment"># 城市筛选</span></span><br><span class="line">        <span class="keyword">if</span> city_id:</span><br><span class="line">            all_orgs = all_orgs.filter(city_id=int(city_id))  <span class="comment"># 需要注意的是models中并没有定义city_id字段，但数据库显示为此字段</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 机构类别筛选</span></span><br><span class="line">        category = request.GET.get(<span class="string">"ct"</span>, <span class="string">""</span>)</span><br><span class="line">        <span class="keyword">if</span> category:</span><br><span class="line">            <span class="comment"># 将过滤查询后的结果赋值给all_orgs变量，在分页处理逻辑中根据此变量的数据进行分页处理，如果category的值不存在，就按照CourseOrg数据表的所有数据进行分页处理，此说明针对逻辑理解力差的朋友</span></span><br><span class="line">            all_orgs = all_orgs.filter(category=category)</span><br><span class="line">        </span><br><span class="line">        org_nums = all_orgs.count()  <span class="comment"># 机构数量</span></span><br><span class="line">        <span class="comment"># 分页处理</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            page = request.GET.get(<span class="string">'page'</span>, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> PageNotAnInteger:</span><br><span class="line">            page = <span class="number">1</span></span><br><span class="line">        p = Paginator(all_orgs, <span class="number">5</span>, request=request)</span><br><span class="line">        orgs = p.page(page)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"org-list.html"</span>, &#123;<span class="string">"all_orgs"</span>:orgs, <span class="string">"org_nums"</span>:org_nums, <span class="string">"all_citys"</span>:all_citys</span><br><span class="line">                                                 , <span class="string">"city_id"</span>:city_id, <span class="string">"category"</span>:category&#125;)</span><br></pre></td></tr></table></figure><ul><li>在模板文件中首先根据后端传递过来的参数是否存在来判断筛选条件中按钮是否为激活状态，请求地址都为?xxxx，表示当前地址上添加筛选条件参数，即调用同一视图OrgView</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>机构类别<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cont"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?city="</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"&#123;% if not category %&#125;active2&#123;% endif %&#125;"</span>&gt;</span>全部<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?ct=pxjg"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"&#123;% if category == 'pxjg' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span>培训机构<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?ct=gx"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"&#123;% if category == 'gx' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span>高校<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?ct=gr"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"&#123;% if category == 'gr' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span>个人<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>所在地区<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"more"</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cont"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?city="</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"&#123;% if not city_id %&#125;active2&#123;% endif %&#125;"</span>&gt;</span>全部<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &#123;% for city in all_citys %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?city=&#123;&#123; city.id &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"&#123;% if city.id|stringformat:"</span><span class="attr">i</span>" == <span class="string">city_id</span> %&#125;<span class="attr">active2</span>&#123;% <span class="attr">endif</span> %&#125;"&gt;</span>&#123;&#123; city.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试授课机构列表页条件筛选功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507171644393.gif" alt></fancybox></p><ul><li><p>问题：<font style="color:red">当筛选条件为城市时，再点击机构类别时，则城市筛选条件会清空，反之当筛选条件为机构类别时，再点击城市，则机构类别变为全部；导致这种情况的原因是筛选条件的链接地址，不管点击机构类别还是城市时，都只会按照各自定义的链接进行跳转，即刷新页面，而导致重置之前选中的筛选条件</font></p></li><li><p>解决方法：<font style="color:red">修改模板中筛选条件的url地址，这里稍微比较绕，给机构类别筛选条件url地址添加城市筛选条件地址，也就是city=city_id，反之城市筛选条件url地址也添加机构类别的筛选条件地址，这样做的逻辑为当点击机构类别筛选条件时附带city的参数，在此条件下再选择城市条件时，则会给当前地址city参数赋值，反之道理也一样</font>，例如：<a href="http://127.0.0.1:8000/org_list/?city=2&ct=pxjg" target="_blank" rel="noopener">http://127.0.0.1:8000/org_list/?city=2&amp;ct=pxjg</a></p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>机构类别<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cont"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?city=&#123;&#123; city_id &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"&#123;% if not category %&#125;active2&#123;% endif %&#125;"</span>&gt;</span>全部<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?ct=pxjg&amp;city=&#123;&#123; city_id &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"&#123;% if category == 'pxjg' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span>培训机构<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?ct=gx&amp;city=&#123;&#123; city_id &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"&#123;% if category == 'gx' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span>高校<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?ct=gr&amp;city=&#123;&#123; city_id &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"&#123;% if category == 'gr' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span>个人<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>所在地区<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"more"</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cont"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?ct=&#123;&#123; category &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"&#123;% if not city_id %&#125;active2&#123;% endif %&#125;"</span>&gt;</span>全部<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &#123;% for city in all_citys %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?city=&#123;&#123; city.id &#125;&#125;&amp;ct=&#123;&#123; category &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"&#123;% if city.id|stringformat:"</span><span class="attr">i</span>" == <span class="string">city_id</span> %&#125;<span class="attr">active2</span>&#123;% <span class="attr">endif</span> %&#125;"&gt;</span>&#123;&#123; city.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>再次测试授课机构列表页条件筛选功能（注意浏览器地址变化）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507174450410.gif" alt></fancybox></p><p><strong>8.</strong>授课机构排名</p><ul><li>在类视图get方法中通过模型表点击量字段进行倒序排序并且只取前三个授课机构信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 授课机构排名</span></span><br><span class="line">hot_orgs = all_orgs.order_by(<span class="string">"-click_nums"</span>)[:<span class="number">3</span>]</span><br></pre></td></tr></table></figure><ul><li>在模板中找到授课机构排名，进行数据打印显示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right companyrank layout"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head"</span>&gt;</span>授课机构排名<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% for hot_org in hot_orgs %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"des"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span> <span class="attr">class</span>=<span class="string">"num fl"</span>&gt;</span>&#123;&#123; forloop.counter &#125;&#125;<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/company/2/"</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; hot_org.name &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; hot_org.address &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示授课机构排名</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507182018472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>9.</strong>授课机构排序</p><ul><li>分析：从授课机构列表中可以看到排序按照学习人数和课程数这两个条件进行排序的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507182429877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>因为当初定义数据模型类时，未定义这两个字段，所以需要在models进行添加</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">students = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习人数"</span>)</span><br><span class="line">course_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"课程数"</span>)</span><br></pre></td></tr></table></figure><ul><li>生成对应数据表字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507182755667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在视图中获取数据库中授课机构所有信息，并对获取的信息按照学习人数和课程数进行排序（逻辑与筛选功能一致）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 授课机构排序</span></span><br><span class="line">sort = request.GET.get(<span class="string">"sort"</span>, <span class="string">""</span>)</span><br><span class="line"><span class="keyword">if</span> sort:</span><br><span class="line">    <span class="keyword">if</span> sort == <span class="string">"students"</span>:</span><br><span class="line">        all_orgs = all_orgs.order_by(<span class="string">"-students"</span>)</span><br><span class="line">    <span class="keyword">elif</span> sort == <span class="string">"courses"</span>:</span><br><span class="line">        all_orgs = all_orgs.order_by(<span class="string">"-course_nums"</span>)</span><br></pre></td></tr></table></figure><ul><li>回到模板文件中进行判断显示激活active样式，以及定义排序条件url链接地址，添加筛选条件参数（逻辑与筛选功能一致，不再重述）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"tab_header"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if not sort %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?ct=&#123;&#123; category &#125;&#125;&amp;city=&#123;&#123; city_id &#125;&#125;"</span>&gt;</span>全部<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if sort == 'students' %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?sort=students&amp;ct=&#123;&#123; category &#125;&#125;&amp;city=&#123;&#123; city_id &#125;&#125;"</span>&gt;</span>学习人数 &amp;#8595;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if sort == 'courses' %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?sort=courses&amp;ct=&#123;&#123; category &#125;&#125;&amp;city=&#123;&#123; city_id &#125;&#125;"</span>&gt;</span>课程数 &amp;#8595;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试授课机构排序功能（注意浏览器地址变化）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507184824603.gif" alt></fancybox></p><h1 id="二丶授课机构（用户咨询）"><a href="#二丶授课机构（用户咨询）" class="headerlink" title="二丶授课机构（用户咨询）"></a>二丶授课机构（用户咨询）</h1><p><strong>1.</strong><font style="color:red">使用modelform对表单进行验证和保存</font>来完成咨询功能</p><ul><li>在授课机构列表页中如下图所示有个立即咨询功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507194849121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>立即咨询功能<font style="color:red">说白了就是表单数据的提交，设计到表单验证操作，按照之前users应用中表单的操作，定义表单类继承与forms.Form来完成表单的验证，但是这样定义表单的验证缺点比较多，例如：与模型类中的代码重复性高，并且此方式并不能保存表单的数据，所以在实现咨询功能时，定义的表单类不继承与forms.Form而是继承于forms.ModelForm，只需要在定义Meta类中指定要验证的模型类以及模型类中的字段，即可完整表单的验证及保存</font>，在organization目录下创建forms.py模块，咋forms中定义表单验证类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">class UserAskFrom(forms.Form):</span></span><br><span class="line"><span class="string">    name = forms.CharField(required=True, min_length=2, max_length=10)  # 姓名</span></span><br><span class="line"><span class="string">    mobile = forms.CharField(required=True, min_length=11, max_length=11)  # 手机</span></span><br><span class="line"><span class="string">    course_name = forms.CharField(required=True)  # 课程名</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAskForm</span><span class="params">(forms.ModelForm)</span>:</span></span><br><span class="line">    <span class="string">"""用户咨询"""</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = UserAsk</span><br><span class="line">        fields = [<span class="string">"name"</span>, <span class="string">"mobile"</span>, <span class="string">"course_name"</span>]  <span class="comment"># 只保留想要的模型中的字段</span></span><br></pre></td></tr></table></figure><ul><li>在所有的应用目录下创建urls.py文件，用于完成页面中功能的路由，需要说明的是在本项目创建的app应用中没有生产urls.py文件，而在之前的Django项目中使用命令创建的应用时包含此文件的，然后在organization/urls中进行编写咨询功能路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^list/$'</span>, OrgView.as_view(), name=<span class="string">"org_list"</span>),  <span class="comment"># 课程机构列表页</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>紧接着在根级的urls中需要定义将应用organization下的urls包含进来，这样就很之前Django电商项目配置一样了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'org/'</span>, include(<span class="string">'organization.urls'</span>, namespace=<span class="string">"org"</span>)),  <span class="comment"># 应用organization下的urls</span></span><br></pre></td></tr></table></figure><ul><li>此时授课机构列表页的链接地址就不再是<a href="http://127.0.0.1:8000/org_list/" target="_blank" rel="noopener">http://127.0.0.1:8000/org_list/</a> 而是<a href="http://127.0.0.1:8000/org/list/" target="_blank" rel="noopener">http://127.0.0.1:8000/org/list/</a> 了，并且在index模板中需要修改授课机构列表页面的链接地址，也就是之前Django 电商项目说的反向解析</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:org_list' %&#125;"</span>&gt;</span>授课机构<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试访问<a href="http://127.0.0.1:8000/org/list/" target="_blank" rel="noopener">http://127.0.0.1:8000/org/list/</a> 授课机构列页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507203742891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong><font style="color:red">再次说明</font>：此做法与之前的Django项目一样，在根级urls中匹配地址后，将所有应用下的的urls路由包含进去，例如本项目中的captcha验证码一样url(r’captcha/‘,include(‘captcha.urls’))，理解此路由就是只要匹配captcha规则的请求，通通的进入到captcha.urls中进行匹配调用，如下图流程</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190507202228868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><p>分析授课机构列表页中的我要学习咨询功能，当用户点击立即咨询按钮时则应该页面不进行任何跳转，并且是异步执行的过程，所以这里在前端模板中使用ajax方式进行异步请求 </p></li><li><p>在organization/views中定义用户咨询类视图，返回响应的浏览器协议格式的数据</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddUserAskView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""添加用户咨询"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        userask_form = UserAskForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> userask_form.is_valid():</span><br><span class="line">            user_ask = userask_form.save(commit=<span class="literal">True</span>)  <span class="comment"># 设置自动保存数据到数据库，就不用像之前的表单验证模型那样</span></span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"success"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"fail", "msg":"咨询失败"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><ul><li>在父模板文件中需要在底部进行挖坑（block custom_js），并在子模板org-list中填充js数据，并进行如下编写（博主全方面注释）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block custom_js %&#125;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'#jsStayBtn'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        &#123;#alert(222);#&#125;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            cache: false,  &#123;#禁用缓存#&#125;</span><br><span class="line">            type: "POST",  &#123;#请求方式#&#125;</span><br><span class="line">            url: "&#123;% url 'org:add_ask' %&#125;",  &#123;#请求地址#&#125;</span><br><span class="line">            data: $('#jsStayForm').serialize(), &#123;#序列化表单内容#&#125;</span><br><span class="line">            async: true,  &#123;#异步请求方式#&#125;</span><br><span class="line">            success: function (data) &#123;  &#123;#发送请求成功回调函数，接收后端响应数据data#&#125;</span><br><span class="line">                &#123;#alert(1111);#&#125;</span><br><span class="line">                <span class="keyword">if</span> (data.status == <span class="string">'success'</span>) &#123;</span><br><span class="line">                    &#123;# 重置表单#&#125;</span><br><span class="line">                    $(<span class="string">'#jsStayForm'</span>)[<span class="number">0</span>].reset();</span><br><span class="line">                    alert(<span class="string">"提交成功"</span>)</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.status == <span class="string">'fail'</span>) &#123;</span><br><span class="line">                    &#123;#alert(111);#&#125;</span><br><span class="line">                    &#123;# 将错误信息条件到id=jsCompanyTips的标签内容中 #&#125;</span><br><span class="line">                    $(<span class="string">'#jsCompanyTips'</span>).html(data.msg)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"> &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endblock %&#125;</span></span><br></pre></td></tr></table></figure><ul><li>Debug测试咨询功能（空表单进行提交）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508101625485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>当Debug测试完毕后，查看页面提示信息，以及后端响应前端页面数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508101707181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Debug测试咨询功能（填写完整数据进行提交）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508103422343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Debug断点完成后，页面打印出提交成功，点击确定后，查看后端返回的响应数据为success</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508103536788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看数据operation_userask表信息，成功通过ajax异步提交的表单数据保存到响应的数据表中</li></ul><p><img src="https://img-blog.csdnimg.cn/2019050810384859.png" alt></p><ul><li>完善咨询功能，判断用户输入的手机号码是否合法，在forms表单验证类中直接forms.ModelFrom提供的clean方法，后面跟字段明，必须是该写法， 在clean_mobile方法中使用正则匹配进行判断，并返回正确结果或者错误提示</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAskForm</span><span class="params">(forms.ModelForm)</span>:</span></span><br><span class="line">    <span class="string">"""用户咨询"""</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = UserAsk</span><br><span class="line">        fields = [<span class="string">"name"</span>, <span class="string">"mobile"</span>, <span class="string">"course_name"</span>]  <span class="comment"># 只保留想要的模型中的字段</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">clean_mobile</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""验证手机号码是否合法"""</span></span><br><span class="line">        mobile = self.cleaned_data[<span class="string">'mobile'</span>]</span><br><span class="line">        REGEX_MOBILE = <span class="string">"^1[358]\d&#123;9&#125;$|^147\d&#123;8&#125;$|^176\d&#123;8&#125;$|^177\d&#123;8&#125;$|^199\d&#123;8&#125;$"</span></span><br><span class="line">        p = re.compile(REGEX_MOBILE)  </span><br><span class="line">        <span class="keyword">if</span> p.match(mobile):</span><br><span class="line">            <span class="keyword">return</span> mobile</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> forms.ValidationError(<span class="string">u"手机号码非法"</span>, code=<span class="string">"mobile_invalid"</span>)</span><br></pre></td></tr></table></figure><ul><li>Debug测试（输入不合法的手机号）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508105327484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶授课机构（详情页）"><a href="#三丶授课机构（详情页）" class="headerlink" title="三丶授课机构（详情页）"></a>三丶授课机构（详情页）</h1><p><strong>1.</strong>机构详情页面展示</p><ul><li>说明：当用户在授课机构列表页中点击机构即进入机构详情页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508110534905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><p>说明：在以上页面中需要讲师以及课程的数据，所以需要在xadmin后台进行数据添加</p></li><li><p>在xadmin后台机构管理中添加教师模型表数据</p></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508114642197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在xadmin后台课程管理中添加课程模型表数据，但是发现该课程表未与课程机构表关联，无法选择课程机构</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508115915868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>即所以在课程管理course/models中在课程表模型类中定义外键，并且允许为空，因为在搭建后台管理系统的时候已经存在一条数据了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">course_org = models.ForeignKey(CourseOrg, verbose_name=<span class="string">u"课程机构"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><ul><li>生成对应数据表字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019050812093638.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>刷新xadmin后台增加课程页面，则可以选择对应课程的课程机构了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508121425730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508145652612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>将机构详情页面所需要的模板文件拷贝到templates模板目录下，总共有4个模板（org-detail-course，org-detail-desc，org-detail-homepage，org-detail-teachers）分析页面得知，这四个页面除了各自内容不同其他均一样，所以需要将共有的部分单独放到一个模板中，即利用模板继承</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019050812371211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在template是目录下新建org_base.html模板，将org-detail-homepage.html或者其他三个模板的数据拷贝到org_base模板中，然后在org_base模板中进行如下数据块挖坑，通俗来说将是将四个页面不同的地方进行挖坑</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508134159313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在模板org-detail-homepage中继承与父模板org_base，并进行独有数据块填充</li></ul><p><img src="https://img-blog.csdnimg.cn/20190508134407258.png" alt></p><ul><li>在organization/views中定义类视图post方法，用于获取机构详情首页中页面数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrgHomeView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""机构首页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, org_id)</span>:</span></span><br><span class="line">        course_org = CourseOrg.objects.get(id=int(org_id))  <span class="comment"># 获取课程机构信息</span></span><br><span class="line">        <span class="comment"># 根据Course表的外键关联CourseOrg表通过django提供的course_set方法来获取Course表的课程所有信息</span></span><br><span class="line">        <span class="comment"># 并不是所有课程，而是一个课程的所有信息</span></span><br><span class="line">        all_courses = course_org.course_set.all()[:<span class="number">3</span>]</span><br><span class="line">        <span class="comment"># 同理根据Teachers表的外键关联CourseOrg表通过teacher_set方法获取Teachers表的教师所有信息</span></span><br><span class="line">        <span class="comment"># 并不是所有教师，而是一个教师的所有信息</span></span><br><span class="line">        all_teachers = course_org.teacher_set.all()[:<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"org-detail-homepage.html"</span>, &#123;<span class="string">"all_courses"</span>:all_courses, <span class="string">"all_teachers"</span>:all_teachers</span><br><span class="line">                                                            ,<span class="string">"course_org"</span>:course_org&#125;)</span><br></pre></td></tr></table></figure><ul><li>在urls中定义机构详情首页路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^home/(?P&lt;org_id&gt;\d+)$'</span>, OrgHomeView.as_view(), name=<span class="string">"org_home"</span>),  <span class="comment"># 机构首页</span></span><br></pre></td></tr></table></figure><ul><li>在org-detail-homepage模板中打印显示页面数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"brief group_list"</span>&gt;</span></span><br><span class="line">&#123;%  for course in all_courses %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"module1_5 box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"course-detail.html"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"214"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; course.image &#125;&#125;"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"des"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"course-detail.html"</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; course.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>课时：<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; course.learn_times &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span>参加人数：&#123;&#123; course.students &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bottom"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>&#123;&#123; course.course_org.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star fr  notlogin</span></span></span><br><span class="line"><span class="tag"><span class="string">            "</span> <span class="attr">data-favid</span>=<span class="string">"13"</span> <span class="attr">data-fav-type</span>=<span class="string">"4"</span>&gt;</span></span><br><span class="line">            &#123;&#123; course.fav_nums &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在父模板org_base中打印显示出机构名称以及机构logo图片</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wp"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"fl"</span> <span class="attr">style</span>=<span class="string">"width: 112px;height: 103px"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; course_org.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head fl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">            &#123;&#123; course_org.name &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/authentication.png' %&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/gold.png' %&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span> <span class="attr">style</span>=<span class="string">"margin-top:8px;color:#848484;"</span>&gt;</span>推荐指数： <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"precision company-credit"</span> <span class="attr">data-star-scope</span>=<span class="string">"5.0"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>5.0<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn fr collectionbtn  notlogin</span></span></span><br><span class="line"><span class="tag"><span class="string"> "</span> <span class="attr">data-favid</span>=<span class="string">"22"</span> <span class="attr">data-fav-type</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">        收藏</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试机构详情首页数据显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508160931436.gif" alt></fancybox></p><ul><li>在机构详情首页中需要对机构教师进行打印显示，则需要在xadmin管理后台上传头像，在前面添加讲师时，并没有图片字段，所以老规矩在models中定义Teacher模型的image字段，并生成数据表，最后在xadmin后台中添加教师头像即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image = models.ImageField(default=<span class="string">''</span>, upload_to=<span class="string">"teacher/%Y/%m"</span>, verbose_name=<span class="string">u"头像"</span>, max_length=<span class="number">100</span>)</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508161615985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在org-detail-homepage模板中打印显示机构教师以及机构介绍</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for teacher in all_teachers %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"diarys"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"module5 share company-diary-box"</span> <span class="attr">style</span>=<span class="string">"padding:10px 0;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"pic"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; teacher.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>昵称：&#123;&#123; teacher.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Java开发教程<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>发表于：2017-11-12<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"middle"</span> <span class="attr">style</span>=<span class="string">"border-bottom:0; "</span>&gt;</span>课程介绍</span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-size: 16px"</span>&gt;</span>1.java基础 2.java进阶 3.java高级<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;%  endfor %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cont"</span>&gt;</span>&amp;nbsp; &amp;nbsp;&#123;&#123; course_org.desc &#125;&#125;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/company/desc/22/"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"green"</span>&gt;</span>[查看更多]<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面成功显示出机构教师以及机构介绍数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508171228392.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>机构课程列表页数据显示</p><ul><li>整个逻辑跟机构首页一样，首先就是完成模板的继承，这个就不在细说了，然后定义类视图get方法，获取课程表数据并传递给前端模板，在页面左侧栏，需要通过后端传递current_page变量的值来判断是否激活，并且修改父模板中的左侧栏的链接地址</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrgCourseView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""机构课程页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, org_id)</span>:</span></span><br><span class="line">        current_page = <span class="string">"course"</span></span><br><span class="line">        course_org = CourseOrg.objects.get(id=int(org_id))  <span class="comment"># 获取课程机构信息</span></span><br><span class="line">        <span class="comment"># 根据Course表的外键关联CourseOrg表通过django提供的course_set方法来获取Course表的课程所有信息</span></span><br><span class="line">        <span class="comment"># 并不是所有课程，而是一个课程的所有信息</span></span><br><span class="line">        all_courses = course_org.course_set.all()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"org-detail-course.html"</span>, &#123;<span class="string">"all_courses"</span>:all_courses,<span class="string">"course_org"</span>:course_org</span><br><span class="line">                                                          ,<span class="string">"current_page"</span>:current_page&#125;)</span><br></pre></td></tr></table></figure><ul><li>定义url路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^course/(?P&lt;org_id&gt;\d+)$'</span>, OrgCourseView.as_view(), name=<span class="string">"org_course"</span>),  <span class="comment"># 机构课程页</span></span><br></pre></td></tr></table></figure><ul><li>在机构课程列表页模板org-detail-course中打印显示页面数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"brief group_list"</span>&gt;</span></span><br><span class="line">    &#123;%  for course in all_courses %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"module1_5 box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"comp-img-box"</span> <span class="attr">href</span>=<span class="string">"course-detail.html"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"214"</span> <span class="attr">height</span>=<span class="string">"195"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; course.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"des"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"course-detail.html"</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; course.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>课时：<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; course.learn_times &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span>学习人数：&#123;&#123; course.students &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>&#123;&#123; course.course_org.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star fr  notlogin</span></span></span><br><span class="line"><span class="tag"><span class="string">                "</span> <span class="attr">data-favid</span>=<span class="string">"13"</span> <span class="attr">data-fav-type</span>=<span class="string">"4"</span>&gt;</span></span><br><span class="line">                &#123;&#123; course.fav_nums &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在父模板org_base中修改详情页左侧栏菜单链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_page == 'home' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:org_home' course_org.id %&#125;"</span>&gt;</span>机构首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_page == 'course' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:org_course' course_org.id %&#125;"</span>&gt;</span>机构课程<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_page == 'desc' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"org-detail-desc.html"</span>&gt;</span>机构介绍<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_page == 'teacher' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"org-detail-teachers.html"</span>&gt;</span>机构讲师<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试左侧菜单激活并跳转到正确页面以及显示课程机构列表页数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508180457778.gif" alt></fancybox></p><p><strong>3.</strong>机构介绍页面以及机构讲师页面数据显示</p><p><strong>说明：</strong>这两个页面都很简单逻辑与前面两个机构首页机构课程一样，就不细说了</p><ul><li>定义类视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrgDescView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""机构介绍页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, org_id)</span>:</span></span><br><span class="line">        current_page = <span class="string">"desc"</span></span><br><span class="line">        course_org = CourseOrg.objects.get(id=int(org_id))  <span class="comment"># 获取课程机构信息</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"org-detail-desc.html"</span>, &#123;<span class="string">"course_org"</span>:course_org</span><br><span class="line">                                                          ,<span class="string">"current_page"</span>:current_page&#125;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrgTeacherView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""教师列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, org_id)</span>:</span></span><br><span class="line">        current_page = <span class="string">"teacher"</span></span><br><span class="line">        course_org = CourseOrg.objects.get(id=int(org_id))  <span class="comment"># 获取课程机构信息</span></span><br><span class="line">        <span class="comment"># 根据Course表的外键关联CourseOrg表通过django提供的course_set方法来获取Course表的课程所有信息</span></span><br><span class="line">        <span class="comment"># 并不是所有课程，而是一个课程的所有信息</span></span><br><span class="line">        all_teachers = course_org.teacher_set.all()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"org-detail-teachers.html"</span>, &#123;<span class="string">"all_teachers"</span>:all_teachers,<span class="string">"course_org"</span>:course_org</span><br><span class="line">                                                          ,<span class="string">"current_page"</span>:current_page&#125;)</span><br></pre></td></tr></table></figure><ul><li>定义路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^desc/(?P&lt;org_id&gt;\d+)$'</span>, OrgDescView.as_view(), name=<span class="string">"org_desc"</span>),  <span class="comment"># 机构介绍页</span></span><br><span class="line">url(<span class="string">r'^teacher/(?P&lt;org_id&gt;\d+)$'</span>, OrgTeacherView.as_view(), name=<span class="string">"org_teacher"</span>),  <span class="comment"># 教师列表页</span></span><br></pre></td></tr></table></figure><ul><li>对应的模板文件继承于org_base模板，只需要重写right_form数据库块内容即可，前面两个模板中并没有去重写bread_title数据块，博主在写完后面两个模板就已经给补充了，这里演示org-detail-teacher模板即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends 'org_base.html' %&#125;</span><br><span class="line">&#123;% load staticfiles %&#125;</span><br><span class="line">&#123;% block title %&#125;慕课网教师列表 - 慕学网&#123;% endblock %&#125;</span><br><span class="line">&#123;% block bread_title %&#125;机构讲师&#123;% endblock %&#125;</span><br><span class="line">&#123;% block right_form %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right companycenter layout"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>机构讲师<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"messagelist"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">" butler_list butler-fav-box"</span>&gt;</span></span><br><span class="line">                &#123;% for teacher in all_teachers %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"des users"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> <span class="attr">class</span>=<span class="string">"scrollLoading"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; MEDIA_URL &#125;&#125;&#123;&#123; teacher.image &#125;&#125;"</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                            &#123;&#123; teacher.name &#125;&#125;<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>已认证<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"cont clearfix"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"time"</span>&gt;</span>工作年限：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; teacher.work_years &#125;&#125;年<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"c7"</span>&gt;</span>课程数：<span class="tag">&lt;<span class="name">span</span>&gt;</span>3<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><ul><li>在父模板org_base中完善详情页左侧栏菜单链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_page == 'home' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:org_home' course_org.id %&#125;"</span>&gt;</span>机构首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_page == 'course' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:org_course' course_org.id %&#125;"</span>&gt;</span>机构课程<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_page == 'desc' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:org_desc' course_org.id %&#125;"</span>&gt;</span>机构介绍<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if current_page == 'teacher' %&#125;active2&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'org:org_teacher' course_org.id %&#125;"</span>&gt;</span>机构讲师<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试机构详情页四个页面数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508194019192.gif" alt></fancybox></p><h1 id="四丶授课机构（用户收藏）"><a href="#四丶授课机构（用户收藏）" class="headerlink" title="四丶授课机构（用户收藏）"></a>四丶授课机构（用户收藏）</h1><p><strong>1.</strong>课程机构收藏功能实现</p><p><strong>分析：</strong>该功能跟咨询功能一样使用ajax异步向后端接口发送请求的，当收藏功能显示收藏字段时，用户点击收藏，则该功能按钮显示已收藏，反之表示取消收藏，则该功能内容显示为收藏；在后端逻辑中如果在数据库中根据用户id和fav_id以及fav_type能查询到数据，则表示用户是想取消收藏，反之查询不到则表示用户想收藏</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190510175044696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>定义收藏及取消功能视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddFavView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""用户收藏以及取消收藏课程机构"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="comment"># 获取请求中的参数</span></span><br><span class="line">        fav_id = request.POST.get(<span class="string">'fav_id'</span>, <span class="number">0</span>)</span><br><span class="line">        fav_type = request.POST.get(<span class="string">'fav_type'</span>, <span class="number">0</span>)</span><br><span class="line">        <span class="comment"># 跟在index模板中判断用户登录使用django提供的is_authenticated方法进行判断</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> request.user.is_authenticated():</span><br><span class="line">            <span class="comment"># 用户未登录的返回错误响应</span></span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"fail", "msg":"用户未登录"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="comment"># 用户存在则在UserFavorite表中根据当前用户对象和fav_id以及fav_type字段查询该条记录</span></span><br><span class="line">        exist_records = UserFavorite.objects.filter(user=request.user, fav_id=int(fav_id), fav_type=int(fav_type))</span><br><span class="line">        <span class="keyword">if</span> exist_records:</span><br><span class="line">            <span class="comment"># 如果记录存在，表示用户是想取消收藏，则删除此记录</span></span><br><span class="line">            exist_records.delete()</span><br><span class="line">            <span class="comment"># 返回正确状态，以及收藏消息，该‘收藏’用于显示收藏按钮标签中的内容</span></span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"success", "msg":"收藏"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 判断获取的fav_id以及fav_type不为0，则只能是&gt;0，才表示用户选择</span></span><br><span class="line">            <span class="keyword">if</span> int(fav_id) &gt; <span class="number">0</span> <span class="keyword">and</span> int(fav_type) &gt; <span class="number">0</span> :</span><br><span class="line">                user_fav = UserFavorite()</span><br><span class="line">                <span class="comment"># 保存数据到数据库</span></span><br><span class="line">                user_fav.user = request.user</span><br><span class="line">                user_fav.fav_id = int(fav_id)</span><br><span class="line">                user_fav.fav_type = int(fav_type)</span><br><span class="line">                user_fav.save()</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"success", "msg":"已收藏"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">'&#123;"status":"fail", "msg":"错误收藏"&#125;'</span>, content_type=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><ul><li>配置类视图路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^add_fav/$'</span>, AddFavView.as_view(), name=<span class="string">"add_fav"</span>),  <span class="comment"># 用户收藏功能</span></span><br></pre></td></tr></table></figure><ul><li>因为该功能是4个页面共有的，所以在父模板中定义js代码即可，简单说明一下js代码，点击事件绑定类选择器collectionbtn，调用定义的add_fav函数，这个函数需要接收标签对象，以及后端类视图的参数fav_id以及fav_type，使用ajax post异步向后端接口发送请求，根据后端返回的响应数据msg来判断是取消收藏还是添加收藏以及判断用户的状态，状态未登录则跳转到登录页</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="comment">//收藏</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">add_fav</span>(<span class="params">current_elem, fav_id, fav_type</span>) </span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            cache: <span class="literal">false</span>,</span><br><span class="line">            type: <span class="string">"POST"</span>,</span><br><span class="line">            url: <span class="string">"/org/add_fav/"</span>,</span><br><span class="line">            data: &#123;<span class="string">'fav_id'</span>: fav_id, <span class="string">'fav_type'</span>: fav_type&#125;,</span><br><span class="line">            <span class="keyword">async</span>: <span class="literal">true</span>,</span><br><span class="line">            beforeSend: <span class="function"><span class="keyword">function</span> (<span class="params">xhr, settings</span>) </span>&#123;</span><br><span class="line">                xhr.setRequestHeader(<span class="string">"X-CSRFToken"</span>, <span class="string">"&#123;&#123; csrf_token &#125;&#125;"</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (data.status == <span class="string">'fail'</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (data.msg == <span class="string">'用户未登录'</span>) &#123;</span><br><span class="line">                        <span class="built_in">window</span>.location.href = <span class="string">"/login/"</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        alert(data.msg)</span><br><span class="line">                    &#125;</span><br><span class="line"> </span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.status == <span class="string">'success'</span>) &#123;</span><br><span class="line">                    current_elem.text(data.msg)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    $(<span class="string">'.collectionbtn'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        add_fav($(<span class="keyword">this</span>), &#123;&#123; course_org.id &#125;&#125;, <span class="number">2</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Debug测试收藏功能（用户未登录时）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019050821382827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Debug测试收藏功能（用户已登录）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508214037837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>收藏功能展示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190508214703922.gif" alt></fancybox></p><p><strong>2.</strong>完善收藏功能</p><p><strong>说明：</strong>当用户点击收藏并且收藏成功时，则功能内容显示为已收藏，但刷新页面就变成了收藏，实际数据库userfavorite表时存在数据的；因为当前的页面并不知道收藏功能的状态时什么状态</p><ul><li>在机构详情4个页面类视图中添加以下代码，并将has_fav变量进行返回给前端模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置默认为未收藏状态</span></span><br><span class="line">has_fav = <span class="literal">False</span></span><br><span class="line"><span class="comment"># 当用户为登录状态才能根据条件查询该用户收藏数据</span></span><br><span class="line"><span class="keyword">if</span> request.user.is_authenticated():</span><br><span class="line">    <span class="comment"># 当用户已收藏时，即has_fav = True ，需注意这里的fav_type = 2 这个条件是固定的因为此页面为课程机构页面</span></span><br><span class="line">    <span class="keyword">if</span> UserFavorite.objects.filter(user=request.user, fav_id=int(course_org.id), fav_type=<span class="number">2</span>):</span><br><span class="line">        has_fav = <span class="literal">True</span></span><br></pre></td></tr></table></figure><ul><li>在父模板org_base中根据后端传递的has_fav数据的值，判断页面是显示收藏还是已收藏</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn fr collectionbtn  notlogin</span></span></span><br><span class="line"><span class="tag"><span class="string">"</span> <span class="attr">data-favid</span>=<span class="string">"22"</span> <span class="attr">data-fav-type</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    &#123;% if has_fav %&#125;已收藏&#123;% else %&#125;收藏&#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在机构详情页面top栏还是登录注册应该进行判断显示，直接将index模板的判断内容拷贝替换掉org_base模板中同标签内容</li></ul><p><img src="https://img-blog.csdnimg.cn/20190509000700597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试收藏功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190509013347739.gif" alt></fancybox></p><h1 id="五丶公开课（列表页）"><a href="#五丶公开课（列表页）" class="headerlink" title="五丶公开课（列表页）"></a>五丶公开课（列表页）</h1><p><strong>1.</strong>模板继承</p><ul><li>前端模板为course-list，页面如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190509144344213.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>course-list模板与org-list模板一样都是继承于base模板（这里不用再多说了）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190509153351454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>2.</strong>显示课程列表页</p><ul><li>在根级urls中配置course应用下的urls</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'course/'</span>, include(<span class="string">'courses.urls'</span>, namespace=<span class="string">"course"</span>)),  <span class="comment"># 课程应用course下的urls</span></span><br></pre></td></tr></table></figure><ul><li>在course/views中定义类视图get方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseListView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>在应用urls中定义路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^list/$'</span>, CourseListView.as_view(), name=<span class="string">"course_list"</span>),  <span class="comment"># 课程列表页</span></span><br></pre></td></tr></table></figure><ul><li>访问<a href="http://127.0.0.1:8000/course/list/" target="_blank" rel="noopener">http://127.0.0.1:8000/course/list/</a>  课程列表页，成功显示出页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190509153753716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>课程列表页动态数据展示</p><ul><li>在xadmin后台中添加课程表数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190509155029810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在视图中获取所有的课程信息，并返回给模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseListView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        all_courses = Course.objects.all()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-list.html"</span>, &#123;<span class="string">"all_courses"</span>:all_courses&#125;)</span><br></pre></td></tr></table></figure><ul><li>在模板中进行循环遍历打印显示页面内容字段数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"group_list"</span>&gt;</span></span><br><span class="line">    &#123;%  for course in all_courses %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"course-detail.html"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"280"</span> <span class="attr">height</span>=<span class="string">"350"</span> <span class="attr">class</span>=<span class="string">"scrollLoading"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">src</span>=<span class="string">&#123;&#123;</span> <span class="attr">MEDIA_URL</span> &#125;&#125;&#123;&#123; <span class="attr">course.image</span> &#125;&#125;/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"des"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"course-detail.html"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; course.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>时长：<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; course.learn_times &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span>学习人数：&#123;&#123; course.students &#125;&#125;&amp;nbsp;&amp;nbsp;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"course-detail.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>来自&#123;&#123; course.course_org.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"star fr  notlogin</span></span></span><br><span class="line"><span class="tag"><span class="string">            "</span> <span class="attr">data-favid</span>=<span class="string">"15"</span>&gt;</span></span><br><span class="line">            &#123;&#123; course.fav_nums &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面，成功显示出动态数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190509160155154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>课程列表页数据分页</p><ul><li>跟机构列表页一样使用pure_pagination第三方工具进行分页处理，完全可以照搬，首先在视图中进行分页数据处理</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseListView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        all_courses = Course.objects.all()</span><br><span class="line">        <span class="comment"># 分页处理</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            page = request.GET.get(<span class="string">'page'</span>, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> PageNotAnInteger:</span><br><span class="line">            page = <span class="number">1</span></span><br><span class="line">        p = Paginator(all_courses, <span class="number">12</span>, request=request)</span><br><span class="line">        courses = p.page(page)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-list.html"</span>, &#123;<span class="string">"all_courses"</span>:courses&#125;)</span><br></pre></td></tr></table></figure><ul><li>在course-list模板中需要将前面遍历的all_courses修改为{% for course in all_courses.object_list %}，然后将org-list模板中的分页代码拷贝到course-list分页标签下，只需要将代码中的all_orgs修改为all_courses即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pageturn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagelist"</span>&gt;</span></span><br><span class="line">        &#123;% if all_courses.has_previous %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"long"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; all_courses.previous_page_number.querystring &#125;&#125;"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">        &#123;% for page in all_courses.pages %&#125;</span><br><span class="line">            &#123;% if page %&#125;</span><br><span class="line">                &#123;% ifequal page all_courses.number %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; page.querystring &#125;&#125;"</span>&gt;</span>&#123;&#123; page &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                &#123;% else %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; page.querystring &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"page"</span>&gt;</span>&#123;&#123; page &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                &#123;% endifequal %&#125;</span><br><span class="line">            &#123;% else %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"none"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        &#123;% if all_courses.has_next %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"long"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?&#123;&#123; all_courses.next_page_number.querystring &#125;&#125;"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>课程列表页分页功能测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190509161731127.gif" alt></fancybox></p><p><strong>5.</strong>课程列表页面数据排序</p><ul><li>在视图中根据链接地址sort参数来判断从数据库进行什么条件排序，需将请求地址获取的sort参数的值传递给前端模板，用于前端模板判断标签active激活操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseListView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""课程列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="comment"># 默认按最新排序</span></span><br><span class="line">        all_courses = Course.objects.all().order_by(<span class="string">"-add_time"</span>)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 热门与人数排序</span></span><br><span class="line">        sort = request.GET.get(<span class="string">"sort"</span>, <span class="string">""</span>)</span><br><span class="line">        <span class="keyword">if</span> sort:</span><br><span class="line">            <span class="keyword">if</span> sort == <span class="string">"students"</span>:</span><br><span class="line">                all_courses = all_courses.order_by(<span class="string">"-students"</span>)  <span class="comment"># 人数</span></span><br><span class="line">            <span class="keyword">elif</span> sort == <span class="string">"hot"</span>: </span><br><span class="line">                all_courses = all_courses.order_by(<span class="string">"-click_nums"</span>)  <span class="comment"># 点击数来决定热门</span></span><br><span class="line">        <span class="comment"># 分页处理</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            page = request.GET.get(<span class="string">'page'</span>, <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> PageNotAnInteger:</span><br><span class="line">            page = <span class="number">1</span></span><br><span class="line">        p = Paginator(all_courses, <span class="number">12</span>, request=request)</span><br><span class="line">        courses = p.page(page)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"course-list.html"</span>, &#123;<span class="string">"all_courses"</span>:courses, <span class="string">"sort"</span>:sort&#125;)</span><br></pre></td></tr></table></figure><ul><li>在模板中需要定义链接地址，以及判断后台传递过来的sort值，来给标签添加激活样式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"tab_header"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if not sort %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?sort="</span>&gt;</span>最新 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if sort == 'hot' %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?sort=hot"</span>&gt;</span>最热门<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&#123;% if sort == 'students' %&#125;active&#123;% endif %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?sort=students"</span>&gt;</span>参与人数<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试页面数据排序功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190509163919597.gif" alt></fancybox></p><p><strong>6.</strong>页面右侧栏热门课程显示</p><ul><li>在视图中按照click_num倒序排序获取数据，传递到模板中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 热门课程</span></span><br><span class="line">hot_courses = Course.objects.all().order_by(<span class="string">"-click_nums"</span>)[:<span class="number">3</span>]</span><br></pre></td></tr></table></figure><ul><li>在模板中进行打印显示即可，非常简单，需要注意的是因为degree课程难度为choice字段所以需要使用django提供的此方式进行打印get_表字段_display</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right layout"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head"</span>&gt;</span>热门课程推荐<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"group_recommend"</span>&gt;</span></span><br><span class="line">        &#123;%  for hot_course in hot_courses %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"240"</span> <span class="attr">height</span>=<span class="string">"220"</span> <span class="attr">class</span>=<span class="string">"scrollLoading"</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">src</span>=<span class="string">&#123;&#123;</span> <span class="attr">MEDIA_URL</span> &#125;&#125;&#123;&#123; <span class="attr">hot_course.image</span> &#125;&#125;/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span> &#123;&#123; hot_course.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span>难度：<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"key"</span>&gt;</span>&#123;&#123; hot_course.get_degree_display &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">        &#123;%  endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示页面中的热门课程</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190509164433303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/89914436" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/89914436</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目于之在线教育平台网站的实战开发（二）</title>
      <link href="/2019/11/12/Django%E9%A1%B9%E7%9B%AE%E4%BA%8E%E4%B9%8B%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/11/12/Django%E9%A1%B9%E7%9B%AE%E4%BA%8E%E4%B9%8B%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶用户登录注册功能实现"><span style="color:#4ea1db">一丶用户登录注册功能实现</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶找回密码（忘记密码）"><span style="color:#4ea1db">二丶找回密码（忘记密码）</span></a></li><a id="more"></a><h1 id="一丶用户登录注册功能实现"><a href="#一丶用户登录注册功能实现" class="headerlink" title="一丶用户登录注册功能实现"></a>一丶用户登录注册功能实现</h1><p><strong>1.</strong>渲染网站主页面</p><ul><li>在项目根目录下创建static目录，将资源文件拷贝到目录中</li></ul><p><img src="https://img-blog.csdnimg.cn/20190505152512493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>将static/html目录中的主页模板index.html文件拷贝到templates模板目录中，并修改代码中引入的静态资源路径，例如下</li></ul><p><img src="https://img-blog.csdnimg.cn/20190505153206677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>在settings目录中添加static静态资源目录</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STATICFILES_DIRS = [os.path.join(BASE_DIR, <span class="string">'static'</span>)]</span><br></pre></td></tr></table></figure><ul><li>在根级urls中定义主页路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^$'</span>, TemplateView.as_view(template_name=<span class="string">"index.html"</span>), name=<span class="string">"index"</span>)</span><br></pre></td></tr></table></figure><ul><li>启动项目，在浏览器输入<a href="http://127.0.0.1:8000" target="_blank" rel="noopener">http://127.0.0.1:8000</a> 则渲染出网站主页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190505153526584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>渲染登录页以及注册页</p><ul><li>跟主页一样首先拷贝login.html和register.html模板文件到templates目录中，修改静态资源路径（不演示），在根级urls中配置登录页和注册页的路由规则</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># url(r'^admin/', admin.site.urls),</span></span><br><span class="line">    url(<span class="string">r'^xadmin/'</span>, xadmin.site.urls),</span><br><span class="line">    url(<span class="string">r'^$'</span>, TemplateView.as_view(template_name=<span class="string">"index.html"</span>), name=<span class="string">"index"</span>),</span><br><span class="line">    url(<span class="string">r'^login/$'</span>, TemplateView.as_view(template_name=<span class="string">"login.html"</span>), name=<span class="string">"login"</span>),</span><br><span class="line">    url(<span class="string">r'^register/$'</span>, TemplateView.as_view(template_name=<span class="string">"register.html"</span>), name=<span class="string">"register"</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>在主页丶登录页以及注册页中将所有涉及到的注册登录链接地址修改如下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color:white"</span> <span class="attr">class</span>=<span class="string">"fr registerbtn"</span> <span class="attr">href</span>=<span class="string">"/register/"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color:white"</span> <span class="attr">class</span>=<span class="string">"fr loginbtn"</span> <span class="attr">href</span>=<span class="string">"/login/"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试注册登录页面间跳转与显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190505171703848.gif" alt></fancybox></p><p><strong>3.</strong>实现登录功能</p><ul><li>在users/views中定义登录视图函数，视图函数逻辑为首先根据用户请求方式进行不同的逻辑处理，登录逻辑代码简单，需要注意的是，用户进行登录时需要提交表单post请求，获取请求携带参数username和password，django提供了authenticate方法，向数据库对应表发起验证，判断用户填写的用户名和密码是否正确，正确返回对象，不正确返回None；同时提供了login方法，该方法才是完成正常的登录</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> authenticate, login</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_login</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">"GET"</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>)</span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">"POST"</span>:</span><br><span class="line">        user_name = request.POST.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">        pass_word = request.POST.get(<span class="string">"password"</span>, <span class="string">""</span>)</span><br><span class="line">        user = authenticate(username=user_name, password=pass_word)</span><br><span class="line">        <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            login(request, user)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>对应的login.html登录模板中修改form表单请求地址，以及请求方式并且定义csrf</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/login/"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在根级urls中，当比配login/ 路由时需要去调用定义的user_login视图函数，而不是渲染模板文件，所以需要进行如下修改</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^login/$'</span>, user_login, name=<span class="string">"login"</span>),</span><br></pre></td></tr></table></figure><ul><li>当登录成功后，即在index主页面不应该显示登录与注册按钮，而是显示出登录成功后的用户信息，所以在主页模板文件中需要进行如下判断，这里需要使用django默认传递的request参数到模板中去掉用user对象中的is_authenticated方法判断用户是否登录成功，说明一点这里还未替换登录成功后显示的用户信息，只是作于判断显示用户信息模块还是登录注册模块</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if request.user.is_authenticated %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"personal"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"user fr"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>bobby<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"down fr"</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/top_down.png' %&#125;"</span>/&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"20"</span> <span class="attr">height</span>=<span class="string">"20"</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'media/image/2016/12/default_big_14.png' %&#125;"</span>/&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"userdetail"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">height</span>=<span class="string">"80"</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'media/image/2016/12/default_big_14.png' %&#125;"</span>/&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>django<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>bobby<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"personcenter fl"</span> <span class="attr">href</span>=<span class="string">"usercenter-info.html"</span>&gt;</span>进入个人中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"fr"</span> <span class="attr">href</span>=<span class="string">"/logout/"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color:white"</span> <span class="attr">class</span>=<span class="string">"fr registerbtn"</span> <span class="attr">href</span>=<span class="string">"/register/"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color:white"</span> <span class="attr">class</span>=<span class="string">"fr loginbtn"</span> <span class="attr">href</span>=<span class="string">"/login/"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li>测试用户登录功能（账号密码为超级管理员），登录成功则跳转到主页并且在主页上不显示登录和注册功能而显示用户信息模块；登录不成功则跳转到登录页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190505180517262.gif" alt></fancybox></p><p><strong>4.</strong>增加邮箱登录 </p><ul><li><font style="color:red">django 提供的authenticate方法只是针对用使用用户名进行登录，当使用邮箱进行登录时，则会出现异常，博主使用Debug模式启动项目，在视图函数中打断点，然后在登录页面输入邮箱和密码后点击登录，则debug显示authenticate方法返回的user的值为None</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190505181636864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>要想使用邮箱进行登录，则需要自定义<font style="color:red">authenticate方法</font>即可，首先在settings中设置AUTHENTICATION_BACKENDS为我们自定义的类，而这个类需要继承django.contrib.auth.backends中的ModelBackend类才能去重写父类的authenticate方法，具体实现如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomBackend</span><span class="params">(ModelBackend)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">authenticate</span><span class="params">(self, request, username=None, password=None, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 使用get查询唯一条件，使用django模型中提供的的Q类对查询条件or查询，通俗来说就是满足username或者email其中一个即可</span></span><br><span class="line">            user = UserProfile.objects.get(Q(username=username) | Q(email=username))</span><br><span class="line">            <span class="keyword">if</span> user.check_password(password):</span><br><span class="line">                <span class="keyword">return</span> user</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><ul><li>在users/views中定义CustomBackend类后，还需要在settings配置AUTHENTICATION_BACKENDS</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AUTHENTICATION_BACKENDS = (</span><br><span class="line">    <span class="string">'users.views.CustomBackend'</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>Debug测试使用邮箱登录成功调用重写的<font style="color:red">authenticate方法</font>，并返回user对象</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190505184438767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>当user为None表示用户名或者密码错误，即需要在页面上提示用户错误信息，所以在视图函中返回登录页面时，需要向模板中传递错误信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    login(request, user)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>, &#123;<span class="string">"err_msg"</span>:<span class="string">"用户名或密码错误"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li>紧接着在登录模板文件中打印出此错误信息</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error btns login-form-tips"</span> <span class="attr">id</span>=<span class="string">"jsLoginTips"</span>&gt;</span>&#123;&#123; err_msg &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试邮箱登录以及错误提示显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019050518554316.gif" alt></fancybox></p><p><strong>5.</strong>使用类视图来区分用户请求（跟前面Djnago 电商项目一样）</p><ul><li>定义类视图并且继承与View类，在类中编写对应的请求方式函数即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""登录"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        user_name = request.POST.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">        pass_word = request.POST.get(<span class="string">"password"</span>, <span class="string">""</span>)</span><br><span class="line">        user = authenticate(username=user_name, password=pass_word)</span><br><span class="line">        <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            login(request, user)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>, &#123;<span class="string">"err_msg"</span>: <span class="string">"用户名或密码错误"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li>在根级urls中需进行如下修改，需导入定义的类视图，并在路由中调用该类的as_views方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^login/$'</span>, LoginView.as_view(), name=<span class="string">"login"</span>)</span><br></pre></td></tr></table></figure><p><strong>6.</strong>在后端中进行登录表单信息验证</p><p><strong>说明</strong>：在用户登录时，为了减少数据库查询操作，那么一个网站会在前端使用js对用户输入的信息进行判断（比如密码长度，是否为空等等）；不管前端有没有进行校验判断，后端也必须进行校验判断</p><ul><li>在users应用下创建forms.py文件，用于校验用户输入的用户名密码是否合法，在文件中进行如下编写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginFrom</span><span class="params">(forms.Form)</span>:</span></span><br><span class="line">    <span class="string">"""登录表单验证"""</span></span><br><span class="line">    <span class="comment"># username和password变量名要与模板中表单字段名一致</span></span><br><span class="line">    username = forms.CharField(required=<span class="literal">True</span>)</span><br><span class="line">    password = forms.CharField(required=<span class="literal">True</span>, min_length=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><ul><li>在登录类视图post方法中需要判断登录表单信息验证是否正确，当不正确存在错误时则将表单对象传递到登录模板中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">    login_form = LoginFrom(request.POST)  <span class="comment"># 需传递的是字典对象</span></span><br><span class="line">    <span class="keyword">if</span> login_form.is_valid():</span><br><span class="line">        user_name = request.POST.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">        pass_word = request.POST.get(<span class="string">"password"</span>, <span class="string">""</span>)</span><br><span class="line">        user = authenticate(username=user_name, password=pass_word)</span><br><span class="line">        <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            login(request, user)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>, &#123;<span class="string">"err_msg"</span>: <span class="string">"用户名或密码错误"</span>&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>, &#123;<span class="string">"login_form"</span>: login_form&#125;)</span><br></pre></td></tr></table></figure><ul><li>不合法登录验证测试（输入密码小于5个字符）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190505211346474.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>不合法登录验证测试（密码为空）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190505211526235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>7.</strong>将表单验证错误信息显示在登录页面中</p><ul><li>在login.html模板中需要进行判断，如果后端传递过来的login_form对象中的errors存在username字段则在用户名所在的标签中添加errorput样式，password所在标签也是同样的</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group marb20 &#123;% if login_form.errors.username %&#125;errorput&#123;% endif %&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>用&amp;nbsp;户&amp;nbsp;名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"account_l"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"手机号/邮箱"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group marb8 &#123;% if login_form.errors.password %&#125;errorput&#123;% endif %&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>密&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"password_l"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入您的密码"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>显示错误信息，需要循环遍历并且打印显示错误的字段对应错误提示，最初后面打印的error_msg信息与表单验证错误信息是不共存情况，所以写在一起无所谓</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error btns login-form-tips"</span> <span class="attr">id</span>=<span class="string">"jsLoginTips"</span>&gt;</span>&#123;% for key,error in login_form.errors.items %&#125;&#123;&#123; error &#125;&#125;&#123;% endfor %&#125;&#123;&#123; err_msg &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>错误信息登录测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190505214353967.gif" alt></fancybox></p><p><font style="color:red"><strong>8.</strong>Django 如何通过cookie和session来实现用户自动登录</font></p><ul><li>用户第一次登录成功时在cookies中并没有携带名为sessionid的cookie，那么服务器就会根据登录成功的用户名和密码随机生成一段随机字符串，这段字符串是具有过期时间的，然后将这端字符串sessionid返回给浏览器并存在cookies中；当用户下一次请求时就会携带cookies中保存的sessionid给服务器，服务器根据浏览器发送的sessionid，在数据库django_session表中去进行查询，查询到sessionid对应的数据则自动登录，那么在登录成功后，是怎么将sessionid保存到数据库的呢？在LoginView类视图post请求方法中，login(request, user)这行代码中使用django提供的login方法会将用户登录成功的信息数据生成对应的sessionid保存到数据库表django_session的session_key中，当用户登录成功后，会去查询此sessionid取出用户信息的；如何将sessionid的值转换为用户信息取决于视图中的request，而request可以直接去调用user对象是因为settings中配置的’django.contrib.sessions’的app，查看用户登录成功后，访问主页index页面请求的cookies数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190505233909297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看数据库django_sessions表数据，从中可以发现session_key的值与cookies中sessionid的值一致</li></ul><p><img src="https://img-blog.csdnimg.cn/20190505234008715.png" alt></p><p><strong>9.</strong>实现注册功能</p><ul><li>在前面已经渲染出了注册页面，但这里需要通过类视图中的get方法来对注册模板进行渲染，所以首先需要定义类视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RegisterView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""注册"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"register.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>修改根基urls中的注册路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^register/$'</span>, RegisterView.as_view(), name=<span class="string">"register"</span>)</span><br></pre></td></tr></table></figure><ul><li>在index丶login以及register模板文件中将所有涉及到注册登录链接地址地方进行如下修改</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color:white"</span> <span class="attr">class</span>=<span class="string">"fr registerbtn"</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'register' %&#125;"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"color:white"</span> <span class="attr">class</span>=<span class="string">"fr loginbtn"</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'login' %&#125;"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在浏览器中输入<a href="http://127.0.0.1:8000/register" target="_blank" rel="noopener">http://127.0.0.1:8000/register</a> 成功渲染出注册页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019050600354441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在注册页面设计到验证码，所以需要安装django 第三方工具包captcha</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506003925520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>安装captcha完成后，紧接需要将captcha注册到app中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">"users"</span>,</span><br><span class="line">    <span class="string">"courses"</span>,</span><br><span class="line">    <span class="string">"organization"</span>,</span><br><span class="line">    <span class="string">"operation"</span>,</span><br><span class="line">    <span class="string">"xadmin"</span>,</span><br><span class="line">    <span class="string">"crispy_forms"</span>,</span><br><span class="line">    <span class="string">"captcha"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>在根级urls中将captcha.urls包含进来</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'captcha/'</span>,include(<span class="string">'captcha.urls'</span>))</span><br></pre></td></tr></table></figure><ul><li>生成captcha迁移文件并执行迁移，在数据库中生成对应的数据表</li></ul><p><img src="https://img-blog.csdnimg.cn/20190506005116423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>查看生成的captcha数据表</li></ul><p><img src="https://img-blog.csdnimg.cn/2019050600522267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>如何在注册页面中显示captcha包生成的验证码，首先在users/forms模块中定义注册表单验证，在表单验证码字段中需要从captcha.fields中去导入CaptchaField类来进行验证，验证码错误提示为英文的invalid，所以需要进行转换为中文提示信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RegisterForm</span><span class="params">(forms.Form)</span>:</span></span><br><span class="line">    <span class="string">'''注册表单验证'''</span></span><br><span class="line">    email = forms.EmailField(required=<span class="literal">True</span>)</span><br><span class="line">    password = forms.CharField(required=<span class="literal">True</span>, min_length=<span class="number">5</span>)</span><br><span class="line">    captcha = CaptchaField(error_messages=&#123;<span class="string">'invalid'</span>: <span class="string">'验证码错误'</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li>在类视图get方法中需要创建注册表单验证实例化对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RegisterView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""注册"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        register_form = RegisterForm()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"register.html"</span>, &#123;<span class="string">'register_form'</span>:register_form&#125;)</span><br></pre></td></tr></table></figure><ul><li>在注册模板文件form表单中验证码标签下需要打印出后端传递的register_form对象的的captcha方法来显示出验证码图片</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"email_register_form"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'register' %&#125;"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group marb20 "</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>邮&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"id_email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">placeholder</span>=<span class="string">"请输入您的邮箱地址"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group marb8 "</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>密&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"id_password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入6-20位非中文字符密码"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group marb8 captcha1 "</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>验&amp;nbsp;证&amp;nbsp;码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        &#123;&#123; register_form.captcha &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error btns"</span> <span class="attr">id</span>=<span class="string">"jsEmailTips"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"auto-box marb8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"btn btn-green"</span> <span class="attr">id</span>=<span class="string">"jsEmailRegBtn"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册并登录"</span> /&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试注册页面验证码显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506011837416.gif" alt></fancybox></p><ul><li>查看数据表captcha_captchastore生成的验证码数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506012037692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在类视图RegisterView中定义post方法，进行注册表单的验证</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">    register_form = RegisterForm(request.POST)</span><br><span class="line">    <span class="keyword">if</span> register_form.is_valid():</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li>不合法注册验证（密码小于5）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506014012374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>不合法注册验证（邮箱密码为空）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506014548942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>不合法注册验证（验证码错误）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506015459844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>定义类视图post方法，将用户注册填写的用户名（邮箱）密码保存到数据库中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">    register_form = RegisterForm(request.POST)</span><br><span class="line">    <span class="keyword">if</span> register_form.is_valid():</span><br><span class="line">        user_name = request.POST.get(<span class="string">"email"</span>, <span class="string">""</span>)</span><br><span class="line">        pass_word = request.POST.get(<span class="string">"password"</span>, <span class="string">""</span>)</span><br><span class="line">        user_profile = UserProfile()</span><br><span class="line">        user_profile.username = user_name  <span class="comment"># 用户名</span></span><br><span class="line">        user_profile.email = user_name  <span class="comment"># 邮箱</span></span><br><span class="line">        user_profile.password = make_password(pass_word)  <span class="comment"># 密码</span></span><br><span class="line">        user_profile.save()</span><br></pre></td></tr></table></figure><p><strong>10.</strong>发送用户注册激活邮件</p><ul><li>因为使用邮箱注册成功时需要向该邮箱发送激活邮件，对注册用户进行激活处理，所以在项目中需要定义发送邮件工具，即在apps目录下创建utils工具包，在工具包下创建email_send模块，在模块中进行发送邮件代码逻辑处理</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_str</span><span class="params">(randomlength=<span class="number">8</span>)</span>:</span></span><br><span class="line">    <span class="string">"""生成随机字符串"""</span></span><br><span class="line">    str = <span class="string">''</span></span><br><span class="line">    chars = <span class="string">'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789'</span></span><br><span class="line">    length = len(chars) - <span class="number">1</span></span><br><span class="line">    random = Random()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(randomlength):</span><br><span class="line">        str+=chars[random.randint(<span class="number">0</span>, length)]</span><br><span class="line">    <span class="keyword">return</span> str</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_register_email</span><span class="params">(email, send_type=<span class="string">"register"</span>)</span>:</span></span><br><span class="line">    <span class="string">"""发送邮件"""</span></span><br><span class="line">    <span class="comment"># 将要发送的随机字符串和邮箱地址以及验证码类型先保存到数据库中</span></span><br><span class="line">    email_record = EmailVerifyRecord()</span><br><span class="line">    code = random_str(<span class="number">16</span>)</span><br><span class="line">    email_record.code = code</span><br><span class="line">    email_record.email = email</span><br><span class="line">    email_record.send_type = send_type</span><br><span class="line">    email_record.save()</span><br><span class="line">    <span class="comment"># 定义发送邮件的标题和内容，根据验证码类型send_type对应发送不同的内容</span></span><br><span class="line">    email_title = <span class="string">""</span></span><br><span class="line">    email_body = <span class="string">""</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> send_type == <span class="string">"register"</span>:</span><br><span class="line">        email_title = <span class="string">"慕学在线网注册激活链接"</span></span><br><span class="line">        email_body = <span class="string">"请点击下面的链接激活你的账号: http://127.0.0.1:8000/active/&#123;0&#125;"</span>.format(code)</span><br><span class="line"> </span><br><span class="line">        send_status = send_mail(email_title, email_body, EMAIL_FROM, [email])</span><br><span class="line">        <span class="keyword">if</span> send_status:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li>博主在之前的Django电商项目中注册功能实现邮件激活是通过QQ邮箱进行演示的，而这里博主打算新建个新浪邮箱来进行本项目中账户邮件激活演示，首先进入新浪邮箱开启POP3/SMTP服务如下图配置即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506142606388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>完成上一步后，需要在settings中配置邮件信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">EMAIL_HOST = <span class="string">"smtp.sina.com"</span></span><br><span class="line">EMAIL_PORT = <span class="number">25</span></span><br><span class="line">EMAIL_HOST_USER = <span class="string">"cdtaogang@sina.com"</span></span><br><span class="line">EMAIL_HOST_PASSWORD = <span class="string">"xxxxx"</span></span><br><span class="line">EMAIL_USE_TLS= <span class="literal">False</span></span><br><span class="line">EMAIL_FROM = <span class="string">"cdtaogang@sina.com"</span></span><br></pre></td></tr></table></figure><ul><li>回到注册类视图post方法中，调用定义的邮件发送工具包中的send_register_email方法，进行发送注册账号激活邮件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 发送激活邮件</span></span><br><span class="line">send_register_email(user_name, <span class="string">"register"</span>)</span><br></pre></td></tr></table></figure><ul><li>Debug运行项目打断点测试邮件发送是否成功，Debug到post函数中发送调用send_register_email方法时并没有出错</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506145018477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>继续Debug查看工具包中的send_register_email方法中调用send_email方法，返回为1表示发送成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506145408237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>此时查看邮箱已收到邮件，整个注册发送激活邮件逻辑正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506145542978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看数据库userprofile表信息，注册用户成功；因为UserProfile模型类继承的是django user用户类，所以默认is_active为激活状态，正常来说为0未激活，在后面代码逻辑中会进行设置的</li></ul><p><img src="https://img-blog.csdnimg.cn/20190506150825880.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>当注册成功后则跳转到登录页，失败则跳转到注册页</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">    register_form = RegisterForm(request.POST)</span><br><span class="line">    <span class="keyword">if</span> register_form.is_valid():</span><br><span class="line">        user_name = request.POST.get(<span class="string">"email"</span>, <span class="string">""</span>)</span><br><span class="line">        pass_word = request.POST.get(<span class="string">"password"</span>, <span class="string">""</span>)</span><br><span class="line">        user_profile = UserProfile()</span><br><span class="line">        user_profile.username = user_name  <span class="comment"># 用户名</span></span><br><span class="line">        user_profile.email = user_name  <span class="comment"># 邮箱</span></span><br><span class="line">        user_profile.password = make_password(pass_word)  <span class="comment"># 密码</span></span><br><span class="line">        user_profile.save()</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 发送激活邮件</span></span><br><span class="line">        send_register_email(user_name, <span class="string">"register"</span>)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"register.html"</span>,&#123;<span class="string">"register_form"</span>: register_form&#125;)</span><br></pre></td></tr></table></figure><p><strong>11.</strong>将注册表单错误信息显示在页面中</p><ul><li>跟登录功能一样，在注册模板中当存在不合法表单提交时打印出对应的错误提示，并对其input框添加红框样式显示；这里给邮箱框和密码框设定了value值为当用户输入不合法时，则在输入框中显示上一次的输入</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"email_register_form"</span> <span class="attr">novalidate</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'register' %&#125;"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group marb20 &#123;% if register_form.errors.email %&#125;errorput&#123;% endif %&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>邮&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"id_email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; register_form.email.value &#125;&#125;"</span> <span class="attr">placeholder</span>=<span class="string">"请输入您的邮箱地址"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group marb8 &#123;% if register_form.errors.password %&#125;errorput&#123;% endif %&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>密&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"id_password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; register_form.password.value &#125;&#125;"</span> <span class="attr">placeholder</span>=<span class="string">"请输入5-20位非中文字符密码"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group marb8 captcha1 &#123;% if register_form.errors.captcha %&#125;errorput&#123;% endif %&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>验&amp;nbsp;证&amp;nbsp;码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        &#123;&#123; register_form.captcha &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error btns"</span> <span class="attr">id</span>=<span class="string">"jsEmailTips"</span>&gt;</span>&#123;% for key,error in register_form.errors.items %&#125;&#123;&#123; error &#125;&#125;&#123;% endfor %&#125;&#123;&#123; err_msg &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"auto-box marb8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"btn btn-green"</span> <span class="attr">id</span>=<span class="string">"jsEmailRegBtn"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册并登录"</span> /&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注册功能提交错误表达测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506152653449.gif" alt></fancybox></p><p><strong>12.</strong>定义账户激活类视图，完成账户的激活</p><ul><li>在注册类视图post方法中需要设置用户的激活状态为False，表示未激活</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_profile.is_active = <span class="literal">False</span></span><br></pre></td></tr></table></figure><ul><li>在users/views中定义账户激活类视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AciveUserView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""账户激活"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, active_code)</span>:</span></span><br><span class="line">        <span class="comment"># 根据邮件中的链接地址获取地址中的随机字符串到数据库emailverifyrecord表中获取此数据</span></span><br><span class="line">        all_records = EmailVerifyRecord.objects.filter(code=active_code)</span><br><span class="line">        <span class="comment"># 如果查询到数据则进行遍历获取record对象中的email，再根据email到用户信息表中查询user对象，设置此对象的is_active字段为True(激活)</span></span><br><span class="line">        <span class="comment"># 最后返回到登录页面</span></span><br><span class="line">        <span class="keyword">if</span> all_records:</span><br><span class="line">            <span class="keyword">for</span> record <span class="keyword">in</span> all_records:</span><br><span class="line">                email = record.email</span><br><span class="line">                user = UserProfile.objects.get(email=email)</span><br><span class="line">                user.is_active = <span class="literal">True</span></span><br><span class="line">                user.save()</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>在根级urls中定义账户激活的路由，（）进行获取正则匹配到的参数保存到active_code中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^active/(?P&lt;active_code&gt;.*)/$'</span>,AciveUserView.as_view(), name=<span class="string">"user_active"</span>)</span><br></pre></td></tr></table></figure><ul><li>在登录类视图post方法中则需要判断当前用户的is_active字段的值是否为True</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">    login_form = LoginFrom(request.POST)  <span class="comment"># 需传递的是字典对象</span></span><br><span class="line">    <span class="keyword">if</span> login_form.is_valid():</span><br><span class="line">        user_name = request.POST.get(<span class="string">"username"</span>, <span class="string">""</span>)</span><br><span class="line">        pass_word = request.POST.get(<span class="string">"password"</span>, <span class="string">""</span>)</span><br><span class="line">        user = authenticate(username=user_name, password=pass_word)</span><br><span class="line">        <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">if</span> user.is_active:</span><br><span class="line">                login(request, user)</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>, &#123;<span class="string">"err_msg"</span>: <span class="string">"用户未激活"</span>&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>, &#123;<span class="string">"err_msg"</span>: <span class="string">"用户名或密码错误"</span>&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>, &#123;<span class="string">"login_form"</span>: login_form&#125;)</span><br></pre></td></tr></table></figure><ul><li>删除userprofile用户表和emailverifyrecord邮箱验证表<a href="mailto:cdtaogang@sina.com" target="_blank" rel="noopener">cdtaogang@sina.com</a>账户信息（因为之前还未设置用户注册时is_active字段为False），重新进行注册登录验证</li></ul><p><img src="https://img-blog.csdnimg.cn/20190506164013119.png" alt></p><ul><li>还是使用之前的新浪邮箱进行注册，注册成功后查看数据表userprofile信息中is_active字段显示为0</li></ul><p><img src="https://img-blog.csdnimg.cn/20190506165738982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>登录以上注册账户进行测试，则提示账户未激活</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506164917636.gif" alt></fancybox></p><ul><li>查看邮件中激活邮件，访问激活链接地址，调用激活类视图，对此注册用户进行激活，最后跳转到登录页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506170018261.gif" alt></fancybox></p><ul><li>查看数据表userprofile信息</li></ul><p><img src="https://img-blog.csdnimg.cn/20190506165819577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>13.</strong>完善注册功能</p><ul><li>一个邮箱只能允许被注册一次，即在注册类视图post方法中需要将用户填写的邮箱拿到后台数据库中进行查询，如果查询到说明此邮箱已经被注册过了，那么就返回错误信息提示，并返回注册页面，需要注意的是注册模板中需要register_form值，所以需要进行传递，不传递则，不会提示错误信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断邮箱是否已经注册过</span></span><br><span class="line"><span class="keyword">if</span> UserProfile.objects.filter(email=user_name):</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"register.html"</span>, &#123;<span class="string">"register_form"</span>: register_form, <span class="string">"err_msg"</span>: <span class="string">"此邮箱已被注册过"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li>测试使用已经注册成功的邮箱进行二次注册</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506172727459.gif" alt></fancybox></p><ul><li>在激活链接视图中当激活链接中的active_code不存在时，则返回错误页面信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AciveUserView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""账户激活"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, active_code)</span>:</span></span><br><span class="line">        <span class="comment"># 根据邮件中的链接地址获取地址中的随机字符串到数据库emailverifyrecord表中获取此数据</span></span><br><span class="line">        all_records = EmailVerifyRecord.objects.filter(code=active_code)</span><br><span class="line">        <span class="comment"># 如果查询到数据则进行遍历获取record对象中的email，再根据email到用户信息表中查询user对象，设置此对象的is_active字段为True(激活)</span></span><br><span class="line">        <span class="comment"># 最后返回到登录页面</span></span><br><span class="line">        <span class="keyword">if</span> all_records:</span><br><span class="line">            <span class="keyword">for</span> record <span class="keyword">in</span> all_records:</span><br><span class="line">                email = record.email</span><br><span class="line">                user = UserProfile.objects.get(email=email)</span><br><span class="line">                user.is_active = <span class="literal">True</span></span><br><span class="line">                user.save()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"active_fail.html"</span>)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>在templates目录下创建active_fail模板文件，在该文件中可自定义页面数据，主要是为了提示用户链接地址错误不存在之类的</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"txtbox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>对不起，您请求的页面不存在、或已被删除、或暂时不可用<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"paddingbox"</span>&gt;</span>请点击以下链接继续浏览网页<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"cursor:pointer"</span> ο<span class="attr">nclick</span>=<span class="string">"history.back()"</span>&gt;</span>返回上一页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'index' %&#125;"</span>&gt;</span>返回网站首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试访问错误的激活链接地址（为了方便演示，换了火狐浏览器）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506174625598.gif" alt></fancybox></p><h1 id="二丶找回密码（忘记密码）"><a href="#二丶找回密码（忘记密码）" class="headerlink" title="二丶找回密码（忘记密码）"></a>二丶找回密码（忘记密码）</h1><p><strong>1.</strong>显示忘记密码页面</p><ul><li>定义忘记密码类视图get函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ForgetPwdView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""找回密码"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"forgetpwd.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>在根级urls中配置路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^forget/$'</span>, ForgetPwdView.as_view(), name=<span class="string">"forget_pwd"</span>)</span><br></pre></td></tr></table></figure><ul><li>将static目录下的forgetpwd.html模板文件拷贝到templates目录下，然后在login模板文件中修改忘记密码链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"fr"</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'forget_pwd' %&#125;"</span>&gt;</span>忘记密码？<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示忘记密码页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506182636982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>修改forgetpwd模板文件中的静态资源链接地址，再次刷新页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506183224728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>在忘记密码页面显示验证码图片</p><ul><li>定义忘记密码form表单验证（跟注册表单验证逻辑一样）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ForgetForm</span><span class="params">(forms.Form)</span>:</span></span><br><span class="line">    <span class="string">"""忘记密码表单验证"""</span></span><br><span class="line">    email = forms.EmailField(required=<span class="literal">True</span>)</span><br><span class="line">    captcha = CaptchaField(error_messages=&#123;<span class="string">'invalid'</span>: <span class="string">'验证码错误'</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li>在类视图get方法中需要传递表单验证实例化对象到模板中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">    forget_form = ForgetForm()</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"forgetpwd.html"</span>, &#123;<span class="string">"forget_form"</span>: forget_form&#125;)</span><br></pre></td></tr></table></figure><ul><li>在forgetpwd模板中，打印验证码图片</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group captcha1 marb38"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>验&amp;nbsp;证&amp;nbsp;码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    &#123;&#123; forget_form.captcha &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面，则成功显示出图片验证码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506184403986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>发送重置密码邮件</p><ul><li>在类视图中定义post方法，实现重置密码（代码逻辑与注册一样）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">    forget_form = ForgetForm(request.POST)</span><br><span class="line">    <span class="keyword">if</span> forget_form.is_valid():</span><br><span class="line">        email = request.POST.get(<span class="string">"email"</span>, <span class="string">""</span>)</span><br><span class="line">        send_register_email(email, <span class="string">"forget"</span>)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"send_success.html"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"forgetpwd.html"</span>, &#123;<span class="string">"forget_form"</span>: forget_form&#125;)</span><br></pre></td></tr></table></figure><ul><li>在forgetpwd模板文件中首先定义表单的请求方式以及地址，然后打印显示错误提示信息和显示错误红框以及在输入框中显示错误输入的邮箱地址（和register模板一样）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"jsFindPwdForm"</span> <span class="attr">novalidate</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'forget_pwd' %&#125;"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group marb20 &#123;% if register_form.errors.email %&#125;errorput&#123;% endif %&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>帐&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"account"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; register_form.email.value &#125;&#125;"</span> <span class="attr">placeholder</span>=<span class="string">"邮箱"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group captcha1 marb38 &#123;% if register_form.errors.captcha %&#125;errorput&#123;% endif %&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>验&amp;nbsp;证&amp;nbsp;码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        &#123;&#123; forget_form.captcha &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error btns"</span> <span class="attr">id</span>=<span class="string">"jsForgetTips"</span>&gt;</span>&#123;% for key,error in forget_form.errors.items %&#125;&#123;&#123; error &#125;&#125;&#123;% endfor %&#125;&#123;&#123; err_msg &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"sms_type"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"btn btn-green"</span> <span class="attr">id</span>=<span class="string">"jsFindPwdBtn"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"form-p"</span> <span class="attr">style</span>=<span class="string">"bottom:40px;"</span>&gt;</span>您还可以<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"login.html"</span>&gt;</span> [直接登录]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在email_send模块send_register_email方法中需要定义发送重置密码的链接地址</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> send_type == <span class="string">"forget"</span>:</span><br><span class="line">    email_title = <span class="string">"慕学在线网注册密码重置链接"</span></span><br><span class="line">    email_body = <span class="string">"请点击下面的链接重置密码: http://127.0.0.1:8000/reset/&#123;0&#125;"</span>.format(code)</span><br><span class="line"> </span><br><span class="line">    send_status = send_mail(email_title, email_body, EMAIL_FROM, [email])</span><br><span class="line">    <span class="keyword">if</span> send_status:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li>邮件发送成功后则需要提示用户发送成功，所以需要在templates目录下创建视图方法中返回的send_success模板文件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-size: 25px;font-style:inherit;color: #3f4724"</span>&gt;</span>邮件发送成功，请查收<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span> <span class="attr">href</span>=<span class="string">"https://mail.sina.com.cn/"</span>&gt;</span>登录我的邮箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Debug测试忘记密码发送邮件成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506201446298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>同时Debug测试完成后，则在页面上渲染出send_success模板</li></ul><p><img src="https://img-blog.csdnimg.cn/20190506201655943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>点击登录我的邮箱，查看邮件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506201750514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>访问重置密码链接地址跳转到密码重置页面</p><ul><li>首先定义重置密码类视图get方法（与注册账户激活逻辑大同小异），获取到用户邮箱后，则跳转到密码重置的页面（password_rest.html）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ResetView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""重置密码"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, active_code)</span>:</span></span><br><span class="line">        <span class="comment"># 根据邮件中的链接地址获取地址中的随机字符串到数据库emailverifyrecord表中获取此数据</span></span><br><span class="line">        all_records = EmailVerifyRecord.objects.filter(code=active_code)</span><br><span class="line">        <span class="comment"># 如果查询到数据则进行遍历获取record对象中的email，返回密码重置页面，并将email传递给模板</span></span><br><span class="line">        <span class="comment"># 最后返回到登录页面</span></span><br><span class="line">        <span class="keyword">if</span> all_records:</span><br><span class="line">            <span class="keyword">for</span> record <span class="keyword">in</span> all_records:</span><br><span class="line">                email = record.email</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">"password_reset.html"</span>, &#123;<span class="string">"email"</span>:email&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"active_fail.html"</span>)</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>将static目录下的password_rest.html模板拷贝到templates目录下，修改模板资源路径这个就不再说了，之前已经演示过了，只需要将类视图传递过来的email，隐藏打印在input标签中</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"reset_password_form"</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span>新 密 码 ：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password1"</span> <span class="attr">id</span>=<span class="string">"pwd"</span> <span class="attr">placeholder</span>=<span class="string">"5-20位非中文字符"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; email &#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span>确定密码：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password2"</span> <span class="attr">id</span>=<span class="string">"repwd"</span> <span class="attr">placeholder</span>=<span class="string">"5-20位非中文字符"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"button"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Debug断点测试访问重置密码链接地址<a href="http://127.0.0.1:8000/reset/iY9fgEJkd4bVJXSL" target="_blank" rel="noopener">http://127.0.0.1:8000/reset/iY9fgEJkd4bVJXSL</a>是否跳转到密码重置页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506210337150.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Debug断点测试完成后，页面成功跳转至密码修改页面（password_rest.html）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506210545424.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>5.</strong>密码修改功能实现</p><ul><li>因为密码修改页面，也是form表单提交，所以需要在forms中定义修改密码表单验证（需要注意的是忘记密码是一个表单，同样修改密码也是一个表单，两个表单都是单独页面）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModifyPwdForm</span><span class="params">(forms.Form)</span>:</span></span><br><span class="line">    <span class="string">"""修改密码表单验证"""</span></span><br><span class="line">    password1 = forms.CharField(required=<span class="literal">True</span>, min_length=<span class="number">5</span>)</span><br><span class="line">    password2 = forms.CharField(required=<span class="literal">True</span>, min_length=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><ul><li>定义修改密码类视图post方法，完成密码修改功能逻辑，需要注意的是为什么不在重置密码类视图ResetView下直接定义post方法，因为该类视图的路由规则中需要传递active_code，所以这里需要另外定义类视图来完成修改密码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ModifyPwdView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""修改密码"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        modify_form = ModifyPwdForm(request.POST)</span><br><span class="line">        <span class="keyword">if</span> modify_form.is_valid():</span><br><span class="line">            pwd1 = request.POST.get(<span class="string">"password1"</span>, <span class="string">""</span>)</span><br><span class="line">            pwd2 = request.POST.get(<span class="string">"password2"</span>, <span class="string">""</span>)</span><br><span class="line">            <span class="comment"># 该email为模板中隐藏的input标签</span></span><br><span class="line">            email = request.POST.get(<span class="string">"email"</span>, <span class="string">""</span>)</span><br><span class="line">            <span class="comment"># 当用户两次密码不一致则提示错误信息到页面，一致时则通过用户名也就是邮箱来获取用户信息user对象，设置对象中的密码为用户填写的密码</span></span><br><span class="line">            <span class="comment"># 最后返回到登录页面</span></span><br><span class="line">            <span class="keyword">if</span> pwd1 != pwd2:</span><br><span class="line">                <span class="keyword">return</span> render(request, <span class="string">"password_reset.html"</span>, &#123;<span class="string">"email"</span>:email, <span class="string">"msg"</span>:<span class="string">"密码不一致"</span>&#125;)</span><br><span class="line">            user = UserProfile.objects.get(email=email)</span><br><span class="line">            user.password = make_password(pwd2)</span><br><span class="line">            user.save()</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 表单验证不通过，则需要获取email邮箱地址，返回给password_reset模板，以及表单对象好用作于密码修改表单错误信息打印</span></span><br><span class="line">            email = request.POST.get(<span class="string">"email"</span>, <span class="string">""</span>)</span><br><span class="line">            <span class="keyword">return</span> render(request, <span class="string">"password_reset.html"</span>, &#123;<span class="string">"email"</span>:email, <span class="string">"modify_form"</span>:modify_form&#125;)</span><br></pre></td></tr></table></figure><ul><li>在根级urls中配置路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^modify_pwd/$'</span>, ModifyPwdView.as_view(), name=<span class="string">"modify_pwd"</span>),</span><br></pre></td></tr></table></figure><ul><li>紧接着在password_rest模板中，定义表单的请求方式以及地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"reset_password_form"</span> <span class="attr">action</span>=<span class="string">"&#123;% url 'modify_pwd' %&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Debug测试密码修改功能，测试密码修改成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506215204509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>Debug测试完成后，页面跳转到登录页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506215907389.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>6.</strong>密码修改功能完整测试</p><p><strong>说明</strong>：由于时间过长所以制作成两部分的动图</p><ul><li>第一部分完成重置密码邮件的发送</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506221428898.gif" alt></fancybox></p><ul><li>第二部分访问重置密码链接地址完成密码修改并进行登录</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190506221813182.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/89844432" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/89844432</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目于之在线教育平台网站的实战开发（一）</title>
      <link href="/2019/11/12/Django%E9%A1%B9%E7%9B%AE%E4%BA%8E%E4%B9%8B%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/11/12/Django%E9%A1%B9%E7%9B%AE%E4%BA%8E%E4%B9%8B%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><fancybox><img src="https://cdn.jsdelivr.net/gh/Hellotaogang/cdn@4.6.5/images/djnago_edu.png" width="900px" height="300px" align></fancybox><br>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶叙述"><span style="color:#4ea1db">一丶叙述</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶Windows环境搭建"><span style="color:#4ea1db">二丶Windows环境搭建</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶数据库模型设计"><span style="color:#4ea1db">三丶数据库模型设计</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶搭建后台管理系统"><span style="color:#4ea1db">四丶搭建后台管理系统</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶使用xadmin注册方式注册模型表"><span style="color:#4ea1db">五丶使用xadmin注册方式注册模型表</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶xadmin后台页面全局配置"><span style="color:#4ea1db">六丶xadmin后台页面全局配置</span></a></li><a id="more"></a><h1 id="一丶叙述"><a href="#一丶叙述" class="headerlink" title="一丶叙述"></a>一丶叙述</h1><p><strong>1.</strong>项目介绍</p><ul><li>产品：关于Web端的教育平台网站</li><li>商业模式：B2C模式 企业对个人</li><li>设计模式：使用前后端不分离进行项目开发(后端控制前端的效果展示</li></ul><p><strong>2.</strong>开发环境（Windows）</p><ul><li>开发语言：Python3</li><li>数据库：MySQL</li><li>前端：X-admin（前端后台模板框架）</li><li>Web开发框架：Django</li><li>编程工具：PyCharm</li></ul><p><strong>3.</strong>前端页面效果展示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190503161850222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶Windows环境搭建"><a href="#二丶Windows环境搭建" class="headerlink" title="二丶Windows环境搭建"></a>二丶Windows环境搭建</h1><ul><li>创建虚拟环境</li></ul><p><img src="https://img-blog.csdnimg.cn/2019050316471587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>在django_py3虚拟环境中安装django</li></ul><p><img src="https://img-blog.csdnimg.cn/20190503165853666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>创建django项目并配置解释器（django_py3）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190503170129523.png" alt></p><ul><li>创建成功如下图所示</li></ul><p><img src="https://img-blog.csdnimg.cn/20190503170302751.png" alt></p><ul><li>配置settings中的数据库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'mxonline'</span>,</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'mysql'</span>,</span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'localhost'</span>,</span><br><span class="line">        <span class="string">'PORT'</span>: <span class="string">'3306'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建mxonline数据库</li></ul><p><img src="https://img-blog.csdnimg.cn/20190503175900151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><font style="color:red">启动项目，然后提示如下报错（之前的django项目使用的是python2环境，当前项目环境为python3）</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019050318275666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><font style="color:red">python3和python2两个的版本不一样，所以安装的东西也不一样：MySQLdb 安装mysql的连接包；工具安装 python3.x版本pip install mysqlclient 但是python2.x 版本pip install mysql-python</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190503182312935.png" alt></fancybox></p><ul><li>重新运行项目成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190503182604469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶数据库模型设计"><a href="#三丶数据库模型设计" class="headerlink" title="三丶数据库模型设计"></a>三丶数据库模型设计</h1><p><strong>1.</strong>创建app应用users（用户信息的应用）</p><ul><li>打开IDE–Tools/Run manage.py Task，创建应用app</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190503190257773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在users/models中创建用户信息模型表（该模型继承与django认证的user模型类，并且可以在原有的基础上添加所需表字段）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserProfile</span><span class="params">(AbstractUser)</span>:</span></span><br><span class="line">    <span class="string">"""用户信息"""</span></span><br><span class="line">    nick_name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"昵称"</span>, default=<span class="string">""</span>)</span><br><span class="line">    birday = models.DateField(verbose_name=<span class="string">u"生日"</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    gender = models.CharField(max_length=<span class="number">6</span>, choices=((<span class="string">"male"</span>, <span class="string">u"男"</span>), (<span class="string">"female"</span>, <span class="string">u"女"</span>)), default=<span class="string">"female"</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">100</span>, default=<span class="string">u""</span>)</span><br><span class="line">    mobile = models.CharField(max_length=<span class="number">11</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"image/%Y/%m"</span>, default=<span class="string">u"image/default.png"</span>, max_length=<span class="number">100</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">"用户信息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br></pre></td></tr></table></figure><ul><li>在setting中注册users，并指定定义的模型类（默认覆盖AbstractUser类中的User表）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">"users"</span></span><br><span class="line">]</span><br><span class="line"><span class="comment"># 设置用户模型类</span></span><br><span class="line">AUTH_USER_MODEL = <span class="string">"users.UserProfile"</span></span><br></pre></td></tr></table></figure><ul><li>生成迁移文件并执行迁移</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190503190936267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看数据库表信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190503191144302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在users/models中创建邮箱验证码模型表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailVerifyRecord</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""邮箱验证码"""</span></span><br><span class="line">    code = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u"验证码"</span>)</span><br><span class="line">    email = models.EmailField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"邮箱"</span>)</span><br><span class="line">    send_type = models.CharField(verbose_name=<span class="string">u"验证码类型"</span>, choices=((<span class="string">"register"</span>,<span class="string">u"注册"</span>),(<span class="string">"forget"</span>,<span class="string">u"找回密码"</span>), (<span class="string">"update_email"</span>,<span class="string">u"修改邮箱"</span>)), max_length=<span class="number">30</span>)</span><br><span class="line">    send_time = models.DateTimeField(verbose_name=<span class="string">u"发送时间"</span>, default=datetime.now)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"邮箱验证码"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li>在users/models中创建主页轮播图模型表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Banner</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""主页轮播图"""</span></span><br><span class="line">    title = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u"标题"</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"banner/%Y/%m"</span>, verbose_name=<span class="string">u"轮播图"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    url = models.URLField(max_length=<span class="number">200</span>, verbose_name=<span class="string">u"访问地址"</span>)</span><br><span class="line">    index = models.IntegerField(default=<span class="number">100</span>, verbose_name=<span class="string">u"顺序"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"轮播图"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li>生成迁移文件并执行迁移</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504095730252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>查看生成的数据库表信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504095850824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>创建app应用courses（课程相关的应用）</p><ul><li>创建app应用</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019050410084154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在courses/models中创建课程基本信息表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Course</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""课程基本信息表"""</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"课程名"</span>)</span><br><span class="line">    desc = models.CharField(max_length=<span class="number">300</span>, verbose_name=<span class="string">u"课程描述"</span>)</span><br><span class="line">    detail = models.TextField(verbose_name=<span class="string">u"课程详情"</span>)</span><br><span class="line">    degree = models.CharField(verbose_name=<span class="string">u"难度"</span>, choices=((<span class="string">"cj"</span>,<span class="string">"初级"</span>), (<span class="string">"zj"</span>,<span class="string">"中级"</span> ), (<span class="string">"gj"</span>,<span class="string">"高级"</span>)), max_length=<span class="number">2</span>)</span><br><span class="line">    learn_times = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"学习时长(分钟数)"</span>)</span><br><span class="line">    students = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u'学习人数'</span>)</span><br><span class="line">    fav_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u'收藏人数'</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"courses/%Y/%m"</span>, verbose_name=<span class="string">u"封面图"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    click_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li>在courses/models中创建章节信息表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lesson</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""章节信息表"""</span></span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u"章节名"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"章节"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li>在courses/models中创建视频表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Video</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""视频表"""</span></span><br><span class="line">    lesson = models.ForeignKey(Lesson, verbose_name=<span class="string">u"章节"</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u"视频名"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"视频"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li>在courses/models中创建课程资源表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseResource</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""课程资源"""</span></span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">100</span>, verbose_name=<span class="string">u"名称"</span>)</span><br><span class="line">    download = models.FileField(upload_to=<span class="string">"course/resource/%Y/%m"</span>, verbose_name=<span class="string">u"资源文件"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程资源"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><p><strong>3.</strong>创建app应用organization（机构相关的应用）</p><ul><li>创建app应用</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019050410463126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在organization/models中创建城市基本信息表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CityDict</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""城市基本信息"""</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u"城市"</span>)</span><br><span class="line">    desc = models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">u"描述"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"城市"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li>在organization/models中创建课程机构基本信息表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseOrg</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""课程机构基本信息"""</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"机构名称"</span>)</span><br><span class="line">    desc = models.TextField(verbose_name=<span class="string">u"机构描述"</span>)</span><br><span class="line">    click_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    fav_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"收藏数"</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">"org/%Y/%m"</span>, verbose_name=<span class="string">u"logo"</span>, max_length=<span class="number">100</span>)</span><br><span class="line">    address = models.CharField(max_length=<span class="number">150</span>, verbose_name=<span class="string">u"机构地址"</span>)</span><br><span class="line">    city = models.ForeignKey(CityDict, verbose_name=<span class="string">u"所在城市"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程机构"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li>在organization/models中创建教师基本信息表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""教师基本信息"""</span></span><br><span class="line">    org = models.ForeignKey(CourseOrg, verbose_name=<span class="string">u"所属机构"</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"教师名"</span>)</span><br><span class="line">    work_years = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"工作年限"</span>)</span><br><span class="line">    work_company = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"就职公司"</span>)</span><br><span class="line">    work_position = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"公司职位"</span>)</span><br><span class="line">    points = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"教学特点"</span>)</span><br><span class="line">    click_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"点击数"</span>)</span><br><span class="line">    fav_nums = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"收藏数"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"教师"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><p><strong>4.</strong>创建app应用operation（用户操作的应用）</p><ul><li>创建app应用</li></ul><p><img src="https://img-blog.csdnimg.cn/20190504110912511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>在operation/models中创建用户咨询表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAsk</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""用户咨询"""</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">u"姓名"</span>)</span><br><span class="line">    mobile = models.CharField(max_length=<span class="number">11</span>, verbose_name=<span class="string">u"手机"</span>)</span><br><span class="line">    course_name = models.CharField(max_length=<span class="number">50</span>, verbose_name=<span class="string">u"课程名"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户咨询"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li>在operation/models中创建课程评论表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseComments</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""课程评论"""</span></span><br><span class="line">    user = models.ForeignKey(UserProfile, verbose_name=<span class="string">u"用户"</span>)</span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    comments = models.CharField(max_length=<span class="number">200</span>, verbose_name=<span class="string">u"评论"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"课程评论"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li>在operation/models中创建用户收藏表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserFavorite</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""用户收藏"""</span></span><br><span class="line">    user = models.ForeignKey(UserProfile, verbose_name=<span class="string">u"用户"</span>)</span><br><span class="line">    fav_id = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"数据id"</span>)</span><br><span class="line">    fav_type = models.IntegerField(choices=((<span class="number">1</span>,<span class="string">"课程"</span>),(<span class="number">2</span>,<span class="string">"课程机构"</span>),(<span class="number">3</span>,<span class="string">"讲师"</span>)), default=<span class="number">1</span>, verbose_name=<span class="string">u"收藏类型"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户收藏"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li>在operation/models中创建用户消息表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserMessage</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""用户消息"""</span></span><br><span class="line">    user = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">u"接收用户"</span>)</span><br><span class="line">    message = models.CharField(max_length=<span class="number">500</span>, verbose_name=<span class="string">u"消息内容"</span>)</span><br><span class="line">    has_read = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">u"是否已读"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户消息"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li>在operation/models中创建用户学习课程表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserCourse</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""用户学习课程"""</span></span><br><span class="line">    user = models.ForeignKey(UserProfile, verbose_name=<span class="string">u"用户"</span>)</span><br><span class="line">    course = models.ForeignKey(Course, verbose_name=<span class="string">u"课程"</span>)</span><br><span class="line">    add_time = models.DateTimeField(default=datetime.now, verbose_name=<span class="string">u"添加时间"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        verbose_name = <span class="string">u"用户课程"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><p><strong>5.</strong>生成所有的数据表</p><ul><li>在settings中注册创建的应用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">"users"</span>,</span><br><span class="line">    <span class="string">"courses"</span>,</span><br><span class="line">    <span class="string">"organization"</span>,</span><br><span class="line">    <span class="string">"operation"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>生成所有应用的migrations记录（迁移文件）</li><li>说明：因为之前users应用已经进行生成过迁移，所以这里只显示出以下三个应用app，makemigrations 后面不跟上应用app，则表示执行全部app应用可生成的迁移文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504122652369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在项目根目录下创建apps模块，将4个应用拷贝到该模块中，如下图所示</li></ul><p><img src="https://img-blog.csdnimg.cn/20190504124143967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>此时在models中会发现导入其他应用的app会提示找不到，则需要右击apps模块，点击Soures Root（这个操作会让IDE去搜索此apps目录）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190504124323499.png" alt></p><ul><li><font style="color:red">执行迁移文件，然后会提示找不到users app应用，这个提示是正常的，因为上一步是针对于IDE编辑器本身查找路径，跟django框架本身没有任何关系，所以提示找不到</font></li></ul><p><img src="https://img-blog.csdnimg.cn/20190504124503220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><font style="color:red">在settings配置文件中添加apps路径</font></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(BASE_DIR, <span class="string">"apps"</span>))</span><br></pre></td></tr></table></figure><ul><li>再次执行迁移，则执行成功</li></ul><p><img src="https://img-blog.csdnimg.cn/20190504125211658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>查看数据库mxonline表信息</li></ul><p><img src="https://img-blog.csdnimg.cn/20190504125615759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><h1 id="四丶搭建后台管理系统"><a href="#四丶搭建后台管理系统" class="headerlink" title="四丶搭建后台管理系统"></a>四丶搭建后台管理系统</h1><p><strong>1.</strong>创建后台管理员用户</p><p><img src="https://img-blog.csdnimg.cn/20190504131150912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>2.</strong>进入admin后台管理页面</p><ul><li>启动项目</li></ul><p><img src="https://img-blog.csdnimg.cn/20190504131340470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>在浏览器输入<a href="http://127.0.0.1:8000/admin" target="_blank" rel="noopener">http://127.0.0.1:8000/admin</a>，进入后台登录页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504131457779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>使用创建的cdtaogang用户进行后台管理系统的登录</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504131619851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>更改后台管理系统页面语言</p><ul><li>在settings中配置语言和时区</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LANGUAGE_CODE = &apos;zh-hans&apos;</span><br><span class="line"> </span><br><span class="line">TIME_ZONE = &apos;Asia/Shanghai&apos;</span><br><span class="line"> </span><br><span class="line">USE_TZ = False  # 更改数据库存储时间为本地时间而不是国际utc时间</span><br></pre></td></tr></table></figure><ul><li>刷新页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504132045836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>在django后端管理系统中显示用户信息表</p><ul><li>在users/admin中注册用户信息表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserProfileAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line">admin.site.register(UserProfile, UserProfileAdmin)</span><br></pre></td></tr></table></figure><ul><li>刷新页面则显示注册的用户信息表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504134357613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>进入用户信息表查看当前用户信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504134904284.gif" alt></fancybox></p><p><strong>5.</strong>使用X-admin（基于django的后台框架）来替换当前的django后台管理系统</p><ul><li><font style="color:red">安装xadmin，结果报错，提示README.rst文件中编码问题</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504135830411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><font style="color:red">解决方法：下载xadmin安装包</font><a href="https://github.com/sshwsfc/xadmin" target="_blank" rel="noopener">https://github.com/sshwsfc/xadmin</a>，<font style="color:red">打开安装包中的README.rst文件，将内容全部删除即可</font></li></ul><p><img src="https://img-blog.csdnimg.cn/20190504140417508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>将xadmin-master.zip安装包放在项目根目录下，进入如下安装</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504141308958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><font style="color:red">最后安装xadmin成功，但提示django版本需在1.11版本以上，但1.9版本不兼容，博主该项目django版本为1.9</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504141422386.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>那么就换个django版本安装即可</li></ul><p><img src="https://img-blog.csdnimg.cn/20190504142041200.png" alt></p><ul><li>查看当前环境下的包</li></ul><p><img src="https://img-blog.csdnimg.cn/20190504142239657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>将安装成功后的xadmin以及crispy_forms包添加到应用中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">"users"</span>,</span><br><span class="line">    <span class="string">"courses"</span>,</span><br><span class="line">    <span class="string">"organization"</span>,</span><br><span class="line">    <span class="string">"operation"</span>,</span><br><span class="line">    <span class="string">"xadmin"</span>,</span><br><span class="line">    <span class="string">"crispy_forms"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>修改根基urls中的路由地址</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">import</span> xadmin</span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># url(r'^admin/', admin.site.urls),</span></span><br><span class="line">url(<span class="string">r'^xadmin/'</span>, xadmin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>运行项目，在浏览器中输入<a href="http://127.0.0.1:8000/xadmin/" target="_blank" rel="noopener">http://127.0.0.1:8000/xadmin/</a>，提示以下错误（原因是xadmin自带的表为找到）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190504143239287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>解决以上错误的方法：在数据库中去生成xadmin所需要的表（生成迁移并执行迁移）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504143611996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>刷新<a href="http://127.0.0.1:8000/xadmin/" target="_blank" rel="noopener">http://127.0.0.1:8000/xadmin/</a> 页面，成功显示xadmin的后台管理页面（确实要比django 自带的admin后台管理系统强大的多）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504145144779.gif" alt></fancybox></p><p><strong>6.</strong>源码安装xadmin </p><ul><li>为了方便对xadmin源码进行修改操作，所以可以直接将下载好的xadmin-master.zip包进行解压后，在解压的文件中找xadmin文件拷贝到项目根目录下的extra_apps包下（需要创建extra_apps包），该操作为源码安装，如下图所示</li></ul><p><img src="https://img-blog.csdnimg.cn/2019050415005557.png" alt></p><ul><li>测试源码安装的xadmin是否成功，能否进入xadmin管理后台，在根级urls导入extra_apps包下的xadmin模块</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="comment"># import xadmin</span></span><br><span class="line"><span class="keyword">from</span> extra_apps <span class="keyword">import</span> xadmin</span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># url(r'^admin/', admin.site.urls),</span></span><br><span class="line">url(<span class="string">r'^xadmin/'</span>, xadmin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>修改settings配置文件中注册的xadmin为extra_apps.xadmin</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">    &quot;users&quot;,</span><br><span class="line">    &quot;courses&quot;,</span><br><span class="line">    &quot;organization&quot;,</span><br><span class="line">    &quot;operation&quot;,</span><br><span class="line">    &quot;extra_apps.xadmin&quot;,</span><br><span class="line">    &quot;crispy_forms&quot;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>刷新页面，xadmin后台管理页面显示不变，说明源码安装成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504151049750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶使用xadmin注册方式注册模型表"><a href="#五丶使用xadmin注册方式注册模型表" class="headerlink" title="五丶使用xadmin注册方式注册模型表"></a>五丶使用xadmin注册方式注册模型表</h1><p><strong>1.</strong>注册users应用下的模型表</p><ul><li>定义py文件的签名模板（每当创建一个py文件时，就会自动添加定义的模板内容）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190504152222469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>在users应用下创建adminx.py文件（xadmin会自动去搜索应用下的此文件），在该文件中进行模型表注册</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">__author__ = <span class="string">'cdtaogang'</span></span><br><span class="line">__date__ = <span class="string">'2019/5/4 15:24'</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> extra_apps <span class="keyword">import</span> xadmin</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> EmailVerifyRecord</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailVerifyRecordAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line">xadmin.site.register(EmailVerifyRecord, EmailVerifyRecordAdmin)</span><br></pre></td></tr></table></figure><ul><li>刷新页面，就能看到以上注册的邮箱验证码了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504153857185.gif" alt></fancybox></p><ul><li>在xadmin后台中添加邮箱验证码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504162621405.gif" alt></fancybox></p><ul><li>自定义邮箱验证码列表显示字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailVerifyRecordAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'code'</span>, <span class="string">'email'</span>, <span class="string">'send_type'</span>, <span class="string">'send_time'</span>]  <span class="comment"># 列表字段展示</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面，查看邮箱验证码列表显示字段</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504164024524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>添加邮箱验证码列表页面中搜索字段框</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailVerifyRecordAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'code'</span>, <span class="string">'email'</span>, <span class="string">'send_type'</span>, <span class="string">'send_time'</span>]  <span class="comment"># 列表字段展示</span></span><br><span class="line">    search_fields = [<span class="string">'code'</span>, <span class="string">'email'</span>, <span class="string">'send_type'</span>]  <span class="comment">#  搜索框显示</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面，查看邮箱验证码列表页搜索框</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019050416420925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试搜索框功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504165318894.gif" alt></fancybox></p><ul><li>添加筛选器</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list_filter = [<span class="string">'code'</span>, <span class="string">'email'</span>, <span class="string">'send_type'</span>, <span class="string">'send_time'</span>]</span><br></pre></td></tr></table></figure><ul><li>测试筛选器功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504170130422.gif" alt></fancybox></p><ul><li>在users/adminx中进行注册轮播图模型表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BannerAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'title'</span>, <span class="string">'image'</span>, <span class="string">'url'</span>, <span class="string">'index'</span>, <span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'title'</span>, <span class="string">'image'</span>, <span class="string">'url'</span>, <span class="string">'index'</span>]</span><br><span class="line">    list_filter = [<span class="string">'title'</span>, <span class="string">'image'</span>, <span class="string">'url'</span>, <span class="string">'index'</span>, <span class="string">'add_time'</span>]</span><br><span class="line"> </span><br><span class="line">xadmin.site.register(Banner, BannerAdmin)</span><br></pre></td></tr></table></figure><ul><li>刷新页面，成功显示出轮播图</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/201905041705181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>注册courses应用下的模型表</p><ul><li>在courses应用下创建adminx.py文件，在该文件中注册课程基本信息表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'students'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'detail'</span>, <span class="string">'degree'</span>, <span class="string">'learn_times'</span>, <span class="string">'students'</span>]</span><br><span class="line"> </span><br><span class="line">xadmin.site.register(Course, CourseAdmin)</span><br></pre></td></tr></table></figure><ul><li>查看后台管理页面中课程信息表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504171926333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>注册章节信息表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LessonAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'course'</span>, <span class="string">'name'</span>, <span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'course'</span>, <span class="string">'name'</span>]</span><br><span class="line">    list_filter = [<span class="string">'course__name'</span>, <span class="string">'name'</span>, <span class="string">'add_time'</span>]</span><br><span class="line"> </span><br><span class="line">xadmin.site.register(Lesson, LessonAdmin)</span><br></pre></td></tr></table></figure><ul><li>查看后台管理页面中章节信息表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504172319311.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试添加课程以及章节</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504175030843.gif" alt></fancybox></p><ul><li>添加章节成功后，在章节列表中课程字段后面会出现一个感叹号，点击感叹号则会弹出该门课程的详细信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504175135267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504175236458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>注册视频信息表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VideoAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'lesson'</span>, <span class="string">'name'</span>, <span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'lesson'</span>, <span class="string">'name'</span>]</span><br><span class="line">    list_filter = [<span class="string">'lesson'</span>, <span class="string">'name'</span>, <span class="string">'add_time'</span>]</span><br><span class="line"> </span><br><span class="line">xadmin.site.register(Video, VideoAdmin)</span><br></pre></td></tr></table></figure><ul><li>查看后台管理页面中视频信息表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504175710319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>注册课程资源表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseResourceAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'course'</span>, <span class="string">'name'</span>, <span class="string">'download'</span>, <span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'course'</span>, <span class="string">'name'</span>, <span class="string">'download'</span>]</span><br><span class="line">    list_filter = [<span class="string">'course'</span>, <span class="string">'name'</span>, <span class="string">'download'</span>, <span class="string">'add_time'</span>]</span><br><span class="line"> </span><br><span class="line">xadmin.site.register(CourseResource, CourseResourceAdmin)</span><br></pre></td></tr></table></figure><ul><li>查看后台管理页面中课程资源表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504175931939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>注册organization应用下的模型表</p><ul><li>在organization应用下创建adminx.py文件，在该文件中注册城市基本信息表和课程机构基本信息表以及教师基本信息表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CityDictAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>, <span class="string">'desc'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'add_time'</span>]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CourseOrgAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'click_nums'</span>, <span class="string">'fav_nums'</span>]</span><br><span class="line">    search_fields = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'click_nums'</span>, <span class="string">'fav_nums'</span>]</span><br><span class="line">    list_filter = [<span class="string">'name'</span>, <span class="string">'desc'</span>, <span class="string">'click_nums'</span>, <span class="string">'fav_nums'</span>]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TeacherAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'org'</span>, <span class="string">'name'</span>, <span class="string">'work_years'</span>, <span class="string">'work_company'</span>]</span><br><span class="line">    search_fields = [<span class="string">'org'</span>, <span class="string">'name'</span>, <span class="string">'work_years'</span>, <span class="string">'work_company'</span>]</span><br><span class="line">    list_filter = [<span class="string">'org'</span>, <span class="string">'name'</span>, <span class="string">'work_years'</span>, <span class="string">'work_company'</span>]</span><br><span class="line"> </span><br><span class="line">xadmin.site.register(Teacher, TeacherAdmin)</span><br><span class="line">xadmin.site.register(CityDict, CityDictAdmin)</span><br><span class="line">xadmin.site.register(CourseOrg, CourseOrgAdmin)</span><br></pre></td></tr></table></figure><ul><li>查看后台管理页面中organization应用下的模型表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504181119113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>注册operation应用下的模型表</p><ul><li>在operation应用下创建adminx.py文件，在该文件中注册用户咨询表丶用户学习课程表丶用户消息表丶课程评论以及用户收藏表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">class UserAskAdmin(object):</span><br><span class="line">    list_display = [&apos;name&apos;, &apos;mobile&apos;, &apos;course_name&apos;, &apos;add_time&apos;]</span><br><span class="line">    search_fields = [&apos;name&apos;, &apos;mobile&apos;, &apos;course_name&apos;]</span><br><span class="line">    list_filter = [&apos;name&apos;, &apos;mobile&apos;, &apos;course_name&apos;, &apos;add_time&apos;]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class UserCourseAdmin(object):</span><br><span class="line">    list_display = [&apos;user&apos;, &apos;course&apos;, &apos;add_time&apos;]</span><br><span class="line">    search_fields = [&apos;user&apos;, &apos;course&apos;]</span><br><span class="line">    list_filter = [&apos;user&apos;, &apos;course&apos;, &apos;add_time&apos;]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class UserMessageAdmin(object):</span><br><span class="line">    list_display = [&apos;user&apos;, &apos;message&apos;, &apos;has_read&apos;, &apos;add_time&apos;]</span><br><span class="line">    search_fields = [&apos;user&apos;, &apos;message&apos;, &apos;has_read&apos;]</span><br><span class="line">    list_filter = [&apos;user&apos;, &apos;message&apos;, &apos;has_read&apos;, &apos;add_time&apos;]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class CourseCommentsAdmin(object):</span><br><span class="line">    list_display = [&apos;user&apos;, &apos;course&apos;, &apos;comments&apos;, &apos;add_time&apos;]</span><br><span class="line">    search_fields = [&apos;user&apos;, &apos;course&apos;, &apos;comments&apos;]</span><br><span class="line">    list_filter = [&apos;user&apos;, &apos;course&apos;, &apos;comments&apos;, &apos;add_time&apos;]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class UserFavoriteAdmin(object):</span><br><span class="line">    list_display = [&apos;user&apos;, &apos;fav_id&apos;, &apos;fav_type&apos;, &apos;add_time&apos;]</span><br><span class="line">    search_fields = [&apos;user&apos;, &apos;fav_id&apos;, &apos;fav_type&apos;]</span><br><span class="line">    list_filter = [&apos;user&apos;, &apos;fav_id&apos;, &apos;fav_type&apos;, &apos;add_time&apos;]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">xadmin.site.register(UserAsk, UserAskAdmin)</span><br><span class="line">xadmin.site.register(UserCourse, UserCourseAdmin)</span><br><span class="line">xadmin.site.register(UserMessage, UserMessageAdmin)</span><br><span class="line">xadmin.site.register(CourseComments, CourseCommentsAdmin)</span><br><span class="line">xadmin.site.register(UserFavorite, UserFavoriteAdmin)</span><br></pre></td></tr></table></figure><ul><li>查看后台管理页面中operation应用下的模型表 </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504182544870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="六丶xadmin后台页面全局配置"><a href="#六丶xadmin后台页面全局配置" class="headerlink" title="六丶xadmin后台页面全局配置"></a>六丶xadmin后台页面全局配置</h1><p><strong>1.</strong>更换xadmin主题</p><ul><li>开启主题功能，在users/adminx中进行如下编写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> extra_apps.xadmin <span class="keyword">import</span> views</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseSetting</span><span class="params">(object)</span>:</span></span><br><span class="line">    enable_themes = <span class="literal">True</span>  <span class="comment"># 开启主题功能</span></span><br><span class="line">    use_bootswatch = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">xadmin.site.register(views.BaseAdminView, BaseSetting)</span><br></pre></td></tr></table></figure><ul><li>&lt;font=”color:red”&gt;查看Terminal终端日志提示以下错误</li></ul><p><img src="https://img-blog.csdnimg.cn/20190504184736703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><font style="color:red">解决方法：卸载django_py3环境中的xadmin包（因之前博主是通过pip3 install xadmin-master.zip包，并且源码安装了xadmin），一直都是通过from extra_apps import xadmin导入方式，但现在该方式报错了，这个错是内部代码错误，所以博主这里就只保留源码的xadmin以及pip安装xadmin包时安装的依赖包</font></li></ul><p><img src="https://img-blog.csdnimg.cn/20190504185845147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><font style="color:red">卸载完环境中的xadmin包后，需要在settings中将xadmin的搜索路径以及将添加的应用名extra_apps.xadmin修改为xadmin</font></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(BASE_DIR, <span class="string">"extra_apps"</span>))</span><br><span class="line"> </span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">"users"</span>,</span><br><span class="line">    <span class="string">"courses"</span>,</span><br><span class="line">    <span class="string">"organization"</span>,</span><br><span class="line">    <span class="string">"operation"</span>,</span><br><span class="line">    <span class="string">"xadmin"</span>,</span><br><span class="line">    <span class="string">"crispy_forms"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><font style="color:red">将extra_apps目录进行Sources Root操作（在代码中可直接import xadmin）并且在根级urls中进行如下修改</font></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">import</span> xadmin</span><br><span class="line"><span class="comment"># from extra_apps import xadmin</span></span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># url(r'^admin/', admin.site.urls),</span></span><br><span class="line">url(<span class="string">r'^xadmin/'</span>, xadmin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><font style="color:red">以防万一还需要将所有应用下的adminx中的导入xadmin模块的方式修改为import xadmin（这个自己修改即可），重新修改users/amdinx中的导入views以及xadmin方式，如下</font></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xadmin</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> EmailVerifyRecord, Banner</span><br><span class="line"><span class="keyword">from</span> xadmin <span class="keyword">import</span> views</span><br><span class="line"><span class="comment"># from extra_apps import xadmin  错误的导入</span></span><br><span class="line"><span class="comment"># from extra_apps.xadmin import views  错误的导入</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseSetting</span><span class="params">(object)</span>:</span></span><br><span class="line">    enable_themes = <span class="literal">True</span>  <span class="comment"># 开启主题功能</span></span><br><span class="line">    use_bootswatch = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmailVerifyRecordAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'code'</span>, <span class="string">'email'</span>, <span class="string">'send_type'</span>, <span class="string">'send_time'</span>]  <span class="comment"># 列表字段展示</span></span><br><span class="line">    search_fields = [<span class="string">'code'</span>, <span class="string">'email'</span>, <span class="string">'send_type'</span>]  <span class="comment">#  搜索框显示</span></span><br><span class="line">    list_filter = [<span class="string">'code'</span>, <span class="string">'email'</span>, <span class="string">'send_type'</span>, <span class="string">'send_time'</span>]  <span class="comment"># 筛选字段</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BannerAdmin</span><span class="params">(object)</span>:</span></span><br><span class="line">    list_display = [<span class="string">'title'</span>, <span class="string">'image'</span>, <span class="string">'url'</span>, <span class="string">'index'</span>, <span class="string">'add_time'</span>]</span><br><span class="line">    search_fields = [<span class="string">'title'</span>, <span class="string">'image'</span>, <span class="string">'url'</span>, <span class="string">'index'</span>]</span><br><span class="line">    list_filter = [<span class="string">'title'</span>, <span class="string">'image'</span>, <span class="string">'url'</span>, <span class="string">'index'</span>, <span class="string">'add_time'</span>]</span><br><span class="line"> </span><br><span class="line">xadmin.site.register(EmailVerifyRecord, EmailVerifyRecordAdmin)</span><br><span class="line">xadmin.site.register(Banner, BannerAdmin)</span><br><span class="line">xadmin.site.register(xadmin.views.BaseAdminView, BaseSetting)</span><br></pre></td></tr></table></figure><ul><li>重新启动项目，刷新xadmin后台管理页面，在页面右上方栏多出一个主题框</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504191059544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><font style="color:red">结果发现只显示了默认和Bootstrap2，这肯定是不对的，查看终端看有没有保存提示以下错误，但是没有指定是摸个模块下的第几行，说明是在try中捕获的异常</font></li></ul><p><img src="https://img-blog.csdnimg.cn/20190504195359955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><font style="color:red">找到xadmin包中关于主题的模块themes.py模块，博主进行打印测试发现，因为博主使用的是python3开发，所以会进入six.PY3判断逻辑中，根据Terminal终端提示的’str’ object has no attribute ‘decode’，发现是这里出错导致代码没有继续执行，所以在页面中主题栏那里只显示了（默认和Bootstrap2），解决方法是注释掉此if six.PY3代码，则显示全部主题（该解决方法百度没有，因为百度上的解决方法都是针对于python2开发环境的）</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504195724943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>注释掉以上红框的代码后，刷新页面成功显示出全部主题</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504200200369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>博主按自己喜好更改了如下主题</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504201154268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>修改页面左上方的Django Xadmin以及页面底部的我的公司</p><ul><li>在users/adminx模块中进入如下编写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GlobalSettings</span><span class="params">(object)</span>:</span></span><br><span class="line">    site_title = <span class="string">"慕学后台管理系统"</span></span><br><span class="line">    site_footer = <span class="string">"慕学在线网"</span></span><br><span class="line"> </span><br><span class="line">xadmin.site.register(views.CommAdminView, GlobalSettings)</span><br></pre></td></tr></table></figure><ul><li>刷新页面，成功显示出定义的名字</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504203130872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>将页面左侧显示的数据表栏信息，进行归纳收缩</p><ul><li>只需要在GlobalSettings类中添加menu_style = “accordion” 代码即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GlobalSettings</span><span class="params">(object)</span>:</span></span><br><span class="line">    site_title = <span class="string">"慕学后台管理系统"</span></span><br><span class="line">    site_footer = <span class="string">"慕学在线网"</span></span><br><span class="line">    menu_style = <span class="string">"accordion"</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面，效果如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504203730840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>设置左侧栏数据表名为中文名称</p><p><strong>说明</strong>：在4个应用下的apps中定义verbose_name变量的值，并且在应用下的<strong>init</strong>.py文件中设置default_app_config的值</p><ul><li>在users/apps中定义verbose_name变量的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsersConfig</span><span class="params">(AppConfig)</span>:</span></span><br><span class="line">    name = <span class="string">'users'</span></span><br><span class="line">    verbose_name = <span class="string">u"用户信息"</span></span><br></pre></td></tr></table></figure><ul><li>在users/<strong>init</strong>中定义default_app_config的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default_app_config = <span class="string">"users.apps.UsersConfig"</span></span><br></pre></td></tr></table></figure><ul><li>在organization/apps中定义verbose_name变量的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrganizationConfig</span><span class="params">(AppConfig)</span>:</span></span><br><span class="line">    name = <span class="string">'organization'</span></span><br><span class="line">    verbose_name = <span class="string">u"机构管理"</span></span><br></pre></td></tr></table></figure><ul><li>在organization/<strong>init</strong>中定义default_app_config的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default_app_config = <span class="string">"organization.apps.OrganizationConfig"</span></span><br></pre></td></tr></table></figure><ul><li>在operation/apps中定义verbose_name变量的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OperationConfig</span><span class="params">(AppConfig)</span>:</span></span><br><span class="line">    name = <span class="string">'operation'</span></span><br><span class="line">    verbose_name = <span class="string">u"用户操作"</span></span><br></pre></td></tr></table></figure><ul><li>在operation/<strong>init</strong>中定义default_app_config的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default_app_config = <span class="string">"operation.apps.OperationConfig"</span></span><br></pre></td></tr></table></figure><ul><li>在courses/apps中定义verbose_name变量的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CoursesConfig</span><span class="params">(AppConfig)</span>:</span></span><br><span class="line">    name = <span class="string">'courses'</span></span><br><span class="line">    verbose_name = <span class="string">u"课程管理"</span></span><br></pre></td></tr></table></figure><ul><li>在courses/<strong>init</strong>中定义default_app_config的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default_app_config = <span class="string">"courses.apps.CoursesConfig"</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面成功显示出定义的模型表名称</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504210156424.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>还是黑色的主题看着顺眼</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190504210527751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/89788542" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/89788542</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之个性化微电影网站的实战开发（完结）</title>
      <link href="/2019/11/12/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E4%B8%AA%E6%80%A7%E5%8C%96%E5%BE%AE%E7%94%B5%E5%BD%B1%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%AE%8C%E7%BB%93%EF%BC%89/"/>
      <url>/2019/11/12/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E4%B8%AA%E6%80%A7%E5%8C%96%E5%BE%AE%E7%94%B5%E5%BD%B1%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%AE%8C%E7%BB%93%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶前台管理（会员模块）"><span style="color:#4ea1db">一丶前台管理（会员模块）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶前台管理（电影模块）"><span style="color:#4ea1db">二丶前台管理（电影模块）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶前台管理（电影评论及统计）"><span style="color:#4ea1db">三丶前台管理（电影评论及统计）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶前台管理（电影收藏）"><span style="color:#4ea1db">四丶前台管理（电影收藏）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶前台管理（电影弹幕）"><span style="color:#4ea1db">五丶前台管理（电影弹幕）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶代码优化以及bug处理"><span style="color:#4ea1db">六丶代码优化以及bug处理</span></a></li><a id="more"></a><h1 id="一丶前台管理（会员模块）"><a href="#一丶前台管理（会员模块）" class="headerlink" title="一丶前台管理（会员模块）"></a>一丶前台管理（会员模块）</h1><p><strong>1.</strong>会员注册</p><ul><li>定义会员注册表单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RegistForm</span><span class="params">(FlaskForm)</span>:</span></span><br><span class="line">    <span class="string">"""会员注册表单"""</span></span><br><span class="line">    name = StringField(</span><br><span class="line">        label=<span class="string">"昵称"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入昵称！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"昵称"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control input-lg"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入昵称！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    email = StringField(</span><br><span class="line">        label=<span class="string">"邮箱"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入邮箱！"</span>),</span><br><span class="line">            Email(<span class="string">"邮箱格式不正确！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"邮箱"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control input-lg"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入邮箱！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    phone = StringField(</span><br><span class="line">        label=<span class="string">"手机"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入手机！"</span>),</span><br><span class="line">            Regexp(<span class="string">"1[345789]\\d&#123;9&#125;"</span>, message=<span class="string">"手机格式不正确！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"手机"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control input-lg"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入手机！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    pwd = PasswordField(</span><br><span class="line">        label=<span class="string">"密码"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入密码！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"密码"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control input-lg"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入密码！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    repwd = PasswordField(</span><br><span class="line">        label=<span class="string">"确认密码"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入确认密码！"</span>),</span><br><span class="line">            EqualTo(<span class="string">'pwd'</span>, message=<span class="string">"两次密码不一致！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"确认密码"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control input-lg"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入确认密码！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    submit = SubmitField(</span><br><span class="line">        <span class="string">'注册'</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"btn btn-lg btn-success btn-block"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_name</span><span class="params">(self, field)</span>:</span></span><br><span class="line">        name = field.data</span><br><span class="line">        user = User.query.filter_by(name=name).count()</span><br><span class="line">        <span class="keyword">if</span> user == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValidationError(<span class="string">"昵称已经存在！"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_email</span><span class="params">(self, field)</span>:</span></span><br><span class="line">        email = field.data</span><br><span class="line">        user = User.query.filter_by(email=email).count()</span><br><span class="line">        <span class="keyword">if</span> user == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValidationError(<span class="string">"邮箱已经存在！"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_phone</span><span class="params">(self, field)</span>:</span></span><br><span class="line">        phone = field.data</span><br><span class="line">        user = User.query.filter_by(phone=phone).count()</span><br><span class="line">        <span class="keyword">if</span> user == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValidationError(<span class="string">"手机号码已经存在！"</span>)</span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_name"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.name.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.name&#125;&#125;</span><br><span class="line">            &#123;% for error in form.name.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_name"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_email"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-envelope"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.email.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.email&#125;&#125;</span><br><span class="line">            &#123;% for error in form.email.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_email"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_phone"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-phone"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.phone.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.phone&#125;&#125;</span><br><span class="line">            &#123;% for error in form.phone.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_phone"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_password"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-lock"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.pwd.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.pwd&#125;&#125;</span><br><span class="line">            &#123;% for error in form.pwd.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_password"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_repassword"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-lock"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.repwd.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.repwd&#125;&#125;</span><br><span class="line">            &#123;% for error in form.repwd.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_repassword"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;&#123;form.submit&#125;&#125;</span><br><span class="line">        &#123;&#123;form.csrf_token&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会员注册</span></span><br><span class="line"><span class="meta">@home.route('/register/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">()</span>:</span></span><br><span class="line">    form = RegistForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        user = User(</span><br><span class="line">            name=data[<span class="string">"name"</span>],</span><br><span class="line">            email=data[<span class="string">"email"</span>],</span><br><span class="line">            phone=data[<span class="string">"phone"</span>],</span><br><span class="line">            pwd=generate_password_hash(data[<span class="string">"pwd"</span>]),</span><br><span class="line">            uuid=uuid.uuid4().hex</span><br><span class="line">        )</span><br><span class="line">        db.session.add(user)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"会员注册成功"</span>, <span class="string">"ok"</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/register.html"</span>,form=form)</span><br></pre></td></tr></table></figure><ul><li>测试会员注册功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190426191523460.gif" alt></fancybox></p><p><strong>2.</strong>会员登录以及退出</p><p><strong>会员登录</strong></p><ul><li>定义登录表单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginForm</span><span class="params">(FlaskForm)</span>:</span></span><br><span class="line">    <span class="string">"""会员登录表单"""</span></span><br><span class="line">    name = StringField(</span><br><span class="line">        label=<span class="string">"账号"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入账号！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"账号"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control input-lg"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入账号！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    pwd = PasswordField(</span><br><span class="line">        label=<span class="string">"密码"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入密码！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"密码"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control input-lg"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入密码！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    submit = SubmitField(</span><br><span class="line">        <span class="string">'登录'</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"btn btn-lg btn-primary btn-block"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li>定义登录视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会员登录</span></span><br><span class="line"><span class="meta">@home.route('/login/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    form = LoginForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        user = User.query.filter_by(name=data[<span class="string">'name'</span>]).first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user.check_pwd(data[<span class="string">'pwd'</span>]):</span><br><span class="line">            flash(<span class="string">"密码错误！"</span>, <span class="string">"err"</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'home.login'</span>))</span><br><span class="line">        <span class="comment"># 将登录成功后的用户名以及用户id保存到session会话机制中</span></span><br><span class="line">        session[<span class="string">'user'</span>] = user.name</span><br><span class="line">        session[<span class="string">'user_id'</span>] = user.id</span><br><span class="line">        <span class="comment"># 将登陆操作保存到会员日志中</span></span><br><span class="line">        userlog = UserLog(</span><br><span class="line">            user_id=user.id,</span><br><span class="line">            ip=request.remote_addr</span><br><span class="line">        )</span><br><span class="line">        db.session.add(userlog)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'home.user'</span>))  <span class="comment"># 跳转到会员中心</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/login.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_contact"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.name.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.name&#125;&#125;</span><br><span class="line">             &#123;% for error in form.name.errors %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">             &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_contact"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_password"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-lock"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.pwd.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.pwd&#125;&#125;</span><br><span class="line">            &#123;% for error in form.pwd.errors %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">             &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_password"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;&#123;form.submit&#125;&#125;</span><br><span class="line">        &#123;&#123;form.csrf_token&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span>a</span><br></pre></td></tr></table></figure><ul><li>测试会员登录功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190429103059842.gif" alt></fancybox></p><p><strong>会员退出</strong></p><ul><li>定义退出视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会员退出</span></span><br><span class="line"><span class="meta">@home.route('/logout/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span>:</span></span><br><span class="line">    session.pop(<span class="string">"user"</span>, <span class="literal">None</span>)</span><br><span class="line">    session.pop(<span class="string">"user_id"</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">"home.login"</span>))</span><br></pre></td></tr></table></figure><ul><li>定义登录装饰器</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录装饰器</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_login_required</span><span class="params">(f)</span>:</span></span><br><span class="line"><span class="meta">    @wraps(f)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorated_function</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"user"</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">"home.login"</span>, next=request.url))</span><br><span class="line">        <span class="keyword">return</span> f(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> decorated_function</span><br></pre></td></tr></table></figure><ul><li>测试会员退出功能以及访问需要登录后才能访问的页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190429113123195.gif" alt></fancybox></p><p><strong>3.</strong>修改会员资料</p><p><strong>显示会员信息</strong></p><ul><li>定义会员信息表单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserdetailForm</span><span class="params">(FlaskForm)</span>:</span></span><br><span class="line">    <span class="string">"""会员资料表单"""</span></span><br><span class="line">    name = StringField(</span><br><span class="line">        label=<span class="string">"账号"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入账号！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"账号"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入账号！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    email = StringField(</span><br><span class="line">        label=<span class="string">"邮箱"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入邮箱！"</span>),</span><br><span class="line">            Email(<span class="string">"邮箱格式不正确！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"邮箱"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入邮箱！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    phone = StringField(</span><br><span class="line">        label=<span class="string">"手机"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入手机！"</span>),</span><br><span class="line">            Regexp(<span class="string">"1[345789]\\d&#123;9&#125;"</span>, message=<span class="string">"手机格式不正确！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"手机"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入手机！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    face = FileField(</span><br><span class="line">        label=<span class="string">"头像"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请上传头像！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"头像"</span>,</span><br><span class="line">    )</span><br><span class="line">    info = TextAreaField(</span><br><span class="line">        label=<span class="string">"简介"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入简介！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"简介"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"rows"</span>: <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    submit = SubmitField(</span><br><span class="line">        <span class="string">'保存修改'</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"btn btn-success"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会员详情</span></span><br><span class="line"><span class="meta">@home.route('/user/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@user_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user</span><span class="params">()</span>:</span></span><br><span class="line">    form = UserdetailForm()</span><br><span class="line">    form.face.validators = []  <span class="comment"># 默认图片为空</span></span><br><span class="line">    user = User.query.get(int(session[<span class="string">'user_id'</span>]))</span><br><span class="line">    <span class="comment"># 设置表单字段初始值</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        form.name.data = user.name</span><br><span class="line">        form.email.data = user.email</span><br><span class="line">        form.phone.data = user.phone</span><br><span class="line">        form.face.data = user.face</span><br><span class="line">        form.info.data = user.info</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/user.html"</span>, form=form, user=user)</span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_name"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.name.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                &#123;&#123;form.name&#125;&#125;</span><br><span class="line">                &#123;% for error in form.name.errors %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_name"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_email"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-envelope"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.email.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                &#123;&#123;form.email&#125;&#125;</span><br><span class="line">                 &#123;% for error in form.email.errors %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_email"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_phone"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-phone"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.phone.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                &#123;&#123;form.phone&#125;&#125;</span><br><span class="line">                 &#123;% for error in form.phone.errors %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_phone"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_face"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-picture"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.face.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                &#123;% if user.face %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/users/'+user.face)&#125;&#125;"</span> <span class="attr">width</span>=<span class="string">"100px"</span> <span class="attr">class</span>=<span class="string">"img-responsive img-rounded"</span>&gt;</span></span><br><span class="line">                &#123;% else %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">"holder.js/100x100"</span> <span class="attr">class</span>=<span class="string">"img-responsive img-rounded"</span>&gt;</span></span><br><span class="line">                &#123;% endif %&#125;</span><br><span class="line">                &#123;&#123;form.face&#125;&#125;</span><br><span class="line">                 &#123;% for error in form.face.errors %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_face"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_info"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-edit"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.info.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                &#123;&#123;form.info&#125;&#125;</span><br><span class="line">                 &#123;% for error in form.info.errors %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_info"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;&#123;form.submit&#125;&#125;</span><br><span class="line">        &#123;&#123;form.csrf_token&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示会员表单信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019042911351757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>修改会员信息</strong></p><ul><li>在app/<strong>init</strong>.py文件中定义会员头像资源路径</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.config[<span class="string">"FC_DIR"</span>] = os.path.join(os.path.abspath(os.path.dirname(__file__)), <span class="string">"static/uploads/users/"</span>)</span><br></pre></td></tr></table></figure><ul><li>在视图函数进行修改逻辑编写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会员详情</span></span><br><span class="line"><span class="meta">@home.route('/user/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@user_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user</span><span class="params">()</span>:</span></span><br><span class="line">    form = UserdetailForm()</span><br><span class="line">    form.face.validators = []  <span class="comment"># 默认图片为空</span></span><br><span class="line">    user = User.query.get(int(session[<span class="string">'user_id'</span>]))</span><br><span class="line">    <span class="comment"># 设置表单字段初始值</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        form.name.data = user.name</span><br><span class="line">        form.email.data = user.email</span><br><span class="line">        form.phone.data = user.phone</span><br><span class="line">        form.info.data = user.info</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        file_face = secure_filename(form.face.data.filename)  <span class="comment"># 获取上传图片文件名</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(app.config[<span class="string">"FC_DIR"</span>]):  <span class="comment"># 文件夹不存在</span></span><br><span class="line">            os.makedirs(app.config[<span class="string">"FC_DIR"</span>])  <span class="comment"># 创建多级目录</span></span><br><span class="line">            os.chmod(app.config[<span class="string">"FC_DIR"</span>], <span class="string">"rw"</span>)  <span class="comment"># 赋予文件读写的权限</span></span><br><span class="line">        user.face = change_filename(file_face)  <span class="comment"># 返回加密后的图片文件名</span></span><br><span class="line">        <span class="comment"># 将url和logo数据写入到static/uploads/目录的filename文件中</span></span><br><span class="line">        form.face.data.save(app.config[<span class="string">"FC_DIR"</span>] + user.face)</span><br><span class="line">        <span class="comment"># 判断用户修改的name email phone是否已经存在</span></span><br><span class="line">        name_count = User.query.filter_by(name=data[<span class="string">"name"</span>]).count()</span><br><span class="line">        <span class="keyword">if</span> name_count == <span class="number">1</span> <span class="keyword">and</span> user.name != data[<span class="string">'name'</span>]:</span><br><span class="line">            flash(<span class="string">"账号已存在！"</span>, <span class="string">"err"</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'home.user'</span>))</span><br><span class="line">        email_count = User.query.filter_by(email=data[<span class="string">"email"</span>]).count()</span><br><span class="line">        <span class="keyword">if</span> email_count == <span class="number">1</span> <span class="keyword">and</span> user.email != data[<span class="string">'email'</span>]:</span><br><span class="line">            flash(<span class="string">"邮箱已存在！"</span>, <span class="string">"err"</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'home.user'</span>))</span><br><span class="line">        phone_count = User.query.filter_by(phone=data[<span class="string">"phone"</span>]).count()</span><br><span class="line">        <span class="keyword">if</span> phone_count == <span class="number">1</span> <span class="keyword">and</span> user.phone != data[<span class="string">'phone'</span>]:</span><br><span class="line">            flash(<span class="string">"号码已存在！"</span>, <span class="string">"err"</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'home.user'</span>))</span><br><span class="line">        <span class="comment"># 更新数据</span></span><br><span class="line">        user.name = data[<span class="string">'name'</span>]</span><br><span class="line">        user.email = data[<span class="string">'email'</span>]</span><br><span class="line">        user.phone = data[<span class="string">'phone'</span>]</span><br><span class="line">        user.info = data[<span class="string">'info'</span>]</span><br><span class="line">        db.session.add(user)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"修改会员信息成功"</span>, <span class="string">"ok"</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'home.user'</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/user.html"</span>, form=form, user=user)</span><br></pre></td></tr></table></figure><ul><li>测试修改会员信息功能 </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190429130120927.gif" alt></fancybox></p><p><strong>4.</strong>修改密码</p><ul><li>定义修改密码表单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdForm</span><span class="params">(FlaskForm)</span>:</span></span><br><span class="line">    <span class="string">"""修改密码表单"""</span></span><br><span class="line">    old_pwd = PasswordField(</span><br><span class="line">        label=<span class="string">"旧密码"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入旧密码！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"旧密码"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入旧密码！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    new_pwd = PasswordField(</span><br><span class="line">        label=<span class="string">"新密码"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入新密码！"</span>),</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"新密码"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入新密码！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    submit = SubmitField(</span><br><span class="line">        <span class="string">'修改密码'</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"btn btn-success"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_old_pwd</span><span class="params">(self, field)</span>:</span></span><br><span class="line">        <span class="keyword">from</span> flask <span class="keyword">import</span> session</span><br><span class="line">        pwd = field.data</span><br><span class="line">        name = session[<span class="string">"user"</span>]</span><br><span class="line">        user = User.query.filter_by(</span><br><span class="line">            name=name</span><br><span class="line">        ).first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user.check_pwd(pwd):</span><br><span class="line">            <span class="keyword">raise</span> ValidationError(<span class="string">"旧密码错误！"</span>)</span><br></pre></td></tr></table></figure><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line"><span class="meta">@home.route('/pwd/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@user_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwd</span><span class="params">()</span>:</span></span><br><span class="line">    form = PwdForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        user = User.query.filter_by(name=session[<span class="string">'user'</span>]).first()</span><br><span class="line">        user.pwd = generate_password_hash(data[<span class="string">'new_pwd'</span>])</span><br><span class="line">        db.session.add(user)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"修改密码成功，请重新登录"</span>, <span class="string">"ok"</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'home.logout'</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/pwd.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_oldpwd"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-lock"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.old_pwd.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                &#123;&#123;form.old_pwd&#125;&#125;</span><br><span class="line">                &#123;% for error in form.old_pwd.errors %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_oldpwd"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_newpwd"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-lock"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;form.new_pwd.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                &#123;&#123;form.new_pwd&#125;&#125;</span><br><span class="line">                &#123;% for error in form.new_pwd.errors %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">id</span>=<span class="string">"error_newpwd"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.submit&#125;&#125;</span><br><span class="line">            &#123;&#123;form.csrf_token&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试修改密码功能（hellomovie）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190429135301450.gif" alt></fancybox></p><p><strong>5.</strong>会员登录日志</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会员登录日志</span></span><br><span class="line"><span class="meta">@home.route('/loginlog/&lt;int:page&gt;')</span></span><br><span class="line"><span class="meta">@user_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loginlog</span><span class="params">(page)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page == <span class="literal">None</span>:</span><br><span class="line">        page=<span class="number">1</span></span><br><span class="line">    page_data = UserLog.query.filter_by(</span><br><span class="line">        user_id=int(session[<span class="string">'user_id'</span>])</span><br><span class="line">    ).order_by(UserLog.addtime.desc()).paginate(page=page, per_page=<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/loginlog.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>修改会员登录日志链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"m-4"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.loginlog', page=1)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-calendar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;登录日志</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:10%"</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:30%"</span>&gt;</span>登录时间<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:30%"</span>&gt;</span>登录IP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;td style="width:30%"&gt;登录地址&lt;/td&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% for m in page_data.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.addtime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.ip&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;td&gt;云南昆明&lt;/td&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">    &#123;&#123;pg.page(page_data, 'home.loginlog')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示会员登录日志信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190429140249515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶前台管理（电影模块）"><a href="#二丶前台管理（电影模块）" class="headerlink" title="二丶前台管理（电影模块）"></a>二丶前台管理（电影模块）</h1><p><strong>1.</strong>上映预告</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上映预告</span></span><br><span class="line"><span class="meta">@home.route('/animation/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">animation</span><span class="params">()</span>:</span></span><br><span class="line">    data = Preview.query.all()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/animation.html"</span>, data=data)</span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% for d in data%&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"imgCard&#123;&#123;d.id-1&#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"opacity:0;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/'+d.logo)&#125;&#125;"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"bottom:0"</span>&gt;</span>&#123;&#123;d.title&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试上映预告显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190429145958476.gif" alt></fancybox></p><p><strong>2.</strong>标签筛选</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首页</span></span><br><span class="line"><span class="meta">@home.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    tags = Tag.query.all()</span><br><span class="line">    tid = request.args.get(<span class="string">'tid'</span>, <span class="number">0</span>)  <span class="comment"># 标签</span></span><br><span class="line">    star = request.args.get(<span class="string">'star'</span>, <span class="number">0</span>)  <span class="comment"># 星级</span></span><br><span class="line">    time = request.args.get(<span class="string">"time"</span>, <span class="number">0</span>)  <span class="comment"># 时间</span></span><br><span class="line">    pm = request.args.get(<span class="string">"pm"</span>, <span class="number">0</span>)  <span class="comment"># 播放量</span></span><br><span class="line">    cm = request.args.get(<span class="string">"cm"</span>, <span class="number">0</span>)  <span class="comment"># 评论量</span></span><br><span class="line">    p = dict(</span><br><span class="line">        tid=tid,</span><br><span class="line">        star=star,</span><br><span class="line">        time=time,</span><br><span class="line">        pm=pm,</span><br><span class="line">        cm=cm</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/index.html"</span>, tags=tags, p=p)</span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table text-left table-bordered"</span> <span class="attr">id</span>=<span class="string">"movietags"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:10%;"</span>&gt;</span>电影标签<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:90%;"</span>&gt;</span></span><br><span class="line">            &#123;% for t in tags %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index')&#125;&#125;?tid=&#123;&#123;t.id&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=&#123;&#123;p['time']&#125;&#125;&amp;pm=&#123;&#123;p['pm']&#125;&#125;&amp;cm=&#123;&#123;p['cm']&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-info"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-tag"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;t.name&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            &amp;nbsp;</span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>电影星级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            &#123;% for i in range(1,6) %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index')&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;i&#125;&#125;&amp;time=&#123;&#123;p['time']&#125;&#125;&amp;pm=&#123;&#123;p['pm']&#125;&#125;&amp;cm=&#123;&#123;p['cm']&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-warning"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-star"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;i&#125;&#125;星<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            &amp;nbsp;</span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>上映时间<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index')&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=1&amp;pm=&#123;&#123;p['pm']&#125;&#125;&amp;cm=&#123;&#123;p['cm']&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-default"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-time"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;最近<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            &amp;nbsp;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index')&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=2&amp;pm=&#123;&#123;p['pm']&#125;&#125;&amp;cm=&#123;&#123;p['cm']&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-default"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-time"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;更早<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>播放数量<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index')&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=&#123;&#123;p['time']&#125;&#125;&amp;pm=1&amp;cm=&#123;&#123;p['cm']&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-arrow-down"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;从高到底<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            &amp;nbsp;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index')&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=&#123;&#123;p['time']&#125;&#125;&amp;pm=2&amp;cm=&#123;&#123;p['cm']&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-arrow-up"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;从低到高<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>评论数量<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index')&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=&#123;&#123;p['time']&#125;&#125;&amp;pm=&#123;&#123;p['pm']&#125;&#125;&amp;cm=1"</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-arrow-down"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;从高到底<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            &amp;nbsp;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index')&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=&#123;&#123;p['time']&#125;&#125;&amp;pm=&#123;&#123;p['pm']&#125;&#125;&amp;cm=2"</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-arrow-up"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;从低到高<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示标签数据以及对应标签请求参数</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190429171432329.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>电影分页</p><ul><li>在视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首页</span></span><br><span class="line"><span class="meta">@home.route('/&lt;int:page&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(page)</span>:</span></span><br><span class="line">    tags = Tag.query.all()</span><br><span class="line">    page_data = Movie.query</span><br><span class="line"> </span><br><span class="line">    tid = request.args.get(<span class="string">'tid'</span>, <span class="number">0</span>)  <span class="comment"># 标签</span></span><br><span class="line">    <span class="keyword">if</span> int(tid) != <span class="number">0</span>:</span><br><span class="line">        page_data = page_data.filter_by(tag_id=int(tid))</span><br><span class="line"> </span><br><span class="line">    star = request.args.get(<span class="string">'star'</span>, <span class="number">0</span>)  <span class="comment"># 星级</span></span><br><span class="line">    <span class="keyword">if</span> int(star) != <span class="number">0</span>:</span><br><span class="line">        page_data = page_data.filter_by(star=int(star))</span><br><span class="line"> </span><br><span class="line">    time = request.args.get(<span class="string">"time"</span>, <span class="number">0</span>)  <span class="comment"># 时间</span></span><br><span class="line">    <span class="keyword">if</span> int(time) != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> int(time) == <span class="number">1</span>:</span><br><span class="line">            page_data = page_data.order_by(Movie.addtime.desc())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            page_data = page_data.order_by(Movie.addtime.asc())</span><br><span class="line"> </span><br><span class="line">    pm = request.args.get(<span class="string">"pm"</span>, <span class="number">0</span>)  <span class="comment"># 播放量</span></span><br><span class="line">    <span class="keyword">if</span> int(pm) != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> int(pm) == <span class="number">1</span>:</span><br><span class="line">            page_data = page_data.order_by(Movie.playnum.desc())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            page_data = page_data.order_by(Movie.playnum.asc())</span><br><span class="line"> </span><br><span class="line">    cm = request.args.get(<span class="string">"cm"</span>, <span class="number">0</span>)  <span class="comment"># 评论量</span></span><br><span class="line">    <span class="keyword">if</span> int(cm) != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> int(cm) == <span class="number">1</span>:</span><br><span class="line">            page_data = page_data.order_by(Movie.commentnum.desc())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            page_data = page_data.order_by(Movie.commentnum.asc())</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 分页</span></span><br><span class="line">    <span class="keyword">if</span> page <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        page =<span class="number">1</span></span><br><span class="line">    page_data = page_data.paginate(page=page, per_page=<span class="number">10</span>)</span><br><span class="line"> </span><br><span class="line">    p = dict(</span><br><span class="line">        tid=tid,</span><br><span class="line">        star=star,</span><br><span class="line">        time=time,</span><br><span class="line">        pm=pm,</span><br><span class="line">        cm=cm</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/index.html"</span>, tags=tags, p=p, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row wow fadeIn"</span> <span class="attr">data-wow-delay</span>=<span class="string">"0.6s"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12 table-responsive"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table text-left table-bordered"</span> <span class="attr">id</span>=<span class="string">"movietags"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:10%;"</span>&gt;</span>电影标签<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:90%;"</span>&gt;</span></span><br><span class="line">                        &#123;% for t in tags %&#125;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index', page=1)&#125;&#125;?tid=&#123;&#123;t.id&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=&#123;&#123;p['time']&#125;&#125;&amp;pm=&#123;&#123;p['pm']&#125;&#125;&amp;cm=&#123;&#123;p['cm']&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-info"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-tag"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;t.name&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        &amp;nbsp;</span><br><span class="line">                        &#123;% endfor %&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>电影星级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        &#123;% for i in range(1,6) %&#125;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index', page=1)&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;i&#125;&#125;&amp;time=&#123;&#123;p['time']&#125;&#125;&amp;pm=&#123;&#123;p['pm']&#125;&#125;&amp;cm=&#123;&#123;p['cm']&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-warning"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-star"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;&#123;&#123;i&#125;&#125;星<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        &amp;nbsp;</span><br><span class="line">                        &#123;% endfor %&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>上映时间<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index', page=1)&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=1&amp;pm=&#123;&#123;p['pm']&#125;&#125;&amp;cm=&#123;&#123;p['cm']&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-default"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-time"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;最近<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        &amp;nbsp;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index', page=1)&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=2&amp;pm=&#123;&#123;p['pm']&#125;&#125;&amp;cm=&#123;&#123;p['cm']&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-default"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-time"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;更早<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>播放数量<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index', page=1)&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=&#123;&#123;p['time']&#125;&#125;&amp;pm=1&amp;cm=&#123;&#123;p['cm']&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-arrow-down"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;从高到底<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        &amp;nbsp;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index', page=1)&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=&#123;&#123;p['time']&#125;&#125;&amp;pm=2&amp;cm=&#123;&#123;p['cm']&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-arrow-up"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;从低到高<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>评论数量<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index', page=1)&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=&#123;&#123;p['time']&#125;&#125;&amp;pm=&#123;&#123;p['pm']&#125;&#125;&amp;cm=1"</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-arrow-down"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;从高到底<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        &amp;nbsp;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.index', page=1)&#125;&#125;?tid=&#123;&#123;p['tid']&#125;&#125;&amp;star=&#123;&#123;p['star']&#125;&#125;&amp;time=&#123;&#123;p['time']&#125;&#125;&amp;pm=&#123;&#123;p['pm']&#125;&#125;&amp;cm=2"</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-arrow-up"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;从低到高<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% for r in page_data.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-3"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"movielist text-center"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/'+r.logo)&#125;&#125;"</span> <span class="attr">height</span>=<span class="string">"700px"</span> <span class="attr">class</span>=<span class="string">"img-responsive center-block"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"text-left"</span> <span class="attr">style</span>=<span class="string">"margin-left:auto;margin-right:auto;width:210px;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:#999;font-style: italic;"</span>&gt;</span>&#123;&#123;r.title&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        &#123;% for val in range(1,r.star+1) %&#125;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-star"</span> <span class="attr">style</span>=<span class="string">"color:#FFD119"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        &#123;% endfor %&#125;</span><br><span class="line">                        &#123;% for val in range(1,5-r.star+1) %&#125;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-star-empty"</span> <span class="attr">style</span>=<span class="string">"color:#FFD119"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        &#123;% endfor %&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.play')&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">role</span>=<span class="string">"button"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-play"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;播放<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">            &#123;&#123;pg.page(page_data, 'home.index')&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试主页显示后台电影管理模块数据以及数据分页显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190430092626447.gif" alt></fancybox></p><p><strong>4.</strong>电影搜索（很简单使用数据库模糊查询进行检索）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 电影搜索</span></span><br><span class="line"><span class="meta">@home.route('/search/&lt;int:page&gt;/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    key = request.args.get(<span class="string">'key'</span>, <span class="string">''</span>)  <span class="comment"># 获取请求地址参数中的key值</span></span><br><span class="line">    page_data = Movie.query.filter(</span><br><span class="line">        Movie.title.ilike(<span class="string">"%"</span> + key + <span class="string">"%"</span>)</span><br><span class="line">    ).order_by(Movie.addtime.desc()).paginate(page=page, per_page=<span class="number">10</span>)  <span class="comment"># 根据获取到的key值在数据库中进行模糊查询</span></span><br><span class="line">    movie_count = Movie.query.filter(Movie.title.ilike(<span class="string">"%"</span> + key + <span class="string">"%"</span>)).count()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/search.html"</span>, key=key, page_data=page_data, movie_count=movie_count)</span><br></pre></td></tr></table></figure><ul><li>定义搜索框点击事件跳转地址（home.html以及layout.html）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group input-group"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"请输入电影名！"</span> <span class="attr">id</span>=<span class="string">"key_movie"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-btn"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">id</span>=<span class="string">"do_search"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;搜索<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"img.lazy"</span>).lazyload(&#123;</span></span><br><span class="line"><span class="actionscript">            effect: <span class="string">"fadeIn"</span></span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        $(<span class="string">'#do_search'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> key = $(<span class="string">'#key_movie'</span>).val();</span></span><br><span class="line"><span class="actionscript">            location.href=<span class="string">"&#123;&#123;url_for('home.search', page=1)&#125;&#125;?key="</span> + key</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>填写模板数据（search.html）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"breadcrumb"</span> <span class="attr">style</span>=<span class="string">"margin-top:6px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>与"&#123;&#123;key&#125;&#125;"有关的电影，共&#123;&#123;movie_count&#125;&#125;部<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">        &#123;% for s in page_data.items %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"media"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"media-left"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.play')&#125;&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"media-object"</span> <span class="attr">style</span>=<span class="string">"width: 200px;height: 300px"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/' + s.logo)&#125;&#125;"</span> <span class="attr">alt</span>=<span class="string">"&#123;&#123;s.title&#125;&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"media-body"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"media-heading"</span>&gt;</span>&#123;&#123;s.title&#125;&#125;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.play')&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-primary pull-right"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-play"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>播放影片<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                &#123;&#123;s.info&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12 text-center"</span>&gt;</span></span><br><span class="line">        &#123;&#123;pg.page(page_data, 'home.search')&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试电影搜索功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190430104035868.gif" alt></fancybox></p><p><strong>5.</strong>电影详情页（播放页）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 电影播放页</span></span><br><span class="line"><span class="meta">@home.route('/play/&lt;int:id&gt;/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">(id=None)</span>:</span></span><br><span class="line">    movie = Movie.query.join(Tag).filter(</span><br><span class="line">        Tag.id == Movie.tag_id,</span><br><span class="line">        Movie.id == int(id)</span><br><span class="line">    ).first_or_404()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/play.html"</span>, movie=movie)</span><br></pre></td></tr></table></figure><ul><li>修改电影播放链接地址（需传递电影id，在search.html和index.html模板中进行播放地址修改）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">href="&#123;&#123;url_for('home.play', id=r.id)&#125;&#125;"</span><br></pre></td></tr></table></figure><ul><li>填写模板数据（play.html）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:30%;color:#ccc;font-weight:bold;font-style:italic;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-film"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;片名</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;movie.title&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"color:#ccc;font-weight:bold;font-style:italic;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-tag"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;标签</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;movie.tag.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"color:#ccc;font-weight:bold;font-style:italic;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-time"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;片长</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;movie.length&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"color:#ccc;font-weight:bold;font-style:italic;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-map-marker"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;地区</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;movie.area&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"color:#ccc;font-weight:bold;font-style:italic;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-star"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;星级</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;% for val in range(1,movie.star+1) %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-star"</span> <span class="attr">style</span>=<span class="string">"color:#FFD119"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">                &#123;% for val in range(1,5-movie.star+1) %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-star-empty"</span> <span class="attr">style</span>=<span class="string">"color:#FFD119"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"color:#ccc;font-weight:bold;font-style:italic;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-calendar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;上映时间</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;movie.release_time&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"color:#ccc;font-weight:bold;font-style:italic;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-play"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;播放数量</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;movie.playnum&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"color:#ccc;font-weight:bold;font-style:italic;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-comment"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;评论数量</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;movie.commentnum&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"color:#ccc;font-weight:bold;font-style:italic;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-picture"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;影片介绍</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">        &#123;&#123;movie.info&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试电影播放功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190430121044789.gif" alt></fancybox></p><h1 id="三丶前台管理（电影评论及统计）"><a href="#三丶前台管理（电影评论及统计）" class="headerlink" title="三丶前台管理（电影评论及统计）"></a>三丶前台管理（电影评论及统计）</h1><p><strong>1.</strong>电影评论</p><ul><li>在电影播放页面判断用户是否登录，如果未登录则显示请登录即跳转到登录页面</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if 'user' not in session %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger alert-dismissible"</span> <span class="attr">role</span>=<span class="string">"alert"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>请先<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.login')&#125;&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"text-info"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span>，才可参与评论！<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li>在电影播放页面判断用户是否登录，如果未登录则不显示出评论框</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if 'user' in session %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">style</span>=<span class="string">"margin-bottom:6px;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_content"</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"input_content"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12"</span> <span class="attr">id</span>=<span class="string">"error_content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> <span class="attr">id</span>=<span class="string">"btn-sub"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-edit"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;提交评论<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    &amp;nbsp;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span> <span class="attr">id</span>=<span class="string">"btn-col"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-heart"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;收藏电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li>测试未登录状态播放电影</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190430124704590.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>定义电影评论表单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CommentForm</span><span class="params">(FlaskForm)</span>:</span></span><br><span class="line">    <span class="string">"""电影评论表单"""</span></span><br><span class="line">    content = TextAreaField(</span><br><span class="line">        label=<span class="string">"内容"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入内容！"</span>),</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"内容"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"input_content"</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    submit = SubmitField(</span><br><span class="line">        <span class="string">'提交评论'</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"btn btn-success"</span>,</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"btn-sub"</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li>修改模板数据块内容</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">style</span>=<span class="string">"margin-bottom:6px;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_content"</span>&gt;</span>&#123;&#123;form.content.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.content&#125;&#125;</span><br><span class="line">            &#123;% for error in form.content.errors %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12"</span> <span class="attr">id</span>=<span class="string">"error_content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;&#123;form.submit&#125;&#125;</span><br><span class="line">    &#123;&#123;form.csrf_token&#125;&#125;</span><br><span class="line">    &amp;nbsp;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span> <span class="attr">id</span>=<span class="string">"btn-col"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-heart"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;收藏电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在视图函数play中进行评论数据保存以及数据分页，需要注意的是分页需要在请求地址中接收page参数，需要注意的是播放页面的评论是看所有人的评论，即User.id == Comment.user_id而不是session中保存的user_id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 电影播放页</span></span><br><span class="line"><span class="meta">@home.route('/play/&lt;int:id&gt;/&lt;int:page&gt;/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">(id=None, page=None)</span>:</span></span><br><span class="line">    movie = Movie.query.join(Tag).filter(</span><br><span class="line">        Tag.id == Movie.tag_id,</span><br><span class="line">        Movie.id == int(id)</span><br><span class="line">    ).first_or_404()</span><br><span class="line">    <span class="comment"># 评论数据分页处理</span></span><br><span class="line">    <span class="keyword">if</span> page == <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = Comment.query.join(Movie).join(User).filter(</span><br><span class="line">        Movie.id == movie.id,</span><br><span class="line">        User.id == Comment.user_id</span><br><span class="line">    ).order_by(Comment.addtime.desc()).paginate(page=page, per_page=<span class="number">5</span>)</span><br><span class="line">    <span class="comment"># 播放量+1</span></span><br><span class="line">    movie.playnum += <span class="number">1</span></span><br><span class="line">    form = CommentForm()</span><br><span class="line">    <span class="comment"># 保存评论内容信息到数据库</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'user'</span> <span class="keyword">in</span> session <span class="keyword">and</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        comment = Comment(</span><br><span class="line">            content=data[<span class="string">'content'</span>],</span><br><span class="line">            movie_id=movie.id,</span><br><span class="line">            user_id=session[<span class="string">'user_id'</span>]</span><br><span class="line">        )</span><br><span class="line">        db.session.add(comment)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        <span class="comment"># 评论量需要+1</span></span><br><span class="line">        movie.commentnum += <span class="number">1</span></span><br><span class="line">        db.session.add(movie)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"评论成功"</span>, <span class="string">'ok'</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'home.play'</span>, id=movie.id, page=<span class="number">1</span>))</span><br><span class="line">    db.session.add(movie)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/play.html"</span>, movie=movie ,form=form, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>因播放页面中的评论列表数据需要进行分页显示处理，则需要模板文件中跳转到播放页面的地址中添加page参数</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.play', id=r.id, page=1)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">role</span>=<span class="string">"button"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-play"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;播放<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>拷贝ui目录下的admin_page.html模板文件到当前路径下并命名为comment_page.html，内容如下，需要接收id</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% macro page(data, url, id) %&#125;</span><br><span class="line">&#123;% if data %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination pagination-sm no-margin pull-right"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=1, id=id)&#125;&#125;"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% if data.has_prev %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=data.prev_num, id=id)&#125;&#125;"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% else%&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"> </span><br><span class="line">    &#123;% for p in data.iter_pages() %&#125;</span><br><span class="line">        &#123;% if p == data.page %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>&#123;&#123;p&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% else %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=p, id=id)&#125;&#125;"</span>&gt;</span>&#123;&#123;p&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"> </span><br><span class="line">    &#123;% if data.has_next %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=data.next_num, id=id)&#125;&#125;"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% else%&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=data.pages, id=id)&#125;&#125;"</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endmacro %&#125;</span><br></pre></td></tr></table></figure><ul><li>最后在play模板文件中填写数据块内容</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span><br><span class="line">    &#123;% for msg in get_flashed_messages(category_filter=["ok"]) %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success alert-dismissible"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            &#123;&#123; msg &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    &#123;% if 'user' not in session %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger alert-dismissible"</span> <span class="attr">role</span>=<span class="string">"alert"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>请先<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.login')&#125;&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"text-info"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span>，才可参与评论！<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"breadcrumb"</span> <span class="attr">style</span>=<span class="string">"margin-top:6px;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>全部评论(&#123;&#123;movie.commentnum&#125;&#125;)<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    &#123;% if 'user' in session %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">style</span>=<span class="string">"margin-bottom:6px;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_content"</span>&gt;</span>&#123;&#123;form.content.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                &#123;&#123;form.content&#125;&#125;</span><br><span class="line">                &#123;% for error in form.content.errors %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12"</span> <span class="attr">id</span>=<span class="string">"error_content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;&#123;form.submit&#125;&#125;</span><br><span class="line">        &#123;&#123;form.csrf_token&#125;&#125;</span><br><span class="line">        &amp;nbsp;</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span> <span class="attr">id</span>=<span class="string">"btn-col"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-heart"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;收藏电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"commentList"</span>&gt;</span></span><br><span class="line">        &#123;% for c in page_data.items %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item cl"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"avatar size-L radius"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"50x50"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/users/'+ c.user.face)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"img-circle"</span> <span class="attr">style</span>=<span class="string">"border:1px solid #abcdef;width: 50px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment-main"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"comment-header"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment-meta"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"comment-author"</span> <span class="attr">href</span>=<span class="string">"user.html"</span>&gt;</span>&#123;&#123;c.user.name&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        评论于</span><br><span class="line">                        <span class="tag">&lt;<span class="name">time</span> <span class="attr">title</span>=<span class="string">"&#123;&#123;c.addtime&#125;&#125;"</span> <span class="attr">datetime</span>=<span class="string">"&#123;&#123;c.addtime&#125;&#125;"</span>&gt;</span>&#123;&#123;c.addtime&#125;&#125;<span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment-body"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;c.content | safe&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12 text-center"</span>&gt;</span></span><br><span class="line">        &#123;&#123;pg.page(page_data, 'home.play',movie.id)&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试电影评论功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190430140856309.gif" alt></fancybox></p><p><strong>2.</strong>分页显示会员评论记录 </p><ul><li>在会员模块中有个评论记录，该评论记录为用户的所有评论</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190430141052514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会员评论记录</span></span><br><span class="line"><span class="meta">@home.route('/comments/&lt;int:page&gt;/')</span></span><br><span class="line"><span class="meta">@user_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">comments</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page == <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = Comment.query.join(Movie).join(User).filter(</span><br><span class="line">        Movie.id == Comment.movie_id,</span><br><span class="line">        User.id == session[<span class="string">'user_id'</span>]</span><br><span class="line">    ).order_by(Comment.addtime.desc()).paginate(page=page, per_page=<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/comments.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>填写模板数据（博主在会员评论模板中另添加了该评论对应点电影名，点击电影名可跳转到此电影播放页面）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"commentList"</span>&gt;</span></span><br><span class="line">&#123;% for c in page_data.items %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item cl"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"avatar size-L radius"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"50x50"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/users/'+ c.user.face)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"img-circle"</span> <span class="attr">style</span>=<span class="string">"border:1px solid #abcdef;width: 50px"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment-main"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"comment-header"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment-meta"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"comment-author"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.user')&#125;&#125;"</span>&gt;</span>&#123;&#123;c.user.name&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                评论于</span><br><span class="line">                <span class="tag">&lt;<span class="name">time</span> <span class="attr">title</span>=<span class="string">"&#123;&#123;c.addtime&#125;&#125;"</span> <span class="attr">datetime</span>=<span class="string">"&#123;&#123;c.addtime&#125;&#125;"</span>&gt;</span>&#123;&#123;c.addtime&#125;&#125;<span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line">                电影《<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.play', id=c.movie_id, page=1)&#125;&#125;"</span>&gt;</span>&#123;&#123;c.movie.title&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>》</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment-body"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;c.content | safe&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12 text-center"</span>&gt;</span></span><br><span class="line">    &#123;&#123;pg.page(page_data, 'home.comments')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试会员评论记录显示以及跳转评论的电影</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190430144055694.gif" alt></fancybox></p><h1 id="四丶前台管理（电影收藏）"><a href="#四丶前台管理（电影收藏）" class="headerlink" title="四丶前台管理（电影收藏）"></a>四丶前台管理（电影收藏）</h1><p><strong>1.</strong>添加电影收藏</p><ul><li>在play模板文件中使用ajax get请求方式调用添加收藏电影视图函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       $(<span class="string">"#btn-col"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="keyword">var</span> mid = &#123;&#123;movie.id&#125;&#125;;</span><br><span class="line">           <span class="keyword">var</span> uid = &#123;&#123;session[<span class="string">'user_id'</span>]&#125;&#125;;</span><br><span class="line">           $.ajax(&#123;</span><br><span class="line">               url:<span class="string">"&#123;&#123;url_for('home.moviecol_add')&#125;&#125;"</span>,</span><br><span class="line">               type:<span class="string">"GET"</span>,</span><br><span class="line">               data:<span class="string">"mid="</span>+mid+<span class="string">"&amp;uid="</span>+uid,</span><br><span class="line">               dataType:<span class="string">"json"</span>,</span><br><span class="line">               success:<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">                  </span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>定义视图函数，首先获取ajax 发起的请求参数，根据参数查询数据库模型表中是否存在，再进行如下判断，返回模板响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加电影收藏</span></span><br><span class="line"><span class="meta">@home.route('/moviecol/add/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@user_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moviecol_add</span><span class="params">()</span>:</span></span><br><span class="line">    mid = request.args.get(<span class="string">'mid'</span>, <span class="string">''</span>)</span><br><span class="line">    uid = request.args.get(<span class="string">'uid'</span>, <span class="string">''</span>)</span><br><span class="line">    moviecol = MovieCol.query.filter_by(</span><br><span class="line">        movie_id=int(mid),</span><br><span class="line">        user_id=int(uid)</span><br><span class="line">    ).count()</span><br><span class="line">    <span class="keyword">if</span> moviecol == <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># 已收藏</span></span><br><span class="line">        data = dict(ok=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> moviecol == <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># 未收藏</span></span><br><span class="line">        moviecol = MovieCol(</span><br><span class="line">            movie_id=int(mid),</span><br><span class="line">            user_id=int(uid)</span><br><span class="line">        )</span><br><span class="line">        db.session.add(moviecol)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        data = dict(ok=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">import</span> json</span><br><span class="line">    <span class="keyword">return</span> json.dumps(data)</span><br></pre></td></tr></table></figure><ul><li>在play模板文件中根据后端返回的data字典数据，显示页面提示信息，需在收藏电影下定义两种提示样式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:green;font-size: 18px"</span> <span class="attr">id</span>=<span class="string">"show_col_msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red;font-size: 18px"</span> <span class="attr">id</span>=<span class="string">"show_col_msg1"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">       $(<span class="string">"#btn-col"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">           <span class="keyword">var</span> mid = &#123;&#123;movie.id&#125;&#125;;</span></span><br><span class="line"><span class="actionscript">           <span class="keyword">var</span> uid = &#123;&#123;session[<span class="string">'user_id'</span>]&#125;&#125;;</span></span><br><span class="line"><span class="javascript">           $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">               url:<span class="string">"&#123;&#123;url_for('home.moviecol_add')&#125;&#125;"</span>,</span></span><br><span class="line"><span class="actionscript">               type:<span class="string">"GET"</span>,</span></span><br><span class="line"><span class="vbscript">               data:<span class="string">"mid="</span>+<span class="built_in">mid</span>+<span class="string">"&amp;uid="</span>+uid,</span></span><br><span class="line"><span class="actionscript">               dataType:<span class="string">"json"</span>,</span></span><br><span class="line"><span class="actionscript">               success:<span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span>(res.ok == <span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">"#show_col_msg"</span>).empty();</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">"#show_col_msg"</span>).append(<span class="string">"收藏成功！"</span>);</span></span><br><span class="line"><span class="actionscript">                    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">"#show_col_msg1"</span>).empty();</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">"#show_col_msg1"</span>).append(<span class="string">"您已收藏！"</span>);</span></span><br><span class="line">                    &#125;</span><br><span class="line">               &#125;</span><br><span class="line"> </span><br><span class="line">           &#125;)</span><br><span class="line"> </span><br><span class="line">       &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试收藏电影功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/201904301638463.gif" alt></fancybox></p><p><strong>2.</strong>收藏电影页面数据显示</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 电影收藏</span></span><br><span class="line"><span class="meta">@home.route('/moviecol/&lt;int:page&gt;/')</span></span><br><span class="line"><span class="meta">@user_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moviecol</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page == <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = MovieCol.query.join(Movie).join(User).filter(</span><br><span class="line">        Movie.id == MovieCol.movie_id,</span><br><span class="line">        User.id == session[<span class="string">'user_id'</span>]</span><br><span class="line">    ).order_by(MovieCol.addtime.desc()).paginate(page=page, per_page=<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/moviecol.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>修改会员菜单栏收藏电影地址，添加page值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"m-5"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.moviecol', page=1)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-heart"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;收藏电影</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">        &#123;% for m in page_data.items %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"media"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"media-left"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.play', id=m.movie_id, page=1)&#125;&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"media-object"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/'+m.movie.logo)&#125;&#125;"</span> <span class="attr">width</span>=<span class="string">"200px"</span> <span class="attr">height</span>=<span class="string">"280px"</span> <span class="attr">alt</span>=<span class="string">"&#123;&#123;m.movie.title&#125;&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"media-body"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"media-heading"</span>&gt;</span>&#123;&#123;m.movie.title&#125;&#125;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.play', id=m.movie_id, page=1)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-primary pull-right"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-play"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>播放影片<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                &#123;&#123;m.movie.info&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12 text-center"</span> <span class="attr">style</span>=<span class="string">"margin-top:6px;"</span>&gt;</span></span><br><span class="line">        &#123;&#123;pg.page(page_data, 'home.moviecol')&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示收藏电影数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190430174010452.gif" alt></fancybox></p><h1 id="五丶前台管理（电影弹幕）"><a href="#五丶前台管理（电影弹幕）" class="headerlink" title="五丶前台管理（电影弹幕）"></a>五丶前台管理（电影弹幕）</h1><p><strong>1.</strong>下载插件以及安装flask-redis包</p><ul><li>下载弹幕播放器插件 <a href="https://github.com/MoePlayer/DPlayer" target="_blank" rel="noopener">https://github.com/MoePlayer/DPlayer</a>，下载后该文件拷贝到static静态目录下</li></ul><p><img src="https://img-blog.csdnimg.cn/201904302117052.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>安装flask-redis包</li></ul><p><img src="https://img-blog.csdnimg.cn/20190430211923977.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>2.</strong>配置flask连接redis数据库，将弹幕消息存储在redis中</p><ul><li>在app/<strong>init</strong>.py中进行如下配置</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.config[<span class="string">'REDIS_URL'</span>] = <span class="string">'redis://localhost:6379/1'</span></span><br><span class="line">rd = FlaskRedis(app)</span><br></pre></td></tr></table></figure><p><strong>3.</strong>定义弹幕播放器视图函数（将paly视图代码复制后，将play替换成video）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 弹幕播放器</span></span><br><span class="line"><span class="meta">@home.route('/video/&lt;int:id&gt;/&lt;int:page&gt;/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">video</span><span class="params">(id=None, page=None)</span>:</span></span><br><span class="line">    movie = Movie.query.join(Tag).filter(</span><br><span class="line">        Tag.id == Movie.tag_id,</span><br><span class="line">        Movie.id == int(id)</span><br><span class="line">    ).first_or_404()</span><br><span class="line">    <span class="comment"># 评论数据分页处理</span></span><br><span class="line">    <span class="keyword">if</span> page == <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = Comment.query.join(Movie).join(User).filter(</span><br><span class="line">        Movie.id == movie.id,</span><br><span class="line">        User.id == Comment.user_id</span><br><span class="line">    ).order_by(Comment.addtime.desc()).paginate(page=page, per_page=<span class="number">5</span>)</span><br><span class="line">    <span class="comment"># 播放量+1</span></span><br><span class="line">    movie.playnum += <span class="number">1</span></span><br><span class="line">    form = CommentForm()</span><br><span class="line">    <span class="comment"># 保存评论内容信息到数据库</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'user'</span> <span class="keyword">in</span> session <span class="keyword">and</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        comment = Comment(</span><br><span class="line">            content=data[<span class="string">'content'</span>],</span><br><span class="line">            movie_id=movie.id,</span><br><span class="line">            user_id=session[<span class="string">'user_id'</span>]</span><br><span class="line">        )</span><br><span class="line">        db.session.add(comment)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        <span class="comment"># 评论量需要+1</span></span><br><span class="line">        movie.commentnum += <span class="number">1</span></span><br><span class="line">        db.session.add(movie)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"评论成功"</span>, <span class="string">'ok'</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'home.video'</span>, id=movie.id, page=<span class="number">1</span>))</span><br><span class="line">    db.session.add(movie)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/video.html"</span>, movie=movie, form=form, page_data=page_data)</span><br></pre></td></tr></table></figure><p><strong>4.</strong>定义video.html模板文件（复制paly.html模板内容，进行如下修改）</p><ul><li>在模板中引入dplayer的配置文件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for('static',filename='dplayer/dist/DPlayer.min.css') &#125;&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for('static',filename='dplayer/plugin/flv.min.js') &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for('static',filename='dplayer/plugin/hls.min.js') &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for('static',filename='dplayer/dist/DPlayer.min.js') &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>使用内联式定义样式</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-class">.col-lg-1</span>, <span class="selector-class">.col-lg-10</span>, <span class="selector-class">.col-lg-11</span>, <span class="selector-class">.col-lg-12</span>, <span class="selector-class">.col-lg-2</span>, <span class="selector-class">.col-lg-3</span>, <span class="selector-class">.col-lg-4</span>, <span class="selector-class">.col-lg-5</span>, <span class="selector-class">.col-lg-6</span>, <span class="selector-class">.col-lg-7</span>, <span class="selector-class">.col-lg-8</span>, <span class="selector-class">.col-lg-9</span>, <span class="selector-class">.col-md-1</span>, <span class="selector-class">.col-md-10</span>, <span class="selector-class">.col-md-11</span>, <span class="selector-class">.col-md-12</span>, <span class="selector-class">.col-md-2</span>, <span class="selector-class">.col-md-3</span>, <span class="selector-class">.col-md-4</span>, <span class="selector-class">.col-md-5</span>, <span class="selector-class">.col-md-6</span>, <span class="selector-class">.col-md-7</span>, <span class="selector-class">.col-md-8</span>, <span class="selector-class">.col-md-9</span>, <span class="selector-class">.col-sm-1</span>, <span class="selector-class">.col-sm-10</span>, <span class="selector-class">.col-sm-11</span>, <span class="selector-class">.col-sm-12</span>, <span class="selector-class">.col-sm-2</span>, <span class="selector-class">.col-sm-3</span>, <span class="selector-class">.col-sm-4</span>, <span class="selector-class">.col-sm-5</span>, <span class="selector-class">.col-sm-6</span>, <span class="selector-class">.col-sm-7</span>, <span class="selector-class">.col-sm-8</span>, <span class="selector-class">.col-sm-9</span>, <span class="selector-class">.col-xs-1</span>, <span class="selector-class">.col-xs-10</span>, <span class="selector-class">.col-xs-11</span>, <span class="selector-class">.col-xs-12</span>, <span class="selector-class">.col-xs-2</span>, <span class="selector-class">.col-xs-3</span>, <span class="selector-class">.col-xs-4</span>, <span class="selector-class">.col-xs-5</span>, <span class="selector-class">.col-xs-6</span>, <span class="selector-class">.col-xs-7</span>, <span class="selector-class">.col-xs-8</span>, <span class="selector-class">.col-xs-9</span>&#123;</span><br><span class="line">            <span class="attribute">padding-right</span>: <span class="number">3px</span>;</span><br><span class="line">            <span class="attribute">padding-left</span>: <span class="number">3px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="selector-class">.dplayer-comment-setting-type</span>&gt;<span class="selector-tag">label</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: inline;&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li>定义播放器高宽</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dplayer1"</span> <span class="attr">style</span>=<span class="string">"height:500px;width: 774px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>定义弹幕js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> dp1 = <span class="keyword">new</span> DPlayer(&#123;</span><br><span class="line">        element: <span class="built_in">document</span>.getElementById(<span class="string">'dplayer1'</span>),</span><br><span class="line">        video: &#123;</span><br><span class="line">            url: <span class="string">"&#123;&#123; url_for('static',filename='uploads/'+movie.url) &#125;&#125;"</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        danmaku: &#123;</span><br><span class="line">            id: <span class="string">'&#123;&#123; movie.id &#125;&#125;'</span>,</span><br><span class="line">            api: <span class="string">"/dm/"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p><strong>5.</strong>定义弹幕消息视图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 弹幕</span></span><br><span class="line"><span class="meta">@home.route("/dm/", methods=["GET", "POST"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dm</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> json</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">"GET"</span>:</span><br><span class="line">        <span class="comment">#获取弹幕消息队列</span></span><br><span class="line">        id = request.args.get(<span class="string">'id'</span>)</span><br><span class="line">        key = <span class="string">"movie"</span> + str(id)</span><br><span class="line">        <span class="keyword">if</span> rd.llen(key):</span><br><span class="line">            msgs = rd.lrange(key, <span class="number">0</span>, <span class="number">2999</span>)</span><br><span class="line">            res = &#123;</span><br><span class="line">                <span class="string">"code"</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="string">"danmaku"</span>: [json.loads(v) <span class="keyword">for</span> v <span class="keyword">in</span> msgs]</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res = &#123;</span><br><span class="line">                <span class="string">"code"</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="string">"danmaku"</span>: []</span><br><span class="line">            &#125;</span><br><span class="line">        resp = json.dumps(res)</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">"POST"</span>:</span><br><span class="line">        <span class="comment">#添加弹幕</span></span><br><span class="line">        data = json.loads(request.get_data())</span><br><span class="line">        msg = &#123;</span><br><span class="line">            <span class="string">"__v"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">"author"</span>: data[<span class="string">"author"</span>],</span><br><span class="line">            <span class="string">"time"</span>: data[<span class="string">"time"</span>],</span><br><span class="line">            <span class="string">"text"</span>: data[<span class="string">"text"</span>],</span><br><span class="line">            <span class="string">"color"</span>: data[<span class="string">"color"</span>],</span><br><span class="line">            <span class="string">"type"</span>: data[<span class="string">'type'</span>],</span><br><span class="line">            <span class="string">"ip"</span>: request.remote_addr,</span><br><span class="line">            <span class="string">"_id"</span>: datetime.datetime.now().strftime(<span class="string">"%Y%m%d%H%M%S"</span>) + uuid.uuid4().hex,</span><br><span class="line">            <span class="string">"player"</span>: [</span><br><span class="line">                data[<span class="string">"player"</span>]</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">        res = &#123;</span><br><span class="line">            <span class="string">"code"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="string">"data"</span>: msg</span><br><span class="line">        &#125;</span><br><span class="line">        resp = json.dumps(res)</span><br><span class="line">        rd.lpush(<span class="string">"movie"</span> + str(data[<span class="string">"player"</span>]), json.dumps(msg))</span><br><span class="line">    <span class="keyword">return</span> Response(resp, mimetype=<span class="string">'application/json'</span>)</span><br></pre></td></tr></table></figure><p><strong>6.</strong>测试电影弹幕功能</p><ul><li>在浏览器中访问<a href="http://127.0.0.1:5000/video/1/1/" target="_blank" rel="noopener">http://127.0.0.1:5000/video/1/1/</a>（跟之前播放地址不同于video和play <a href="http://127.0.0.1:5000/play/1/1/" target="_blank" rel="noopener">http://127.0.0.1:5000/play/1/1/</a>），因为没有进行发送弹幕操作，所以弹幕消息队列为空</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190430213532252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>发送弹幕后查看danmaku的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190501000538425.gif" alt></fancybox></p><ul><li>查看redis数据库存储的movie1弹幕消息</li></ul><p><img src="https://img-blog.csdnimg.cn/20190501000848416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>博主自己发了很多弹幕消息，最终效果如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190501005814206.gif" alt></fancybox></p><h1 id="六丶代码优化以及bug处理"><a href="#六丶代码优化以及bug处理" class="headerlink" title="六丶代码优化以及bug处理"></a>六丶代码优化以及bug处理</h1><p><strong>1.</strong>头像判断</p><p><strong>说明：</strong>因为当进行用户注册成功后，不会有用户头像，那么在显示头像的页面中，就需要进行如下判断</p><p>play.html以及video.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"avatar size-L radius"</span>&gt;</span></span><br><span class="line">    &#123;% if c.user.face %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"50x50"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/users/'+ c.user.face)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"img-circle"</span> <span class="attr">style</span>=<span class="string">"border:1px solid #abcdef;width: 50px"</span>&gt;</span></span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"50x50"</span> <span class="attr">data-src</span>=<span class="string">"holder.js/50x50"</span> <span class="attr">class</span>=<span class="string">"img-circle"</span> <span class="attr">style</span>=<span class="string">"border:1px solid #abcdef;width: 50px"</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><p>user_list.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">    &#123;% if u.face %&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/users/'+u.face)&#125;&#125;"</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">class</span>=<span class="string">"img-responsive center-block"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"50x50"</span> <span class="attr">data-src</span>=<span class="string">"holder.js/50x50"</span> <span class="attr">class</span>=<span class="string">"img-circle"</span> <span class="attr">style</span>=<span class="string">"border:1px solid #abcdef;width: 50px"</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><p>user_view.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">    &#123;% if u.face %&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/users/'+user.face)&#125;&#125;"</span> <span class="attr">width</span>=<span class="string">"50"</span> <span class="attr">class</span>=<span class="string">"img-responsive"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"50x50"</span> <span class="attr">data-src</span>=<span class="string">"holder.js/100x100"</span> <span class="attr">class</span>=<span class="string">"img-circle"</span> <span class="attr">style</span>=<span class="string">"border:1px solid #abcdef;width: 50px"</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2.</strong>关键字搜索分页</p><p><strong>说明：</strong>当进行电影搜索户，显示与”复仇”有关的电影，共2部，点击分页上的首页或者尾页时，则充值搜索条件，导致显示全部电影与””有关的电影，共15部</p><ul><li>在ui目录下创建search_page.html分页模板文件，将admin_page.html内容拷贝进入，修改后如下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% macro page(data, url) %&#125;</span><br><span class="line">&#123;% if data %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination pagination-sm no-margin pull-right"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=1)&#125;&#125;?key=&#123;&#123;data.key&#125;&#125;"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% if data.has_prev %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=data.prev_num)&#125;&#125;?key=&#123;&#123;data.key&#125;&#125;"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% else%&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"> </span><br><span class="line">    &#123;% for p in data.iter_pages() %&#125;</span><br><span class="line">        &#123;% if p == data.page %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>&#123;&#123;p&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% else %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=p)&#125;&#125;"</span>&gt;</span>&#123;&#123;p&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"> </span><br><span class="line">    &#123;% if data.has_next %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=data.next_num)&#125;&#125;?key=&#123;&#123;data.key&#125;&#125;"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% else%&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=data.pages)&#125;&#125;?key=&#123;&#123;data.key&#125;&#125;"</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endmacro %&#125;</span><br></pre></td></tr></table></figure><ul><li>在search.html模板中修改导入的分页模板</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% import "ui/search_page.html" as pg %&#125;</span><br></pre></td></tr></table></figure><ul><li>在home/views中找到搜索的视图函数，需要在分页数据page_data中添加名key的键值，这样就不会导致点击首页尾页以及上下页而导致去除掉搜索关键字条件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">page_data.key = key</span><br></pre></td></tr></table></figure><p><strong>3.</strong>电影右侧播放页面滚动条</p><p><strong>说明</strong>：当影片内容简介很多时，则出现如下图显示，导致格式扭曲内容显示不全，需要加上滚动条来进行优化</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190503103505274.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在play.html以及video.html中电影介绍div容器中添加style滚动条属性</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span> <span class="attr">style</span>=<span class="string">"height:459px;overflow:scroll;"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示影片介绍信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190503103940624.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/89574562" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/89574562</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Python Web开发 </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之个性化微电影网站的实战开发（三）</title>
      <link href="/2019/11/12/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E4%B8%AA%E6%80%A7%E5%8C%96%E5%BE%AE%E7%94%B5%E5%BD%B1%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2019/11/12/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E4%B8%AA%E6%80%A7%E5%8C%96%E5%BE%AE%E7%94%B5%E5%BD%B1%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶后台管理（会员管理）"><span style="color:#4ea1db">一丶后台管理（会员管理）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶后台管理（评论管理）"><span style="color:#4ea1db">二丶后台管理（评论管理）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶后台管理（收藏管理）"><span style="color:#4ea1db">三丶后台管理（收藏管理）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶后台管理（修改密码）"><span style="color:#4ea1db">四丶后台管理（修改密码）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶后台管理（日志管理）"><span style="color:#4ea1db">五丶后台管理（日志管理）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶后台管理（权限管理）"><span style="color:#4ea1db">六丶后台管理（权限管理）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#七丶后台管理（角色管理）"><span style="color:#4ea1db">七丶后台管理（角色管理）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#八丶后台管理（管理员管理）"><span style="color:#4ea1db">八丶后台管理（管理员管理）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#九丶访问权限控制"><span style="color:#4ea1db">九丶访问权限控制</span></a></li><a id="more"></a><h1 id="一丶后台管理（会员管理）"><a href="#一丶后台管理（会员管理）" class="headerlink" title="一丶后台管理（会员管理）"></a>一丶后台管理（会员管理）</h1><p><strong>1.</strong>数据准备</p><ul><li>导入user表数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">name</span>,pwd,email,phone,info,face,<span class="keyword">uuid</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="string">'鼠'</span>,<span class="string">'1231'</span>,<span class="string">'1231@123.com'</span>,<span class="string">'13888888881'</span>,<span class="string">'鼠'</span>,<span class="string">'1f401.png'</span>,<span class="string">'d32a72bdac524478b7e4f6dfc8394fc0'</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">name</span>,pwd,email,phone,info,face,<span class="keyword">uuid</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="string">'牛'</span>,<span class="string">'1232'</span>,<span class="string">'1232@123.com'</span>,<span class="string">'13888888882'</span>,<span class="string">'牛'</span>,<span class="string">'1f402.png'</span>,<span class="string">'d32a72bdac524478b7e4f6dfc8394fc1'</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">name</span>,pwd,email,phone,info,face,<span class="keyword">uuid</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="string">'虎'</span>,<span class="string">'1233'</span>,<span class="string">'1233@123.com'</span>,<span class="string">'13888888883'</span>,<span class="string">'虎'</span>,<span class="string">'1f405.png'</span>,<span class="string">'d32a72bdac524478b7e4f6dfc8394fc2'</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">name</span>,pwd,email,phone,info,face,<span class="keyword">uuid</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="string">'兔'</span>,<span class="string">'1234'</span>,<span class="string">'1234@123.com'</span>,<span class="string">'13888888884'</span>,<span class="string">'兔'</span>,<span class="string">'1f407.png'</span>,<span class="string">'d32a72bdac524478b7e4f6dfc8394fc3'</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">name</span>,pwd,email,phone,info,face,<span class="keyword">uuid</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="string">'龙'</span>,<span class="string">'1235'</span>,<span class="string">'1235@123.com'</span>,<span class="string">'13888888885'</span>,<span class="string">'龙'</span>,<span class="string">'1f409.png'</span>,<span class="string">'d32a72bdac524478b7e4f6dfc8394fc4'</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">name</span>,pwd,email,phone,info,face,<span class="keyword">uuid</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="string">'蛇'</span>,<span class="string">'1236'</span>,<span class="string">'1236@123.com'</span>,<span class="string">'13888888886'</span>,<span class="string">'蛇'</span>,<span class="string">'1f40d.png'</span>,<span class="string">'d32a72bdac524478b7e4f6dfc8394fc5'</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">name</span>,pwd,email,phone,info,face,<span class="keyword">uuid</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="string">'马'</span>,<span class="string">'1237'</span>,<span class="string">'1237@123.com'</span>,<span class="string">'13888888887'</span>,<span class="string">'马'</span>,<span class="string">'1f434.png'</span>,<span class="string">'d32a72bdac524478b7e4f6dfc8394fc6'</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">name</span>,pwd,email,phone,info,face,<span class="keyword">uuid</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="string">'羊'</span>,<span class="string">'1238'</span>,<span class="string">'1238@123.com'</span>,<span class="string">'13888888888'</span>,<span class="string">'羊'</span>,<span class="string">'1f411.png'</span>,<span class="string">'d32a72bdac524478b7e4f6dfc8394fc7'</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">name</span>,pwd,email,phone,info,face,<span class="keyword">uuid</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="string">'猴'</span>,<span class="string">'1239'</span>,<span class="string">'1239@123.com'</span>,<span class="string">'13888888889'</span>,<span class="string">'猴'</span>,<span class="string">'1f412.png'</span>,<span class="string">'d32a72bdac524478b7e4f6dfc8394fc8'</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">name</span>,pwd,email,phone,info,face,<span class="keyword">uuid</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="string">'鸡'</span>,<span class="string">'1240'</span>,<span class="string">'1240@123.com'</span>,<span class="string">'13888888891'</span>,<span class="string">'鸡'</span>,<span class="string">'1f413.png'</span>,<span class="string">'d32a72bdac524478b7e4f6dfc8394fc9'</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">name</span>,pwd,email,phone,info,face,<span class="keyword">uuid</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="string">'狗'</span>,<span class="string">'1241'</span>,<span class="string">'1241@123.com'</span>,<span class="string">'13888888892'</span>,<span class="string">'狗'</span>,<span class="string">'1f415.png'</span>,<span class="string">'d32a72bdac524478b7e4f6dfc8394fd0'</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">user</span>(<span class="keyword">name</span>,pwd,email,phone,info,face,<span class="keyword">uuid</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="string">'猪'</span>,<span class="string">'1242'</span>,<span class="string">'1242@123.com'</span>,<span class="string">'13888888893'</span>,<span class="string">'猪'</span>,<span class="string">'1f416.png'</span>,<span class="string">'d32a72bdac524478b7e4f6dfc8394fd1'</span>,<span class="keyword">now</span>());</span><br></pre></td></tr></table></figure><ul><li>查看表user数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190422094313998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>将会员头像图片文件拷贝到uploads目录下</li></ul><p><img src="https://img-blog.csdnimg.cn/20190422094917952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>2.</strong>会员列表页数据显示（项目做到这里，如果看明白的话，列表页的逻辑分分钟搞定）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会员列表</span></span><br><span class="line"><span class="meta">@admin.route('/user/list/&lt;int:page&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_list</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page == <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = User.query.order_by(User.addtime.desc()).paginate(page=page, per_page=<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/user_list.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>编写列表页链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"treeview-menu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"g-5-1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.user_list', page=1)&#125;&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 会员列表</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在模板文件中进行数据块填写以及分页</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">        &#123;% for u in page_data.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;u.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;u.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;u.email&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;u.phone&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/users/'+u.face)&#125;&#125;"</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">class</span>=<span class="string">"img-responsive center-block"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>正常/冻结<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;u.addtime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-success"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.user_view')&#125;&#125;"</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &amp;nbsp;</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-info"</span>&gt;</span>解冻<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &amp;nbsp;</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-warning"</span>&gt;</span>冻结<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &amp;nbsp;</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">         &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination pagination-sm no-margin pull-right"</span>&gt;</span></span><br><span class="line">       &#123;&#123;pg.page(page_data, 'admin.user_list')&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试会员列表页数据显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190422105349403.gif" alt></fancybox></p><p><strong>3.</strong>会员详情页面数据显示</p><ul><li>定义视图函数</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会员详情</span></span><br><span class="line"><span class="meta">@admin.route('/user/view/&lt;int:id&gt;/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_view</span><span class="params">(id)</span>:</span></span><br><span class="line">    user = User.query.filter_by(id=id).first_or_404()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/user_view.html"</span>, user=user)</span><br><span class="line">填写摸吧数据块</span><br><span class="line">&lt;table class="table table-hover"&gt;</span><br><span class="line">    &lt;tbody&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td class="td_bd"&gt;编号：&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123;user.id&#125;&#125;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td class="td_bd"&gt;昵称：&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123;user.name&#125;&#125;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td class="td_bd"&gt;邮箱：&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123;user.email&#125;&#125;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td class="td_bd"&gt;手机：&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123;user.phone&#125;&#125;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td class="td_bd"&gt;头像：&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">            &lt;img src="&#123;&#123;url_for('static', filename='uploads/users/'+user.face)&#125;&#125;" width="50" class="img-responsive" alt=""&gt;</span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td class="td_bd"&gt;注册时间：&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">            &#123;&#123;user.addtime&#125;&#125;</span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td class="td_bd"&gt;唯一标志符：&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">            &#123;&#123;user.uuid&#125;&#125;</span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td class="td_bd"&gt;个性简介：&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">            &#123;&#123;user.info&#125;&#125;</span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;/tbody&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><ul><li>定义查看按钮链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-success"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.user_view', id=u.id)&#125;&#125;"</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示会员详情页面数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190422115054536.gif" alt></fancybox></p><p><strong>4.</strong>删除会员功能 </p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除会员</span></span><br><span class="line"><span class="meta">@admin.route('/user/del/&lt;int:id&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_del</span><span class="params">(id=None)</span>:</span></span><br><span class="line">    user = User.query.filter_by(id=id).first_or_404()</span><br><span class="line">    db.session.delete(user)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    flash(<span class="string">"删除会员成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.user_list'</span>, page=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><ul><li>定义删除功能链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.user_del', id=u.id)&#125;&#125;"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试会员删除功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190422134510499.gif" alt></fancybox></p><h1 id="二丶后台管理（评论管理）"><a href="#二丶后台管理（评论管理）" class="headerlink" title="二丶后台管理（评论管理）"></a>二丶后台管理（评论管理）</h1><p><strong>1.</strong>数据准备</p><ul><li>导入comment表数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">comment</span>(movie_id,user_id,<span class="keyword">content</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">7</span>,<span class="number">1</span>,<span class="string">"好看"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">comment</span>(movie_id,user_id,<span class="keyword">content</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">7</span>,<span class="number">2</span>,<span class="string">"不错"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">comment</span>(movie_id,user_id,<span class="keyword">content</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">7</span>,<span class="number">3</span>,<span class="string">"经典"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">comment</span>(movie_id,user_id,<span class="keyword">content</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">7</span>,<span class="number">4</span>,<span class="string">"给力"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">comment</span>(movie_id,user_id,<span class="keyword">content</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">8</span>,<span class="number">5</span>,<span class="string">"难看"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">comment</span>(movie_id,user_id,<span class="keyword">content</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">8</span>,<span class="number">6</span>,<span class="string">"无聊"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">comment</span>(movie_id,user_id,<span class="keyword">content</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">8</span>,<span class="number">7</span>,<span class="string">"乏味"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">comment</span>(movie_id,user_id,<span class="keyword">content</span>,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">8</span>,<span class="number">8</span>,<span class="string">"无感"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">comment</span> auto_increment=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><ul><li>查询数据库comment表数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190422135139527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>2.</strong>评论列表页数据显示</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 评论列表</span></span><br><span class="line"><span class="meta">@admin.route('/comment/list/&lt;int:page&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">comment_list</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page == <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = Comment.query.join(Movie).join(User).filter(</span><br><span class="line">        Movie.id == Comment.movie_id,</span><br><span class="line">        User.id == Comment.user_id</span><br><span class="line">    ).order_by(Comment.addtime.desc()).paginate(page=page, per_page=<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/comment_list.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>修改列表页链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"treeview-menu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"g-6-1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.comment_list', page=1)&#125;&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 评论列表</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>填写模板数据块内容</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body box-comments"</span>&gt;</span></span><br><span class="line">    &#123;% for c in page_data.items%&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-comment"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"img-circle img-sm"</span></span></span><br><span class="line"><span class="tag">             <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/users/'+c.user.face)&#125;&#125;"</span> <span class="attr">alt</span>=<span class="string">"User Image"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment-text"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line">                &#123;&#123;c.user.name&#125;&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"text-muted pull-right"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-calendar"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    &amp;nbsp;</span><br><span class="line">                    &#123;&#123;c.addtime&#125;&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            关于电影<span class="tag">&lt;<span class="name">a</span>&gt;</span>《&#123;&#123;c.movie.title&#125;&#125;》<span class="tag">&lt;/<span class="name">a</span>&gt;</span>的评论：&#123;&#123;c.content&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-danger pull-right"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">    &#123;&#123;pg.page(page_data, 'admin.comment_list')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试评论列表页数据显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190422141628936.gif" alt></fancybox></p><p><strong>3.</strong>删除评论</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除评论</span></span><br><span class="line"><span class="meta">@admin.route('/comment/del/&lt;int:id&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">comment_del</span><span class="params">(id=None)</span>:</span></span><br><span class="line">    comment = Comment.query.filter_by(id=id).first_or_404()</span><br><span class="line">    db.session.delete(comment)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    flash(<span class="string">"删除评论成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.comment_list'</span>, page=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><ul><li>定义删除按钮链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.comment_del', id=c.id)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-danger pull-right"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试删除评论功能（编辑功能没有意义）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190422142330432.gif" alt></fancybox></p><h1 id="三丶后台管理（收藏管理）"><a href="#三丶后台管理（收藏管理）" class="headerlink" title="三丶后台管理（收藏管理）"></a>三丶后台管理（收藏管理）</h1><p><strong>1.</strong>数据准备</p><ul><li>导入moviecol表数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> moviecol(movie_id,user_id,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">7</span>,<span class="number">1</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> moviecol(movie_id,user_id,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">7</span>,<span class="number">2</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> moviecol(movie_id,user_id,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">7</span>,<span class="number">3</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> moviecol(movie_id,user_id,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">7</span>,<span class="number">4</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> moviecol(movie_id,user_id,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">8</span>,<span class="number">5</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> moviecol(movie_id,user_id,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">8</span>,<span class="number">6</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> moviecol(movie_id,user_id,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">8</span>,<span class="number">7</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> moviecol(movie_id,user_id,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">8</span>,<span class="number">8</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> moviecol auto_increment=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><ul><li>查看数据库moviecol表数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190422145133157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>2.</strong>收藏列表数据显示</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 收藏列表</span></span><br><span class="line"><span class="meta">@admin.route('/moviecol/list/&lt;int:page&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moviecol_list</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page == <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = MovieCol.query.join(Movie).join(User).filter(</span><br><span class="line">        Movie.id == MovieCol.movie_id,</span><br><span class="line">        User.id == MovieCol.user_id</span><br><span class="line">    ).order_by(MovieCol.addtime.desc()).paginate(page=page, per_page=<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/moviecol_list.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>修改收藏列表链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"treeview-menu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"g-7-1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.moviecol_list', page=1)&#125;&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 收藏列表</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>填充模板数据块</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body table-responsive no-padding"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>电影<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>添加时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作事项<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% for m in page_data.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.movie.title&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.user.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.addtime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &amp;nbsp;</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">    &#123;&#123;pg.page(page_data, 'admin.moviecol_list')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示收藏列表页面数</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019042215050110.gif" alt></fancybox></p><p><strong>3.</strong>删除电影收藏</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除收藏</span></span><br><span class="line"><span class="meta">@admin.route('/moviecol/del/&lt;int:id&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moviecol_del</span><span class="params">(id=None)</span>:</span></span><br><span class="line">    moviecol = MovieCol.query.filter_by(id=id).first_or_404()</span><br><span class="line">    db.session.delete(moviecol)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    flash(<span class="string">"删除收藏成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.moviecol_list'</span>, page=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><ul><li>定义删除按钮链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.moviecol_del', id=m.id)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试删除收藏功能（编辑功能这里没有存在的意义）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190422152032231.gif" alt></fancybox></p><h1 id="四丶后台管理（修改密码）"><a href="#四丶后台管理（修改密码）" class="headerlink" title="四丶后台管理（修改密码）"></a>四丶后台管理（修改密码）</h1><p><strong>1.</strong>修改密码页面数据显示</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line"><span class="meta">@admin.route('/pwd/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwd</span><span class="params">()</span>:</span></span><br><span class="line">    form = PwdForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/pwd.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>定义表单类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdForm</span><span class="params">(FlaskForm)</span>:</span></span><br><span class="line">    <span class="string">"""修改密码表单"""</span></span><br><span class="line">    old_pwd = PasswordField(</span><br><span class="line">        label=<span class="string">"旧密码"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入旧密码！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"旧密码"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入旧密码！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    new_pwd = PasswordField(</span><br><span class="line">        label=<span class="string">"新密码"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入新密码！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"新密码"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入新密码！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    submit = SubmitField(</span><br><span class="line">        <span class="string">'修改'</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"btn btn-primary"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li>填写模板数据块数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">role</span>=<span class="string">"form"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_pwd"</span>&gt;</span>&#123;&#123;form.old_pwd.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.old_pwd&#125;&#125;</span><br><span class="line">            &#123;% for error in form.old_pwd.errors %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_newpwd"</span>&gt;</span>&#123;&#123;form.new_pwd.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.new_pwd&#125;&#125;</span><br><span class="line">            &#123;% for error in form.new_pwd.errors %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer"</span>&gt;</span></span><br><span class="line">        &#123;&#123; form.submit &#125;&#125;</span><br><span class="line">        &#123;&#123; form.csrf_token &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示修改密码页面数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019042215573993.gif" alt></fancybox></p><h1 id="四丶后台管理（修改密码）-1"><a href="#四丶后台管理（修改密码）-1" class="headerlink" title="四丶后台管理（修改密码）"></a>四丶后台管理（修改密码）</h1><p><strong>1.</strong>修改密码页面数据显示</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line"><span class="meta">@admin.route('/pwd/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwd</span><span class="params">()</span>:</span></span><br><span class="line">    form = PwdForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/pwd.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>定义表单类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PwdForm</span><span class="params">(FlaskForm)</span>:</span></span><br><span class="line">    <span class="string">"""修改密码表单"""</span></span><br><span class="line">    old_pwd = PasswordField(</span><br><span class="line">        label=<span class="string">"旧密码"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入旧密码！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"旧密码"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入旧密码！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    new_pwd = PasswordField(</span><br><span class="line">        label=<span class="string">"新密码"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入新密码！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"新密码"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入新密码！"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    submit = SubmitField(</span><br><span class="line">        <span class="string">'修改'</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"btn btn-primary"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li>填写模板数据块数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">role</span>=<span class="string">"form"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_pwd"</span>&gt;</span>&#123;&#123;form.old_pwd.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.old_pwd&#125;&#125;</span><br><span class="line">            &#123;% for error in form.old_pwd.errors %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_newpwd"</span>&gt;</span>&#123;&#123;form.new_pwd.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.new_pwd&#125;&#125;</span><br><span class="line">            &#123;% for error in form.new_pwd.errors %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer"</span>&gt;</span></span><br><span class="line">        &#123;&#123; form.submit &#125;&#125;</span><br><span class="line">        &#123;&#123; form.csrf_token &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示修改密码页面数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019042215573993.gif" alt></fancybox></p><p><strong>2.</strong>校验旧密码</p><ul><li>在PwdFrom表单类中定义校验密码函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">validate_old_pwd</span><span class="params">(self, field)</span>:</span></span><br><span class="line">    <span class="keyword">from</span> flask <span class="keyword">import</span> session</span><br><span class="line">    pwd = field.data</span><br><span class="line">    name = session[<span class="string">"admin"</span>]</span><br><span class="line">    admin = Admin.query.filter_by(</span><br><span class="line">        name=name</span><br><span class="line">    ).first()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> admin.check_pwd(pwd):</span><br><span class="line">        <span class="keyword">raise</span> ValidationError(<span class="string">"旧密码错误！"</span>)</span><br></pre></td></tr></table></figure><ul><li>测试旧密码校验（第一次输入正确密码第二次输入错误密码）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190422165123313.gif" alt></fancybox></p><p><strong>3.</strong>修改密码</p><ul><li>定义视图函数，修改密码成功则跳转执行的是退出视图而不是登录视图，因为退出logout视图函数会清空session的值，并跳转到登录页，这才是符合逻辑的</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line"><span class="meta">@admin.route('/pwd/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwd</span><span class="params">()</span>:</span></span><br><span class="line">    form = PwdForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        admin = Admin.query.filter_by(name=session[<span class="string">'admin'</span>]).first()</span><br><span class="line">        admin.pwd = generate_password_hash(data[<span class="string">'new_pwd'</span>])</span><br><span class="line">        db.session.add(admin)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"修改密码成功，请重新登录"</span>, <span class="string">"ok"</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.logout'</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/pwd.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>在login.html模板中获取闪现成功消息，因为修改成功后立即跳转到登录页，所以要在登录页面显示修改密码成功的消息，那么对于登录功能来说，只需要显示错误提示即可，因为即使你定义了捕获成功ok的筛选器，也不会在登录页页面显示出登录成功提示信息，以为一旦登录成功则立即跳转的主页index</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for msg in get_flashed_messages(category_filter=["ok"]) %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success alert-dismissible"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        &#123;&#123; msg &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li>测试修改密码功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190422175155256.gif" alt></fancybox></p><h1 id="五丶后台管理（日志管理）"><a href="#五丶后台管理（日志管理）" class="headerlink" title="五丶后台管理（日志管理）"></a>五丶后台管理（日志管理）</h1><p><strong>1.</strong>更改admin.html模板中的数据（用户名丶头像以及面板时间）</p><ul><li>在views中构建上下文处理器（全局），用于显示面板时间</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上下应用处理器</span></span><br><span class="line"><span class="meta">@admin.context_processor</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tpl_extra</span><span class="params">()</span>:</span></span><br><span class="line">    data = dict(</span><br><span class="line">        online_time=datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> data</span><br></pre></td></tr></table></figure><ul><li>在admin.html模板文件中进行数据填坑（以下为示例代码，其他坑对应都是一样的）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"user-header"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='admin/dist/img/tg.jpg')&#125;&#125;"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">class</span>=<span class="string">"img-circle"</span> <span class="attr">alt</span>=<span class="string">"User Image"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        &#123;&#123;session['admin']&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">small</span>&gt;</span>&#123;&#123;online_time&#125;&#125;<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>刷新后台管理页面<a href="http://127.0.0.1:5000/admin/" target="_blank" rel="noopener">http://127.0.0.1:5000/admin/</a> </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190422195832539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>操作日志列表</p><ul><li>保存登录的管理员编号id到session中，登出时需要删除管理员id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">session[<span class="string">'admin_id'</span>] = admin.id</span><br><span class="line">session.pop(<span class="string">"admin_id"</span>, <span class="literal">None</span>)</span><br></pre></td></tr></table></figure><ul><li>博主这里演示将标签管理中的增删改操作保存到操作日志表中（其他的管理基本逻辑一样，在目标视图函数中添加以下代码即可）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加标签</span></span><br><span class="line">oplog = OpLog(</span><br><span class="line">    admin_id = session[<span class="string">'admin_id'</span>],</span><br><span class="line">    ip = request.remote_addr,</span><br><span class="line">    reason = <span class="string">"添加标签&lt;%s&gt;"</span> % data[<span class="string">'name'</span>]</span><br><span class="line">)</span><br><span class="line">db.session.add(oplog)</span><br><span class="line">db.session.commit()</span><br><span class="line"><span class="comment"># 删除标签</span></span><br><span class="line">oplog = OpLog(</span><br><span class="line">    admin_id=session[<span class="string">'admin_id'</span>],</span><br><span class="line">    ip=request.remote_addr,</span><br><span class="line">    reason=<span class="string">"删除标签&lt;%s&gt;"</span> % tag.name</span><br><span class="line">)</span><br><span class="line">db.session.add(oplog)</span><br><span class="line">db.session.commit()</span><br><span class="line"><span class="comment"># 修改标签</span></span><br><span class="line">oplog = OpLog(</span><br><span class="line">    admin_id=session[<span class="string">'admin_id'</span>],</span><br><span class="line">    ip=request.remote_addr,</span><br><span class="line">    reason=<span class="string">"修改标签&lt;%s&gt;"</span> % tag.name</span><br><span class="line">)</span><br><span class="line">db.session.add(oplog)</span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure><ul><li>测试对标签管理中的数据进行增删改操作，是否写入到数据库oplog表中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190422204510232.gif" alt></fancybox></p><p><img src="https://img-blog.csdnimg.cn/20190422204541776.png" alt></p><ul><li>定义视图函数，显示操作日志列表页数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 操作日志</span></span><br><span class="line"><span class="meta">@admin.route('/oplog/list/&lt;int:page&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oplog_list</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page == <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = OpLog.query.join(Admin).filter(</span><br><span class="line">        Admin.id == OpLog.admin_id,</span><br><span class="line">    ).order_by(OpLog.addtime.desc()).paginate(page=page, per_page=<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/oplog_list.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>修改操作日志列表页链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"g-8-1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.oplog_list', page=1)&#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 操作日志列表</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body table-responsive no-padding"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>管理员<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作原因<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作IP<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% for o in page_data.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;o.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;o.admin.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;o.addtime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;o.reason&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;o.ip&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">    &#123;&#123;pg.page(page_data, 'admin.oplog_list')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示操作日志列表页数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190422211350883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>管理员登录日志列表</p><ul><li>在登录视图函数中保存数据到amdinlog表中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">adminlog = AdminLog(</span><br><span class="line">    admin_id=admin.id,</span><br><span class="line">    ip=request.remote_addr,</span><br><span class="line">)</span><br><span class="line">db.session.add(adminlog)</span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure><ul><li>测试退出登录后，查看数据库adminlog表数据是否生成</li></ul><p><img src="https://img-blog.csdnimg.cn/2019042221391860.png" alt></p><ul><li>定义视图函数，显示管理员登录日志列表页数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 管理员登录日志列表</span></span><br><span class="line"><span class="meta">@admin.route('/adminloginlog/list/&lt;int:page&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">adminloginlog_list</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page == <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = AdminLog.query.join(Admin).filter(</span><br><span class="line">        Admin.id == AdminLog.admin_id</span><br><span class="line">    ).order_by(AdminLog.addtime.desc()).paginate(page=page, per_page=<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/adminloginlog_list.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>修改管理员登录日志列表页链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"g-8-2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.adminloginlog_list', page=1)&#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 管理员登录日志列表</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body table-responsive no-padding"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>管理员<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>登录时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>登录IP<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% for a in page_data.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.admin.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.addtime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.ip&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">    &#123;&#123;pg.page(page_data, 'admin.adminloginlog_list')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示管理员登录日志列表页数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190425101029593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>4.</strong>会员登录日志列表</p><ul><li>向userlog表导入测试数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> userlog(user_id,ip,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">"192.168.4.1"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> userlog(user_id,ip,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">"192.168.4.2"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> userlog(user_id,ip,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">"192.168.4.3"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> userlog(user_id,ip,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">"192.168.4.4"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> userlog(user_id,ip,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">"192.168.4.5"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> userlog(user_id,ip,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">6</span>,<span class="string">"192.168.4.6"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> userlog(user_id,ip,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">7</span>,<span class="string">"192.168.4.7"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> userlog(user_id,ip,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">8</span>,<span class="string">"192.168.4.8"</span>,<span class="keyword">now</span>());</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> userlog(user_id,ip,<span class="keyword">addtime</span>) <span class="keyword">values</span>(<span class="number">9</span>,<span class="string">"192.168.4.9"</span>,<span class="keyword">now</span>());</span><br></pre></td></tr></table></figure><ul><li>查看数据库userlog表数据</li></ul><p><img src="https://img-blog.csdnimg.cn/2019042510174445.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义视图函数，显示会员登录日志列表页数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会员登录日志</span></span><br><span class="line"><span class="meta">@admin.route('/userloginlog/list/&lt;int:page&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">userloginlog_list</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page == <span class="literal">None</span>:</span><br><span class="line">        page=<span class="number">1</span></span><br><span class="line">    page_data = UserLog.query.join(User).filter(</span><br><span class="line">        User.id == UserLog.user_id</span><br><span class="line">    ).order_by(UserLog.addtime.desc()).paginate(page=page, per_page=<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/userloginlog_list.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>修改会员登录日志列表页链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"g-8-3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.userloginlog_list', page=1)&#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 会员登录日志列表</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body table-responsive no-padding"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>会员<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>登录时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>登录IP<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% for a in page_data.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.user.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.addtime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.ip&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">    &#123;&#123;pg.page(page_data, 'admin.userloginlog_list')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示会员登录日志列表页数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190425102733411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><h1 id="六丶后台管理（权限管理）"><a href="#六丶后台管理（权限管理）" class="headerlink" title="六丶后台管理（权限管理）"></a>六丶后台管理（权限管理）</h1><p><strong>1.</strong>添加权限</p><ul><li>定义form表单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthForm</span><span class="params">(FlaskForm)</span>:</span></span><br><span class="line">    <span class="string">"""权限管理表单"""</span></span><br><span class="line">    name = StringField(</span><br><span class="line">        label=<span class="string">"权限名称"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入权限名称！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"权限名称"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入权限名称！"</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    url = StringField(</span><br><span class="line">        label=<span class="string">"权限地址"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入权限地址！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"权限地址"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入权限地址！"</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    submit = SubmitField(</span><br><span class="line">        <span class="string">'提交'</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"btn btn-primary"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加权限</span></span><br><span class="line"><span class="meta">@admin.route('/auth/add', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">auth_add</span><span class="params">()</span>:</span></span><br><span class="line">    form = AuthForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/auth_add.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>修改模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_name"</span>&gt;</span>&#123;&#123;form.name.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.name&#125;&#125;</span><br><span class="line">            &#123;% for error in form.name.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_url"</span>&gt;</span>&#123;&#123;form.url.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.url&#125;&#125;</span><br><span class="line">            &#123;% for error in form.url.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer"</span>&gt;</span></span><br><span class="line">        &#123;&#123; form.submit &#125;&#125;</span><br><span class="line">        &#123;&#123; form.csrf_token &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示添加权限页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190425105113770.gif" alt></fancybox></p><ul><li>视图函数中编写添加权限逻辑代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加权限</span></span><br><span class="line"><span class="meta">@admin.route('/auth/add', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">auth_add</span><span class="params">()</span>:</span></span><br><span class="line">    form = AuthForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        auth = Auth(</span><br><span class="line">            name=data[<span class="string">'name'</span>],</span><br><span class="line">            url=data[<span class="string">'url'</span>]</span><br><span class="line">        )</span><br><span class="line">        db.session.add(auth)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"添加权限成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/auth_add.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>测试添加标签功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190425112530624.gif" alt></fancybox></p><p><strong>2.</strong>显示权限列表页数据（权限管理的增删改查与权限管理一模一样）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 权限列表</span></span><br><span class="line"><span class="meta">@admin.route('/auth/list/&lt;int:page&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">auth_list</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = Auth.query.order_by(Auth.addtime.desc()).paginate(page=page, per_page=<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/auth_list.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>修改权限列表页链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"g-9-2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.auth_list', page=1)&#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 权限列表</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>定义模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body table-responsive no-padding"</span>&gt;</span></span><br><span class="line">    &#123;% for msg in get_flashed_messages(category_filter=["ok"]) %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success alert-dismissible"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                &#123;&#123; msg &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>添加时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作事项<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% for a in page_data.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.url&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.addtime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &amp;nbsp;</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">   &#123;&#123;pg.page(page_data, 'admin.auth_list')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示权限列表页数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190425121743217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>删除权限</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除权限</span></span><br><span class="line"><span class="meta">@admin.route('/auth/del/&lt;int:id&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">auth_del</span><span class="params">(id=None)</span>:</span></span><br><span class="line">    auth = Auth.query.filter_by(id=id).first_or_404()</span><br><span class="line">    db.session.delete(auth)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    flash(<span class="string">"删除权限成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">    oplog = OpLog(</span><br><span class="line">        admin_id=session[<span class="string">'admin_id'</span>],</span><br><span class="line">        ip=request.remote_addr,</span><br><span class="line">        reason=<span class="string">"删除权限&lt;%s&gt;"</span> % auth.name</span><br><span class="line">    )</span><br><span class="line">    db.session.add(oplog)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.auth_list'</span>, page=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><ul><li>定义删除权限功能链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.auth_del', id=a.id)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试删除权限功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190425121807893.gif" alt></fancybox></p><p><strong>4.</strong>修改权限</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改权限</span></span><br><span class="line"><span class="meta">@admin.route('/auth/update/&lt;int:id&gt;', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">auth_update</span><span class="params">(id)</span>:</span></span><br><span class="line">    auth = Auth.query.get_or_404(id)</span><br><span class="line">    form = AuthForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        auth_count = Auth.query.filter_by(name=data[<span class="string">"name"</span>]).count()</span><br><span class="line">        <span class="keyword">if</span> auth_count == <span class="number">1</span> <span class="keyword">and</span> auth.name == data[<span class="string">'name'</span>]:</span><br><span class="line">            flash(<span class="string">"名称已经存在！"</span>, <span class="string">"err"</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.auth_update'</span>, id=id))</span><br><span class="line">        auth.name = data[<span class="string">'name'</span>]</span><br><span class="line">        db.session.add(auth)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"修改权限成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">        oplog = OpLog(</span><br><span class="line">            admin_id=session[<span class="string">'admin_id'</span>],</span><br><span class="line">            ip=request.remote_addr,</span><br><span class="line">            reason=<span class="string">"修改权限&lt;%s&gt;"</span> % auth.name</span><br><span class="line">        )</span><br><span class="line">        db.session.add(oplog)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">"admin.auth_list"</span>, page=<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/auth_update.html"</span>, form=form, auth=auth)</span><br></pre></td></tr></table></figure><ul><li>创建auth_update.html模板文件（将添加权限模板文件内容拷贝过来进行名称修改即可）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body"</span>&gt;</span></span><br><span class="line">        &#123;% for msg in get_flashed_messages(category_filter=["ok"]) %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success alert-dismissible"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                &#123;&#123; msg &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        &#123;% for msg in get_flashed_messages(category_filter=["err"]) %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger alert-dismissible"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                &#123;&#123; msg &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_name"</span>&gt;</span>&#123;&#123;form.name.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.name(value=auth.name)&#125;&#125;</span><br><span class="line">            &#123;% for error in form.name.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_url"</span>&gt;</span>&#123;&#123;form.url.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.url(value=auth.url)&#125;&#125;</span><br><span class="line">            &#123;% for error in form.url.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer"</span>&gt;</span></span><br><span class="line">        &#123;&#123; form.submit &#125;&#125;</span><br><span class="line">        &#123;&#123; form.csrf_token &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>定义修改权限功能链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.auth_update', id=a.id)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试修改权限功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019042512205913.gif" alt></fancybox></p><h1 id="七丶后台管理（角色管理）"><a href="#七丶后台管理（角色管理）" class="headerlink" title="七丶后台管理（角色管理）"></a>七丶后台管理（角色管理）</h1><p><strong>1.</strong>添加角色</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加角色</span></span><br><span class="line"><span class="meta">@admin.route('/role/add', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">role_add</span><span class="params">()</span>:</span></span><br><span class="line">    form = RoleForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        <span class="comment"># print(data)</span></span><br><span class="line">        <span class="comment"># &#123;'name': '标签管理员', 'auths': [1, 2, 3], 'submit': True, 'csrf_token': 'IjA.....'&#125;</span></span><br><span class="line">        role = Role(</span><br><span class="line">            name=data[<span class="string">'name'</span>],</span><br><span class="line">            auths=<span class="string">','</span>.join(str(a) <span class="keyword">for</span> a <span class="keyword">in</span> data[<span class="string">'auths'</span>])</span><br><span class="line">        )</span><br><span class="line">        db.session.add(role)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"添加角色成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/role_add.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body"</span>&gt;</span></span><br><span class="line">        &#123;% for msg in get_flashed_messages(category_filter=["ok"]) %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success alert-dismissible"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                &#123;&#123; msg &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_name"</span>&gt;</span>&#123;&#123;form.name.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.name&#125;&#125;</span><br><span class="line">            &#123;% for error in form.name.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span> <span class="attr">id</span>=<span class="string">"auth_list"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>&#123;&#123;form.auths.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.auths&#125;&#125;</span><br><span class="line">            &#123;% for error in form.auths.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer"</span>&gt;</span></span><br><span class="line">        &#123;&#123; form.submit &#125;&#125;</span><br><span class="line">        &#123;&#123; form.csrf_token &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试添加角色功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019042520190689.gif" alt></fancybox></p><p><strong>2.</strong>显示角色列表页数据</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 角色列表</span></span><br><span class="line"><span class="meta">@admin.route('/role/list/&lt;int:page&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">role_list</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = Role.query.order_by(Role.addtime.desc()).paginate(page=page, per_page=<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/role_list.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>修改角色列表页链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"g-10-2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.role_list', page=1)&#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 角色列表</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body table-responsive no-padding"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>角色名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>添加时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作事项<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% for r in page_data.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;r.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;r.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;r.addtime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &amp;nbsp;</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">    &#123;&#123;pg.page(page_data, 'admin.role_list')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示角色列表页数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190425202954750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>角色删除功能</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除角色</span></span><br><span class="line"><span class="meta">@admin.route('/role/del/&lt;int:id&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">role_del</span><span class="params">(id=None)</span>:</span></span><br><span class="line">    role = Role.query.filter_by(id=id).first_or_404()</span><br><span class="line">    db.session.delete(role)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    flash(<span class="string">"删除角色成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">    oplog = OpLog(</span><br><span class="line">        admin_id=session[<span class="string">'admin_id'</span>],</span><br><span class="line">        ip=request.remote_addr,</span><br><span class="line">        reason=<span class="string">"删除角色&lt;%s&gt;"</span> % role.name</span><br><span class="line">    )</span><br><span class="line">    db.session.add(oplog)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.role_list'</span>, page=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><ul><li>定义删除功能链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.role_del', id=r.id)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试删除角色功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190425205716643.gif" alt></fancybox></p><p><strong>4.</strong>角色修改功能</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改角色</span></span><br><span class="line"><span class="meta">@admin.route('/role/update/&lt;int:id&gt;', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">role_update</span><span class="params">(id)</span>:</span></span><br><span class="line">    role = Role.query.get_or_404(id)</span><br><span class="line">    form = RoleForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        nums = role.auths.split(<span class="string">','</span>)  <span class="comment">#['1','2','3']</span></span><br><span class="line">        form.auths.data = [int(x) <span class="keyword">for</span> x <span class="keyword">in</span> nums]  <span class="comment">#[1,2,3]</span></span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        role.name = data[<span class="string">'name'</span>]</span><br><span class="line">        role.auths = <span class="string">','</span>.join(str(a) <span class="keyword">for</span> a <span class="keyword">in</span> data[<span class="string">'auths'</span>])</span><br><span class="line">        db.session.add(role)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"修改角色成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">        oplog = OpLog(</span><br><span class="line">            admin_id=session[<span class="string">'admin_id'</span>],</span><br><span class="line">            ip=request.remote_addr,</span><br><span class="line">            reason=<span class="string">"修改角色&lt;%s&gt;"</span> % role.name</span><br><span class="line">        )</span><br><span class="line">        db.session.add(oplog)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">"admin.role_list"</span>, page=<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/role_update.html"</span>, form=form, role=role)</span><br></pre></td></tr></table></figure><ul><li>定义修改角色功能链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.role_update', id=r.id)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>创建role_update.html模板文件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body"</span>&gt;</span></span><br><span class="line">        &#123;% for msg in get_flashed_messages(category_filter=["ok"]) %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success alert-dismissible"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                &#123;&#123; msg &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        &#123;% for msg in get_flashed_messages(category_filter=["err"]) %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger alert-dismissible"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                &#123;&#123; msg &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_name"</span>&gt;</span>&#123;&#123;form.name.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.name(value=role.name)&#125;&#125;</span><br><span class="line">            &#123;% for error in form.name.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span> <span class="attr">id</span>=<span class="string">"auth_list"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>&#123;&#123;form.auths.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.auths&#125;&#125;</span><br><span class="line">            &#123;% for error in form.auths.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer"</span>&gt;</span></span><br><span class="line">        &#123;&#123; form.submit &#125;&#125;</span><br><span class="line">        &#123;&#123; form.csrf_token &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试角色修改功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190425215249204.gif" alt></fancybox></p><h1 id="八丶后台管理（管理员管理）"><a href="#八丶后台管理（管理员管理）" class="headerlink" title="八丶后台管理（管理员管理）"></a>八丶后台管理（管理员管理）</h1><p><strong>1.</strong>添加管理员</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加管理员</span></span><br><span class="line"><span class="meta">@admin.route('/admin/add', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin_add</span><span class="params">()</span>:</span></span><br><span class="line">    form = AdminForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/admin_add.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body"</span>&gt;</span></span><br><span class="line">        &#123;% for msg in get_flashed_messages(category_filter=["ok"]) %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success alert-dismissible"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                &#123;&#123; msg &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_name"</span>&gt;</span>&#123;&#123;form.name.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.name&#125;&#125;</span><br><span class="line">            &#123;% for error in form.name.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_pwd"</span>&gt;</span>&#123;&#123;form.pwd.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.pwd&#125;&#125;</span><br><span class="line">            &#123;% for error in form.pwd.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_re_pwd"</span>&gt;</span>&#123;&#123;form.repwd.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.repwd&#125;&#125;</span><br><span class="line">            &#123;% for error in form.repwd.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_role_id"</span>&gt;</span>&#123;&#123;form.role_id.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.role_id&#125;&#125;</span><br><span class="line">            &#123;% for error in form.role_id.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer"</span>&gt;</span></span><br><span class="line">        &#123;&#123; form.submit &#125;&#125;</span><br><span class="line">        &#123;&#123; form.csrf_token &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>刷新添加管理员页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190426105808318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在视图函数中完成添加管理员代码逻辑</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加管理员</span></span><br><span class="line"><span class="meta">@admin.route('/admin/add', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin_add</span><span class="params">()</span>:</span></span><br><span class="line">    form = AdminForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        admin = Admin(</span><br><span class="line">            name=data[<span class="string">'name'</span>],</span><br><span class="line">            pwd=generate_password_hash(data[<span class="string">'pwd'</span>]),</span><br><span class="line">            role_id=data[<span class="string">'role_id'</span>],</span><br><span class="line">            is_super=<span class="number">1</span></span><br><span class="line">        )</span><br><span class="line">        db.session.add(admin)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"添加管理员成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/admin_add.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>测试添加管理员功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190426120927820.gif" alt></fancybox></p><p><strong>2.</strong>显示管理员列表页数据</p><ul><li>定义视图函数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 管理员列表</span><br><span class="line">@admin.route(&apos;/admin/list/&lt;int:page&gt;/&apos;, methods=[&apos;GET&apos;])</span><br><span class="line">@admin_login_required</span><br><span class="line">def admin_list(page=None):</span><br><span class="line">    if page is None:</span><br><span class="line">        page = 1</span><br><span class="line">    page_data = Admin.query.join(Role).filter(</span><br><span class="line">        Role.id == Admin.role_id</span><br><span class="line">    ).order_by(Admin.addtime.desc()).paginate(page=page, per_page=5)</span><br><span class="line">    return render_template(&quot;admin/admin_list.html&quot;, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>修改管理员列表页链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"g-11-2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.admin_list', page=1)&#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 管理员列表</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body table-responsive no-padding"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>管理员名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>管理员类型<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>管理员角色<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>添加时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% for a in page_data.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            &#123;% if a.is_super == 1 %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>普通管理员<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            &#123;% else %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>超级管理员<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.role.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;a.addtime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">    &#123;&#123;pg.page(page_data, 'admin.admin_list')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示管理员列表页数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190426122443540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="九丶访问权限控制"><a href="#九丶访问权限控制" class="headerlink" title="九丶访问权限控制"></a>九丶访问权限控制</h1><p><strong>1.</strong>定义访问权限控制器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 权限控制装饰器</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin_auth</span><span class="params">(f)</span>:</span></span><br><span class="line"><span class="meta">    @wraps(f)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorated_function</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        admin = Admin.query.join(Role).filter(</span><br><span class="line">            Role.id == Admin.role_id,</span><br><span class="line">            Admin.id == session[<span class="string">"admin_id"</span>]</span><br><span class="line">        ).first()</span><br><span class="line">        auths = admin.role.auths</span><br><span class="line">        nums = auths.split(<span class="string">','</span>)</span><br><span class="line">        auths = [int(x) <span class="keyword">for</span> x <span class="keyword">in</span> nums]</span><br><span class="line">        auth_list = Auth.query.all()</span><br><span class="line">        urls = [v.url <span class="keyword">for</span> v <span class="keyword">in</span> auth_list <span class="keyword">for</span> val <span class="keyword">in</span> auths <span class="keyword">if</span> val == v.id]</span><br><span class="line">        rule = request.url_rule</span><br><span class="line">        <span class="keyword">if</span> str(rule) <span class="keyword">not</span> <span class="keyword">in</span> urls:</span><br><span class="line">            abort(<span class="number">404</span>)</span><br><span class="line">        <span class="keyword">return</span> f(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> decorated_function</span><br></pre></td></tr></table></figure><p><strong>2.</strong>在视图函数上添加访问权限控制器（例如标签管理中添加修改删除以及列表）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加标签</span></span><br><span class="line"><span class="meta">@admin.route('/tag/add', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="meta">@admin_auth</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tag_add</span><span class="params">()</span>:</span></span><br></pre></td></tr></table></figure><p><strong>3.</strong>查看数据库表</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190426150405124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>4.</strong>使用test1管理员账号进行测试（从数据库表字段中可以知道该账号只能添加标签获取删除标签，无法修改以及访问标签列表）</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190426150859836.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/89445426" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/89445426</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Python Web开发 </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之个性化微电影网站的实战开发（二）</title>
      <link href="/2019/11/11/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E4%B8%AA%E6%80%A7%E5%8C%96%E5%BE%AE%E7%94%B5%E5%BD%B1%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/11/11/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E4%B8%AA%E6%80%A7%E5%8C%96%E5%BE%AE%E7%94%B5%E5%BD%B1%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶搭建后台页面"><span style="color:#4ea1db">一丶搭建后台页面</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶后台管理（管理员登录及退出）"><span style="color:#4ea1db">二丶后台管理（管理员登录及退出）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶后台管理（标签管理）"><span style="color:#4ea1db">三丶后台管理（标签管理）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶后台管理（电影管理）"><span style="color:#4ea1db">四丶后台管理（电影管理）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶后台管理（预告管理）"><span style="color:#4ea1db">五丶后台管理（预告管理）</span></a></li><a id="more"></a><h1 id="一丶搭建后台页面"><a href="#一丶搭建后台页面" class="headerlink" title="一丶搭建后台页面"></a>一丶搭建后台页面</h1><p><strong>1.</strong>管理员登录和退出页面搭建</p><ul><li>在admin/views中定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录</span></span><br><span class="line"><span class="meta">@admin.route('/login/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/login.html"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 登出</span></span><br><span class="line"><span class="meta">@admin.route('/logout/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.login'</span>))</span><br></pre></td></tr></table></figure><ul><li>复制static/tpl/3-admin目录下的login.html模板文件到templates/admin目录下，并修改模板中使用的静态资源路径</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"shortcut icon"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for('static',filename='base/images/logo.png')&#125;&#125;"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试管理员登录与登出</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190416221728850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>2.</strong>管理员页面搭建（后台主页）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@admin.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/index.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>复制static/tpl/3-admin目录下的admin.html模板文件到templates/admin目录下，修改静态资源地址以及定义数据块（三处）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416225108229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>在templates/admin目录下创建grid.html模板，将admin.html模板中管理菜单标签内容剪贴到grid.html模板文件中（复用比较多的内容），并在admin.html模板中将grid.html模板包含进来</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include "admin/grid.html"%&#125;</span><br></pre></td></tr></table></figure><p>-在templates/admin目录下创建index.html模板文件，继承与admin.html，并填写数据块content内容，用于显示后台管理页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends "admin/admin.html"%&#125;</span><br><span class="line">&#123;% block content%&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello admin<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><ul><li>测试显示后台管理页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019041622595242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>修改密码丶控制面板丶标签管理页面搭建</p><p><strong>修改密码</strong></p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@admin.route('/pwd/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwd</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/pwd.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>定义模板文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416234005727.png" alt></p><ul><li>测试显示修改密码页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190416234036110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>控制面板（也就是后台主页面index.html）</strong></p><ul><li>定义模板文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416235120898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义控制面板按钮激活active，编辑grid.html管理菜单模块，给li块添加id属性</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"treeview"</span> <span class="attr">id</span>=<span class="string">"g-1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-home"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"label label-primary pull-right"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"treeview-menu"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"g-1-1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.index')&#125;&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 控制面板</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在admin/index.html模板下方添加js代码</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">'#g-1'</span>).addClass(<span class="string">'active'</span>)</span><br><span class="line">        $(<span class="string">'#g-1-1'</span>).addClass(<span class="string">'active'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试控制面板页面（主页面内容）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019041700074259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>标签管理</strong>（添加标签以及标签列表）</p><ul><li>定义视图函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 添加标签</span><br><span class="line">@admin.route(<span class="string">'/tag/add'</span>)</span><br><span class="line">def tag_add():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/tag_add.html"</span>)</span><br><span class="line"> </span><br><span class="line"># 标签列表</span><br><span class="line">@admin.route(<span class="string">'/tag/list'</span>)</span><br><span class="line">def tag_list():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/tag_list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>修改grid.html模板中的地址以及添加li块的id属性</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417003220643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义模板文件（tag_add.html以及tag_list.html）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417003038381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/20190417003310545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试标签管理页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417003759390.gif" alt></fancybox></p><p><strong>4.</strong>电影管理以及预告管理页面搭建</p><p><strong>电影管理</strong>（添加电影以及电影列表）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加电影</span></span><br><span class="line"><span class="meta">@admin.route('/movie/add')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">movie_add</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/movie_add.html"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 电影列表</span></span><br><span class="line"><span class="meta">@admin.route('/movie/list')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">movie_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/movie_list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>修改grid.html模板中的地址以及添加li块的id属性</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417005948142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义模板文件（movie_add.html以及movie_list.html）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417005754109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/20190417005842412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试电影管理页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417010609275.gif" alt><fancybox></fancybox></fancybox></p><p><strong>预告管理</strong>（添加预告以及预告列表）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加预告</span></span><br><span class="line"><span class="meta">@admin.route('/preview/add')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preview_add</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/preview_add.html"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 预告列表</span></span><br><span class="line"><span class="meta">@admin.route('/preview/list')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preview_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/preview_list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>修改grid.html模板中的地址以及添加li块的id属性</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417011839738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义模板文件（preview_add.html以及preview_list.html）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417011920617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/20190417011956857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试预告管理页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417012258565.gif" alt></fancybox></p><p><strong>5.</strong>会员管理丶评论管理以及收藏管理页面搭建</p><p><strong>会员管理</strong>（会员列表以及会员信息）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会员列表</span></span><br><span class="line"><span class="meta">@admin.route('/user/list')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/user_list.html"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 会员信息</span></span><br><span class="line"><span class="meta">@admin.route('/user/view')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_view</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/user_view.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>修改grid.html模板中的地址以及添加li块的id属性</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417103837731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义模板文件（user_list.html以及user_view.html）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417103917340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/20190417103950140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试会员管理页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417110841984.gif" alt></fancybox></p><p><strong>评论管理</strong></p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 评论管理</span></span><br><span class="line"><span class="meta">@admin.route('/comment/list')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">comment_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/comment_list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>修改grid.html模板中的地址以及添加li块的id属性</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417111217878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义模板文件（comment_list.html）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417111248430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试评论管理页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417111114878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>收藏管理</strong></p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 收藏管理</span></span><br><span class="line"><span class="meta">@admin.route('/moviecol/list')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moviecol_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/moviecol_list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>修改grid.html模板中的地址以及添加li块的id属性</li></ul><p><img src="https://img-blog.csdnimg.cn/2019041711203160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义模板文件（moviecol_list.html）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417112108140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试收藏管理页面</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417112202345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>6.</strong>日志管理丶权限管理丶角色管理页面搭建</p><p><strong>日志管理</strong>（操作日志列表和管理员登录日志列表以及会员登录日志列表）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 操作日志列表</span></span><br><span class="line"><span class="meta">@admin.route('/oplog/list')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oplog_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/oplog_list.html"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 管理员登录日志列表</span></span><br><span class="line"><span class="meta">@admin.route('/adminloginlog/list')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">adminloginlog_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/adminloginlog_list.html"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 会员登录日志列表</span></span><br><span class="line"><span class="meta">@admin.route('/userloginlog/list')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">userloginlog_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/userloginlog_list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>修改grid.html模板中的地址以及添加li块的id属性</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417121146239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义模板文件（oplog_list.html和adminloginlog_list.html以及userloginlog_list.html）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417121314395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/20190417121324758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/20190417121338869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试日志管理页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/201904171215599.gif" alt></fancybox></p><p><strong>权限管理</strong>（添加权限以及权限列表）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加权限</span></span><br><span class="line"><span class="meta">@admin.route('/auth/add')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">auth_add</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/auth_add.html"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 权限列表</span></span><br><span class="line"><span class="meta">@admin.route('/auth/list')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">auth_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/auth_list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>修改grid.html模板中的地址以及添加li块的id属性</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417122901695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义模板文件（auth_add.html以及auth_list.html）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417122949325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/2019041712295959.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试权限管理页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417123437443.gif" alt></fancybox></p><p><strong>角色管理</strong>（添加角色以及角色列表）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加角色</span></span><br><span class="line"><span class="meta">@admin.route('/role/add')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">role_add</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/role_add.html"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 角色列表</span></span><br><span class="line"><span class="meta">@admin.route('/role/list')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">role_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/role_list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>修改grid.html模板中的地址以及添加li块的id属性</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417124553164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义模板文件（auth_add.html以及auth_list.html）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417124508852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/20190417124522683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试角色管理页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417131316320.gif" alt></fancybox></p><p><strong>7.</strong>管理员管理页面搭建（添加管理员以及管理员列表）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加管理员</span></span><br><span class="line"><span class="meta">@admin.route('/admin/add')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin_add</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/admin_add.html"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 管理员列表</span></span><br><span class="line"><span class="meta">@admin.route('/admin/list')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/admin_list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>修改grid.html模板中的地址以及添加li块的id属性</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417132406493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>定义模板文件（admin_add.html以及admin_list.html）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417132452311.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/20190417132513752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试管理员管理页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417132814681.gif" alt></fancybox></p><h1 id="二丶后台管理（管理员登录及退出）"><a href="#二丶后台管理（管理员登录及退出）" class="headerlink" title="二丶后台管理（管理员登录及退出）"></a>二丶后台管理（管理员登录及退出）</h1><p><strong>1.</strong>管理员登录</p><ul><li>代码优化，将models模块中的导入数据库连接配置放在<strong>init</strong>初始化文件中，在models模块中只需要导入db对象即可</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417142627588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>在admin/forms.py文件中创建管理员登录表单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginForm</span><span class="params">(FlaskForm)</span>:</span></span><br><span class="line">    <span class="string">"""管理员登录表单"""</span></span><br><span class="line">    account = StringField(</span><br><span class="line">        label=<span class="string">"账号"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入账号！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"账号"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入账号！"</span>,</span><br><span class="line">            <span class="string">"required"</span>: <span class="string">"required"</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    pwd = PasswordField(</span><br><span class="line">        label=<span class="string">"密码"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入密码！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"密码"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入密码！"</span>,</span><br><span class="line">            <span class="string">"required"</span>: <span class="string">"required"</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    submit = SubmitField(</span><br><span class="line">        <span class="string">'登录'</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"btn btn-primary btn-block btn-flat"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li>在admin/views下的login视图中创建form对象，并传递给模板中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@admin.route('/login/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    form = LoginForm()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/login.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>替换登录模板中表单数据账号密码以及提交所在的标签为LoginFrom类的account和pwd以及sublime实例属性；修改form表单提交方式为POST</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>  <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">id</span>=<span class="string">"form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-feedback"</span>&gt;</span></span><br><span class="line">        &#123;&#123; form.account &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-envelope form-control-feedback"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-feedback"</span>&gt;</span></span><br><span class="line">        &#123;&#123; form.pwd &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-lock form-control-feedback"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-4"</span>&gt;</span></span><br><span class="line">            &#123;&#123; form.submit &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>设置SECRET_KEY用户表单提交免受CSRF威胁，并在模板中填写{{ form.csrf_token }}</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.config[<span class="string">"SECRET_KEY"</span>] = <span class="string">'*#%cnusadq***cdtaogang8a9dwqn'</span></span><br></pre></td></tr></table></figure><ul><li>刷新页面成功显示登录页</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417154519288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>在models/Admin模型类中定义check_pwd方法用于检查判断用户密码输入是否正确，正确则返回True否则返回False</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_pwd</span><span class="params">(self, pwd)</span>:</span></span><br><span class="line">    <span class="keyword">from</span> werkzeug.security <span class="keyword">import</span> check_password_hash</span><br><span class="line">    <span class="keyword">return</span> check_password_hash(self.pwd, pwd)</span><br></pre></td></tr></table></figure><ul><li>在视图函数中获取表单提交参数，通过调用Admin类中的check_pwd方法来判断用户输入的密码与数据库中模型类中密码是否一致，验证成功返回True可根据返回结果进行重定向到不同的地址，flash闪现显示错误提示信息 ，验证通过将用户对象信息保存在session会话中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@admin.route('/login/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    form = LoginForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        admin =Admin.query.filter_by(name=data[<span class="string">'account'</span>]).first()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> admin.check_pwd(data[<span class="string">'pwd'</span>]):</span><br><span class="line">            flash(<span class="string">"密码错误！"</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.login'</span>))</span><br><span class="line">        session[<span class="string">'admin'</span>] = data[<span class="string">'account'</span>]</span><br><span class="line">        <span class="keyword">return</span> redirect(request.args.get(<span class="string">'next'</span>) <span class="keyword">or</span> url_for(<span class="string">'admin.index'</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/login.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>要在页面显示flash闪现信息，需要在模板文件中进行遍历显示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for msg in get_flashed_messages() %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"login-box-msg"</span> <span class="attr">style</span>=<span class="string">"color:red;"</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li>测试后台管理员登录</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417160105529.gif" alt></fancybox></p><p><strong>2.</strong>管理员退出 </p><ul><li>在logout视图函数中删除session会话中的用户信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@admin.route('/logout/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span>:</span></span><br><span class="line">    session.pop(<span class="string">"admin"</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.login'</span>))</span><br></pre></td></tr></table></figure><ul><li>测试管理员退出</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417161008917.gif" alt></fancybox></p><ul><li>在浏览器中直接访问<a href="http://127.0.0.1:5000/admin/" target="_blank" rel="noopener">http://127.0.0.1:5000/admin/</a>一样可以进入管理页面并且管理菜单的标签是可以进行查看的，所以需要定义装饰器来控制页面的访问</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录装饰器</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin_login_required</span><span class="params">(f)</span>:</span></span><br><span class="line"><span class="meta">    @wraps(f)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorated_function</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"admin"</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">"admin.login"</span>, next=request.url))</span><br><span class="line">        <span class="keyword">return</span> f(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> decorated_function</span><br></pre></td></tr></table></figure><ul><li>后台管理页面中除了登录页都需要添加验证登录装饰器</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@admin.route('/')</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/index.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>测试页面访问控制</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417164011415.gif" alt></fancybox></p><h1 id="三丶后台管理（标签管理）"><a href="#三丶后台管理（标签管理）" class="headerlink" title="三丶后台管理（标签管理）"></a>三丶后台管理（标签管理）</h1><p><strong>1.</strong>添加标签</p><ul><li>在forms.py文件中定义添加标签表单类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TagFrom</span><span class="params">(FlaskForm)</span>:</span></span><br><span class="line">    <span class="string">"""添加标签表单"""</span></span><br><span class="line">    name = StringField(</span><br><span class="line">        label=<span class="string">"名称"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入标签！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"标签"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"input_name"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入标签名称！"</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    submit = SubmitField(</span><br><span class="line">        <span class="string">'提交'</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"btn btn-primary"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li>在tag_add.html模板中替换表单中的name以及submit</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_name"</span>&gt;</span>&#123;&#123;form.name.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.name&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer"</span>&gt;</span></span><br><span class="line">        &#123;&#123;form.submit&#125;&#125;</span><br><span class="line">        &#123;&#123;form.csrf_token&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在视图函数中向模板传递表单form对象 </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加标签</span></span><br><span class="line"><span class="meta">@admin.route('/tag/add')</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tag_add</span><span class="params">()</span>:</span></span><br><span class="line">    form = TagFrom()</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/tag_add.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>刷新页面添加标签页面显示正常</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417172752487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在视图函数tag_add中进行逻辑处理，根据管理员输入的标签名到数据库表中查询记录，记录不存在时，则保存到数据库中，并闪现成功消息，反之错误则提示用户失败信息，逻辑很简单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加标签</span></span><br><span class="line"><span class="meta">@admin.route('/tag/add', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tag_add</span><span class="params">()</span>:</span></span><br><span class="line">    form = TagFrom()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        tag = Tag.query.filter_by(name=data[<span class="string">"name"</span>]).count()</span><br><span class="line">        <span class="keyword">if</span> tag == <span class="number">1</span>:</span><br><span class="line">            flash(<span class="string">"名称已经存在！"</span>, <span class="string">"err"</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.tag_add'</span>))</span><br><span class="line">        tag = Tag(</span><br><span class="line">            name=data[<span class="string">"name"</span>]</span><br><span class="line">        )</span><br><span class="line">        db.session.add(tag)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"添加标签成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">        redirect(url_for(<span class="string">'admin.tag_add'</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/tag_add.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>紧接着在tag_add.html模板中定义正确提示信息以及错误提示信息，需要注意的是需使用flash分类闪现操作</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for msg in get_flashed_messages(category_filter=["ok"]) %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success alert-dismissible"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon fa fa-check"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 操作成功<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        &#123;&#123; msg &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">&#123;% for msg in get_flashed_messages(category_filter=["err"]) %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger alert-dismissible"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon fa fa-ban"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 操作失败<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        &#123;&#123; msg &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li>测试添加标签功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417184031644.gif" alt></fancybox></p><ul><li>查看数据库tag表数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190417184234756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>2.</strong>标签列表数据显示</p><ul><li>在视图函数tag_list中，定义路由接收页码page参数，从数据中查询tag表数据并按照添加时间倒序排序，将查询结果通过sqlalchemy中的paginate方法进行分页，最终将分页结果集传递给前端模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 标签列表</span></span><br><span class="line"><span class="meta">@admin.route('/tag/list/&lt;int:page&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tag_list</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = Tag.query.order_by(Tag.addtime.desc()).paginate(page=page, per_page=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/tag_list.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>在模板文件中遍历后端传递的结果集，获取每个tag对象，填写模板数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for t in page_data.items%&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;t.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;t.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;t.addtime&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &amp;nbsp;</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li>因为视图函数tag_list修改了路由，所以需要在grid.html模板中修改标签列表的地址，传递page参数</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.tag_list', page=1)&#125;&#125;"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试标签列表页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417202335492.gif" alt></fancybox></p><ul><li>目前只能根据请求地址中page参数来控制页面数据的显示，而页面中的分页点击没有任何作用，所以需要进行修改，因为网站页面中所有的分页都是一样的，所以这里将tag_list模板中的分页代码剪切出来，在templates目录下新建ui目录，在该目录下创建admin_page.html文件，将剪切出来的代码拷贝至此，进行如下编写，请参考分页文档</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% macro page(data, url) %&#125;</span><br><span class="line">&#123;% if data %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination pagination-sm no-margin pull-right"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=1)&#125;&#125;"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% if data.has_prev %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=data.prev_num)&#125;&#125;"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% else%&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"> </span><br><span class="line">    &#123;% for p in data.iter_pages() %&#125;</span><br><span class="line">        &#123;% if p == data.page %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>&#123;&#123;p&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% else %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=p)&#125;&#125;"</span>&gt;</span>&#123;&#123;p&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"> </span><br><span class="line">    &#123;% if data.has_next %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=data.next_num)&#125;&#125;"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% else%&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for(url, page=data.pages)&#125;&#125;"</span>&gt;</span>尾页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endmacro %&#125;</span><br></pre></td></tr></table></figure><ul><li>回到tag_list模板中，调用上一步写的分页，该分页需接收两个参数一个是数据库查询的分页集数据，另一个是页面地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">    &#123;&#123;pg.page(page_data, 'admin.tag_list')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试标签列表页分页显示数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417210814375.gif" alt></fancybox></p><p><strong>3.</strong>删除标签</p><ul><li>在views中定义删除标签视图函数，需要接收前端传递商品的id，使用flask sqlalchemy 删除方法，查看参考文档，以及视图查询中的first_or_404方法，捕获404页面，删除标签成功，跳转到标签列表页，需要注意列表页需要传递page参数，否则报错</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@admin.route('/tag/del/&lt;int:id&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tag_del</span><span class="params">(id=None)</span>:</span></span><br><span class="line">    tag = Tag.query.filter_by(id=id).first_or_404()</span><br><span class="line">    db.session.delete(tag)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    flash(<span class="string">"删除标签成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.tag_list'</span>, page=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><ul><li>在tag_list模板文件中需要编写删除按钮的地址，以及模板中删除成功信息提示框（跟添加标签时一样）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.tag_del', id=t.id)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">&#123;% for msg in get_flashed_messages(category_filter=["ok"]) %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success alert-dismissible"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon fa fa-check"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 操作成功<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        &#123;&#123; msg &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li>测试删除标签功能（说明博主这里将tag_list视图函数中分页数据显示为5条）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190417213248619.gif" alt></fancybox></p><p><strong>4.</strong>修改标签</p><ul><li>同样在视图中定义修改标签的视图函数，跟添加标签逻辑大同小异，首先获取前端传递过来的标签id，在后端根据该标签id从数据表中查询到对应的标签对象tag；当管理员点击提交按钮则获取表单数据，根据表单数据中的name属性的值从数据库获取对应的结果数，判断当结果数为1并且数据库中对象的name值与管理员填写的name值一致，则表示名称已存在数据库；反之则设置tag对象的name属性值为管理员修改的name值，保存至数据库，<font style="color:red">需要注意的是在调用tag_update视图函数需要传递id值</font></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改标签</span></span><br><span class="line"><span class="meta">@admin.route('/tag/update/&lt;int:id&gt;', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tag_update</span><span class="params">(id)</span>:</span></span><br><span class="line">    tag = Tag.query.get_or_404(id)</span><br><span class="line">    form = TagFrom()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        tag_count = Tag.query.filter_by(name=data[<span class="string">"name"</span>]).count()</span><br><span class="line">        <span class="keyword">if</span> tag_count == <span class="number">1</span> <span class="keyword">and</span> tag.name == data[<span class="string">'name'</span>]:</span><br><span class="line">            flash(<span class="string">"名称已经存在！"</span>, <span class="string">"err"</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.tag_update'</span>, id=id))</span><br><span class="line">        tag.name = data[<span class="string">'name'</span>]</span><br><span class="line">        db.session.add(tag)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"添加标签成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">        redirect(url_for(<span class="string">'admin.tag_update'</span>, id=id))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/tag_update.html"</span>, form=form, tag=tag)</span><br></pre></td></tr></table></figure><ul><li>在admin目录下创建tag_update.html模板文件，用于进行修改标签页面显示，需要将标签对象的name值赋值到此模板中input name value中，用于显示将要修改的标签名，将tag_add.html模板内容复制到tag_update.html中，需要将添加标签标题修改为修改标签以及在模板中input框name值需要赋值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;form.name(value=tag.name)&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>测试修改标签功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190418095913384.gif" alt></fancybox></p><h1 id="四丶后台管理（电影管理）"><a href="#四丶后台管理（电影管理）" class="headerlink" title="四丶后台管理（电影管理）"></a>四丶后台管理（电影管理）</h1><p><strong>1.</strong>添加电影</p><ul><li>创建form表单类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MovieForm</span><span class="params">(FlaskForm)</span>:</span></span><br><span class="line">    <span class="string">"""添加电影表单"""</span></span><br><span class="line">    title = StringField(</span><br><span class="line">        label=<span class="string">"片名"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"片名不能为空"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"片名"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"input_title"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入片名！！"</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    url = FileField(</span><br><span class="line">        label=<span class="string">"文件"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请上传文件！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"文件"</span>,</span><br><span class="line">    )</span><br><span class="line">    info = TextAreaField(</span><br><span class="line">        label=<span class="string">"简介"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"简介不能为空"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"简介"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"rows"</span>: <span class="number">5</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    logo = FileField(</span><br><span class="line">        label=<span class="string">"封面"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请上传封面！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"封面"</span>,</span><br><span class="line">    )</span><br><span class="line">    star = SelectField(</span><br><span class="line">        label=<span class="string">"星级"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请选择星级！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment"># 星级是整数型</span></span><br><span class="line">        coerce=int,</span><br><span class="line">        <span class="comment"># 采用下拉选择的方式进行星级的选择</span></span><br><span class="line">        choices=[(<span class="number">1</span>, <span class="string">"1星级"</span>), (<span class="number">2</span>, <span class="string">"2星级"</span>), (<span class="number">3</span>, <span class="string">"3星级"</span>), (<span class="number">4</span>, <span class="string">"4星级"</span>), (<span class="number">5</span>, <span class="string">"5星级"</span>)],</span><br><span class="line">        description=<span class="string">"星级"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    tag_id = SelectField(</span><br><span class="line">        label=<span class="string">"所属标签"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请选择标签！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment"># 标签id也是整数型</span></span><br><span class="line">        coerce=int,</span><br><span class="line">        <span class="comment"># 采用列表递归式来取出所有的标签</span></span><br><span class="line">        choices=[(t.id, t.name)<span class="keyword">for</span> t <span class="keyword">in</span> Tag.query.all()],</span><br><span class="line">        description=<span class="string">"标签"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    area = StringField(</span><br><span class="line">        label=<span class="string">"上映地区"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入地区！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"地区"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"input_area"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入地区！"</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    length = StringField(</span><br><span class="line">        label=<span class="string">"电影片长"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入片长！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"片长"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"input_length"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入片长！"</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    release_time = StringField(</span><br><span class="line">        label=<span class="string">"上映时间"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入上映时间！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"上映时间"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"input_release_time"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入上映时间！"</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    submit = SubmitField(</span><br><span class="line">        <span class="string">'编辑'</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"btn btn-primary"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li>修改movie_add.html模板文件（也就是替换表单数据）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_title"</span>&gt;</span>&#123;&#123;form.title.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.title&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_url"</span>&gt;</span>&#123;&#123;form.url.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.url&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-top:5px;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"moviecontainer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_info"</span>&gt;</span>&#123;&#123;form.info.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.info&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_logo"</span>&gt;</span>&#123;&#123;form.logo.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.logo&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">"holder.js/262x166"</span> <span class="attr">style</span>=<span class="string">"margin-top:5px;"</span> <span class="attr">class</span>=<span class="string">"img-responsive"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_star"</span>&gt;</span>&#123;&#123;form.star.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.star&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_tag_id"</span>&gt;</span>&#123;&#123;form.tag_id.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.tag_id&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_area"</span>&gt;</span>&#123;&#123;form.area.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.area&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_length"</span>&gt;</span>&#123;&#123;form.length.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.length&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_release_time"</span>&gt;</span>&#123;&#123;form.release_time.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.release_time&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer"</span>&gt;</span></span><br><span class="line">        &#123;&#123;form.submit&#125;&#125;</span><br><span class="line">        &#123;&#123;form.csrf_token&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示添加电影页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190418111306267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在views/movie_add视图函数中获取表单数据字段并添加到Movie数据表中，url表示视图链接地址logo表示视频封面图片</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加电影</span></span><br><span class="line"><span class="meta">@admin.route('/movie/add', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">movie_add</span><span class="params">()</span>:</span></span><br><span class="line">    form = MovieForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        movie = Movie(</span><br><span class="line">            title=data[<span class="string">"title"</span>],</span><br><span class="line">            url=url,</span><br><span class="line">            info=data[<span class="string">"info"</span>],</span><br><span class="line">            logo=logo,</span><br><span class="line">            star=int(data[<span class="string">"star"</span>]),</span><br><span class="line">            playnum=<span class="number">0</span>,</span><br><span class="line">            commentnum=<span class="number">0</span>,</span><br><span class="line">            tag_id=int(data[<span class="string">"tag_id"</span>]),</span><br><span class="line">            area=data[<span class="string">'area'</span>],</span><br><span class="line">            release_time=data[<span class="string">"release_time"</span>],</span><br><span class="line">            length=data[<span class="string">"length"</span>],</span><br><span class="line">        )</span><br><span class="line">        db.session.add(movie)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"添加电影成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">"admin.movie_add"</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/movie_add.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>在配置文件app/<strong>init</strong>.py中配置电影文件上传的路径为static/uploads目录下，添加当前配置文件所在的绝对路径在path中（就是<strong>init</strong>.py文件所在路径，改路径与static目录路径同级都是在app目录下）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.config[<span class="string">"UP_DIR"</span>] = os.path.join(os.path.abspath(os.path.dirname(__file__)), <span class="string">"static/uploads/"</span>)</span><br></pre></td></tr></table></figure><ul><li>从werkzeug.utils工具中导入secure_filename方法，该方法可以将上传文件名修改为合法名（返回的ASCII码的文件名），在movie_add视图函数中通过表单对象url中的data数据中的filename来获取上传的电影文件名，同理获取上传的图片文件名</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file_url = secure_filename(form.url.data.filename)  <span class="comment"># 获取上传的电影文件名</span></span><br><span class="line">file_logo = secure_filename(form.logo.data.filename) <span class="comment"># 获取上传图片文件名</span></span><br></pre></td></tr></table></figure><ul><li>在views中定义change_filename方法，用于对上传的文件名进行加密（也就是在原有的文件名中加上当前的年月日时分秒和随机uuid的值）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_filename</span><span class="params">(filename)</span>:</span></span><br><span class="line">    fileinfo = os.path.splitext(filename)</span><br><span class="line">    filename = datetime.datetime.now().strftime(<span class="string">"%Y%m%d%H%M%S"</span>) + str(uuid.uuid4().hex) + fileinfo[<span class="number">-1</span>]  <span class="comment"># 文件后缀</span></span><br><span class="line">    <span class="keyword">return</span> filename</span><br></pre></td></tr></table></figure><ul><li>回到movie_add视图函数中，调用change_filename方法，返回加密后的文件名，通过form表单对象url字段和logo字段data数据写入到/static/uploads目录下的filename文件中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加电影</span></span><br><span class="line"><span class="meta">@admin.route('/movie/add', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">movie_add</span><span class="params">()</span>:</span></span><br><span class="line">    form = MovieForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        file_url = secure_filename(form.url.data.filename)  <span class="comment"># 获取上传的电影文件名</span></span><br><span class="line">        file_logo = secure_filename(form.logo.data.filename) <span class="comment"># 获取上传图片文件名</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(app.config[<span class="string">"UP_DIR"</span>]):  <span class="comment"># 文件夹不存在</span></span><br><span class="line">            os.makedirs(app.config[<span class="string">"UP_DIR"</span>])  <span class="comment"># 创建多级目录</span></span><br><span class="line">            os.chmod(app.config[<span class="string">"UP_DIR"</span>], <span class="string">"rw"</span>)  <span class="comment"># 赋予文件读写的权限</span></span><br><span class="line">        url = change_filename(file_url)  <span class="comment"># 返回加密后的电影文件名</span></span><br><span class="line">        logo = change_filename(file_logo)  <span class="comment"># 返回加密后的图片文件名</span></span><br><span class="line">        <span class="comment"># 将url和logo数据写入到static/uploads/目录的filename文件中</span></span><br><span class="line">        form.url.data.save(app.config[<span class="string">"UP_DIR"</span>] + url)</span><br><span class="line">        form.logo.data.save(app.config[<span class="string">"UP_DIR"</span>] + logo)</span><br><span class="line">        movie = Movie(</span><br><span class="line">            title=data[<span class="string">"title"</span>],</span><br><span class="line">            url=url,</span><br><span class="line">            info=data[<span class="string">"info"</span>],</span><br><span class="line">            logo=logo,</span><br><span class="line">            star=int(data[<span class="string">"star"</span>]),</span><br><span class="line">            playnum=<span class="number">0</span>,</span><br><span class="line">            commentnum=<span class="number">0</span>,</span><br><span class="line">            tag_id=int(data[<span class="string">"tag_id"</span>]),</span><br><span class="line">            area=data[<span class="string">'area'</span>],</span><br><span class="line">            release_time=data[<span class="string">"release_time"</span>],</span><br><span class="line">            length=data[<span class="string">"length"</span>],</span><br><span class="line">        )</span><br><span class="line">        db.session.add(movie)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"添加电影成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">"admin.movie_add"</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/movie_add.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>测试添加电影功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190418133950957.gif" alt></fancybox></p><ul><li>查看数据库movie表数据（X战警为博主前面测试添加的）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190418133740471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>查看项目static目录下生成的数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190418134113982.png" alt></p><ul><li>补充添加电影失败（即片名一致）跟添加标签一样，只需要在movie_add视图函数中，添加如下代码即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">movie_count = Movie.query.filter_by(title=data[<span class="string">"title"</span>]).count()</span><br><span class="line"><span class="keyword">if</span> movie_count == <span class="number">1</span>:</span><br><span class="line">    flash(<span class="string">"名称已经存在！"</span>, <span class="string">"err"</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.movie_add'</span>))</span><br></pre></td></tr></table></figure><p><strong>2.</strong>电影列表数据显示</p><ul><li>在视图函数movie_list中编写逻辑代码，逻辑和标签列表基本一样，唯一不同的就是这里查询时涉及到关联查询（movie表和tag表），关联查询使用的是filter而不是filter_by</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@admin.route('/movie/list/&lt;int:page&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">movie_list</span><span class="params">(page)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = Movie.query.join(Tag).filter(Movie.tag_id==Tag.id).order_by(Movie.addtime.desc()).paginate(page=page, per_page=<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/movie_list.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>在grid.html模板文件中更新电影列表的链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"g-3-2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.movie_list', page=1)&#125;&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 电影列表</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在movie_add.html模板文件中获取后端传递的movie表的分页数据集，并进行表数据和页面分页数据替换</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for m in page_data.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.title&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.length&#125;&#125;分钟<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.tag.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.area&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.star&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.playnum&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.commentnum&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;m.release_time&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &amp;nbsp;</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">    &#123;&#123;pg.page(page_data, 'admin.movie_list')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试电影列表页分页数据显示（数据只有两天，所以只显示1页）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190418145517668.gif" alt></fancybox></p><p><strong>3.</strong>删除电影</p><ul><li>定义删除电影视图函数，该函数代码逻辑简单与删除标签视图一致</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除电影</span></span><br><span class="line"><span class="meta">@admin.route('/movie/del/&lt;int:id&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">movie_del</span><span class="params">(id=None)</span>:</span></span><br><span class="line">    movie = Movie.query.filter_by(id=id).first_or_404()</span><br><span class="line">    db.session.delete(movie)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    flash(<span class="string">"删除电影成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.movie_list'</span>, page=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><ul><li>设置删除按钮超链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.movie_del', id=m.id)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试删除电影功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190418150134983.gif" alt></fancybox></p><p><strong>4.</strong>修改电影</p><ul><li>定义修改电影视图函数，接收要修改电影的id编号，根据id编号从数据库中获取对应movie对象；获取电影表单数据对象form，返回movie_update模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改电影</span></span><br><span class="line"><span class="meta">@admin.route('/movie/update/&lt;int:id&gt;/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">movie_update</span><span class="params">(id)</span>:</span></span><br><span class="line">    form = MovieForm()</span><br><span class="line">    movie = Movie.query.get_or_404(id)</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/movie_update.html"</span>, form=form, movie=movie)</span><br></pre></td></tr></table></figure><ul><li>在grid.html模板中更新编辑功能跳转链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.movie_update', id=m.id)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在admin目录下创建movie_update.html模板文件，将movie_add.html模板中数据拷贝到此模板中，进行如下修改（部分代码演示，数据比较多），主要是三个点，在修改电影页面输入框选择框初始值显示，url（电影）显示，logo（海报）显示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;form.title(value=movie.title)&#125;&#125;  # 添加初始值</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/'+movie.logo)&#125;&#125;"</span> <span class="attr">width</span>=<span class="string">"200"</span>  <span class="attr">style</span>=<span class="string">"margin-top:5px;"</span> <span class="attr">class</span>=<span class="string">"img-responsive"</span>&gt;</span>  # logo</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span>  # url</span><br><span class="line"><span class="actionscript">    jwplayer(<span class="string">"moviecontainer"</span>).setup(&#123;</span></span><br><span class="line"><span class="actionscript">        flashplayer: <span class="string">"&#123;&#123;url_for('static', filename='jwplayer/jwplayer.flash.swf')&#125;&#125;"</span>,</span></span><br><span class="line">        playlist: [&#123;</span><br><span class="line"><span class="actionscript">            file: <span class="string">"&#123;&#123;url_for('static', filename='uploads/'+movie.url)&#125;&#125;"</span>,</span></span><br><span class="line"><span class="actionscript">            title: <span class="string">"&#123;&#123;movie.title&#125;&#125;"</span></span></span><br><span class="line">        &#125;],</span><br><span class="line">        modes: [&#123;</span><br><span class="line"><span class="actionscript">            type: <span class="string">"html5"</span></span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line"><span class="actionscript">            type: <span class="string">"flash"</span>,</span></span><br><span class="line"><span class="actionscript">            src: <span class="string">"&#123;&#123;url_for('static', filename='jwplayer/jwplayer.flash.swf')&#125;&#125;"</span></span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line"><span class="actionscript">            type: <span class="string">"download"</span></span></span><br><span class="line">        &#125;],</span><br><span class="line">        skin: &#123;</span><br><span class="line"><span class="actionscript">            name: <span class="string">"vapor"</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="string">"playlist.position"</span>: <span class="string">"left"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"playlist.size"</span>: <span class="number">200</span>,</span></span><br><span class="line">        height: 400,</span><br><span class="line">        width: 800,</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试修改页面数据显示（页面上的电影简介和星级以及标签是错误的）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019041816001813.gif" alt></fancybox></p><ul><li>在movie_update.html模板文件中修改电影简介和星级以及标签，不在模板中设置其初始值，而是在视图中直接进行赋值处理</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if request.method == 'GET':</span><br><span class="line">    form.info.data = movie.info</span><br><span class="line">    form.tag_id.data = movie.tag_id</span><br><span class="line">    form.star.data = movie.star</span><br></pre></td></tr></table></figure><ul><li>刷新修改页面正确显示出电影简介和星级以及标签</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190418165608920.gif" alt></fancybox></p><ul><li><strong>说明</strong>：gif动图制作的质量比较差，所以看到的画面是比较劣质的（只能上传5M以内的文件），截图对比一下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190418170041572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在movie_update视图函数中定义修改电影业务逻辑，代码中有注释</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改电影</span></span><br><span class="line"><span class="meta">@admin.route('/movie/update/&lt;int:id&gt;/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">movie_update</span><span class="params">(id)</span>:</span></span><br><span class="line">    form = MovieForm()</span><br><span class="line">    movie = Movie.query.get_or_404(id)</span><br><span class="line">    <span class="comment"># 因为url视频和logo图片是存在的不用设置表单数据，所以定义为空</span></span><br><span class="line">    form.url.validators = []</span><br><span class="line">    form.logo.validators = []</span><br><span class="line">    <span class="comment"># 设置修改页面电影简介和星级以及标签的初始值</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        form.info.data = movie.info</span><br><span class="line">        form.tag_id.data = movie.tag_id</span><br><span class="line">        form.star.data = movie.star</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        movie_count = Movie.query.filter_by(title=data[<span class="string">"title"</span>]).count()</span><br><span class="line">        <span class="comment"># 管理员填写的片面已存在于数据中时，修改电影失败</span></span><br><span class="line">        <span class="keyword">if</span> movie_count == <span class="number">1</span> <span class="keyword">and</span> movie.title == data[<span class="string">'title'</span>]:</span><br><span class="line">            flash(<span class="string">"名称已经存在！"</span>, <span class="string">"err"</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.movie_update'</span>, id=id))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(app.config[<span class="string">"UP_DIR"</span>]):  <span class="comment"># 文件夹不存在</span></span><br><span class="line">            os.makedirs(app.config[<span class="string">"UP_DIR"</span>])  <span class="comment"># 创建多级目录</span></span><br><span class="line">            os.chmod(app.config[<span class="string">"UP_DIR"</span>], <span class="string">"rw"</span>)  <span class="comment"># 赋予文件读写的权限</span></span><br><span class="line">        <span class="comment"># 当url数据中filename不为空时，说明已经选择了上传的文件</span></span><br><span class="line">        <span class="keyword">if</span> form.url.data.filename != <span class="string">''</span>:</span><br><span class="line">            file_url = secure_filename(form.url.data.filename)  <span class="comment"># 获取上传的电影文件名</span></span><br><span class="line">            movie.url = change_filename(file_url)  <span class="comment"># 更新对象中的url为返回加密后的电影文件名</span></span><br><span class="line">            <span class="comment"># 将url写入到static/uploads/目录的对应的filename文件中</span></span><br><span class="line">            form.url.data.save(app.config[<span class="string">"UP_DIR"</span>] + movie.url)</span><br><span class="line">        <span class="comment"># 当logo数据中filename不为空时，说明已经选择了上传的文件</span></span><br><span class="line">        <span class="keyword">if</span> form.logo.data.filename != <span class="string">''</span>:</span><br><span class="line">            file_logo = secure_filename(form.logo.data.filename)  <span class="comment"># 获取上传图片文件名</span></span><br><span class="line">            movie.logo = change_filename(file_logo)  <span class="comment"># 更新对象中的logo为返回加密后的图片文件名</span></span><br><span class="line">            <span class="comment"># 将logo写入到static/uploads/目录的对应的filename文件中</span></span><br><span class="line">            form.logo.data.save(app.config[<span class="string">"UP_DIR"</span>] + movie.logo)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 将页面上的数据分别设置到数据库对应表字段中</span></span><br><span class="line">        movie.title = data[<span class="string">'title'</span>]</span><br><span class="line">        movie.info = data[<span class="string">'info'</span>]</span><br><span class="line">        movie.star = data[<span class="string">'star'</span>]</span><br><span class="line">        movie.tag_id = data[<span class="string">'tag_id'</span>]</span><br><span class="line">        movie.area = data[<span class="string">'area'</span>]</span><br><span class="line">        movie.length = data[<span class="string">'length'</span>]</span><br><span class="line">        movie.release_time = data[<span class="string">'release_time'</span>]</span><br><span class="line">        db.session.add(movie)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"修改电影成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">"admin.movie_list"</span>, page=<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/movie_update.html"</span>, form=form, movie=movie)</span><br></pre></td></tr></table></figure><ul><li><font style="color:red">注重说明一点，博主这里遇到个bug那就是在模板中渲染错误消息，不能覆盖掉DataRequired验证器的提示信息，所以博主这里将设置url（电影）以及logo（图片）中的required=False，进行禁用提示“请填写此字段”，结果还是不提示模板中的渲染的错误消息，注重啥也不提示</font></li></ul><p><img src="https://img-blog.csdnimg.cn/20190418213111158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>最终通过<a href="https://cloud.tencent.com/developer/ask/150670" target="_blank" rel="noopener">https://cloud.tencent.com/developer/ask/150670</a> 中的在模板form标签中加入novalidate属性   <form novalidate>  然后就渲染了错误信息，删除上一步定义的{{ form.url(required=False) }}和{{ form.logo(required=False) }}</form></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试修改电影功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190418213531454.gif" alt></fancybox></p><h1 id="五丶后台管理（预告管理）"><a href="#五丶后台管理（预告管理）" class="headerlink" title="五丶后台管理（预告管理）"></a>五丶后台管理（预告管理）</h1><p><strong>1.</strong>添加预告</p><ul><li>在admin/forms下定义表单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PreviewForm</span><span class="params">(FlaskForm)</span>:</span></span><br><span class="line">    <span class="string">"""添加电影预告表单"""</span></span><br><span class="line">    title = StringField(</span><br><span class="line">        label=<span class="string">"预告标题"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请输入预告标题！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"预告标题"</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"form-control"</span>,</span><br><span class="line">            <span class="string">"placeholder"</span>: <span class="string">"请输入预告标题！"</span></span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    logo = FileField(</span><br><span class="line">        label=<span class="string">"预告封面"</span>,</span><br><span class="line">        validators=[</span><br><span class="line">            DataRequired(<span class="string">"请上传预告封面！"</span>)</span><br><span class="line">        ],</span><br><span class="line">        description=<span class="string">"预告封面"</span>,</span><br><span class="line">    )</span><br><span class="line">    submit = SubmitField(</span><br><span class="line">        <span class="string">'提交'</span>,</span><br><span class="line">        render_kw=&#123;</span><br><span class="line">            <span class="string">"class"</span>: <span class="string">"btn btn-primary"</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li>编辑视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加预告</span></span><br><span class="line"><span class="meta">@admin.route('/preview/add', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preview_add</span><span class="params">()</span>:</span></span><br><span class="line">    form = PreviewForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/preview_add.html"</span>, form=form)</span><br></pre></td></tr></table></figure><ul><li>编辑preview_add.html模板文件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">novalidate</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-body"</span>&gt;</span></span><br><span class="line">         &#123;% for msg in get_flashed_messages(category_filter=["ok"]) %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success alert-dismissible"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon fa fa-check"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 操作成功<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                &#123;&#123; msg &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        &#123;% for msg in get_flashed_messages(category_filter=["err"]) %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger alert-dismissible"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"alert"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span>×</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon fa fa-ban"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 操作失败<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                &#123;&#123; msg &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_title"</span>&gt;</span>&#123;&#123;form.title.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.title&#125;&#125;</span><br><span class="line">            &#123;% for error in form.title.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"input_logo"</span>&gt;</span>&#123;&#123;form.logo.label&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            &#123;&#123;form.logo&#125;&#125;</span><br><span class="line">            &#123;% for error in form.logo.errors %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>&#123;&#123; error &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">"holder.js/700x320"</span> <span class="attr">style</span>=<span class="string">"margin-top:5px;"</span> <span class="attr">class</span>=<span class="string">"img-responsive"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer"</span>&gt;</span></span><br><span class="line">        &#123;&#123;form.submit&#125;&#125;</span><br><span class="line">        &#123;&#123;form.csrf_token&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>添加预告页面数据测试（点击提交按钮）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190421102748106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>测试添加预告功能<br><fancybox><img src="https://img-blog.csdnimg.cn/2019042118335294.gif" alt></fancybox></li></ul><p><strong>2.</strong>预告列表页数据显示</p><ul><li>跟电影列表一样，数据库查询数据并进行分页，传递分页数据集到模板中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 预告列表</span></span><br><span class="line"><span class="meta">@admin.route('/preview/list/&lt;int:page&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preview_list</span><span class="params">(page=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> page == <span class="literal">None</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    page_data = Preview.query.order_by(Preview.addtime.desc()).paginate(page=page, per_page=<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/preview_list.html"</span>, page_data=page_data)</span><br></pre></td></tr></table></figure><ul><li>在grid.html模板中修改列表链接地址（也就是添加page的值）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.preview_list', page=1)&#125;&#125;"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在preview.html模板文件中进行如下修改，需要导入ui目录下的分页模板{% import "ui/admin_page.html" as pg %}</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">        &#123;% for p in page_data.items%&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;p.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;p.title&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('static', filename='uploads/'+p.logo)&#125;&#125;"</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">class</span>=<span class="string">"img-responsive center-block"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;p.addtime &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-success"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &amp;nbsp;</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box-footer clearfix"</span>&gt;</span></span><br><span class="line">  &#123;&#123;pg.page(page_data, 'admin.preview_list')&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试预告列表页数据显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190421195600193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.</strong>删除预告</p><ul><li>跟之前电影管理一样逻辑，这里直接上代码，定义视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除预告</span></span><br><span class="line"><span class="meta">@admin.route('/preview/del/&lt;int:id&gt;/', methods=['GET'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preview_del</span><span class="params">(id=None)</span>:</span></span><br><span class="line">    preview = Preview.query.filter_by(id=id).first_or_404()</span><br><span class="line">    db.session.delete(preview)</span><br><span class="line">    db.session.commit()</span><br><span class="line">    flash(<span class="string">"删除电影成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.preview_list'</span>, page=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><ul><li>在preview.html模板中进行进行添加删除按钮链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('admin.preview_del', id=p.id)&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"label label-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试删除功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190421203925467.gif" alt></fancybox></p><p><strong>4.</strong>修改预告（跟修改电影逻辑一样，直接上代码）</p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改预告</span></span><br><span class="line"><span class="meta">@admin.route('/preview/update/&lt;int:id&gt;/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@admin_login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preview_update</span><span class="params">(id)</span>:</span></span><br><span class="line">    form = PreviewForm()</span><br><span class="line">    form.logo.validators = []</span><br><span class="line">    preview = Preview.query.filter_by(id=id).first_or_404()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        form.title.data = preview.title  <span class="comment"># 赋值</span></span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        data = form.data</span><br><span class="line">        preview_count = Preview.query.filter_by(title=data[<span class="string">"title"</span>]).count()</span><br><span class="line">        <span class="keyword">if</span> preview_count == <span class="number">1</span>:</span><br><span class="line">            flash(<span class="string">"名称已经存在！"</span>, <span class="string">"err"</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'admin.preview_update'</span>, id=id))</span><br><span class="line">        <span class="comment"># 当logo数据中filename不为空时，说明已经选择了上传的文件</span></span><br><span class="line">        <span class="keyword">if</span> form.logo.data.filename != <span class="string">''</span>:</span><br><span class="line">            file_logo = secure_filename(form.logo.data.filename)  <span class="comment"># 获取上传图片文件名</span></span><br><span class="line">            preview.logo = change_filename(file_logo)  <span class="comment"># 更新对象中的logo为返回加密后的图片文件名</span></span><br><span class="line">            <span class="comment"># 将logo写入到static/uploads/目录的对应的filename文件中</span></span><br><span class="line">            form.logo.data.save(app.config[<span class="string">"UP_DIR"</span>] + preview.logo)</span><br><span class="line">        preview.title = data[<span class="string">'title'</span>]</span><br><span class="line">        db.session.add(preview)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">"修改预告成功！"</span>, <span class="string">"ok"</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">"admin.preview_list"</span>,page=<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"admin/preview_update.html"</span>, form=form, preview=preview)</span><br></pre></td></tr></table></figure><ul><li>新建preview_update.html模板（将preview_add.html内容复制进去并进行修改）</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;form novalidate role=<span class="string">"form"</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">    &lt;div class="box-body"&gt;</span><br><span class="line">         &#123;% <span class="keyword">for</span> msg <span class="keyword">in</span> get_flashed_messages(category_filter=[<span class="string">"ok"</span>]) %&#125;</span><br><span class="line">            &lt;div class="alert alert-success alert-dismissible"&gt;</span><br><span class="line">                &lt;button type="button" class="close" data-dismiss="alert" aria-hidden="true"&gt;×</span><br><span class="line">                &lt;/button&gt;</span><br><span class="line">                &lt;h4&gt;&lt;i class="icon fa fa-check"&gt;&lt;/i&gt; 操作成功&lt;/h4&gt;</span><br><span class="line">                &#123;&#123; msg &#125;&#125;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        &#123;% <span class="keyword">for</span> msg <span class="keyword">in</span> get_flashed_messages(category_filter=[<span class="string">"err"</span>]) %&#125;</span><br><span class="line">            &lt;div class="alert alert-danger alert-dismissible"&gt;</span><br><span class="line">                &lt;button type="button" class="close" data-dismiss="alert" aria-hidden="true"&gt;×</span><br><span class="line">                &lt;/button&gt;</span><br><span class="line">                &lt;h4&gt;&lt;i class="icon fa fa-ban"&gt;&lt;/i&gt; 操作失败&lt;/h4&gt;</span><br><span class="line">                &#123;&#123; msg &#125;&#125;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        &lt;div class="form-group"&gt;</span><br><span class="line">            &lt;label for="input_title"&gt;&#123;&#123;form.title.label&#125;&#125;&lt;/label&gt;</span><br><span class="line">            &#123;&#123;form.title&#125;&#125;</span><br><span class="line">            &#123;% <span class="keyword">for</span> error <span class="keyword">in</span> form.title.errors %&#125;</span><br><span class="line">            &lt;div class="col-md-12"&gt;</span><br><span class="line">                &lt;p style="color:red"&gt;&#123;&#123; error &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class="form-group"&gt;</span><br><span class="line">            &lt;label for="input_logo"&gt;&#123;&#123;form.logo.label&#125;&#125;&lt;/label&gt;</span><br><span class="line">            &#123;&#123;form.logo&#125;&#125;</span><br><span class="line">            &#123;% <span class="keyword">for</span> error <span class="keyword">in</span> form.logo.errors %&#125;</span><br><span class="line">            &lt;div class="col-md-12"&gt;</span><br><span class="line">                &lt;p style="color:red"&gt;&#123;&#123; error &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">            &lt;img src="&#123;&#123;url_for('static', filename='uploads/'+preview.logo)&#125;&#125;" style="margin-top:5px;" class="img-responsive"</span><br><span class="line">                 alt=<span class="string">""</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class="box-footer"&gt;</span><br><span class="line">        &#123;&#123;form.submit&#125;&#125;</span><br><span class="line">        &#123;&#123;form.csrf_token&#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><ul><li>测试修改预告功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190421212245639.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/89340922" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/89340922</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Python Web开发 </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之个性化微电影网站的实战开发（一）</title>
      <link href="/2019/11/11/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E4%B8%AA%E6%80%A7%E5%8C%96%E5%BE%AE%E7%94%B5%E5%BD%B1%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/11/11/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E4%B8%AA%E6%80%A7%E5%8C%96%E5%BE%AE%E7%94%B5%E5%BD%B1%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><fancybox><img src="https://cdn.jsdelivr.net/gh/Hellotaogang/cdn@4.6.5/images/flask_movie.png" width="900px" height="300px" align></fancybox><br>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶叙述"><span style="color:#4ea1db">一丶叙述</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶Windows环境搭建"><span style="color:#4ea1db">二丶Windows环境搭建</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶项目分析丶搭建目录以及模型设计"><span style="color:#4ea1db">三丶项目分析丶搭建目录以及模型设计</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶搭建前台页面"><span style="color:#4ea1db">四丶搭建前台页面</span></a></li><a id="more"></a><h1 id="一丶叙述"><a href="#一丶叙述" class="headerlink" title="一丶叙述"></a>一丶叙述</h1><p><strong>1.项目中使用到的知识点</strong></p><ul><li>使用整型丶浮点型丶路径型丶字符串型正则表达式以及路由转换器</li><li>使用get与post请求丶上传文件丶cookie获取与响应丶404页面处理</li><li>使用模板自动转义丶定义过滤器丶定义全局上下文处理器丶Jinjia2语法丶包含丶继承丶定义宏</li><li>使用flask_wtf定义表单模型丶字段类型丶字段验证丶视图处理表单丶模板使用表单</li><li>使用flask_sqlachemy定义数据库模型丶添加数据丶修改数据丶查询数据丶删除数据丶数据库事件丶数据库迁移</li><li>使用蓝图优化项目结构丶实现微电影网站前台与后台业务逻辑</li><li>通过nginx反向代理对视频流媒体限制下载速率丶限制单个ip能发起的播放连接数</li><li>微内核以及flask拓展插件，其中微内核包括werkzug工具箱丶pymysql数据库驱动sqlachemy数据库orm丶wtforms表单验证工具jinja2模板引擎丶flask-script命令行脚本丶functools定义高阶函数；插件包括jwplayer播放器插件丶视频限速限ip访问丶flv以及mp4视频格式支持丶nginx点播实现</li></ul><p><strong>2.环境搭建与工具</strong></p><ul><li>搭建开发环境依赖包丶virtuanlven虚拟化环境的使用</li><li>pycharm编辑器</li></ul><p><strong>3.项目优化与模型设计</strong></p><ul><li>使用flask蓝图Blueprint规划项目结构</li><li>使用flask_sqlachemy定义和业务需求相关的数据库模型</li><li>结合mysql数据库生成项目所需的数据表</li></ul><p><strong>4.前端搭建</strong></p><ul><li>实现前台后台html布局页面搭建</li><li>使用jinjia2引擎</li><li>引入静态资源文件丶404错误页面处理</li></ul><p><strong>5.后端开发</strong></p><ul><li>使用flask sqlachemy结合mysql数据表进行增删改查操作</li><li>flask数据分页查询丶路由装饰器定义丶模板中变量调用丶登录回话机制丶上传文件</li><li>flask wtforms表单验证丶flask自定义应用上下文丶自定义权限权限装饰器对管理系统进行基于角色权限的访问控制</li><li>flask多表关联查询丶关键字模糊查询</li></ul><p><strong>6.网站部署</strong></p><ul><li>实现在centos服务器上搭建nginx+mysql+python环境</li><li>使用nginx反向代理多端口多进程部署微电影网站</li><li>配置nginx流媒体访问限制参数</li></ul><p><strong>7.前台静态主页面效果预览</strong></p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019041416332644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>8.后台管理静态主页面效果预览</strong></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190414163342675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>9.微电影网站组成</strong></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190414165443624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>10.开发及生产环境</strong></p><ul><li>生产环境：Centos7</li><li>开发语言：Python3</li><li>数据库：MySQL</li><li>前端：HTML5及BootStrap框架（<a href="http://adminlte.la998.com/" target="_blank" rel="noopener">AdminLTE</a>：一个基于bootstrap框架的轻量级后台模板）</li><li>Web开发框架：Flask</li><li>Web服务器：Nginx</li><li>编程工具：PyCharm</li></ul><h1 id="二丶Windows环境搭建"><a href="#二丶Windows环境搭建" class="headerlink" title="二丶Windows环境搭建"></a>二丶Windows环境搭建</h1><p><strong>说明</strong>：博主这里使用Python3.6开发语言 数据库Mysql5.7 PyCharm编程工具（这三个就不进行演示了）以及安装虚拟环境</p><ul><li>安装项目虚拟环境</li></ul><p><img src="https://img-blog.csdnimg.cn/20190414171432204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>创建虚拟环境</li></ul><p><img src="https://img-blog.csdnimg.cn/2019041417273376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>配置项目解释器</li></ul><p><img src="https://img-blog.csdnimg.cn/20190414181037266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>安装Flask包成功后，查看当前环境下的包</li></ul><p><img src="https://img-blog.csdnimg.cn/20190414181411427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><h1 id="三丶项目分析丶搭建目录以及模型设计"><a href="#三丶项目分析丶搭建目录以及模型设计" class="headerlink" title="三丶项目分析丶搭建目录以及模型设计"></a>三丶项目分析丶搭建目录以及模型设计</h1><p><strong>1.前台项目目录分析</strong></p><p><strong>前台（home）</strong></p><ul><li>数据模型：models.py</li><li>表单处理：home/forms.py</li><li>模板目录：templates/home</li></ul><p><strong>2.后台项目目录分析</strong></p><p><strong>后台（admin）</strong></p><ul><li>数据模型：models.py</li><li>表单处理：admin/forms.py</li><li>模板目录：templates/admin</li><li>静态目录：static</li></ul><p><strong>3.前后台项目目录分析</strong></p><ul><li>manage.py &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;入口启动脚本</li><li>app &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;项目APP</li><li>&ensp;&ensp;&ensp;&ensp;_<em>init_</em>.py &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;初始化文件</li><li>&ensp;&ensp;&ensp;&ensp;models.py &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;数据库模型文件</li><li>&ensp;&ensp;&ensp;&ensp;static &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;静态目录</li><li>&ensp;&ensp;&ensp;&ensp;home/admin &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;前台/后台模块</li><li>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;_<em>init_</em>.py &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;初始化文件</li><li>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;views.py &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;视图处理文件</li><li>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;forms.py &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;表单处理文件</li><li>&ensp;&ensp;&ensp;&ensp;templates &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;模板目录</li><li>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;home/admin &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;前台/后台模板</li></ul><p><strong>4.搭建目录</strong></p><p><img src="https://img-blog.csdnimg.cn/20190414183811941.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>5.搭建蓝图</strong></p><ul><li>在home/<strong>init</strong>.py文件中定义蓝图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Blueprint</span><br><span class="line">home = Blueprint(<span class="string">"home"</span>, __name__)</span><br><span class="line"><span class="keyword">import</span> app.home.views</span><br></pre></td></tr></table></figure><ul><li>在admin/<strong>init</strong>.py文件中定义蓝图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Blueprint</span><br><span class="line">admin = Blueprint(<span class="string">"admin"</span>, __name__)</span><br><span class="line"><span class="keyword">import</span> app.admin.views</span><br></pre></td></tr></table></figure><ul><li>在home/views.py文件中定义视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> home</span><br><span class="line"><span class="meta">@home.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"&lt;h1 style='color:red'&gt;hello home&lt;/h1&gt;"</span></span><br></pre></td></tr></table></figure><ul><li>在admin/views.py文件中定义视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> admin</span><br><span class="line"><span class="meta">@admin.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"&lt;h1 style='color:green'&gt;hello admin&lt;/h1&gt;"</span></span><br></pre></td></tr></table></figure><ul><li>在app/<strong>init</strong>.py文件中创建app对象并使用app对象注册蓝图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.debug = <span class="literal">True</span></span><br><span class="line"><span class="keyword">from</span> app.admin <span class="keyword">import</span> admin <span class="keyword">as</span> admin_blueprint</span><br><span class="line"><span class="keyword">from</span> app.home <span class="keyword">import</span> home <span class="keyword">as</span> home_blueprint</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 注册蓝图</span></span><br><span class="line">app.register_blueprint(admin_blueprint, url_prefix=<span class="string">"/admin"</span>)</span><br><span class="line">app.register_blueprint(home_blueprint)</span><br></pre></td></tr></table></figure><ul><li>在manage.py中定义启动脚本</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> app</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><ul><li>运行项目后，在浏览器中分别输入<a href="http://127.0.0.1:5000/" target="_blank" rel="noopener">http://127.0.0.1:5000/</a>以及<a href="http://127.0.0.1:5000/admin/" target="_blank" rel="noopener">http://127.0.0.1:5000/admin/</a></li></ul><p><img src="https://img-blog.csdnimg.cn/2019041419322872.png" alt></p><p><strong>6.会员及会员登录日志数据模型设计</strong></p><ul><li>创建项目所需数据库</li></ul><p><img src="https://img-blog.csdnimg.cn/20190414212338546.png" alt></p><ul><li>安装Flask-SQLAlchemy</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask-sqlalchemy</span><br></pre></td></tr></table></figure><ul><li>安装PyMySQL</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pymysql</span><br></pre></td></tr></table></figure><ul><li>定义会员数据模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"user"</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># 编号</span></span><br><span class="line">    name = db.Column(db.String(<span class="number">100</span>), unique=<span class="literal">True</span>)  <span class="comment"># 昵称</span></span><br><span class="line">    pwd = db.Column(db.String(<span class="number">100</span>))  <span class="comment"># 密码</span></span><br><span class="line">    email = db.Column(db.String(<span class="number">100</span>), unique=<span class="literal">True</span>)  <span class="comment"># 邮箱</span></span><br><span class="line">    phone = db.Column(db.String(<span class="number">11</span>), unique=<span class="literal">True</span>)  <span class="comment"># 电话号码</span></span><br><span class="line">    info = db.Column(db.Text)  <span class="comment"># 个性简介</span></span><br><span class="line">    face = db.Column(db.String(<span class="number">255</span>), unique=<span class="literal">True</span>)  <span class="comment"># 头像</span></span><br><span class="line">    addtime = db.Column(db.DateTime, index=<span class="literal">True</span>, default=datetime.now)  <span class="comment"># 添加时间</span></span><br><span class="line">    uuid = db.Column(db.String(<span class="number">255</span>), unique=<span class="literal">True</span>)  <span class="comment"># 唯一标志符</span></span><br><span class="line">    userlogs = db.relationship(<span class="string">'UserLog'</span>, backref=<span class="string">'user'</span>)  <span class="comment"># 会员日志外键关系</span></span><br><span class="line">    comments = db.relationship(<span class="string">'Comment'</span>, backref=<span class="string">'user'</span>)  <span class="comment"># 评论外键关系关联</span></span><br><span class="line">    moviecols = db.relationship(<span class="string">'MovieCol'</span>, backref=<span class="string">'user'</span>)  <span class="comment"># 电影收藏外键关系关联</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&lt;User:%r&gt;"</span> % self.name</span><br></pre></td></tr></table></figure><ul><li>定义会员登录日志模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserLog</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"userlog"</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># 编号</span></span><br><span class="line">    user_id = db.Column(db.Integer, db.ForeignKey(<span class="string">'user.id'</span>))  <span class="comment"># 所属会员</span></span><br><span class="line">    ip = db.Column(db.String(<span class="number">100</span>))  <span class="comment"># 登录IP</span></span><br><span class="line">    addtime = db.Column(db.DateTime, index=<span class="literal">True</span>, default=datetime.now)  <span class="comment"># 登录时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;UserLog %r&gt;'</span> % self.id</span><br></pre></td></tr></table></figure><p><strong>7.标签丶电影丶上映预告数据模型设计</strong></p><ul><li>定义标签数据模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tag</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"tag"</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)   <span class="comment"># 编号</span></span><br><span class="line">    name = db.Column(db.String(<span class="number">100</span>), unique=<span class="literal">True</span>)   <span class="comment"># 标题</span></span><br><span class="line">    addtime = db.Column(db.DateTime, index=<span class="literal">True</span>, default=datetime.now)  <span class="comment"># 添加时间</span></span><br><span class="line">    movies = db.relationship(<span class="string">'Movie'</span>, backref=<span class="string">'tag'</span>)  <span class="comment"># 电影外键关系关联</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;Tag %r&gt;'</span> % self.name</span><br></pre></td></tr></table></figure><ul><li>定义电影数据模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Movie</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"movie"</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># 编号</span></span><br><span class="line">    title = db.Column(db.String(<span class="number">255</span>), unique=<span class="literal">True</span>)  <span class="comment"># 电影标题</span></span><br><span class="line">    url = db.Column(db.String(<span class="number">255</span>), unique=<span class="literal">True</span>)  <span class="comment"># 电影地址</span></span><br><span class="line">    info = db.Column(db.Text)  <span class="comment"># 电影简介</span></span><br><span class="line">    logo = db.Column(db.String(<span class="number">255</span>), unique=<span class="literal">True</span>)  <span class="comment"># 电影封面</span></span><br><span class="line">    star = db.Column(db.SmallInteger)  <span class="comment"># 星级</span></span><br><span class="line">    playnum = db.Column(db.BigInteger)  <span class="comment"># 电影播放量</span></span><br><span class="line">    commentnum = db.Column(db.BigInteger)  <span class="comment"># 电影评论量</span></span><br><span class="line">    tag_id = db.Column(db.Integer, db.ForeignKey(<span class="string">'tag.id'</span>))  <span class="comment"># 所属标签</span></span><br><span class="line">    area = db.Column(db.String(<span class="number">255</span>))  <span class="comment"># 地区</span></span><br><span class="line">    release_time = db.Column(db.Date)  <span class="comment"># 发布时间</span></span><br><span class="line">    length = db.Column(db.String(<span class="number">100</span>))  <span class="comment"># 电影长度</span></span><br><span class="line">    addtime = db.Column(db.DateTime, index=<span class="literal">True</span>, default=datetime.now)  <span class="comment"># 添加时间</span></span><br><span class="line">    comments = db.relationship(<span class="string">'Comment'</span>, backref=<span class="string">'movie'</span>)  <span class="comment"># 电影评论外键关联</span></span><br><span class="line">    movieclos = db.relationship(<span class="string">'MovieCol'</span>, backref=<span class="string">'movie'</span>)  <span class="comment"># 电影收藏外键关联</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;Movie %r&gt;'</span> % self.title</span><br></pre></td></tr></table></figure><ul><li>定义上映预告数据模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Preview</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"preview"</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># 编号</span></span><br><span class="line">    title = db.Column(db.String(<span class="number">255</span>), unique=<span class="literal">True</span>)  <span class="comment"># 电影标题</span></span><br><span class="line">    logo = db.Column(db.String(<span class="number">255</span>), unique=<span class="literal">True</span>)  <span class="comment"># 电影封面</span></span><br><span class="line">    addtime = db.Column(db.DateTime, index=<span class="literal">True</span>, default=datetime.now)  <span class="comment"># 添加时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;Preview %r&gt;'</span> % self.title</span><br></pre></td></tr></table></figure><p><strong>8.评论丶收藏丶权限丶角色丶管理员丶操作日志数据模型设计</strong></p><ul><li>定义评论数据模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Comment</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"comment"</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># 编号</span></span><br><span class="line">    content = db.Column(db.Text)  <span class="comment"># 评论内容</span></span><br><span class="line">    movie_id = db.Column(db.Integer, db.ForeignKey(<span class="string">'movie.id'</span>))  <span class="comment"># 所属电影</span></span><br><span class="line">    user_id = db.Column(db.Integer, db.ForeignKey(<span class="string">'user.id'</span>))  <span class="comment"># 所属用户</span></span><br><span class="line">    addtime = db.Column(db.DateTime, index=<span class="literal">True</span>, default=datetime.now)  <span class="comment"># 添加时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;Comment %r&gt;'</span> % self.id</span><br></pre></td></tr></table></figure><ul><li>定义收藏电影数据模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MovieCol</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"moviecol"</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># 编号</span></span><br><span class="line">    movie_id = db.Column(db.Integer, db.ForeignKey(<span class="string">'movie.id'</span>))  <span class="comment"># 所属电影</span></span><br><span class="line">    user_id = db.Column(db.Integer, db.ForeignKey(<span class="string">'user.id'</span>))  <span class="comment"># 所属用户</span></span><br><span class="line">    addtime = db.Column(db.DateTime, index=<span class="literal">True</span>, default=datetime.now)  <span class="comment"># 最近登录时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;MovieCol %r&gt;'</span> % self.id</span><br></pre></td></tr></table></figure><ul><li>定义权限数据模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Auth</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"auth"</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># 编号</span></span><br><span class="line">    name = db.Column(db.String(<span class="number">100</span>), unique=<span class="literal">True</span>)  <span class="comment"># 名称</span></span><br><span class="line">    url = db.Column(db.String(<span class="number">255</span>), unique=<span class="literal">True</span>)  <span class="comment"># 电影地址</span></span><br><span class="line">    addtime = db.Column(db.DateTime, index=<span class="literal">True</span>, default=datetime.now)  <span class="comment"># 添加时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;Auth %r&gt;'</span> % self.name</span><br></pre></td></tr></table></figure><ul><li>定义角色数据模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Role</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"role"</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># 编号</span></span><br><span class="line">    name = db.Column(db.String(<span class="number">100</span>), unique=<span class="literal">True</span>)  <span class="comment"># 名称</span></span><br><span class="line">    auths = db.Column(db.String(<span class="number">600</span>)) <span class="comment"># 权限列表</span></span><br><span class="line">    admins = db.relationship(<span class="string">"Admin"</span>, backref=<span class="string">'role'</span>)  <span class="comment"># 管理员外键关系关联</span></span><br><span class="line">    addtime = db.Column(db.DateTime, index=<span class="literal">True</span>, default=datetime.now)  <span class="comment"># 添加时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;Role %r&gt;'</span> % self.name</span><br></pre></td></tr></table></figure><ul><li>定义管理员数据模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Admin</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"admin"</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># 编号</span></span><br><span class="line">    name = db.Column(db.String(<span class="number">100</span>), unique=<span class="literal">True</span>)  <span class="comment"># 管理员名称</span></span><br><span class="line">    pwd = db.Column(db.String(<span class="number">100</span>))  <span class="comment"># 管理员密码</span></span><br><span class="line">    is_super = db.Column(db.SmallInteger)  <span class="comment"># 是否为超级管理员，0为超级管理员</span></span><br><span class="line">    role_id = db.Column(db.Integer, db.ForeignKey(<span class="string">'role.id'</span>))  <span class="comment"># 所属角色</span></span><br><span class="line">    addtime = db.Column(db.DateTime, index=<span class="literal">True</span>, default=datetime.now)  <span class="comment"># 添加时间</span></span><br><span class="line">    adminlogs = db.relationship(<span class="string">'AdminLog'</span>, backref=<span class="string">'admin'</span>)  <span class="comment"># 管理员登录日志外键关系关联</span></span><br><span class="line">    oplogs = db.relationship(<span class="string">'OpLog'</span>, backref=<span class="string">'admin'</span>)  <span class="comment"># 管理员操作日志外键关系关联</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;Admin %r&gt;'</span> % self.name</span><br></pre></td></tr></table></figure><ul><li>定义管理员登录日志数据模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminLog</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"adminlog"</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># 编号</span></span><br><span class="line">    admin_id = db.Column(db.Integer, db.ForeignKey(<span class="string">'admin.id'</span>))  <span class="comment"># 所属管理员</span></span><br><span class="line">    ip = db.Column(db.String(<span class="number">100</span>))  <span class="comment"># 登录IP</span></span><br><span class="line">    addtime = db.Column(db.DateTime, index=<span class="literal">True</span>, default=datetime.now)  <span class="comment"># 添加时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;AdminLog %r&gt;'</span> % self.id</span><br></pre></td></tr></table></figure><ul><li>定义操作日志数据模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OpLog</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">"oplog"</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="literal">True</span>)  <span class="comment"># 编号</span></span><br><span class="line">    admin_id = db.Column(db.Integer, db.ForeignKey(<span class="string">'admin.id'</span>))  <span class="comment"># 所属管理员</span></span><br><span class="line">    ip = db.Column(db.String(<span class="number">100</span>))  <span class="comment"># 登录IP</span></span><br><span class="line">    reason = db.Column(db.String(<span class="number">600</span>))  <span class="comment"># 操作原因</span></span><br><span class="line">    addtime = db.Column(db.DateTime, index=<span class="literal">True</span>, default=datetime.now)  <span class="comment"># 添加时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;OpLog %r&gt;'</span> % self.id</span><br></pre></td></tr></table></figure><p><strong>9.生成数据表</strong></p><ul><li>调用db对象中create_all方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    db.create_all()</span><br></pre></td></tr></table></figure><ul><li>运行models.py文件，提示如下错误</li></ul><p><img src="https://img-blog.csdnimg.cn/2019041500454159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>解决以上报错，导入pymysql并在配置uri中添加pymysql</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">app.config[<span class="string">"SQLALCHEMY_DATABASE_URI"</span>] = <span class="string">"mysql+pymysql://root:mysql@127.0.0.1:3306/movie"</span></span><br></pre></td></tr></table></figure><ul><li>再次运行成功</li></ul><p><img src="https://img-blog.csdnimg.cn/20190415004922348.png" alt></p><ul><li>查看数据库movie下的表</li></ul><p><img src="https://img-blog.csdnimg.cn/20190415005334618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>10.添加表数据</strong></p><ul><li>向角色表（role）添加数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># db.create_all()</span></span><br><span class="line">    role = Role(</span><br><span class="line">        name=<span class="string">"超级管理员"</span>,</span><br><span class="line">        auths=<span class="string">""</span></span><br><span class="line">    )</span><br><span class="line">    db.session.add(role)</span><br><span class="line">    db.session.commit()</span><br></pre></td></tr></table></figure><ul><li>查看role表数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190415010056822.png" alt></p><ul><li>向管理员表（admin）添加数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">from</span> werkzeug.security <span class="keyword">import</span> generate_password_hash</span><br><span class="line">    admin = Admin(</span><br><span class="line">        name=<span class="string">"taogangshow"</span>,</span><br><span class="line">        pwd=generate_password_hash(<span class="string">"hellomovie"</span>),</span><br><span class="line">        is_super=<span class="number">0</span>,</span><br><span class="line">        role_id=<span class="number">1</span></span><br><span class="line">    )</span><br><span class="line">    db.session.add(admin)</span><br><span class="line">    db.session.commit()</span><br></pre></td></tr></table></figure><ul><li>查看admin表数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190415010911390.png" alt></p><h1 id="四丶搭建前台页面"><a href="#四丶搭建前台页面" class="headerlink" title="四丶搭建前台页面"></a>四丶搭建前台页面</h1><p><strong>1.会员登录退出页面搭建</strong></p><ul><li>将静态资源文件放在static目录下</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416142539585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>将tpl/2-movie目录下的nav.html文件拷贝到templates/home目录下并命名为home.html，用作于父模板</li></ul><p><img src="https://img-blog.csdnimg.cn/2019041613591550.png" alt></p><ul><li>将home.html中的静态文件引入方式全部修改为{{url_for('static', filename='xxx')}}，如下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"shortcut icon"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('static', filename='base/images/logo.png')&#125;&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('static', filename='base/css/bootstrap.min.css')&#125;&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('static', filename='base/css/bootstrap-movie.css')&#125;&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('static', filename='base/css/animate.css')&#125;&#125;"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在内容div容器中挖坑（定义数据块）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top:76px"</span>&gt;</span></span><br><span class="line">    &#123;% block content%&#125;&#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在templates/home目录下新建index.html文件，继承与home.html</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends "/home/home.html" %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>cdtaogang<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% endblock%&#125;</span><br></pre></td></tr></table></figure><ul><li>在home/views.py文件中渲染出index.html模板文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@home.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/index.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>启动项目，进入<a href="http://127.0.0.1:5000/" target="_blank" rel="noopener">http://127.0.0.1:5000/</a>显示页面</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416142938734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>在home/views.py文件中定义登录以及退出视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@home.route('/login/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/login.html"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="meta">@home.route('/logout/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">"home.login"</span>))  <span class="comment"># 跳转到登录页</span></span><br></pre></td></tr></table></figure><ul><li>将tpl/2-movie目录下的login.html文件拷贝到templates/home目录下，其余部分删除只保留内容块继承父模板定义数据块</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416145356272.png" alt></p><ul><li>修改父模板home.html文件中登录和退出连接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"curlink"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.login')&#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-log-in"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"curlink"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.logout')&#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-log-out"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示登录与退出页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190416150337355.gif" alt></fancybox></p><p><strong>2.会员注册页面搭建</strong></p><ul><li>跟登录一样，首先定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@home.route('/register/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/register.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>然后模板文件register.html</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416150521548.png" alt></p><ul><li>修改父模板文件home.html中导航栏注册地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"curlink"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.register')&#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-plus"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>运行项目，成功显示注册页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019041615073842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>3.会员中心页面搭建</strong></p><p><strong>会员中心</strong></p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会员中心</span></span><br><span class="line"><span class="meta">@home.route('/user/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/user.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>在templates/home目录下创建menu.html将注册页面中的菜单栏代码复制在该文件中</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416154345414.png" alt></p><ul><li>修改menu.html中代码，添加id属性，用于激活active</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"m-1"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.user')&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;会员中心</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"m-2"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.pwd')&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-lock"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;修改密码</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"m-3"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.comments')&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-comment"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;评论记录</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"m-4"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.loginlog')&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-calendar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;登录日志</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"m-5"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.moviecol')&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-heart"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;收藏电影</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>home.html模板文件中新建数据模块，用于存放注册页面独有的CSS代码</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416163812135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>home.html模板文件底部新建数据模块，用于存放注册页面独有的JS代码</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416163944361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>在templates/home目录下创建user.html将注册页面中的会员中心代码复制在该文件中，并继承父模板，需要将注册页面菜单栏menu.html文件包含在内容块中，以及填写css和js数据块数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416164126162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>修改密码</strong></p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line"><span class="meta">@home.route('/pwd/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwd</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/pwd.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>在templates/home目录下创建pwd.html将注册页面中的会员中心代码复制在该文件中，同上只需要更改修改密码内容块以及底部js也就是class=”col-md-9”和id属性值，因为除了独有部分不同其余部分相同</li></ul><p><img src="https://img-blog.csdnimg.cn/201904161643349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>评论记录</strong></p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 评论记录</span></span><br><span class="line"><span class="meta">@home.route('/comments/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">comments</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/comments.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>在templates/home目录下创建pwd.html将注册页面中的会员中心代码复制在该文件中，同上只需要更改评论记录内容块以及底部js也就是class=”col-md-9”和id属性值，因为除了独有部分不同其余部分相同</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416164501315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>登录日志</strong></p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录日志</span></span><br><span class="line"><span class="meta">@home.route('/loginlog/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loginlog</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/loginlog.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>在templates/home目录下创建pwd.html将注册页面中的会员中心代码复制在该文件中，同上只需要更改登录日志内容块以及底部js也就是class=”col-md-9”和id属性值，因为除了独有部分不同其余部分相同</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416164639333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>收藏电影</strong></p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 收藏电影</span></span><br><span class="line"><span class="meta">@home.route('/moviecol/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moviecol</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/moviecol.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>在templates/home目录下创建pwd.html将注册页面中的会员中心代码复制在该文件中，同上只需要更改收藏电影内容块以及底部js也就是class=”col-md-9”和id属性值，因为除了独有部分不同其余部分相同</li></ul><p><img src="https://img-blog.csdnimg.cn/2019041616471492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>设定用户登录成功或者注册成功后进入会员中心页面，则在login.html以及register.html模板文件中修改链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.user')&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"btn btn-lg btn-success btn-block"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.user')&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"btn btn-lg btn-success btn-block"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试会员中心页面显示以及登录注册后页面跳转显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190416170753347.gif" alt></fancybox></p><p><strong>4.电影列表页以及搜索页面搭建</strong></p><p><strong>电影列表页</strong></p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列表</span></span><br><span class="line"><span class="meta">@home.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/index.html"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 动画</span></span><br><span class="line"><span class="meta">@home.route('/animation/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">animation</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/animation.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>在templates/home目录下新建layout.html文件，将home.html内容复制到layout.html文件中，因为列表页面与其他页面不一样，需要单独使用一个父模板，修改layout.html中的数据块，去除div标签</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block content%&#125;&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><ul><li>编辑templates/home目录下的index.html文件，继承与layout.html，并将热门电影以及电影列表放在数据块中</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416180154890.png" alt></p><ul><li>将static/tpl目录下的animation.html文件拷贝到templates/home目录下，用于存放热门电影模块中的幻灯片动画，修改animation.html文件中的地址</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416181418426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>修改home/index.html文件中动画地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">class</span>=<span class="string">"wow fadeIn"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"375px"</span> <span class="attr">frameborder</span>=<span class="string">0</span> <span class="attr">scrolling</span>=<span class="string">no</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;url_for('home.animation')&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试显示主页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190416182336966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>搜索页面</strong></p><ul><li>定义视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@home.route('/search/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/search.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>将static/tpl/2-movie目录下的search.html文件拷贝到templates/home的目录下，并保留搜索内容块，其他地方继承home.html模板即可</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416183748183.png" alt></p><ul><li>测试显示搜索页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190416191100741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>5.电影播放页与404页面搭建</strong></p><p><strong>播放页面</strong></p><ul><li>定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@home.route('/play/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/play.html"</span>)</span><br></pre></td></tr></table></figure><ul><li>复制static/tpl/2-movie下的play.html文件到templates/home目录下，完成该页面的继承的数据块，并修改静态资源地址</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190416192247677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在搜索页面（search.html）收藏电影页面（moviecol.html）以及主页（index.html）中将电影播放地址play.html全部修改为{{url_for('home.play')}}，执行home下的play视图函数名</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 搜索页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.play')&#125;&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"media-object"</span> <span class="attr">src</span>=<span class="string">"holder.js/131x83"</span> <span class="attr">alt</span>=<span class="string">"环太平洋"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 收藏电影页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.play')&#125;&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"media-object"</span> <span class="attr">src</span>=<span class="string">"holder.js/131x83"</span> <span class="attr">alt</span>=<span class="string">"环太平洋"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 主页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;url_for('home.play')&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">role</span>=<span class="string">"button"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-play"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp;播放<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试视频播放页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190416193547444.gif" alt></fancybox></p><p><strong>404页面搭建</strong></p><ul><li>在app/<strong>init</strong>.py初始化文件中定义404错误机制视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.errorhandler(404)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_not_found</span><span class="params">(error)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"home/404.html"</span>), <span class="number">404</span></span><br></pre></td></tr></table></figure><ul><li>复制static/tpl/4-404目录下的404.html文件到templates/home目录下，并修改模板中的静态资源路径</li></ul><p><img src="https://img-blog.csdnimg.cn/20190416194657632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li>测试404页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190416195212732.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/89297099" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/89297099</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Python Web开发 </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目之Web端电商网站的实战开发（完结）</title>
      <link href="/2019/11/07/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%AE%8C%E7%BB%93%EF%BC%89/"/>
      <url>/2019/11/07/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%AE%8C%E7%BB%93%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶订单生成"><span style="color:#4ea1db">一丶订单生成</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶订单支付"><span style="color:#4ea1db">二丶订单支付</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶订单评论"><span style="color:#4ea1db">三丶订单评论</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶项目部署"><span style="color:#4ea1db">四丶项目部署</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶项目总结"><span style="color:#4ea1db">五丶项目总结</span></a></li><a id="more"></a><h1 id="一丶订单生成"><a href="#一丶订单生成" class="headerlink" title="一丶订单生成"></a>一丶订单生成</h1><p>1.显示订单提交页面</p><ul><li><strong>step1</strong> 在df_order/views中定义类视图post方法，显示订单提交页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /order/place</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderPlaceView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""提交订单"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="string">"""显示提交订单页面"""</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'place_order.html'</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在df_order/urls中定义路由规则</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^place$"</span>, OrderPlaceView.as_view(), name=<span class="string">'place'</span>), <span class="comment"># 显示订单页</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在place_order.html模板文件中，设置复选框checkbox的name为sku_ids以及value值为sku.id也就是商品id，因为当进行表单提交时，复选框的状态为未勾选状态时，则在headers from data表单数据中不会显示该商品的value值，即可以利用该点再后端获取提交订单页面中所有的数据</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"/order/place"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col01"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"sku_ids"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; sku.id &#125;&#125;"</span> <span class="attr">checked</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col04"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"去结算"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><fancybox><img src="https://img-blog.csdnimg.cn/20190408150548568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在我的购物车页面点击去结算提交按钮，成功跳转到到提交订单页面</li></ul><p><img src="https://img-blog.csdnimg.cn/20190408150717752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p>2.获取提交订单页面中的数据</p><ul><li><strong>step1</strong> 判断用户是否登录状态，如果没有登录则跳转到登录页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user = request.user</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> user.is_authenticated():</span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">'user:login'</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取表单中的sku_ids数据并进行校验</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1 获取表单中的sku_ids参数</span></span><br><span class="line">sku_ids = request.POST.getlist(<span class="string">"sku_ids"</span>)  <span class="comment">#[11,19,39,41]</span></span><br><span class="line"><span class="comment">#2 校验参数</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> sku_ids:</span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">'cart:cart_show'</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取redis连接对象，通过遍历sku_ids获取商品的信息，并获取数据库中商品的数量，计算出商品的小计，总计和总件数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">conn = get_redis_connection(<span class="string">"default"</span>)</span><br><span class="line">cart_key = <span class="string">"cart_%d"</span> % user.id</span><br><span class="line">skus = []</span><br><span class="line">total_price = <span class="number">0</span>  <span class="comment"># 总金额</span></span><br><span class="line">total_count = <span class="number">0</span>  <span class="comment"># 总件数</span></span><br><span class="line"><span class="comment"># 遍历sku_ids获取每个商品的信息</span></span><br><span class="line"><span class="keyword">for</span> sku_id <span class="keyword">in</span> sku_ids:</span><br><span class="line">    <span class="comment"># 根据商品id获取商品的信息</span></span><br><span class="line">    sku = GoodsSKU.objects.get(id=sku_id)</span><br><span class="line">    <span class="comment"># 根据商品id获取商品的数量</span></span><br><span class="line">    count = conn.hget(cart_key, sku_id)</span><br><span class="line">    <span class="comment"># 计算商品的小计</span></span><br><span class="line">    amount = sku.price*int(count)</span><br><span class="line">    <span class="comment"># 动态保存购买商品的数量和小计</span></span><br><span class="line">    sku.count = count</span><br><span class="line">    sku.amount = amount</span><br><span class="line">    <span class="comment"># 商品信息对象保存到列表中</span></span><br><span class="line">    skus.append(sku)</span><br><span class="line">    <span class="comment"># 累加金额与件数</span></span><br><span class="line">    total_count += int(count)</span><br><span class="line">    total_price += amount</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 设定运费金额，计算订单总金额组织模板上下文，返回给前端模板中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运费，一般在实际开发中需要单独创建一张表，当金额超过多少时免运费或者是多少钱,这里直接写死为10块</span></span><br><span class="line">transit_price = <span class="number">10</span></span><br><span class="line"><span class="comment"># 实际付款金额</span></span><br><span class="line">total_pay = total_price + transit_price</span><br><span class="line"><span class="comment"># 获取收件人地址</span></span><br><span class="line">addrs = Address.objects.filter(user=user)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 组织模板上下文</span></span><br><span class="line">context = &#123;</span><br><span class="line">    <span class="string">'skus'</span>:skus,<span class="string">'total_count'</span>:total_count,</span><br><span class="line">    <span class="string">'total_price'</span>:total_price, <span class="string">'transit_price'</span>:transit_price,</span><br><span class="line">    <span class="string">'total_pay'</span>:total_pay, <span class="string">'addrs'</span>:addrs</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">'place_order.html'</span>, context)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在模板文件place_order.html中进行数据填坑</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"common_list_con clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>寄送到：<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        &#123;% for addr in addrs %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">checked</span>=<span class="string">""</span>&gt;</span>&#123;&#123; addr.addr &#125;&#125; （&#123;&#123; addr.receiver &#125;&#125; 收） &#123;&#123; addr.phone &#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'user:address' %&#125;"</span> <span class="attr">class</span>=<span class="string">"edit_site"</span>&gt;</span>编辑收货地址<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% for sku in skus %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"goods_list_td clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col01"</span>&gt;</span>&#123;&#123; forloop.counter &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col02"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; sku.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col03"</span>&gt;</span>&#123;&#123; sku.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col04"</span>&gt;</span>&#123;&#123; sku.unite &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col05"</span>&gt;</span>&#123;&#123; sku.price &#125;&#125;元<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col06"</span>&gt;</span>&#123;&#123; sku.count &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col07"</span>&gt;</span>&#123;&#123; sku.amount &#125;&#125;元<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"settle_con"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"total_goods_count"</span>&gt;</span>共<span class="tag">&lt;<span class="name">em</span>&gt;</span>&#123;&#123; total_count &#125;&#125;<span class="tag">&lt;/<span class="name">em</span>&gt;</span>件商品，总金额<span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123; total_price &#125;&#125;元<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"transit"</span>&gt;</span>运费：<span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123; transit_price &#125;&#125;元<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"total_pay"</span>&gt;</span>实付款：<span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123; total_pay &#125;&#125;元<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 测试点击去结算按钮</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190408161217733.gif" alt></fancybox></p><ul><li><strong>step7</strong> 在提交订单页面上的收货地址，应该将数据库中默认的收货地址is_default字段为1的复选框checkbox状态为checked，而不应该全部地址都是勾选状态，所以在place_order.html中进行如下判断显示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"addr_id"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; addr.id &#125;&#125;"</span> &#123;% <span class="attr">if</span> <span class="attr">addr.is_default</span> %&#125;<span class="attr">checked</span>&#123;% <span class="attr">endif</span> %&#125;&gt;</span>&#123;&#123; addr.addr &#125;&#125; （&#123;&#123; addr.receiver &#125;&#125; 收） &#123;&#123; addr.phone &#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 刷新页面</li></ul><p><img src="https://img-blog.csdnimg.cn/20190408162242415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p>3.创建订单</p><ul><li><strong>step1</strong> 在提交订单页面，点击提交订单按钮，需要向后端传递提交订单页面中的收获地址和支付方式以及商品的id，即在place_order.html模板文件中需要手动去添加支付方式的value值对应后端订单模型类中的df_order_info表,收获地址前面已经进行设置了，所以不需要设置</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"pay_style"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"cash"</span>&gt;</span>货到付款<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"pay_style"</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"weixin"</span>&gt;</span>微信支付<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"pay_style"</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"zhifubao"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"pay_style"</span> <span class="attr">value</span>=<span class="string">"4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"bank"</span>&gt;</span>银行卡支付<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 收货地址和支付方式已经在前端模板中设置好了，最后需要设置的就是商品的id，需要在后端中进行组织好传递到前端模板文件的数据格式，提交订单页面中的商品id已经保存到厚度那中skus列表中了，现在将该列表保存的商品id以逗号进行拼接，传递到前端模板中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sku_ids = <span class="string">','</span>.join(sku_ids)  <span class="comment"># 11,19,39,41</span></span><br><span class="line"><span class="comment"># 组织模板上下文</span></span><br><span class="line">context = &#123;</span><br><span class="line">    <span class="string">'skus'</span>:skus,<span class="string">'total_count'</span>:total_count,</span><br><span class="line">    <span class="string">'total_price'</span>:total_price, <span class="string">'transit_price'</span>:transit_price,</span><br><span class="line">    <span class="string">'total_pay'</span>:total_pay, <span class="string">'addrs'</span>:addrs,</span><br><span class="line">    <span class="string">'sku_ids'</span>:sku_ids</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在前端模板中提交订单按钮中，定义标签属性sku_ids</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">sku_ids</span>=<span class="string">&#123;&#123;</span> <span class="attr">sku_ids</span> &#125;&#125; <span class="attr">id</span>=<span class="string">"order_btn"</span>&gt;</span>提交订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 在place_order.html模板文件中进行提交订单js代码编写，获取用户选择的收货地址，支付方式以及购买的商品id，并通过ajax post方式向后端发送请求</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#order_btn'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取用户选择的收货地址和支付方式以及商品id</span></span><br><span class="line">    addr_id = $(<span class="string">'input[name="addr_id"]:checked'</span>).val();</span><br><span class="line">    pay_method = $(<span class="string">'input[name="pay_style"]:checked'</span>).val();</span><br><span class="line">    sku_ids = $(<span class="keyword">this</span>).attr(<span class="string">'sku_ids'</span>);</span><br><span class="line">    csrf = $(<span class="string">'input[name="csrfmiddlewaretoken"]'</span>).val();</span><br><span class="line">    params = &#123;<span class="string">"addr_id"</span>:addr_id, <span class="string">"pay_method"</span>:pay_method, <span class="string">"sku_ids"</span>:sku_ids, <span class="string">"csrfmiddlewaretoken"</span>:csrf&#125;;</span><br><span class="line">    <span class="comment">// 向后端/order/commit地址发送ajax post请求</span></span><br><span class="line">    $.post(<span class="string">'/order/commit'</span>,params, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 紧接着在后端中定义类视图post方法，配置url路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /order/commit</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderCommitView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""创建订单"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">url(<span class="string">r"^commit$"</span>, OrderCommitView.as_view(), name=<span class="string">'commit'</span>), <span class="comment"># 创建订单</span></span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 判断用户是否登录，获取参数以及校验参数完整性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">user = request.user</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> user.is_authenticated():</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">0</span>, <span class="string">"error_msg"</span>: <span class="string">"请先登录"</span>&#125;)</span><br><span class="line"><span class="comment"># 获取参数</span></span><br><span class="line">addr_id = request.POST.get(<span class="string">"addr_id"</span>)</span><br><span class="line">pay_method = request.POST.get(<span class="string">"pay_method"</span>)</span><br><span class="line">sku_ids = request.POST.get(<span class="string">"sku_ids"</span>)</span><br><span class="line"><span class="comment"># 校验参数</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([addr_id, pay_method, sku_ids]):</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">1</span>, <span class="string">"error_msg"</span>: <span class="string">"参数不完整"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 判断传递的支付方式以及收货地址是否合法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断前端传递过来的支付方式是否存在</span></span><br><span class="line"><span class="keyword">if</span> pay_method <span class="keyword">not</span> <span class="keyword">in</span> OrderInfo.pay_method.key():</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">2</span>, <span class="string">"error_msg"</span>: <span class="string">"非法的支付方式"</span>&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 判断前端传递过来的收货地址是否存在</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    addr = Address.objects.get(id=addr_id)</span><br><span class="line"><span class="keyword">except</span> Address.DoesNotExist:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">3</span>, <span class="string">"error_msg"</span>: <span class="string">"非法的收货地址"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 向df_order_info表中插入记录，提交订单会在df_order_info以及df_order_goods这两张表中各产生一条记录，由于df_order_goods表外键为df_order_info表，所以需要先在df_order_info表中产生订单记录，在df_order_info表字段中，还需要去获取order_id，total_count，total_price，transit_price</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1 自定义order_id 20190408174330+用户id（作为唯一标识）</span></span><br><span class="line">order_id = datetime.now().strftime(<span class="string">"%Y%m%d%H%M%S"</span>) + str(user.id)</span><br><span class="line"><span class="comment">#2 总件数和总金额初始设置为0</span></span><br><span class="line">total_count = <span class="number">0</span></span><br><span class="line">total_price = <span class="number">0</span></span><br><span class="line"><span class="comment">#3 运费</span></span><br><span class="line">transit_price = <span class="number">10</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># todo: 向df_order_info表中插入记录</span></span><br><span class="line">order = OrderInfo.objects.create(</span><br><span class="line">    order_id=order_id, user=user,</span><br><span class="line">    addr=addr, pay_method=pay_method,</span><br><span class="line">    total_count=total_count, total_price=total_price,</span><br><span class="line">    transit_price=transit_price)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 向df_order_goods表中插入记录，有多少种商品插入多少条记录</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">conn = get_redis_connection(<span class="string">"default"</span>)</span><br><span class="line">cart_key = <span class="string">"cart_%d"</span> % user.id</span><br><span class="line">sku_ids = sku_ids.split(<span class="string">','</span>)</span><br><span class="line"><span class="keyword">for</span> sku_id <span class="keyword">in</span> sku_ids:</span><br><span class="line">    <span class="comment"># 获取商品信息</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        sku = GoodsSKU.objects.get(id=sku_id)</span><br><span class="line">    <span class="keyword">except</span> GoodsSKU.DoesNotExist:</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">4</span>, <span class="string">"error_msg"</span>: <span class="string">"商品不存在"</span>&#125;)</span><br><span class="line">    <span class="comment"># 从redis数据库中获取用户购买商品的数量</span></span><br><span class="line">    count = conn.hget(cart_key, sku_id)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># todo:向df_order_goods表中添加记录</span></span><br><span class="line">    OrderGoods.objects.create(</span><br><span class="line">        order=order,sku=sku,</span><br><span class="line">        count=count,price=sku.price)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># todo: 更新商品的库存和销量</span></span><br><span class="line">    sku.stock -= int(count)</span><br><span class="line">    sku.sales += int(count)</span><br><span class="line">    sku.save()</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># todo: 累加计算订单商品的总数量和总价格</span></span><br><span class="line">    amount = sku.price * int(count)</span><br><span class="line">    total_count += int(count)</span><br><span class="line">    total_price += amount</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 更新订单信息表df_order_info中的总件数和总金额</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">order.total_count = total_count</span><br><span class="line">order.total_price = total_price</span><br><span class="line">order.save()</span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 清除用户购物车中的商品，最后返回给前端正确响应</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conn.hdel(cart_key, *sku_ids)  <span class="comment"># *sku_ids ---&gt; [1,2,3]变成1,2,3</span></span><br><span class="line"><span class="comment"># 返回正确响应</span></span><br><span class="line"><span class="keyword">return</span> JsonResponse(&#123;<span class="string">'errno'</span>:<span class="string">"ok"</span>, <span class="string">'error_message'</span>:<span class="string">'订单创建成功'</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step12</strong> 在place_order.html模板js中进行打印显示</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.post(<span class="string">'/order/commit'</span>,params, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(data.errno==<span class="string">"ok"</span>)&#123;</span><br><span class="line">        alert(<span class="string">"创建订单成功"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(data.error_msg)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step13</strong> 创建订单测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190408193709912.gif" alt></fancybox></p><ul><li><strong>step14</strong> 查看数据库df_order_info表数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190408193927756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step15</strong> 查看数据库df_order_goods表数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190408194159252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p>4.订单生成使用mysql事务</p><ul><li><strong>step1</strong> 当某个商品库存只有2件时，有不止一个用户购物车添加了2个该商品，假设第一个用户提交订单，成功后，则后面的用户提交订单时，则应该提示用户商品库存不足</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># todo:判断用户购物车中商品的数量是否小于商品库存</span></span><br><span class="line"><span class="keyword">if</span> int(count) &gt; sku.stock:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="string">"5"</span>, <span class="string">"error_msg"</span>:<span class="string">"商品库存不足"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 经过上面的判断后，当商品库存不足顾客订单上的商品数量时，则会提示商品库存不足，即不会在df_order_goods表中插入数据，但是会在df_order_info表中生成订单记录，这样肯定不对，商品不足的情况下即使生成了订单，那么订单的数据肯定是错误的，那么就需要使用事务的特性来帮助我们完成在插入数据时，要么成功，要么撤回，这是mysql事务原子性的体现，在django中使用数据库事务参考—Django数据库事务</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> transaction</span><br><span class="line"> </span><br><span class="line"><span class="meta">@transaction.atomic</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">viewfunc</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="comment"># This code executes inside a transaction.</span></span><br><span class="line">    do_stuff()</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在df_order/views订单提交视图OrderCommitView中对post方法进行装饰，需要导入transaction模块</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@transaction.atomic</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 设置事务保存点，在进行数据库插入数据之前进行设置</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置事务保存点</span></span><br><span class="line">save_id = transaction.savepoint()</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在出现异常的时候，进行事务回滚</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">transaction.savepoint_rollback(save_id)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 将post函数中关于数据库操作的代码放在try中，当在任何地方出现异常时，全部进行回滚操作</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    order = OrderInfo.objects.create(</span><br><span class="line">        order_id=order_id, user=user,</span><br><span class="line">        addr=addr, pay_method=pay_method,</span><br><span class="line">        total_count=total_count, total_price=total_price,</span><br><span class="line">        transit_price=transit_price)</span><br><span class="line">    # 中间代码省略</span><br><span class="line">    order.total_count = total_count</span><br><span class="line">    order.total_price = total_price</span><br><span class="line">    order.save()</span><br><span class="line">except Exception as e:</span><br><span class="line">    # 将整个关于数据操作的代码，放在try里面，任何地方出现异常，立即做事务回滚</span><br><span class="line">    transaction.savepoint_rollback(save_id)</span><br><span class="line">    return JsonResponse(&#123;&quot;errno&quot;:6, &quot;error_msg&quot;:e &#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 在异常外面进行事务的提交操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 没有出现异常则进行事务的提交操作</span></span><br><span class="line">transaction.savepoint_commit(save_id)</span><br></pre></td></tr></table></figure><p>5.订单并发问题</p><p><font style="color:red"><strong>悲观锁</strong></font></p><p><strong>说明</strong>：电商网站在做秒杀活动时，就会出现大量用户对同一商品进行购买，当该秒杀商品库存只有1个时，如果很多顾客同时进行点击购买，就会出现一个库存的商品卖了好几百个情况，导致并发生成订单问题</p><ul><li><strong>step1</strong> 使用悲观锁进行订单并发处理，悲观锁获取数据时对数据行了锁定，其他事务要想获取锁，必须等原事务结束，换句话说就是当用户1在做sql查询时，进行加锁，那么期间用户2使用同sql语句进行查询时，需要等待用户1事务提交或者回滚事务结束后解锁，才能进行操作；在数据库中对查询语句加锁就是在后面加上for update，如select * from df_goods_sku where id = 41 for update；在django中则在objects下有个select_for_update方法，等价于上面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sku = GoodsSKU.objects.select_for_update().get(id=sku_id)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 查看数据库中商品库存前五商品，库存最少的为商品id为8的盒装草莓</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409091923810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 进行测试，在查询商品信息代码后秒加上以下代码，打印出用户的id和商品库存信息，休眠10秒是为了演示效果，博主使用两个浏览器对商品id为8库存为1的盒装草莓进行购买</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"用户id:%d,商品库存:%d"</span>%(user.id, sku.stock))</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409101106502.gif" alt></fancybox></p><ul><li><strong>step4</strong> 查看数据库中该商品的库存与销量</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409102959360.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><font style="color:red"><strong>乐观锁</strong></font></p><p><strong>说明</strong>：在查询数据的时候不加锁，在进行数据更新时判断更新时的库存和之前查出数据库的库存是否一致</p><ul><li><strong>step1</strong> 乐观锁，在更新商品库存时，条件为该商品的id以及商品的库存必须与更新之前的商品库存一致，才进行库存的更新，如update df_goods_sku set stock=0, sales=1 where <font style="color:red">id=8 and stock=1</font>；当用户1购买商品成功则执行update语句那么就会修改stock的库存为0，那么用户2在购买商品时执行update语句时就不会成功，因为此时的where条件中的stock库存与购买前商品库存不一致导致条件不成立，就不会往下执行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># todo: 更新商品的库存和销量</span></span><br><span class="line">orgin_stock = sku.stock</span><br><span class="line">new_stock = orgin_stock - int(count)</span><br><span class="line">new_sales = sku.sales + int(count)</span><br><span class="line"><span class="comment"># update df_goods_sku set stock=0, sales=1 where id=8 and stock=1;</span></span><br><span class="line">res = GoodsSKU.objects.filter(id=sku_id, stock=orgin_stock).update(stock=new_stock, sales=new_sales)</span><br><span class="line"><span class="keyword">if</span> res == <span class="number">0</span>:</span><br><span class="line">    <span class="comment"># 表示没有修改成功,进行事务的回滚操作</span></span><br><span class="line">    transaction.savepoint_rollback(save_id)</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="number">6</span>, <span class="string">"error_msg"</span>:<span class="string">"下单失败"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 进行测试前将数据库中商品id为8的商品库存设置为1</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409105004240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 进行测试，其中某个账户完成创建订单成功时，则原始库存与更新后的库存肯定不一致，另一个用户在执行到update语句时，则会出现无法修改，因为条件中的库存不等于原始库存</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409110550932.gif" alt></fancybox></p><ul><li><strong>step4</strong> 当库存不止为1时，也就是说足够两个用户同时下单时，如果以原有库存与现有库存进行sql修改条件判断时，那么也同样会出现一个客户下单成功，另一个客户下单失败</li></ul><p><font style="color:red"><strong>解决方法</strong></font></p><p>①在mysql配置文件中（windows—my.ini  linux—-mysqld.cnf）添加如下配置读取提交内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 设置mysql数据库隔离级别</span><br><span class="line">transaction-isolation = READ-COMMITTED</span><br></pre></td></tr></table></figure><p>②在视图中对逻辑代码进行三次尝试判断，当用户1创建订单成功，更新了库存，从头开始去执行查询最新库存进行判断，这样就不会出现在商品库存充足的情况下，多个顾客在同一时间对同一商品进行下单操作，出现只有一个用户下单成功的情况</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> sku_id <span class="keyword">in</span> sku_ids:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        <span class="comment"># 代码省略</span></span><br><span class="line">        <span class="keyword">if</span> res == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">2</span>: <span class="comment"># 第三次尝试如果不成功执行下面代码</span></span><br><span class="line">                <span class="comment"># 表示没有修改成功,进行事务的回滚操作</span></span><br><span class="line">                transaction.savepoint_rollback(save_id)</span><br><span class="line">                <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="number">6</span>, <span class="string">"error_msg"</span>:<span class="string">"下单失败"</span>&#125;)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># 代码省略</span></span><br><span class="line">        <span class="comment"># 一次成功则跳出循环</span></span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h1 id="二丶订单支付"><a href="#二丶订单支付" class="headerlink" title="二丶订单支付"></a>二丶订单支付</h1><p>1.在订单提交页面点击提交订单按钮，提交订单成功后应该跳转到用户中心—订单页面中</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409130922376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step1</strong> 在place_order.html模板文件中，当后端发回来的data数据errno值为ok表示提交成功，那么在js中进行如下编写，在页面显示出订单提交成功的提示，并跳转到用户中心订单页</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$.post(<span class="string">'/order/commit'</span>,params, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(data.errno==<span class="string">"ok"</span>)&#123;</span><br><span class="line">    &#123;#alert("创建订单成功")#&#125;</span><br><span class="line">    localStorage.setItem(<span class="string">'order_finish'</span>,<span class="number">2</span>);</span><br><span class="line">    $(<span class="string">'.popup_con'</span>).fadeIn(<span class="string">'fast'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">'.popup_con'</span>).fadeOut(<span class="string">'fast'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">window</span>.open(data.pay_url)</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;, <span class="number">3000</span>)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    alert(data.error_msg)</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 测试，当进行提交订单时，提示提交订单成功并跳转到用户中心订单页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409132015492.gif" alt></fancybox></p><p>2.获取并显示我的订单页面的数据 </p><ul><li><strong>step1</strong> 因为在我的订单页面中需要用到分页，所以需要修改df_user/urls中订单的正则</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^order/(?P&lt;page&gt;\d+)$"</span>, UserOrderView.as_view(), name=<span class="string">"order"</span>),  <span class="comment"># 用户中心-订单</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 将所有的页面涉及链接到我的订单页面的地址进行修改</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="&#123;% url 'user:order' 1 %&#125;"&gt;我的订单&lt;/a&gt;</span><br><span class="line">&lt;li&gt;&lt;a href="&#123;% url 'user:order' 1 %&#125;"&#123;% if page == 'order' %&#125;class="active"&#123;% endif %&#125;&gt;· 全部订单&lt;/a&gt;&lt;/li&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在df_user/views中UserOrderView类视图get中接收参数page</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /user/order</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserOrderView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""用户中心-订单"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, page)</span>:</span></span><br><span class="line">        <span class="string">"""显示页面"""</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"user_center_order.html"</span>, &#123;<span class="string">"page"</span>:<span class="string">"order"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 获取用户的所有订单信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user = request.user</span><br><span class="line">orders = OrderInfo.objects.filter(user=user)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 遍历用户订单集获取</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> order <span class="keyword">in</span> orders:</span><br><span class="line">    order_skus = OrderGoods.objects.filter(order_id=order.order_id)</span><br><span class="line">    <span class="keyword">for</span> order_sku <span class="keyword">in</span> order_skus:</span><br><span class="line">        <span class="comment"># 商品小计</span></span><br><span class="line">        amount = order_sku.count * order_sku.price</span><br><span class="line">        <span class="comment"># 动态的添加属性</span></span><br><span class="line">        order_sku.amount = amount</span><br><span class="line">    <span class="comment"># 动态添加属性</span></span><br><span class="line">    order.order_skus = order_skus</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 对数据进行分页显示</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对数据进行分页</span></span><br><span class="line">paginator = Paginator(orders, <span class="number">2</span>)  <span class="comment"># Show 25 contacts per page</span></span><br><span class="line"><span class="comment"># 获取页数</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    page = int(page)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    page = <span class="number">1</span></span><br><span class="line"><span class="comment"># 判断用户传递过来的页数，是否小于总页数，大于总页数则设置第一页</span></span><br><span class="line"><span class="keyword">if</span> page &gt; paginator.num_pages:</span><br><span class="line">    page = <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">order_page = paginator.page(page)</span><br><span class="line"> </span><br><span class="line">num_pages = paginator.num_pages</span><br><span class="line"><span class="keyword">if</span> num_pages &lt; <span class="number">5</span>:</span><br><span class="line">    pages = range(<span class="number">1</span>, num_pages + <span class="number">1</span>)</span><br><span class="line"><span class="keyword">elif</span> page &lt;= <span class="number">3</span>:</span><br><span class="line">    pages = range(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line"><span class="keyword">elif</span> num_pages - page &lt;= <span class="number">2</span>:</span><br><span class="line">    pages = range(num_pages - <span class="number">4</span>, num_pages + <span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    pages = range(page - <span class="number">2</span>, page + <span class="number">3</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 组织模板上下文，返回给前端模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 组织模板上下文</span></span><br><span class="line">context=&#123;</span><br><span class="line">    <span class="string">"order_page"</span>:order_page,<span class="string">"pages"</span>:pages,</span><br><span class="line">    <span class="string">"page"</span>: <span class="string">"order"</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">"user_center_order.html"</span>,context)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 在user_center_order.html中进行数据填坑</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right_content clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"common_title2"</span>&gt;</span>全部订单<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        &#123;% for order in order_page %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"order_list_th w978 clearfix"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col01"</span>&gt;</span>&#123;&#123; order.create_time &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col02"</span>&gt;</span>订单号：&#123;&#123; order.order_id &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col02 stress"</span>&gt;</span>&#123;&#123; order.order_status &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"order_list_table w980"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"55%"</span>&gt;</span></span><br><span class="line">                        &#123;% for order_sku in order.order_skus %&#125;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"order_goods_list clearfix"</span>&gt;</span>                  </span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col01"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; order_sku.sku.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col02"</span>&gt;</span>&#123;&#123; order_sku.sku.name &#125;&#125;<span class="tag">&lt;<span class="name">em</span>&gt;</span>&#123;&#123; order_sku.price &#125;&#125;元/&#123;&#123; order_sku.sku.unite &#125;&#125;g<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col03"</span>&gt;</span>&#123;&#123; order_sku.count &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col04"</span>&gt;</span>&#123;&#123; order_sku.amount &#125;&#125;元<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                        &#123;% endfor %&#125;</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    &#123;% comment %&#125;add过滤器作加法计算&#123;% endcomment %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"15%"</span>&gt;</span>&#123;&#123; order.total_price |add:order.transit_price&#125;&#125;(含运费:&#123;&#123; order.transit_price &#125;&#125;)元<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"15%"</span>&gt;</span>&#123;&#123; order.order_status &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"15%"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"oper_btn"</span>&gt;</span>去付款<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pagenation"</span>&gt;</span></span><br><span class="line">            &#123;% if order_page.has_previous%&#125;</span><br><span class="line">            &lt;a href="&#123;% url 'user:order' order_page.previous_page_number %&#125;"&gt;&lt;上一页&lt;/a&gt;</span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">            &#123;% for pindex in pages %&#125;</span><br><span class="line">                &#123;% if pindex == order_page.number %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'user:order' pindex %&#125;"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>&#123;&#123; pindex &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &#123;% else %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'user:order' pindex %&#125;"</span>&gt;</span>&#123;&#123; pindex &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &#123;% endif %&#125;</span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">            &#123;% if order_page.has_next %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'user:order' order_page.next_page_number %&#125;"</span>&gt;</span>下一页&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 刷新页面成功将数据库数据显示到页面上</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409153525341.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 在上图中会发现订单状态一栏显示的并不是未支付已支付已完成等状态，而是显示的数字1，因为订单创建到数据库中状态栏保存的就是为数字，这里需要进行获取订单状态信息；在视图中向order对象中动态添加对应模型中的状态名</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 动态添加属性，保存订单状态</span></span><br><span class="line">order.status_name = OrderInfo.ORDER_STATUS[order.order_status]</span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 然后紧接着在user_center_order.html模板中将替换成即可，刷新页面成功显示出状态名</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409155607238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step12</strong> 一般来说在我的订单页面中，第一页显示的肯定是最新创建的，所以需要按照创建时间进行排序</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">orders = OrderInfo.objects.filter(user=user).order_by(<span class="string">'-create_time'</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step13</strong> 细节就是在js中，当创建订单成功即跳转到我的订单页，因为之前显示订单页时，没有做分页，不需要传递page页数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.location.href = <span class="string">'/user/order/1'</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>step14</strong> 刷新页面则按照创建订单倒序进行显示，也就是显示出最新创建的订购单</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409161819282.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.接入支付宝进行订单支付</p><ul><li><strong>step1</strong> 进入支付宝开放平台<a href="https://open.alipay.com/platform/home.htm" target="_blank" rel="noopener">https://open.alipay.com/platform/home.htm</a>，在开发中心—沙箱中，创建应用，详细说明请查看<a href="https://blog.csdn.net/qq_41782425/article/details/86699086" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86699086</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409163540279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 网站向支付宝平台发送支付请求，采用的是网络请求方式，下图为应用于支付宝平台秘钥验证导图</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409184837827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 进入电脑网站支付，查看开发说明文档</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409163754665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 因为支付宝官方没有提供python语言的SDK，需要在<a href="https://github.com/fzlee/alipay/blob/master/README.zh-hans.md" target="_blank" rel="noopener">https://github.com/fzlee/alipay/blob/master/README.zh-hans.md</a>上去使用他人封装好的python编写的支付宝SDK，在df_order/views中创建OrderPayView类视图post方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /order/pay</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderPayView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""订单支付"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 判断用户是否登录并接收参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">user = request.user</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> user.is_authenticated():</span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">'user:login'</span>))</span><br><span class="line"><span class="comment"># 接收参数</span></span><br><span class="line">order_id = request.POST.get(<span class="string">"order_id"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> order_id:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="number">1</span>, <span class="string">"error_msg"</span>:<span class="string">"参数不完整"</span>&#125;)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    order = OrderInfo.objects.get(order_id=order_id, user=user, pay_method=<span class="number">3</span>, order_status=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">except</span> OrderInfo.DoesNotExist:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="number">2</span>, <span class="string">"error_msg"</span>:<span class="string">"无效订单"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 调用支付宝接口，并传递必要参数，最后向模板返回响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># todo: 使用支付宝python SDK工具，调用支付宝支付接口</span></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">alipay = AliPay(</span><br><span class="line">    appid=<span class="string">""</span>,  <span class="comment"># 应用id</span></span><br><span class="line">    app_notify_url=<span class="literal">None</span>,  <span class="comment"># 默认回调url</span></span><br><span class="line">    app_private_key_path=os.path.join(settings.BASE_DIR, <span class="string">'apps/df_order/app_private_key.pem'</span>),</span><br><span class="line">    <span class="comment"># 支付宝的公钥，验证支付宝回传消息使用，不是你自己的公钥,</span></span><br><span class="line">    alipay_public_key_path=os.path.join(settings.BASE_DIR, <span class="string">'apps/df_order/alipay_public_key.pem'</span>),</span><br><span class="line">    sign_type=<span class="string">"RSA2"</span>,  <span class="comment"># RSA 或者 RSA2</span></span><br><span class="line">    debug = <span class="literal">True</span>  <span class="comment"># 默认False</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># 电脑网站支付，需要跳转到https://openapi.alipay.com/gateway.do? + order_string</span></span><br><span class="line">total_pay = order.total_price + order.transit_price</span><br><span class="line">order_string = alipay.api_alipay_trade_page_pay(</span><br><span class="line">    out_trade_no=order_id,  <span class="comment">#订单编号</span></span><br><span class="line">    total_amount=str(total_pay),</span><br><span class="line">    subject=<span class="string">u"天天生鲜&lt;%s&gt;"</span> % order_id,</span><br><span class="line">    return_url=<span class="literal">None</span>,</span><br><span class="line">    notify_url=<span class="literal">None</span>  <span class="comment"># 可选, 不填则使用默认notify url</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># 构造用户跳转的支付链接地址</span></span><br><span class="line">pay_url = <span class="string">"https://openapi.alipaydev.com/gateway.do?"</span> + order_string</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="string">"ok"</span>, <span class="string">"pay_url"</span>:pay_url&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 配置支付路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^pay$"</span>, OrderPayView.as_view(), name=<span class="string">'pay'</span>), <span class="comment"># 订单支付</span></span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 在user_center_order.html模板中编写js，需要在去支付按钮标签中获取订单编号以及订单的状态，当状态为1表示该订单为待支付状态，此时才会向后端接口发送ajax post请求，后端返回正确响应，则引导客户到支付宝支付界面，进行支付</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;td width=<span class="string">"15%"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">order_id</span>=<span class="string">"&#123;&#123; order.order_id &#125;&#125;"</span> <span class="attr">status</span>=<span class="string">"&#123;&#123; order.order_status &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"oper_btn"</span>&gt;</span>去付款<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">'.oper_btn'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 获取页面上订单状态</span></span><br><span class="line">        status = $(<span class="keyword">this</span>).attr(<span class="string">'status'</span>)</span><br><span class="line">        <span class="keyword">if</span>(status == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">// 状态为1表示待支付状态</span></span><br><span class="line">            <span class="comment">// 获取订单id</span></span><br><span class="line">            order_id = $(<span class="keyword">this</span>).attr(<span class="string">'order_id'</span>);</span><br><span class="line">            csrf = $(<span class="string">'input[name="csrfmiddlewaretoken"]'</span>).val();</span><br><span class="line">            params = &#123;<span class="string">"order_id"</span>:order_id, <span class="string">"csrfmiddlewaretoken"</span>:csrf&#125;;</span><br><span class="line">            <span class="comment">// 向后端接口/order/pay 发送ajax post请求</span></span><br><span class="line">            $.post(<span class="string">'/order/pay'</span>, params, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(data.errno==<span class="string">"ok"</span>)&#123;</span><br><span class="line">                    <span class="comment">// 引导客户到支付界面</span></span><br><span class="line">                    <span class="built_in">window</span>.open(data.pay_url)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    alert(data.error_msg)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 测试点击去付款跳转到支付宝支付页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409204724920.gif" alt></fancybox></p><ul><li><strong>step11</strong> 支付测试利用沙箱买家账号进行支付测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190409210116748.gif" alt></fancybox></p><p>4.获取支付宝支付结果</p><ul><li><strong>step1</strong> 在项目中使用支付宝整个流程图</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410100716643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 在user_center_order.html模板中当打开支付界面后，即向/order/check后端接口发送ajax post请求，传递参数为订单号order_id，在后端接口中调用支付宝检查支付结果的接口，获取支付结果信息返回正确响应到前端模板页面中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.post(<span class="string">'/order/check'</span>, params, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 判断用户是否支付成功</span></span><br><span class="line">    <span class="keyword">if</span>(data.errno==<span class="string">"ok"</span>)&#123;</span><br><span class="line">        alert(<span class="string">"支付成功"</span>);</span><br><span class="line">        location.reload()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(data.error_msg)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在df_order/views中定义类视图post方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /order/check</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderCheckView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""查看支付宝支付结果"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断用户是否登录获取参数校验参数以及对支付宝工具初始化，跟前面写的支付宝支付视图逻辑一样</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断用户是否登录</span></span><br><span class="line">user = request.user</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> user.is_authenticated():</span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">'user:login'</span>))</span><br><span class="line"><span class="comment"># 接收参数</span></span><br><span class="line">order_id = request.POST.get(<span class="string">"order_id"</span>)</span><br><span class="line"><span class="comment"># 校验参数</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> order_id:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">1</span>, <span class="string">"error_msg"</span>: <span class="string">"参数不完整"</span>&#125;)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    order = OrderInfo.objects.get(order_id=order_id, user=user, pay_method=<span class="number">3</span>, order_status=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">except</span> OrderInfo.DoesNotExist:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="number">2</span>, <span class="string">"error_msg"</span>:<span class="string">"无效订单"</span>&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># todo: 使用支付宝python SDK工具，调用支付宝支付接口</span></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">alipay = AliPay(</span><br><span class="line">    appid=<span class="string">""</span>,  <span class="comment"># 应用id</span></span><br><span class="line">    app_notify_url=<span class="literal">None</span>,  <span class="comment"># 默认回调url</span></span><br><span class="line">    app_private_key_path=os.path.join(settings.BASE_DIR, <span class="string">'apps/df_order/app_private_key.pem'</span>),</span><br><span class="line">    <span class="comment"># 支付宝的公钥，验证支付宝回传消息使用，不是你自己的公钥,</span></span><br><span class="line">    alipay_public_key_path=os.path.join(settings.BASE_DIR, <span class="string">'apps/df_order/alipay_public_key.pem'</span>),</span><br><span class="line">    sign_type=<span class="string">"RSA2"</span>,  <span class="comment"># RSA 或者 RSA2</span></span><br><span class="line">    debug = <span class="literal">True</span>  <span class="comment"># 默认False</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 调用sdk工具中支付宝交易查询接口，根据返回的response数据中的code接口状态码以及支付状态trade_status来判断支付是否成功</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    response = alipay.api_alipay_trade_query(order_id)</span><br><span class="line">    <span class="comment"># 从支付宝返回的响应数据中获取code以及trade_status</span></span><br><span class="line">    code = response.get(<span class="string">"code"</span>)</span><br><span class="line">    trade_status = response.get(<span class="string">"trade_status"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> code == <span class="string">'10000'</span> <span class="keyword">and</span> trade_status == <span class="string">"TRADE_SUCCESS"</span>:</span><br><span class="line">        <span class="comment"># 表示成功</span></span><br><span class="line">        <span class="comment"># 获取支付宝交易号</span></span><br><span class="line">        trade_no = response.get(<span class="string">"trade_no"</span>)</span><br><span class="line">        <span class="comment"># 更新订单状态</span></span><br><span class="line">        order.trade_no = trade_no</span><br><span class="line">        order.order_status = <span class="number">4</span>  <span class="comment"># 待评价</span></span><br><span class="line">        order.save()</span><br><span class="line">        <span class="comment"># 返回正确响应</span></span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="string">"ok"</span>, <span class="string">"error_msg"</span>:<span class="string">"交易成功"</span>&#125;)</span><br><span class="line">    <span class="keyword">elif</span> code == <span class="string">'40004'</span> <span class="keyword">or</span> (code == <span class="string">'10000'</span> <span class="keyword">and</span> trade_status == <span class="string">"WAIT_BUYER_PAY"</span>):</span><br><span class="line">        <span class="comment"># 业务处理失败以及等待买家付款</span></span><br><span class="line">        <span class="keyword">import</span> time</span><br><span class="line">        time.sleep(<span class="number">5</span>)  <span class="comment"># 休眠5秒再次调用支付宝交易查询接口，重新获取状态码以及支付状态信息</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="number">4</span>, <span class="string">"error_msg"</span>:<span class="string">"交易失败"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 配置urls路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^check$"</span>, OrderCheckView.as_view(), name=<span class="string">'check'</span>), <span class="comment"># 订单支付结果</span></span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 进行订单支付，查看返回的支付结果，以及订单状态</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019041012021975.gif" alt></fancybox></p><h1 id="三丶订单评论"><a href="#三丶订单评论" class="headerlink" title="三丶订单评论"></a>三丶订单评论</h1><p>1.显示订单评价页面</p><ul><li><strong>step1</strong> 当订单支付成功后，订单状态变为待评价，但该订单却还显示去支付按钮</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410121058115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 将已经支付成功的订单对应显示出去评价按钮，在js中进行遍历判断status状态，设置对应状态对应的功能</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.oper_btn'</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取订单状态</span></span><br><span class="line">    status = $(<span class="keyword">this</span>).attr(<span class="string">'status'</span>);</span><br><span class="line">    <span class="keyword">if</span>(status == <span class="number">1</span>)&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).text(<span class="string">'去支付'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(status == <span class="number">4</span>)&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).text(<span class="string">'去评价'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(status == <span class="number">5</span>)&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).text(<span class="string">'已完成'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 刷新页面，显示正确订单状态对应的功能按钮</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410122357186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 当用户点击去评价时，在点击事件中，判断如果status状态为4，则跳转到评论地址，传递参数order_id，博主在测试时候发现location.href无法跳转，解决方法就是在下面添加return false即可</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.oper_btn'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取页面上订单状态</span></span><br><span class="line">    status = $(<span class="keyword">this</span>).attr(<span class="string">'status'</span>);</span><br><span class="line">    <span class="comment">// 获取订单id</span></span><br><span class="line">    order_id = $(<span class="keyword">this</span>).attr(<span class="string">'order_id'</span>);</span><br><span class="line">    <span class="keyword">if</span>(status == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="comment">// 状态为1表示待支付状态</span></span><br><span class="line">        csrf = $(<span class="string">'input[name="csrfmiddlewaretoken"]'</span>).val();</span><br><span class="line">        params = &#123;<span class="string">"order_id"</span>:order_id, <span class="string">"csrfmiddlewaretoken"</span>:csrf&#125;;</span><br><span class="line">        <span class="comment">// 向后端接口/order/pay 发送ajax post请求</span></span><br><span class="line">        $.post(<span class="string">'/order/pay'</span>, params, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(data.errno==<span class="string">"ok"</span>)&#123;</span><br><span class="line">                <span class="comment">// 引导客户到支付界面</span></span><br><span class="line">                <span class="built_in">window</span>.open(data.pay_url);</span><br><span class="line">                <span class="comment">// 向/order/check 发起请求查询支付宝支付结果</span></span><br><span class="line">                $.post(<span class="string">'/order/check'</span>, params, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                    <span class="comment">// 判断用户是否支付成功</span></span><br><span class="line">                    <span class="keyword">if</span>(data.errno==<span class="string">"ok"</span>)&#123;</span><br><span class="line">                        alert(<span class="string">"支付成功"</span>);</span><br><span class="line">                        location.reload()</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        alert(data.error_msg)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                alert(data.error_msg)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(status == <span class="number">4</span>)&#123;</span><br><span class="line">        <span class="comment">// 去评价</span></span><br><span class="line">        location.href = <span class="string">'/order/comment/'</span> + order_id</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在df_order/views中定义类视图get方法，显示评论页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /order/comment</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderCommentView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""订单评价"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, order_id)</span>:</span></span><br><span class="line">        <span class="string">"""显示评论页面"""</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 校验参数，参数不存在或者参数不正确则跳转到订单页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user = request.user</span><br><span class="line"><span class="comment"># 校验数据</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> order_id:</span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">'user:order'</span>))</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    order = OrderInfo.objects.get(order_id=order_id, user=user)</span><br><span class="line"><span class="keyword">except</span> OrderInfo.DoesNotExist:</span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">"user:order"</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 获取订单商品信息，遍历商品信息，获取每个商品的小计，动态给订单对象添加属性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取订单商品信息</span></span><br><span class="line">order_skus = OrderGoods.objects.filter(order_id=order_id)</span><br><span class="line"><span class="keyword">for</span> order_sku <span class="keyword">in</span> order_skus:</span><br><span class="line">    <span class="comment"># 计算商品的小计</span></span><br><span class="line">    amount = order_sku.count * order_sku.price</span><br><span class="line">    <span class="comment"># 动态给order_sku增加属性amount,保存商品小计</span></span><br><span class="line">    order_sku.amount = amount</span><br><span class="line"><span class="comment"># 动态给order增加属性order_skus, 保存订单商品信息</span></span><br><span class="line">order.order_skus = order_skus</span><br><span class="line"><span class="comment"># 渲染模板</span></span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">"order_comment.html"</span>, &#123;<span class="string">"order"</span>: order&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 在df_order/urls中配置视图url</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(r"^comment/(?P<span class="tag">&lt;<span class="name">order_id</span>&gt;</span>.+)$", OrderCommentView.as_view(), name='comment'), # 订单评价</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong>  在将user_center_order.html复制到templates目录下命名为order_comment.html，进行如下编写</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right_content clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"common_title2"</span>&gt;</span>订单评价<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"order_list_th w978 clearfix"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col01"</span>&gt;</span>&#123;&#123;order.create_time&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col02"</span>&gt;</span>订单号：&#123;&#123;order.order_id&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col02 stress"</span>&gt;</span>&#123;&#123;order.status_name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        &#123;% csrf_token %&#125;</span><br><span class="line">        &#123;# 订单id #&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"order_id"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;order.order_id&#125;&#125;"</span>&gt;</span></span><br><span class="line">        &#123;# 订单中有几个商品 #&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"total_count"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;order.order_skus|length&#125;&#125;"</span>&gt;</span></span><br><span class="line">        &#123;% for order_sku in order.order_skus %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"order_list_table w980"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"80%"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"order_goods_list clearfix"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col01"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; order_sku.sku.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col02"</span>&gt;</span>&#123;&#123;order_sku.sku.name&#125;&#125;<span class="tag">&lt;<span class="name">em</span>&gt;</span>&#123;&#123;order_sku.price&#125;&#125;/&#123;&#123;order_sku.sku.unite&#125;&#125;<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"col03"</span>&gt;</span>&#123;&#123;order_sku.count&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"20%"</span>&gt;</span>&#123;&#123;order_sku.amount&#125;&#125;元<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"site_con"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"sku_&#123;&#123;forloop.counter&#125;&#125;"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123;order_sku.sku.id&#125;&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form_group form_group2"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>评价内容：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">"site_area"</span> <span class="attr">name</span>=<span class="string">"content_&#123;&#123;forloop.counter&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"提交"</span> <span class="attr">class</span>=<span class="string">"info_submit"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 点击去评价功能按钮，测试显示订单评价页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410142002987.gif" alt></fancybox></p><p>2.处理评论内容</p><ul><li><strong>step1</strong> 在OrderCommentView类视图中定义post方法，在方法中对参数进行校验</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">user = request.user</span><br><span class="line"><span class="comment"># 校验数据</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> order_id:</span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">'user:order'</span>))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    order = OrderInfo.objects.get(order_id=order_id, user=user)</span><br><span class="line"><span class="keyword">except</span> OrderInfo.DoesNotExist:</span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">"user:order"</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取表单提交中的评论条数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">total_count = request.POST.get(<span class="string">"total_count"</span>)</span><br><span class="line">total_count = int(total_count)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 循环遍历获取订单中商品的评论内容，设置df_order_goods表中的comment字段的内容为客户填写的评论内容content</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, total_count + <span class="number">1</span>):</span><br><span class="line">    <span class="comment"># 获取评论的商品的id</span></span><br><span class="line">    sku_id = request.POST.get(<span class="string">"sku_%d"</span> % i)  <span class="comment"># sku_1 sku_2</span></span><br><span class="line">    <span class="comment"># 获取评论的商品的内容</span></span><br><span class="line">    content = request.POST.get(<span class="string">'content_%d'</span> % i, <span class="string">''</span>)  <span class="comment"># cotent_1 content_2 content_3</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        order_goods = OrderGoods.objects.get(order=order, sku_id=sku_id)</span><br><span class="line">    <span class="keyword">except</span> OrderGoods.DoesNotExist:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    order_goods.comment = content</span><br><span class="line">    order_goods.save()</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 最后设置订单状态为5也就是已完成状态，重定向到订单页面第一页</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">order.order_status = <span class="number">5</span>  <span class="comment"># 已完成</span></span><br><span class="line">order.save()</span><br><span class="line"><span class="keyword">return</span> redirect(reverse(<span class="string">"user:order"</span>, kwargs=&#123;<span class="string">"page"</span>: <span class="number">1</span>&#125;))</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 测试订单评论功能</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410143227355.gif" alt></fancybox></p><ul><li><strong>step6</strong> 查看上一步中评论的商品详情信息，刚商品的评论信息显示到了商品介绍一栏，正确来说应该在评论里面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410143600527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.显示评论信息</p><ul><li><strong>step1</strong> 在商品详情页面（detail.html）模板文件中，li标签模块商品介绍以和评论，分别添加id属性；同时在div标签中分别添加id属性，需要主要的是评论内容默认是不显示的，所以在.tab_content标签中添加style=”display: none”</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"detail_tab clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"tag_detail"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>商品介绍<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"tag_comment"</span>&gt;</span>评论<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab_content"</span> <span class="attr">id</span>=<span class="string">"tab_detail"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>商品详情：<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>&#123;&#123; sku.goods.detail |safe &#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab_content"</span> <span class="attr">id</span>=<span class="string">"tab_comment"</span> <span class="attr">style</span>=<span class="string">"display: none"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        &#123;% for comment in sku_orders_comment %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span>&gt;</span>评论时间：&#123;&#123; comment.update_time &#125;&#125;&amp;nbsp;&amp;nbsp;&#123;&#123; comment.order.user.username &#125;&#125;<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>评论内容：&#123;&#123; comment.comment |safe &#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 刷新页面后，商品介绍li模块中不再显示出评论内容</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410144851224.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 添加如下js控制商品介绍模块与评论模块点击事件显示激活与内容</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#tag_detail'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   $(<span class="string">'#tag_comment'</span>).removeClass(<span class="string">'active'</span>);</span><br><span class="line">   $(<span class="keyword">this</span>).addClass(<span class="string">'active'</span>);</span><br><span class="line">   $(<span class="string">'#tab_detail'</span>).show();</span><br><span class="line">   $(<span class="string">'#tab_comment'</span>).hide();</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">'#tag_comment'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   $(<span class="string">'#tag_detail'</span>).removeClass(<span class="string">'active'</span>);</span><br><span class="line">   $(<span class="keyword">this</span>).addClass(<span class="string">'active'</span>);</span><br><span class="line">   $(<span class="string">'#tab_detail'</span>).hide();</span><br><span class="line">   $(<span class="string">'#tab_comment'</span>).show();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 测试商品介绍与评论点击事件显示对应内容（商品详情当初在创建表数据时，没有填写，所以显示空）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410151319989.gif" alt></fancybox></p><h1 id="四丶项目部署"><a href="#四丶项目部署" class="headerlink" title="四丶项目部署"></a>四丶项目部署</h1><p>1.使用uwsgi作为项目运行的web服务器</p><p><strong>说明</strong>：在开发环境中运行项目需要在终端上执行python2 manage.py runserver命令，其中runserver就是django给我们提供的web服务器；uwsgi服务器就是遵循WSGI协议的web服务器</p><ul><li><strong>step1</strong> 安装uwsgi服务器</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410160024613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 博主将windows中的dailyfresh项目拷贝到ubuntu桌面，需要在ubuntu中配置项目配置文件settings的mysql数据库为windows中的mysql数据库，因为ubuntu中的mysql数据库表中没有任何数据，需要注意的是windows上的防火墙必须处于关闭状态 ，在windows mysql中需要创建一个用户并且该用户只能使用dailyfresh数据库，即将该用户配置到ubuntu项目settings配置文件中 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on dailyfresh.* to &quot;taogang&quot;@&quot;%&quot; identified by &quot;123456&quot;</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在ubuntu中进行远程连接windows中的mysql </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410182402506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> ubuntu中配置setting数据库连接</li></ul><p><img src="https://img-blog.csdnimg.cn/20190410182536805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step5</strong> 在ubuntu中启动项目，进入<a href="http://127.0.0.1:8000/index" target="_blank" rel="noopener">http://127.0.0.1:8000/index</a>后，成功显示出主页内容</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410182837829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 修改项目settings配置文件中的调试模式以及允许的主机访问为任何一台主机都可以进行访问</li></ul><p><img src="https://img-blog.csdnimg.cn/20190410182949756.png" alt></p><ul><li><strong>step7</strong> 在项目根目录下创建一个uwsgi.ini配置文件，编写以下内容</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[uwsgi]</span></span><br><span class="line"><span class="comment">#使用nginx连接时使用</span></span><br><span class="line"><span class="comment">#socket=127.0.0.1:8080</span></span><br><span class="line"><span class="comment">#直接做web服务器使用</span></span><br><span class="line"><span class="attr">http</span>=<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8080</span></span><br><span class="line"><span class="comment">#项目目录</span></span><br><span class="line"><span class="attr">chdir</span>=/home/taogang/Desktop/dailyfresh</span><br><span class="line"><span class="comment">#项目中wsgi.py文件的目录，相对于项目目录</span></span><br><span class="line"><span class="attr">wsgi-file</span>=dailyfresh/wsgi.py</span><br><span class="line"><span class="comment"># 工作进程数</span></span><br><span class="line"><span class="attr">processes</span>=<span class="number">4</span></span><br><span class="line"><span class="attr">threads</span>=<span class="number">2</span></span><br><span class="line"><span class="attr">master</span>=<span class="literal">True</span></span><br><span class="line"><span class="attr">pidfile</span>=uwsgi.pid</span><br><span class="line"><span class="attr">daemonize</span>=uwsgi.log</span><br><span class="line"><span class="attr">virtualenv</span>=/home/taogang/.virtualenvs/django_py2</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 启动uwsgi</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">启动:uwsgi –-ini 配置文件路径 例如:uwsgi –-ini uwsgi.ini</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 启动uwsgi后，在浏览器输入<a href="http://127.0.0.1:8080/index" target="_blank" rel="noopener">http://127.0.0.1:8080/index</a>后，显示出主页页面，但不能加载静态文件，原因是在settings中配置DEBUG=False导致的，当DEBUG=True时，django服务器会帮我们去加载静态文件，但现在使用uwsgi服务器，该服务器不会帮我们加载静态文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410192637907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 停止uwsgi</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">停止:uwsgi --stop uwsgi.pid路径 例如:uwsgi –-stop uwsgi.pid</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410193411944.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.部署架构图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410211810515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.配置nginx将用户请求转交给uwsgi </p><ul><li><strong>step1</strong> 修改项目根目录下的uwsgi.ini文件，注释掉http请求（即在浏览器输入<a href="http://127.0.0.1:8080/index" target="_blank" rel="noopener">http://127.0.0.1:8080/index</a>不能直接访问），取消socket注释，使用nginx来连接uwsgi</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line">#使用nginx连接时使用</span><br><span class="line">socket=127.0.0.1:8080</span><br><span class="line">#直接做web服务器使用</span><br><span class="line">#http=127.0.0.1:8080</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2019041020251996.png" alt></p><ul><li><strong>step2</strong> 因为没有多余的电脑当做nginx服务器来将请求转发到uwsgi服务器上，所以博主这里打算使用ubuntu中的nginx，进入nginx配置文件，首先博主将之前nginx的配置进行了备份处理，再进行如下编写</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410202352739.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 重启nginx服务以及启动uwsgi服务</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410202618241.png" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410202654612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在浏览器输入<a href="http://127.0.0.1/index" target="_blank" rel="noopener">http://127.0.0.1/index</a>，因为不输入端口号默认为80端口即也就是在nginx监听端口，在80监听端口中，配置了location / 中包含uwsgi的请求参数，并将请求转给uwsgi服务器127.0.0.1:8080也就是在项目根目录下的uwsgi.ini配置文件中配置的socket地址，uwsgi服务器调用django项目中的application接口，将页面返回给nginx服务器，最后nginx服务器将页面返回给浏览器</li><li><strong>说明</strong>：因为博主在进行项目迁移到ubuntu时，使用python manage.py runserver启动项目后，访问主页并在ubuntu redis数据库中设置了主页的缓存，所以显示了带有静态资源的主页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019041020364385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.配置nginx处理静态文件</p><ul><li><strong>step1</strong> 在ubuntu中创建static目录用户存放项目使用的静态文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410213143575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 修改static目录的权限</li></ul><p><img src="https://img-blog.csdnimg.cn/20190410213614521.png" alt></p><ul><li><strong>step3</strong> django settings.py中配置收集静态文件路径</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 配置收集静态文件路径</span><br><span class="line">STATIC_ROOT = &apos;/usr/www/dailyfresh/static&apos;</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong>  收集项目所使用的静态文件 </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py collectstatic</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410213831461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 编写nginx配置文件，指定静态文件的目录</li></ul><p><fancybox><a href="https://img-blog.csdnimg.cn/20190410213954284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" target="_blank" rel="noopener"></a></fancybox></p><ul><li><strong>step5</strong> 重启nginx服务</li></ul><p><img src="https://img-blog.csdnimg.cn/20190410214430421.png" alt></p><ul><li><strong>step6</strong> 在火狐浏览器中打开禁用缓存按钮，刷新页面成功加载静态文件资源</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410214722777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 浏览其他页面是否也能成功加载静态文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190410234437584.gif" alt></fancybox></p><p>5.通过nginx调度服务器将用户请求转发到其他地址上</p><ul><li><strong>step1</strong> 整个部署架构说明，当用户在浏览器中输入127.0.0.1也就是<a href="http://127.0.0.1:80/，因为在浏览器中默认端口为80，所以写不写无所谓，即访问了" target="_blank" rel="noopener">http://127.0.0.1:80/，因为在浏览器中默认端口为80，所以写不写无所谓，即访问了</a> / 地址，表示用户请求的是网站的静态主页面；当用户在浏览器中输入除了 / 以外的地址，比如127.0.0.1/index，即访问了 /index 地址，表示用户请求的是动态资源主页面，前面博客中写到主页面静态化时，是在虚拟机ubuntu2中使用celery异步生成主页静态页面，通过访问ubuntu2中的nginx服务器的ip+/，匹配nginx服务器中配置的location来获取指定celery异步生成的静态主页index.html文件，最终通过nginx服务器返回给浏览器，浏览器渲染到页面；而现在项目部署需要使用uwsgi服务器来运行项目，而不是用django提供的测试环境服务器，那么就需要另外一台电脑来作为动态资源服务器（ubuntu1），那么就需要使用调度服务器也就是另一台nginx服务器（ubuntu1）来根据用户请求地址的不同分为两种 / 和其他（访问其他就是除了/以外的请求，在项目中就是/index 和/static）来进行调度，用户请求的是 / 则调度器向静态页面服务器（ubuntu2）去获取静态资源数据，如果不是访问 / 则向动态资源服务器（ubuntu1）获取动态资源数据，页面中静态资源的路径为/static下的某个路径即在调度器nginx中则直接去本地/usr/www/dailyfresh/static目录中直接获取文件，需要注意的是在ubuntu1电脑中安装了nginx服务器和uwsgi服务器以及django项目，通过前面进行测试一样，通过nginx服务器来访问uwsgi服务器，然后uwsgi服务器再通过调用django项目的application接口来运行项目，无非就是多添加了一个 / 地址请求静态主页面的服务器，即需要两台ubuntu虚拟机，其中ubuntu1负责调度器以及动态资源服务器使用，而ubuntu2则只是提供静态页面，充当静态页面服务器，因为博主的电脑实在是运行不了两台虚拟机以及本机的windows，所以无法进行演示操作</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190411020130246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 通过上一步的详细说明，那么就需要在ubuntu1中配置nginx服务器（动态页面服务器+调度器）</li><li><strong>说明</strong>：location = / 唯一的当满足请求地址只能是 / 的时候，才能进行匹配转发</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190411015225713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> ubuntu2中配置nginx服务器（静态页面服务器），该配置也就是之前做主页静态化时的配置</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190411015409835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>6.nginx配置upstream实现负载均衡</p><ul><li><strong>step1</strong> 最终部署项目流程图</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019041102390316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 对于动态资源服务器（应用服务器）可以有多台，即每台都是uwsgi+django，但每台应用服务器配置连接nginx服务器（调度器）的socket端口不同，如第一台配置8080，第二天配置8081，在启动uwsgi时各自执行自己的uwsgi – ini uwsgi.ini；那么就需要在调度器（nginx）中进行如下配置，当用户请求 / 开头的任何地址即请求动态资源，则会upstream指定dailyfresh中均衡拿取地址，进行转发，比如说用户访问主页则是启动了127.0.0.1:8080此uwsgi服务器获取的资源，当用户在主页点击某个商品进行商品详情页时，则调度器（nginx）会将请求转发给127.0.0.1:8081端口的uwsgi服务器，由该服务器来获取商品详情页所需要的资源数据，这样做就能达到负载均衡</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">upstream dailyfresh&#123;</span><br><span class="line">   server 127.0.0.1:8080;</span><br><span class="line">   server 127.0.0.1:8081;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">#gzip  on;</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"> </span><br><span class="line">    #charset koi8-r;</span><br><span class="line"> </span><br><span class="line">    #access_log  logs/host.access.log  main;</span><br><span class="line"> </span><br><span class="line">    location /static &#123;</span><br><span class="line">        # 指定静态文件存放的目录</span><br><span class="line">        alias   /usr/www/dailyfresh/static;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123;</span><br><span class="line">        # 包含uwsgi的请求参数       </span><br><span class="line">        include   uwsgi_params;</span><br><span class="line">        # 转交请求给uwsgi</span><br><span class="line">        #uwsgi_pass  127.0.0.1:8080;</span><br><span class="line">        uwsgin_pass  dailyfresh;</span><br><span class="line">    location = / &#123;</span><br><span class="line">            # 转发到静态资源服务器</span><br><span class="line">            proxy_pass  http://171.213.28.217;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="五丶项目总结"><a href="#五丶项目总结" class="headerlink" title="五丶项目总结"></a>五丶项目总结</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1.  生鲜类产品  B2C  PC电脑端网页</span><br><span class="line">2.  功能模块：用户模块  商品模块（首页、 搜索、商品） 购物车模块  订单模块（下单、 支付）</span><br><span class="line">3.  用户模块：注册、登录、激活、退出、个人中心、地址</span><br><span class="line">4.  商品模块：首页、详情、列表、搜索（haystack+whoosh）</span><br><span class="line">5.  购物车： 增加、删除、修改、查询</span><br><span class="line">6.  订单模块：确认订单页面、提交订单（下单）、请求支付、查询支付结果、评论</span><br><span class="line">7.  django默认的认证系统 AbstractUser</span><br><span class="line">8.  itsdangerous  生成签名的token （序列化工具 dumps  loads）</span><br><span class="line">9.  邮件 （django提供邮件支持 配置参数  send_mail）</span><br><span class="line">10. celery (重点  整体认识 异步任务)</span><br><span class="line">11. 页面静态化 （缓解压力  celery  nginx）</span><br><span class="line">12. 缓存（缓解压力， 保存的位置、有效期、与数据库的一致性问题）</span><br><span class="line">13. FastDFS (分布式的图片存储服务， 修改了django的默认文件存储系统)</span><br><span class="line">14. 搜索（ whoosh  索引  分词）</span><br><span class="line">15. 购物车redis 哈希 历史记录redis list</span><br><span class="line">16. ajax 前端用ajax请求后端接口</span><br><span class="line">17. 事务</span><br><span class="line">18. 高并发的库存问题 （悲观锁、乐观锁）</span><br><span class="line">19. 支付的使用流程</span><br><span class="line">20. nginx （负载均衡  提供静态文件）</span><br></pre></td></tr></table></figure><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/89059800" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/89059800</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目之Web端电商网站的实战开发（五）</title>
      <link href="/2019/11/07/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%94%EF%BC%89/"/>
      <url>/2019/11/07/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶天天生鲜详情页"><span style="color:#4ea1db">一丶天天生鲜详情页</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶天天生鲜列表页"><span style="color:#4ea1db">二丶天天生鲜列表页</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶天天生鲜商品搜索"><span style="color:#4ea1db">三丶天天生鲜商品搜索</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶添加商品到购物车"><span style="color:#4ea1db">四丶添加商品到购物车</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶天天生鲜我的购物车页"><span style="color:#4ea1db">五丶天天生鲜我的购物车页</span></a></li><a id="more"></a><h1 id="一丶天天生鲜详情页"><a href="#一丶天天生鲜详情页" class="headerlink" title="一丶天天生鲜详情页"></a>一丶天天生鲜详情页</h1><p>1.显示商品详情页</p><ul><li><strong>step1</strong> 在df_goods/views中定义类视图get方法渲染详情页模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /goods/商品id</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DetailView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""详情页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, goods_id)</span>:</span></span><br><span class="line">        <span class="string">"""显示商品详情页"""</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"detail.html"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在df_goos/urls中定义详情页路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^goods/(?P&lt;goods_id&gt;\d+)$"</span>, DetailView.as_view(), name=<span class="string">"detail"</span>),  <span class="comment"># 详情页</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在浏览器直接输入</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190404113053764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.获取商品详情页信息</p><ul><li><strong>step1</strong> 根据商品goods_id,获取商品信息，如果查询不到则返回首页</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    sku = GoodsSKU.objects.get(id=goods_id)</span><br><span class="line"><span class="keyword">except</span> GoodsSKU.DoesNotExist:</span><br><span class="line">    <span class="comment"># 此goods_id的商品不存在</span></span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">"goods:index"</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong>  获取所有的商品类型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">types = GoodsType.objects.all()</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 从订单模块中根据查询到的sku对象查询出评论不为空的评论信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sku_orders_comment = OrderGoods.objects.filter(sku=sku).exclude(comment=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 根据查询到的商品sku对象获取商品信息按照创建时间进行倒序排序并且只显示最前面两个</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_skus = GoodsSKU.objects.filter(type=sku.type).order_by(<span class="string">'-create_time'</span>)[:<span class="number">2</span>]</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 获取用户购物车中商品的数目</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取用户购物车中商品的数目</span></span><br><span class="line">user = request.user  <span class="comment"># 获取user对象</span></span><br><span class="line">cart_count = <span class="number">0</span>  <span class="comment"># 默认设置为0</span></span><br><span class="line"><span class="comment"># 获取商品详情页中的购物车数目信息</span></span><br><span class="line"><span class="keyword">if</span> user.is_authenticated():  <span class="comment"># 如果返回True表示用户已登录</span></span><br><span class="line">    <span class="comment"># 用户已登录</span></span><br><span class="line">    conn = get_redis_connection(<span class="string">'default'</span>)  <span class="comment"># 获取配置中default默认redis连接对象</span></span><br><span class="line">    cart_key = <span class="string">'cart_%d'</span> % user.id  <span class="comment"># 设置key</span></span><br><span class="line">    <span class="comment"># 通过hlen方法获取购物车商品数目</span></span><br><span class="line">    cart_count = conn.hlen(cart_key)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 定义模板上下文，并返回</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义模板上下问</span></span><br><span class="line">content = &#123;<span class="string">"types"</span>:types, <span class="string">"sku"</span>:sku,</span><br><span class="line">           <span class="string">"sku_orders_comment"</span>:sku_orders_comment,</span><br><span class="line">           <span class="string">"new_skus"</span>:new_skus, <span class="string">"cart_count"</span>:cart_count&#125;</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">"detail.html"</span>, content)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 在商品详情页父模板base_detail_list.html中，获取全部分类信息</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"subnav"</span>&gt;</span></span><br><span class="line">    &#123;% for type in types %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:list' type.id 1 %&#125;"</span> <span class="attr">class</span>=<span class="string">"&#123;&#123; type.logo &#125;&#125;"</span>&gt;</span>&#123;&#123; type.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 在商品详情页detail.html模板中进行数据填坑</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"breadcrumb"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>全部分类<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>&#123;&#123; sku.type.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>商品详情<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"goods_detail_con clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"goods_detail_pic fl"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; sku.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"goods_detail_list fr"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123; sku.name &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; sku.desc &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"prize_bar"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"show_pirze"</span>&gt;</span>¥<span class="tag">&lt;<span class="name">em</span>&gt;</span>&#123;&#123; sku.price &#125;&#125;<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"show_unit"</span>&gt;</span>单  位：&#123;&#123; sku.unite &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"goods_num clearfix"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"num_name fl"</span>&gt;</span>数 量：<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"num_add fl"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"num_show fl"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"add fr"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"minus fr"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">a</span>&gt;</span>   </span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"total"</span>&gt;</span>总价：<span class="tag">&lt;<span class="name">em</span>&gt;</span>16.80元<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"operate_btn"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"buy_btn"</span>&gt;</span>立即购买<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"add_cart"</span> <span class="attr">id</span>=<span class="string">"add_cart"</span>&gt;</span>加入购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span>             </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main_wrap clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"l_wrap fl clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"new_goods"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>新品推荐<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                &#123;% for sku in new_skus %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:detail' sku.id %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; sku.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:detail' sku.id %&#125; "</span>&gt;</span>&#123;&#123; sku.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"prize"</span>&gt;</span>￥&#123;&#123; sku.price &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"r_wrap fr clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"detail_tab clearfix"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>商品介绍<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>评论<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab_content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dt</span>&gt;</span>商品详情：<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dd</span>&gt;</span>&#123;&#123; sku.goods.detail |safe &#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab_content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">                &#123;% for comment in sku_orders_comment %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">dt</span>&gt;</span>评论时间：&#123;&#123; comment.update_time &#125;&#125;&amp;nbsp;&amp;nbsp;&#123;&#123; comment.order.user.username &#125;&#125;<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dd</span>&gt;</span>评论内容：&#123;&#123; comment.comment |safe &#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 在首页index.html中对商品详情链接地址进行数据填坑</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center_con clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"subnav fl"</span>&gt;</span></span><br><span class="line">        &#123;% for type in types %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#model0&#123;&#123; forloop.counter &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"&#123;&#123; type.logo &#125;&#125;"</span>&gt;</span>&#123;&#123; type.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide fl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"slide_pics"</span>&gt;</span></span><br><span class="line">            &#123;% for banner in goods_banners %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:detail' banner.sku.id %&#125;"</span> &gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; banner.image.url &#125;&#125;"</span> <span class="attr">alt</span>=<span class="string">"幻灯片"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>/li&gt;</span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"prev"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"next"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"points"</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"adv fl"</span>&gt;</span></span><br><span class="line">        &#123;% for banner in promotion_banners %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; banner.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; banner.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% for type in types %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list_model"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list_title clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"fl"</span> <span class="attr">id</span>=<span class="string">"model&#123;&#123; forloop.counter &#125;&#125;"</span>&gt;</span>&#123;&#123; type.name &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"subtitle fl"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            &#123;% for banner in type.title_banners %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:detail' banner.sku.id %&#125;"</span>&gt;</span>&#123;&#123; banner.sku.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"goods_more fr"</span> <span class="attr">id</span>=<span class="string">"fruit_more"</span>&gt;</span>查看更多 &gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"goods_con clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"goods_banner fl"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; type.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"goods_list fl"</span>&gt;</span></span><br><span class="line">            &#123;% for banner in type.image_banners %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:detail' banner.sku.id %&#125;"</span>&gt;</span>&#123;&#123; banner.sku.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:detail' banner.sku.id %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; banner.sku.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"prize"</span>&gt;</span>¥ &#123;&#123; banner.sku.price &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190404135745795.gif" alt></fancybox></p><p>3.添加历史浏览记录</p><ul><li><strong>step1</strong> 当用户点击某个商品，进入商品商品详情页面时，将该商品id保存到redis数据库中，在用户中心页面个人信息页面进行显示</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加用户中心历史浏览记录</span></span><br><span class="line">history_key = <span class="string">"history_%d"</span>% user.id</span><br><span class="line"><span class="comment"># 当用户进入该goods_id的商品详情页时，则将之前redis数据中的的此goods_id的商品移除</span></span><br><span class="line">conn.lrem(history_key, <span class="number">0</span>, goods_id)</span><br><span class="line"><span class="comment"># 将此goods_id的商品排到浏览记录列表的左侧</span></span><br><span class="line">conn.lpush(history_key, goods_id)</span><br><span class="line"><span class="comment"># 最多只保存5条浏览记录</span></span><br><span class="line">conn.ltrim(history_key, <span class="number">0</span> ,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 测试用户历史浏览记录</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190404144215585.gif" alt></fancybox></p><ul><li><strong>step3</strong> 查看redis数据库以及mysql数据库</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190404145424206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.在商品详情页添加其他规格的商品</p><ul><li><strong>step1</strong> 在DetailView类视图get方法中进行获取，获取同一个spu的其他规格的商品,不显示当前的商品</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">same_spu_skus = GoodsSKU.objects.filter(goods=sku.goods).exclude(id=goods_id)</span><br><span class="line"> </span><br><span class="line">content = &#123;<span class="string">"types"</span>:types, <span class="string">"sku"</span>:sku,</span><br><span class="line">           <span class="string">"sku_orders_comment"</span>:sku_orders_comment,</span><br><span class="line">           <span class="string">"same_spu_skus"</span>:same_spu_skus,</span><br><span class="line">           <span class="string">"new_skus"</span>:new_skus, <span class="string">"cart_count"</span>:cart_count&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在detail.html模板中添加其他规格的标签，并进行数据填坑</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>其他规格:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        &#123;% for sku in same_spu_skus %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:detail' sku.id %&#125;"</span>&gt;</span>&#123;&#123; sku.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 测试显示不同规格的商品</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190404153025493.gif" alt></fancybox></p><p>5.添加详情计算商品总价js代码 </p><ul><li><strong>step1</strong> 获取商品总价</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取商品总价</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_goods_amount</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    price = $(<span class="string">'.show_pirze'</span>).children(<span class="string">'em'</span>).text(); <span class="comment">//商品单价</span></span><br><span class="line">    count = $(<span class="string">'.num_show'</span>).val();  <span class="comment">//商品数量</span></span><br><span class="line">    <span class="comment">// 计算商品总价</span></span><br><span class="line">    price = <span class="built_in">parseFloat</span>(price);</span><br><span class="line">    count = <span class="built_in">parseInt</span>(count);</span><br><span class="line">    amount = price*count;</span><br><span class="line">    <span class="comment">// 显示总价价格</span></span><br><span class="line">    $(<span class="string">'.total'</span>).children(<span class="string">'em'</span>).text(amount.toFixed(<span class="number">2</span>)+<span class="string">'元'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 添加商品数量</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 增加商品数量</span></span><br><span class="line">$(<span class="string">'.add'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="comment">// 获取商品原有的数量并加1</span></span><br><span class="line">   count = $(<span class="string">'.num_show'</span>).val();</span><br><span class="line">   count = <span class="built_in">parseInt</span>(count)+<span class="number">1</span>;</span><br><span class="line">   <span class="comment">// 重新显示商品数量</span></span><br><span class="line">   $(<span class="string">'.num_show'</span>).val(count);</span><br><span class="line">   <span class="comment">// 更新商品总价</span></span><br><span class="line">   get_goods_amount();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 减少商品数量</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.minus'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="comment">// 获取商品原有的数量并减1</span></span><br><span class="line">   count = $(<span class="string">'.num_show'</span>).val();</span><br><span class="line">   count = <span class="built_in">parseInt</span>(count)<span class="number">-1</span>;</span><br><span class="line">   <span class="keyword">if</span>(count&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">       count=<span class="number">1</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 重新显示商品数量</span></span><br><span class="line">   $(<span class="string">'.num_show'</span>).val(count);</span><br><span class="line">   <span class="comment">// 更新商品总价</span></span><br><span class="line">   get_goods_amount();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 手动输入商品数量</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 手动输入商品数量</span></span><br><span class="line">$(<span class="string">'.num_show'</span>).blur(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="comment">// 获取输入的商品数量</span></span><br><span class="line">   count = $(<span class="keyword">this</span>).val();</span><br><span class="line">   <span class="comment">// 校验用户输入的商品数量是否合法</span></span><br><span class="line">   <span class="keyword">if</span>(<span class="built_in">isNaN</span>(count) || count.trim().length==<span class="number">0</span> || <span class="built_in">parseInt</span>(count) &lt;=<span class="number">0</span>)&#123;</span><br><span class="line">       count=<span class="number">1</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 设置用户输入的商品数目</span></span><br><span class="line">   $(<span class="keyword">this</span>).val(<span class="built_in">parseInt</span>(count));</span><br><span class="line">   <span class="comment">// 更新商品总价</span></span><br><span class="line">   get_goods_amount()</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 效果演示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190405141528572.gif" alt></fancybox></p><h1 id="二丶天天生鲜列表页"><a href="#二丶天天生鲜列表页" class="headerlink" title="二丶天天生鲜列表页"></a>二丶天天生鲜列表页</h1><p>1.显示商品列表页</p><ul><li><strong>step1</strong> 在df_goods/views中定义类视图get方法，显示列表页</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /list/商品种类id/页码?sort=排序方式</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""商品列表页"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, type_id, page)</span>:</span></span><br><span class="line">        <span class="string">"""显示商品列表页"""</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"list.html"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在df_goods/urls中定义url路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^list/(?P&lt;type_id&gt;\d+)/(?P&lt;page&gt;\d+)$"</span>, ListView.as_view(), name=<span class="string">"list"</span>), <span class="comment"># 列表页</span></span><br></pre></td></tr></table></figure><p>2.获取商品列表页内容</p><ul><li><strong>step1</strong> 获取商品种类信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取商品种类信息</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    type = GoodsType.objects.get(id=type_id)</span><br><span class="line"><span class="keyword">except</span> GoodsType.DoesNotExist:</span><br><span class="line">    <span class="string">"""商品种类不存在返回主页"""</span></span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">"goods:index"</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取全部商品分类信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">types = GoodsType.objects.all()</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取排序的方式 sort=default 默认id排序 price 价格排序 hot 商品销量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sort = request.GET.get(<span class="string">"sort"</span>)</span><br><span class="line"><span class="keyword">if</span> sort == <span class="string">"price"</span>:</span><br><span class="line">    skus = GoodsSKU.objects.filter(type=type).order_by(<span class="string">"price"</span>)</span><br><span class="line"><span class="keyword">elif</span> sort == <span class="string">"hot"</span>:</span><br><span class="line">    skus = GoodsSKU.objects.filter(type=type).order_by(<span class="string">"-sales"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 其他的通通按照默认排序</span></span><br><span class="line">    sort = <span class="string">"default"</span></span><br><span class="line">    skus = GoodsSKU.objects.filter(type=type).order_by(<span class="string">"-id"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 对数据进行分页</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">paginator = Paginator(skus, <span class="number">5</span>)  <span class="comment"># Show 25 contacts per page</span></span><br><span class="line"><span class="comment"># 获取页数</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    page = int(page)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    page = <span class="number">1</span></span><br><span class="line"><span class="comment"># 判断用户传递过来的页数，是否小于总页数，大于总页数则设置第一页</span></span><br><span class="line"><span class="keyword">if</span> page &gt; paginator.num_pages:</span><br><span class="line">    page = <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">skus_page = paginator.page(page)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 获取新品推荐信息，根据查询到的商品sku对象获取商品信息按照创建时间进行倒序排序并且只显示最前面两个</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_skus = GoodsSKU.objects.filter(type=type).order_by(<span class="string">'-create_time'</span>)[:<span class="number">2</span>]</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 获取用户购物车中商品的数目</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user = request.user  <span class="comment"># 获取user对象</span></span><br><span class="line">cart_count = <span class="number">0</span>  <span class="comment"># 默认设置为0</span></span><br><span class="line"><span class="keyword">if</span> user.is_authenticated():  <span class="comment"># 如果返回True表示用户已登录</span></span><br><span class="line">    <span class="comment"># 用户已登录</span></span><br><span class="line">    conn = get_redis_connection(<span class="string">'default'</span>)  <span class="comment"># 获取配置中default默认redis连接对象</span></span><br><span class="line">    cart_key = <span class="string">'cart_%d'</span> % user.id  <span class="comment"># 设置key</span></span><br><span class="line">    <span class="comment"># 通过hlen方法获取购物车商品数目</span></span><br><span class="line">    cart_count = conn.hlen(cart_key)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 定义模板上下文，并返回</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">context = &#123;</span><br><span class="line">    <span class="string">"type"</span>:type,<span class="string">"types"</span>:types,</span><br><span class="line">    <span class="string">"skus_page"</span>:skus_page,<span class="string">"new_skus"</span>:new_skus,</span><br><span class="line">    <span class="string">"cart_count"</span>:cart_count,<span class="string">"sort"</span>:sort</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">"list.html"</span>, context)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 在list.html模板文件中进行数据填坑</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"breadcrumb"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>全部分类<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>&#123;&#123; type.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main_wrap clearfix"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"l_wrap fl clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"new_goods"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>新品推荐<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                &#123;% for sku in new_skus %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:detail' sku.id %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; sku.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:detail' sku.id %&#125;"</span>&gt;</span>&#123;&#123; sku.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"prize"</span>&gt;</span>￥&#123;&#123; sku.price &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"r_wrap fr clearfix"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sort_bar"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:list' type.id 1 %&#125;"</span> &#123;% <span class="attr">if</span> <span class="attr">sort</span> == <span class="string">"default"</span> %&#125;<span class="attr">class</span>=<span class="string">"active"</span>&#123;% <span class="attr">endif</span> %&#125;&gt;</span>默认<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:list' type.id 1 %&#125;?sort=price"</span> &#123;% <span class="attr">if</span> <span class="attr">sort</span> == <span class="string">"price"</span> %&#125;<span class="attr">class</span>=<span class="string">"active"</span>&#123;% <span class="attr">endif</span> %&#125;&gt;</span>价格<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:list' type.id 1 %&#125;?sort=hot"</span> &#123;% <span class="attr">if</span> <span class="attr">sort</span> == <span class="string">"hot"</span> %&#125;<span class="attr">class</span>=<span class="string">"active"</span>&#123;% <span class="attr">endif</span> %&#125;&gt;</span>人气<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"goods_type_list clearfix"</span>&gt;</span></span><br><span class="line">            &#123;% for sku in skus_page %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:detail' sku.id %&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; sku.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:detail' sku.id %&#125;"</span>&gt;</span>&#123;&#123; sku.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"operate"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"prize"</span>&gt;</span>￥&#123;&#123; sku.price &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"unit"</span>&gt;</span>&#123;&#123; sku.price &#125;&#125;/&#123;&#123; sku.unite &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"add_goods"</span> <span class="attr">title</span>=<span class="string">"加入购物车"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pagenation"</span>&gt;</span></span><br><span class="line">            &#123;% if skus_page.has_previous %&#125;</span><br><span class="line">            &lt;a href="&#123;% url 'goods:list' type.id skus_page.previous_page_number %&#125;?sort=&#123;&#123; sort &#125;&#125;"&gt;&lt;上一页&lt;/a&gt;</span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">            &#123;% for pindex in skus_page.paginator.page_range %&#125;</span><br><span class="line">                &#123;% if pindex == skus_page.number %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:list' type.id pindex %&#125;?sort=&#123;&#123; sort &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>&#123;&#123; pindex &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &#123;% else %&#125;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:list' type.id pindex %&#125;?sort=&#123;&#123; sort &#125;&#125;"</span>&gt;</span>&#123;&#123; pindex &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &#123;% endif %&#125;</span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">            &#123;% if skus_page.has_next %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:list' type.id skus_page.next_page_number %&#125;?sort=&#123;&#123; sort &#125;&#125;"</span>&gt;</span>下一页&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 测试列表页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190404181005650.gif" alt></fancybox></p><p>3.列表页分页页码控制（只显示5个页数）</p><ul><li><strong>step1</strong> 当总页数小于5页时，页面上显示所有页码（1~5页都显示），当总页数大于5页时，那么判断当前页如果是前3页，显示1-5页，如果当前页是后3页，显示总页数最后5页；如果当前页不是第3页时，即显示当前页的前2页 当前页  当前页最后2页 </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">num_pages = paginator.num_pages</span><br><span class="line"><span class="keyword">if</span> num_pages &lt; <span class="number">5</span>:</span><br><span class="line">    pages = range(<span class="number">1</span>, num_pages + <span class="number">1</span>)</span><br><span class="line"><span class="keyword">elif</span> page &lt;= <span class="number">3</span>:</span><br><span class="line">    pages = range(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line"><span class="keyword">elif</span> num_pages - page &lt;= <span class="number">2</span>:</span><br><span class="line">    pages = range(num_pages - <span class="number">4</span>, num_pages + <span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    pages = range(page - <span class="number">2</span>, page + <span class="number">3</span>)</span><br><span class="line">context = &#123;</span><br><span class="line">    <span class="string">"type"</span>:type,<span class="string">"types"</span>:types,</span><br><span class="line">    <span class="string">"skus_page"</span>:skus_page,<span class="string">"new_skus"</span>:new_skus,</span><br><span class="line">    <span class="string">"cart_count"</span>:cart_count,<span class="string">"sort"</span>:sort,</span><br><span class="line">    <span class="string">"pages"</span>:pages</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 替换list.html模板文件中的{% for pindex in skus_page.paginator.page_range %}为pages即可</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for pindex in pages %&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 为了演示分页页码显示效果，博主设置每页显示商品2个，因为博主添加的商品不足够多</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190404185058678.gif" alt></fancybox></p><ul><li><strong>step4</strong> 修改主页中的查看更多链接地址 ,跳转到丢应商品种类的列表页，sort不传表示默认排序方式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'goods:list' type.id 1 %&#125;"</span> <span class="attr">class</span>=<span class="string">"goods_more fr"</span> <span class="attr">id</span>=<span class="string">"fruit_more"</span>&gt;</span>查看更多 &gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 效果显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190405143410686.gif" alt></fancybox></p><h1 id="三丶天天生鲜商品搜索"><a href="#三丶天天生鲜商品搜索" class="headerlink" title="三丶天天生鲜商品搜索"></a>三丶天天生鲜商品搜索</h1><p>1.全文检索框架以及搜索引擎安装配置</p><p>全文检索不同于特定字段的模糊查询，使用全文检索的效率更高，并且能够对于中文进行分词处理。</p><p><strong>haystack</strong>：全文检索的框架，支持whoosh、solr、Xapian、Elasticsearc四种全文检索引擎，点击查看官方网站。</p><p><strong>whoosh</strong>：纯Python编写的全文搜索引擎，虽然性能比不上sphinx、xapian、Elasticsearc等，但是无二进制包，程序不会莫名其妙的崩溃，对于小型的站点，whoosh已经足够使用，点击查看whoosh文档。</p><p><strong>jieba</strong>：一款免费的中文分词包，如果觉得不好用可以使用一些收费产品。</p><ul><li><strong>step1</strong> 使用haystack全文检索的框架，配合whoosh搜索引擎进行数据搜索，安装django-haystack以及whoosh</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install django-haystack</span><br><span class="line">pip install whoosh</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在settings中添加haystack应用以及配置haystack框架</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全文检索haystack框架配置</span></span><br><span class="line">HAYSTACK_CONNECTIONS = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="comment"># 使用whoosh引擎</span></span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'haystack.backends.whoosh_backend.WhooshEngine'</span>,</span><br><span class="line">        <span class="comment"># 索引文件路径</span></span><br><span class="line">        <span class="string">'PATH'</span>: os.path.join(BASE_DIR, <span class="string">'whoosh_index'</span>),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 当数据库表 添加、修改、删除数据时，自动生成索引</span></span><br><span class="line">HAYSTACK_SIGNAL_PROCESSOR = <span class="string">'haystack.signals.RealtimeSignalProcessor'</span></span><br></pre></td></tr></table></figure><p>2.创建引擎及索引</p><ul><li><strong>step1</strong> 在网站搜索框中搜索商品是对df_goods_sku表数据的搜索，即在df_goods模块下创建search_indexes.py文件，并在此文件中创建引擎和索引（固定写法和用法）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> haystack <span class="keyword">import</span> indexes</span><br><span class="line"><span class="keyword">from</span> df_goods.models <span class="keyword">import</span> GoodsSKU  <span class="comment"># 指定对于某个类的某些数据建立索引</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsSKUIndex</span><span class="params">(indexes.SearchIndex, indexes.Indexable)</span>:</span></span><br><span class="line">    text = indexes.CharField(document=<span class="literal">True</span>, use_template=<span class="literal">True</span>)  <span class="comment"># 索引字段</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 获取模型类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_model</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 返回模型类</span></span><br><span class="line">        <span class="keyword">return</span> GoodsSKU</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 建立索引数据</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">index_queryset</span><span class="params">(self, using=None)</span>:</span></span><br><span class="line">        <span class="comment"># 返回该模型的所有数据</span></span><br><span class="line">        <span class="keyword">return</span> self.get_model().objects.all()</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在templates模板目录下创建search/indexes/df_goods/goodssku_text.txt文件（search/indexes/模块名/模型类_text.txt固定写法），并在goodssku_text.txt文件中，指定哪些表字段用于创建索引</li></ul><p><img src="https://img-blog.csdnimg.cn/20190405104751545.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 指定数据库表中哪些字段来建立索引</span><br><span class="line">&#123;&#123;object.name&#125;&#125;  # 商品名称</span><br><span class="line">&#123;&#123;object.desc&#125;&#125;  # 商品简介</span><br><span class="line">&#123;&#123;object.goods.detail&#125;&#125;  # 商品详情</span><br></pre></td></tr></table></figure><p>3.生成索引文件</p><ul><li><strong>step1</strong> 执行命令python2 manage.py rebuild_index，生成指定模型类df_goods_sku索引文件，生成成功显示出商品的个数</li></ul><p><img src="https://img-blog.csdnimg.cn/20190405105019838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step2</strong> 查看数据库中df_goods_sku表有多少个商品</li></ul><p><img src="https://img-blog.csdnimg.cn/20190405105304600.png" alt></p><ul><li><strong>step3</strong> 在settings配置中索引文件的路径为’PATH’: os.path.join(BASE_DIR, ‘whoosh_index’)，也就是项目目录下的whoosh_index目录，此时查看项目目录下已经成功创建该目录，并在该目录下生成了df_goods_sku表的索引文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20190405105632972.png" alt></p><p>4.全文检索的使用</p><ul><li><strong>step1</strong> 在base.html模板文件中找到搜索框，进行如下编写，需要注意的是表单提交的方法为get以及text input输入框的name必须为q，这两个为固定的</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">action</span>=<span class="string">"/search"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"input_text fl"</span> <span class="attr">name</span>=<span class="string">"q"</span> <span class="attr">placeholder</span>=<span class="string">"搜索商品"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"input_btn fr"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"搜索"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在根基urls文件中，配置全文检索框架</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^search'</span>, include(<span class="string">'haystack.urls'</span>)),  <span class="comment"># 全文检索框架</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 启动项目，在主页搜索框中搜索商品信息，点击搜索提交按钮后，结果提示如下错误，在templates/search目录下找不到search.html文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019040511391874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在templates/search目录下创建search.html文件，将list.html模板中的内容拷贝到该文件中，进行修改显示出搜索结果列表页，haystack会把搜索出的结果传递给该路径下的search.html模板</li></ul><p><strong>query</strong>：<font style="color:red">搜索关键字</font></p><p><strong>page</strong>：<font style="color:red">当前页的page对象 –&gt;遍历page对象，获取到的是</font><font style="color:green">SearchResult</font><font style="color:red">类的实例对象，对象的属性<font style="color:green">object</font>才是模型类的对象</font></p><p><strong>paginator</strong>：<font style="color:red">分页paginator对象</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends &apos;base_detail_list.html&apos; %&#125;</span><br><span class="line">&#123;% block title %&#125;天天生鲜-搜索结果列表&#123;% endblock title %&#125;</span><br><span class="line">&#123;% block main_content %&#125;</span><br><span class="line">&lt;div class=&quot;breadcrumb&quot;&gt;</span><br><span class="line">&lt;a href=&quot;#&quot;&gt;&#123;&#123; query &#125;&#125;&lt;/a&gt;</span><br><span class="line">&lt;span&gt;&gt;&lt;/span&gt;</span><br><span class="line">&lt;a href=&quot;#&quot;&gt;搜索结果如下:&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div class=&quot;main_wrap clearfix&quot;&gt;</span><br><span class="line">        &lt;ul class=&quot;goods_type_list clearfix&quot;&gt;</span><br><span class="line">            &#123;% for item in page %&#125;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">                &lt;a href=&quot;&#123;% url &apos;goods:detail&apos; item.object.id %&#125;&quot;&gt;&lt;img src=&quot;&#123;&#123; item.object.image.url &#125;&#125;&quot;&gt;&lt;/a&gt;</span><br><span class="line">                &lt;h4&gt;&lt;a href=&quot;&#123;% url &apos;goods:detail&apos; item.object.id %&#125;&quot;&gt;&#123;&#123; item.object.name &#125;&#125;&lt;/a&gt;&lt;/h4&gt;</span><br><span class="line">                &lt;div class=&quot;operate&quot;&gt;</span><br><span class="line">                    &lt;span class=&quot;prize&quot;&gt;￥&#123;&#123; item.object.price &#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;span class=&quot;unit&quot;&gt;&#123;&#123; item.object.price &#125;&#125;/&#123;&#123; item.object.unite &#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;a href=&quot;#&quot; class=&quot;add_goods&quot; title=&quot;加入购物车&quot;&gt;&lt;/a&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;div class=&quot;pagenation&quot;&gt;</span><br><span class="line">            &#123;% if page.has_previous %&#125;</span><br><span class="line">            &lt;a href=&quot;/search?q=&#123;&#123; query &#125;&#125;&amp;page=&#123;&#123; page.previous_page_number &#125;&#125;&quot;&gt;&lt;上一页&lt;/a&gt;</span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">            &#123;% for pindex in paginator.page_range %&#125;</span><br><span class="line">                &#123;% if pindex == page.number %&#125;</span><br><span class="line">                    &lt;a href=&quot;/search?q=&#123;&#123; query &#125;&#125;&amp;page=&#123;&#123; pindex &#125;&#125;&quot; class=&quot;active&quot;&gt;&#123;&#123; pindex &#125;&#125;&lt;/a&gt;</span><br><span class="line">                &#123;% else %&#125;</span><br><span class="line">                    &lt;a href=&quot;/search?q=&#123;&#123; query &#125;&#125;&amp;page=&#123;&#123; pindex &#125;&#125;&quot;&gt;&#123;&#123; pindex &#125;&#125;&lt;/a&gt;</span><br><span class="line">                &#123;% endif %&#125;</span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">            &#123;% if page.has_next %&#125;</span><br><span class="line">            &lt;a href=&quot;/search?q=&#123;&#123; query &#125;&#125;&amp;page=&#123;&#123; page.next_page_number &#125;&#125;&quot;&gt;下一页&gt;&lt;/a&gt;</span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;% endblock main_content %&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 回到主页在搜索框中搜索草莓，显示出搜索的结果</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190405115411470.gif" alt></fancybox></p><ul><li><strong>step6</strong> 在数据库进行模糊查询后，得值使用haystack框架加载whoosh检索出来的内容，只能呵呵了</li></ul><p><img src="https://img-blog.csdnimg.cn/20190405115955986.png" alt></p><p>5.使用中文分词包，更爱whoosh默认分词方式</p><ul><li><strong>step1</strong> 安装jieba分词包</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install jieba</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在D:\Python27\Lib\site-packages\haystack\backends你的python项目环境安装包中找到此路径，在该路径下创建ChineseAnalyzer.py文件，文件内容如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">from</span> whoosh.analysis <span class="keyword">import</span> Tokenizer, Token</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChineseTokenizer</span><span class="params">(Tokenizer)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self, value, positions=False, chars=False,</span></span></span><br><span class="line"><span class="function"><span class="params">                 keeporiginal=False, removestops=True,</span></span></span><br><span class="line"><span class="function"><span class="params">                 start_pos=<span class="number">0</span>, start_char=<span class="number">0</span>, mode=<span class="string">''</span>, **kwargs)</span>:</span></span><br><span class="line">        t = Token(positions, chars, removestops=removestops, mode=mode, **kwargs)</span><br><span class="line">        seglist = jieba.cut(value, cut_all=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> seglist:</span><br><span class="line">            t.original = t.text = w</span><br><span class="line">            t.boost = <span class="number">1.0</span></span><br><span class="line">            <span class="keyword">if</span> positions:</span><br><span class="line">                t.pos = start_pos + value.find(w)</span><br><span class="line">            <span class="keyword">if</span> chars:</span><br><span class="line">                t.startchar = start_char + value.find(w)</span><br><span class="line">                t.endchar = start_char + value.find(w) + len(w)</span><br><span class="line">            <span class="keyword">yield</span> t</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ChineseAnalyzer</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> ChineseTokenizer()</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 复制whoosh_backend.py文件，改为whoosh_cn_backend.py，编辑该文件，导入from .ChineseAnalyzer import ChineseAnalyzer类，将代码中的analyzer=StemmingAnalyzer()修改为analyzer=ChineseAnalyzer()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .ChineseAnalyzer <span class="keyword">import</span> ChineseAnalyzer</span><br><span class="line">analyzer=ChineseAnalyzer()</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 修改settings中haystack配置，将.whoosh_backend改为.whoosh_cn_backend</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ENGINE&apos;: &apos;haystack.backends.whoosh_cn_backend.WhooshEngine&apos;,</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 重新生成新的索引文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190405124927665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 测试搜索草莓是否显示出所有草莓相关的商品信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190405125945509.gif" alt></fancybox></p><ul><li><strong>step7</strong> 测试搜索商品简介以及商品详情介绍关键字</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190405130000958.gif" alt></fancybox></p><h1 id="四丶添加商品到购物车"><a href="#四丶添加商品到购物车" class="headerlink" title="四丶添加商品到购物车"></a>四丶添加商品到购物车</h1><p>1.分析如何添加购物车数目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.使用什么方式想后端传递参数</span><br><span class="line">使用ajax post方式向后端传递参数</span><br><span class="line">2.传递哪些参数</span><br><span class="line">商品id和商品的数量</span><br></pre></td></tr></table></figure><p>2.添加购物车后台逻辑</p><ul><li><strong>step1</strong> 在df_cart/views中定义类视图，并在该视图下定义post方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CartAddView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""购物车添加"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="string">"""添加购物车数目"""</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 判断用户是否登录，没有登录则无法添加购物车</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user = request.user</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> user.is_authenticated():</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="number">0</span>, <span class="string">"error_msg"</span>:<span class="string">"请先登录"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sku_id = request.POST.get(<span class="string">"sku_id"</span>)</span><br><span class="line">count = request.POST.get(<span class="string">"count"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 校验参数完整性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([sku_id, count]):</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="number">1</span>, <span class="string">"error_msg"</span>:<span class="string">"参数不完整"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 校验商品数量count是否合法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    count = int(count)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="number">2</span>, <span class="string">"error_msg"</span>:<span class="string">"商品数量不合法"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 校验商品是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    sku = GoodsSKU.objects.get(id=sku_id)</span><br><span class="line"><span class="keyword">except</span> GoodsSKU.DoesNotExist:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="number">3</span>, <span class="string">"error_msg"</span>:<span class="string">"商品不存在"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 如果用户购物车存在将要添加的商品id，则添加商品的数量即可，如果没有，则添加商品id以及数量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">conn = get_redis_connection(<span class="string">"default"</span>)</span><br><span class="line">cart_key = <span class="string">"cart_%d"</span> % user.id</span><br><span class="line">cart_count = conn.hget(cart_key, sku_id)</span><br><span class="line"><span class="keyword">if</span> cart_count:</span><br><span class="line">    <span class="comment"># 在redis中查询到该sku_id键存在，则添加该键的商品数量</span></span><br><span class="line">    count += int(cart_count)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 判断该商品库存是否大于用户添加商品的数量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> count &gt; sku.stock:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="number">4</span>, <span class="string">"error_msg"</span>:<span class="string">"商品库存不足"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 添加商品数目，没有查到则设置新的sku_id以及商品数量，hset方法有数据则更新，无则新增</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn.hset(cart_key, sku_id, count)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 计算用户购物车商品的总数目，最后返回添加成功响应</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">total_count = conn.hlen(cart_key)</span><br><span class="line"><span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>:<span class="string">"ok"</span>,<span class="string">"total_count"</span>:total_count, <span class="string">"error_msg"</span>:<span class="string">"添加成功"</span>&#125;)</span><br></pre></td></tr></table></figure><p>3.添加购物车前端js</p><ul><li><strong>step1</strong> 获取元素坐标</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> $add_x = $(<span class="string">'#add_cart'</span>).offset().top;</span><br><span class="line"><span class="keyword">var</span> $add_y = $(<span class="string">'#add_cart'</span>).offset().left;</span><br><span class="line"><span class="keyword">var</span> $to_x = $(<span class="string">'#show_count'</span>).offset().top;</span><br><span class="line"><span class="keyword">var</span> $to_y = $(<span class="string">'#show_count'</span>).offset().left;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 定义点击购物车事件，获取商品sku_id以及商品数量，通过ajax post请求方式向后端cart接口发送请求并传递sku_id以及商品数量，后台进行逻辑判断向前端返回字典数据，通过后台返回的data数据进行页面购物车显示控制</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#add_cart'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 获取商品id和商品数量</span></span><br><span class="line">        sku_id = $(<span class="keyword">this</span>).attr(<span class="string">'sku_id'</span>);</span><br><span class="line">        count = $(<span class="string">'.num_show'</span>).val();</span><br><span class="line">        csrf = $(<span class="string">'input[name="csrfmiddlewaretoken"]'</span>).val();</span><br><span class="line">        &#123;#alert(sku_id+':'+count);#&#125;</span><br><span class="line">        <span class="comment">// 发起ajax post请求 访问/cart/add ,参数 sku_id和count</span></span><br><span class="line">        params = &#123;<span class="string">"sku_id"</span>:sku_id, <span class="string">"count"</span>:count, <span class="string">"csrfmiddlewaretoken"</span>:csrf&#125;;</span><br><span class="line">        $.post(<span class="string">'/cart/add'</span>, params, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(data.errno==<span class="string">"ok"</span>)&#123;</span><br><span class="line">                $(<span class="string">".add_jump"</span>).css(&#123;<span class="string">'left'</span>:$add_y+<span class="number">80</span>,<span class="string">'top'</span>:$add_x+<span class="number">10</span>,<span class="string">'display'</span>:<span class="string">'block'</span>&#125;);</span><br><span class="line">                $(<span class="string">".add_jump"</span>).stop().animate(&#123;</span><br><span class="line">                    <span class="string">'left'</span>: $to_y+<span class="number">7</span>,</span><br><span class="line">                    <span class="string">'top'</span>: $to_x+<span class="number">7</span>&#125;,</span><br><span class="line">                    <span class="string">"fast"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                        $(<span class="string">".add_jump"</span>).fadeOut(<span class="string">'fast'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                            $(<span class="string">'#show_count'</span>).html(data.total_count);</span><br><span class="line">                        &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                alert(data.error_msg)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 需要注意的是在上一步中通过ajax post方式向后台发送请求，是需要进行csrf验证的，不然则会报错；在detail.html模板文件中任意一位置加上{% csrf_token %}即可，并且在ajax中发送请求传递参数是获取input[name=”csrfmiddlewaretoken”]的值来向后端传递，在页面源代码中对应html文件中的{% csrf_token %}位置会出现如下标签元素</li></ul><p><img src="https://img-blog.csdnimg.cn/20190405182531497.png" alt></p><p>4.测试</p><p>说明：为了方便测试，博主先把redis数据库中保存的购物车删除</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190405191115363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step1</strong> 对同一个商品进行多次添加，右上方购物车显示数目不变</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190405191929691.gif" alt></fancybox></p><ul><li><strong>step2</strong> 对不同的商品进行多次添加，右上方购物车显示数目变化</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190405191949272.gif" alt></fancybox></p><ul><li><strong>step3</strong> 查看redis库数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190405192209551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶天天生鲜我的购物车页"><a href="#五丶天天生鲜我的购物车页" class="headerlink" title="五丶天天生鲜我的购物车页"></a>五丶天天生鲜我的购物车页</h1><p>1.购物车页面显示</p><ul><li><strong>step1</strong> 在df_cart/views中定义类视图继承于封装的login_required方法的类，因为该页面是需要用户登录才能访问的，而在添加购物车数目的时候使用ajax方式发送请求，所以不用继承，在post方法中进行登录验证即可；并在类中定义get方法，显示我的购物车页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /cart</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CartInfoView</span><span class="params">(LoginRequiredMixin, View)</span>:</span></span><br><span class="line">    <span class="string">"""我的购物车"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="string">"""显示我的购物车页面"""</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"cart.html"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在df_cart/urls中定义路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^$"</span>, CartInfoView.as_view(), name=<span class="string">"cart_show"</span>)  <span class="comment"># 显示我的购物车</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在base.html中菜单栏上的我的购物车添加链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'cart:cart_show' %&#125;"</span>&gt;</span>我的购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 测试在登录与未登录状态进入我的购物页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190405195326710.gif" alt></fancybox></p><p>2.获取我的购物车页面数据</p><ul><li><strong>step1</strong> 获取登录的用户</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user = request.user</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户购物车商品信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conn = get_redis_connection(<span class="string">"default"</span>)</span><br><span class="line">cart_key = <span class="string">"cart_%d"</span> % user.id</span><br><span class="line"><span class="comment"># &#123;商品id:商品数量&#125;</span></span><br><span class="line">cart_dict = conn.hgetall(cart_key)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取我的购物车页面每个商品的数量以及小计以及我的购物车中商品总件数以及总价格</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">skus = []  <span class="comment"># 存放查出来的商品信息对象</span></span><br><span class="line"><span class="comment"># 用于保存我的购物车中商品总件数以及总价格</span></span><br><span class="line">total_count = <span class="number">0</span></span><br><span class="line">total_price = <span class="number">0</span></span><br><span class="line"><span class="comment"># 获取商品id和商品数量</span></span><br><span class="line"><span class="keyword">for</span> sku_id, count <span class="keyword">in</span> cart_dict.items():</span><br><span class="line">    <span class="comment"># 根据sku_id获取商品信息</span></span><br><span class="line">    sku = GoodsSKU.objects.get(id=sku_id)</span><br><span class="line">    <span class="comment"># 计算小计</span></span><br><span class="line">    amount = sku.price*int(count)</span><br><span class="line">    <span class="comment"># 动态给sku对象添加属性，保存遍历获取的小计以及商品数量</span></span><br><span class="line">    sku.amount = amount</span><br><span class="line">    sku.count = count</span><br><span class="line">    <span class="comment"># 将查询出来的商品信息对象保存到列表中</span></span><br><span class="line">    skus.append(sku)</span><br><span class="line">    <span class="comment"># 累加计算商品总件数和总价格</span></span><br><span class="line">    total_count += int(count)</span><br><span class="line">    total_price += amount</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 定义模板上下文，并返回给购物车模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义模板上下文</span></span><br><span class="line">context = &#123;</span><br><span class="line">    <span class="string">'skus'</span>:skus,<span class="string">'total_count'</span>:total_count,</span><br><span class="line">    <span class="string">'total_price'</span>:total_price</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">"cart.html"</span>, context)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在cart.html模板文件中进行数据填坑</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="total_count"&gt;全部商品&lt;em&gt;&#123;&#123; total_count &#125;&#125;&lt;/em&gt;件&lt;/div&gt;</span><br><span class="line">&lt;ul class="cart_list_th clearfix"&gt;</span><br><span class="line">    &lt;li class="col01"&gt;商品名称&lt;/li&gt;</span><br><span class="line">    &lt;li class="col02"&gt;商品单位&lt;/li&gt;</span><br><span class="line">    &lt;li class="col03"&gt;商品价格&lt;/li&gt;</span><br><span class="line">    &lt;li class="col04"&gt;数量&lt;/li&gt;</span><br><span class="line">    &lt;li class="col05"&gt;小计&lt;/li&gt;</span><br><span class="line">    &lt;li class="col06"&gt;操作&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&#123;% <span class="keyword">for</span> sku <span class="keyword">in</span> skus %&#125;</span><br><span class="line">&lt;ul class="cart_list_td clearfix"&gt;</span><br><span class="line">    &lt;li class="col01"&gt;&lt;input type="checkbox" name="" checked&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class="col02"&gt;&lt;img src="&#123;&#123; sku.image.url &#125;&#125;"&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class="col03"&gt;&#123;&#123; sku.name &#125;&#125;&lt;br&gt;&lt;em&gt;&#123;&#123; sku.price &#125;&#125;元/&#123;&#123; sku.unite &#125;&#125;&lt;/em&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class="col04"&gt;&#123;&#123; sku.unite &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;li class="col05"&gt;&#123;&#123; sku.price &#125;&#125;元&lt;/li&gt;</span><br><span class="line">    &lt;li class="col06"&gt;</span><br><span class="line">        &lt;div class="num_add"&gt;</span><br><span class="line">            &lt;a href="javascript:;" class="add fl"&gt;+&lt;/a&gt;</span><br><span class="line">            &lt;input type="text" class="num_show fl" value="&#123;&#123; sku.count &#125;&#125;"&gt;</span><br><span class="line">            &lt;a href="javascript:;" class="minus fl"&gt;-&lt;/a&gt;   </span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li class="col07"&gt;&#123;&#123; sku.amount&#125;&#125;元&lt;/li&gt;</span><br><span class="line">    &lt;li class="col08"&gt;&lt;a href="javascript:;"&gt;删除&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">&lt;ul class="settlements"&gt;</span><br><span class="line">    &lt;li class="col01"&gt;&lt;input type="checkbox" name="" checked=""&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class="col02"&gt;全选&lt;/li&gt;</span><br><span class="line">    &lt;li class="col03"&gt;合计(不含运费)：&lt;span&gt;¥&lt;/span&gt;&lt;em&gt;&#123;&#123; total_price &#125;&#125;&lt;/em&gt;&lt;br&gt;共计&lt;b&gt;&#123;&#123; total_count &#125;&#125;&lt;/b&gt;件商品&lt;/li&gt;</span><br><span class="line">    &lt;li class="col04"&gt;&lt;a href="place_order.html"&gt;去结算&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 进入我的购物车页面显示正确商品信息以及购物车数目小计金额以及购物车总件数总金额</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190405212654147.gif" alt></fancybox></p><p>3.购物车页面全选与不全选以及选中与不选中js代码</p><ul><li><strong>step1</strong> 计算选中的商品的总件数和总价格</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_cart_info</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">         total_price = <span class="number">0</span>;</span><br><span class="line">         total_count = <span class="number">0</span>;</span><br><span class="line">         $(<span class="string">'.cart_list_td'</span>).find(<span class="string">':checked'</span>).parents(<span class="string">'ul'</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">//获取商品的数量和小计</span></span><br><span class="line">                count = $(<span class="keyword">this</span>).find(<span class="string">'.num_show'</span>).val();</span><br><span class="line">                amount = $(<span class="keyword">this</span>).children(<span class="string">'.col07'</span>).text();</span><br><span class="line">                count = <span class="built_in">parseInt</span>(count);</span><br><span class="line">                amount = <span class="built_in">parseFloat</span>(amount);</span><br><span class="line">                total_count += count;</span><br><span class="line">                total_price += amount;</span><br><span class="line">         &#125;);</span><br><span class="line">         <span class="comment">// 设置选中商品的总件数和总价格</span></span><br><span class="line">        $(<span class="string">'.settlements'</span>).find(<span class="string">'em'</span>).text(total_price.toFixed(<span class="number">2</span>));</span><br><span class="line">        $(<span class="string">'.settlements'</span>).find(<span class="string">'b'</span>).text(total_count);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 全选和全不选</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.settlements'</span>).find(<span class="string">':checkbox'</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 获取全选的选中状态</span></span><br><span class="line">        is_check = $(<span class="keyword">this</span>).prop(<span class="string">'checked'</span>);</span><br><span class="line">        <span class="comment">// 遍历商品对应的checkbox状态，设置其状态与全选的checkbox状态保持一致</span></span><br><span class="line">        $(<span class="string">'.cart_list_td'</span>).find(<span class="string">':checkbox'</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="keyword">this</span>).prop(<span class="string">'checked'</span>, is_check)</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 调用get_cart_info方法，更新购物车页面商品总件数和总价格</span></span><br><span class="line">        get_cart_info()</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 当购物车某个商品的checkbox状态发生改变时，设置全选checkbox状态</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.cart_list_td'</span>).find(<span class="string">':checkbox'</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 获取页面上所有的商品数目(不是商品数量)</span></span><br><span class="line">        all_len = $(<span class="string">'.cart_list_td'</span>).length</span><br><span class="line">        <span class="comment">// 获取页面上被选中的商品数目</span></span><br><span class="line">        checked_len = $(<span class="string">'.cart_list_td'</span>).find(<span class="string">":checked"</span>).length;</span><br><span class="line">        <span class="keyword">if</span>(checked_len&lt;all_len)&#123;</span><br><span class="line">            <span class="comment">// 说明商品未全部勾选，即取消全选的checkbox状态</span></span><br><span class="line">            $(<span class="string">'.settlements'</span>).find(<span class="string">':checkbox'</span>).prop(<span class="string">'checked'</span>, <span class="literal">false</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $(<span class="string">'.settlements'</span>).find(<span class="string">':checkbox'</span>).prop(<span class="string">'checked'</span>, <span class="literal">true</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 调用get_cart_info方法，更新购物车页面商品总件数和总价格</span></span><br><span class="line">        get_cart_info()</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 效果展示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190406130039355.gif" alt></fancybox></p><p>4.购物车中商品数量点击事件（增加或减少）</p><ul><li><strong>step1</strong> 在df_cart/views中定义类视图，通过页面点击+或-来对商品数量进行修改，使用ajax post请求方式向后端发送，所以需要定义post方法，需要传递商品id（sku_id）以及商品更改后的数量（count）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /cart/update</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CartUpdateView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""购物车数据更新"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="string">"""修改购物车商品数据"""</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 判断用户是否登录—&gt;获取参数—&gt;校验参数完整性—&gt;校验商品数量count是否合法—&gt;校验商品是否存在，跟前面添加商品到购物车（CartAddView视图逻辑一样）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">user = request.user</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> user.is_authenticated():</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">0</span>, <span class="string">"error_msg"</span>: <span class="string">"请先登录"</span>&#125;)</span><br><span class="line"><span class="comment"># 1.获取参数</span></span><br><span class="line">sku_id = request.POST.get(<span class="string">"sku_id"</span>)</span><br><span class="line">count = request.POST.get(<span class="string">"count"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 2.校验参数完整性</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([sku_id, count]):</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">1</span>, <span class="string">"error_msg"</span>: <span class="string">"参数不完整"</span>&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 3.校验商品数量count是否合法</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    count = int(count)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">2</span>, <span class="string">"error_msg"</span>: <span class="string">"商品数量不合法"</span>&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 4. 校验商品是否存在</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    sku = GoodsSKU.objects.get(id=sku_id)</span><br><span class="line"><span class="keyword">except</span> GoodsSKU.DoesNotExist:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">3</span>, <span class="string">"error_msg"</span>: <span class="string">"商品不存在"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 更新购物车的商品数量，在数据库中设置对应key的value值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">conn = get_redis_connection(<span class="string">"default"</span>)</span><br><span class="line">cart_key = <span class="string">"cart_%d"</span> % user.id</span><br><span class="line"><span class="keyword">if</span> count &gt; sku.stock:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">4</span>, <span class="string">"error_msg"</span>: <span class="string">"商品库存不足"</span>&#125;)</span><br><span class="line">conn.hset(cart_key, sku_id, count)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 获取更新后的购物车中商品的总件数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">total_count = <span class="number">0</span></span><br><span class="line">vals = conn.hvals(cart_key)</span><br><span class="line"><span class="keyword">for</span> val <span class="keyword">in</span> vals:</span><br><span class="line">    total_count += int(val)</span><br><span class="line"><span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="string">"ok"</span>, <span class="string">"total_count"</span>:total_count, <span class="string">"error_msg"</span>: <span class="string">"更新成功"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在cart.html中编写js增加商品数量</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 计算商品的小计</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">update_goods_amount</span>(<span class="params">sku_ul</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取商品的价格和数量</span></span><br><span class="line">    count = sku_ul.find(<span class="string">'.num_show'</span>).val();</span><br><span class="line">    price = sku_ul.children(<span class="string">'.col05'</span>).text();</span><br><span class="line">    <span class="comment">// 计算商品的小计</span></span><br><span class="line">    amount = <span class="built_in">parseInt</span>(count)*<span class="built_in">parseFloat</span>(price);</span><br><span class="line">    <span class="comment">// 设置商品的小计</span></span><br><span class="line">    sku_ul.children(<span class="string">'.col07'</span>).text(amount.toFixed(<span class="number">2</span>)+<span class="string">'元'</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 购物车增加商品数量</span></span><br><span class="line">$(<span class="string">'.add'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取商品id和当前数量</span></span><br><span class="line">    sku_id = $(<span class="keyword">this</span>).next().attr(<span class="string">'sku_id'</span>);</span><br><span class="line">    count = $(<span class="keyword">this</span>).next().val();</span><br><span class="line">    count = <span class="built_in">parseInt</span>(count) +<span class="number">1</span>;</span><br><span class="line">    csrf = $(<span class="string">'input[name="csrfmiddlewaretoken"]'</span>).val();</span><br><span class="line">    <span class="comment">// 组织参数</span></span><br><span class="line">    params = &#123;<span class="string">'sku_id'</span>:sku_id, <span class="string">'count'</span>:count, <span class="string">"csrfmiddlewaretoken"</span>:csrf&#125;;</span><br><span class="line">    error_update = <span class="literal">false</span>;</span><br><span class="line">    total = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 设置ajax请求为同步</span></span><br><span class="line">    $.ajaxSettings.async = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 向后端发送ajax post请求</span></span><br><span class="line">    $.post(<span class="string">'/cart/update'</span>, params, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(data.errno == <span class="string">"ok"</span>)&#123;</span><br><span class="line">            error_update = <span class="literal">false</span>;</span><br><span class="line">            total = data.total_count</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 更新失败</span></span><br><span class="line">            error_update = <span class="literal">true</span>;</span><br><span class="line">            alert(data.error_msg)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 设置ajax请求为异步</span></span><br><span class="line">    $.ajaxSettings.async = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">// 判断是否更新成功</span></span><br><span class="line">    <span class="keyword">if</span>(error_update == <span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="comment">// 重新设置页面上商品数量</span></span><br><span class="line">        $(<span class="keyword">this</span>).next().val(count);</span><br><span class="line">        <span class="comment">// 计算商品小计</span></span><br><span class="line">        update_goods_amount($(<span class="keyword">this</span>).parents(<span class="string">'ul'</span>));</span><br><span class="line">         <span class="comment">// 获取商品对应的checkbox的选中状态，如果被选中，更新页面信息</span></span><br><span class="line">        is_checked = $(<span class="keyword">this</span>).parents(<span class="string">'ul'</span>).find(<span class="string">':checkbox'</span>).prop(<span class="string">'checked'</span>);</span><br><span class="line">        <span class="keyword">if</span> (is_checked)&#123;</span><br><span class="line">            <span class="comment">// 更新页面信息</span></span><br><span class="line">            get_cart_info()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 更新页面上购物车商品的总件数</span></span><br><span class="line">        $(<span class="string">'.total_count'</span>).children(<span class="string">'em'</span>).text(total)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 当商品状态为checked选中状态，点击增加商品数量，则左上角全部商品件数和右下角合计金额商品总件累加，如果该增加的商品不是选中状态，则只增加左上角全部商品件数</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190406163630568.gif" alt></fancybox></p><ul><li><strong>step7</strong> 商品数量的减少，跟增加的js代码逻辑一样，只需要修改其中的count-1以及查找元素next修改为prev</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.minus'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取商品id和当前数量</span></span><br><span class="line">    sku_id = $(<span class="keyword">this</span>).prev().attr(<span class="string">'sku_id'</span>);</span><br><span class="line">    count = $(<span class="keyword">this</span>).prev().val();</span><br><span class="line">    count = <span class="built_in">parseInt</span>(count) <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(count &lt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    csrf = $(<span class="string">'input[name="csrfmiddlewaretoken"]'</span>).val();</span><br><span class="line">    <span class="comment">// 组织参数</span></span><br><span class="line">    params = &#123;<span class="string">'sku_id'</span>:sku_id, <span class="string">'count'</span>:count, <span class="string">"csrfmiddlewaretoken"</span>:csrf&#125;;</span><br><span class="line">    error_update = <span class="literal">false</span>;</span><br><span class="line">    total = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 设置ajax请求为同步</span></span><br><span class="line">    $.ajaxSettings.async = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 向后端发送ajax post请求</span></span><br><span class="line">    $.post(<span class="string">'/cart/update'</span>, params, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(data.errno == <span class="string">"ok"</span>)&#123;</span><br><span class="line">            error_update = <span class="literal">false</span>;</span><br><span class="line">            total = data.total_count</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 更新失败</span></span><br><span class="line">            error_update = <span class="literal">true</span>;</span><br><span class="line">            alert(data.error_msg)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 设置ajax请求为异步</span></span><br><span class="line">    $.ajaxSettings.async = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">// 判断是否更新成功</span></span><br><span class="line">    <span class="keyword">if</span>(error_update == <span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="comment">// 重新设置页面上商品数量</span></span><br><span class="line">        $(<span class="keyword">this</span>).prev().val(count);</span><br><span class="line">        <span class="comment">// 计算商品小计</span></span><br><span class="line">        update_goods_amount($(<span class="keyword">this</span>).parents(<span class="string">'ul'</span>));</span><br><span class="line">         <span class="comment">// 获取商品对应的checkbox的选中状态，如果被选中，更新页面信息</span></span><br><span class="line">        is_checked = $(<span class="keyword">this</span>).parents(<span class="string">'ul'</span>).find(<span class="string">':checkbox'</span>).prop(<span class="string">'checked'</span>);</span><br><span class="line">        <span class="keyword">if</span> (is_checked)&#123;</span><br><span class="line">            <span class="comment">// 更新页面信息</span></span><br><span class="line">            get_cart_info()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 更新页面上购物车商品的总件数</span></span><br><span class="line">        $(<span class="string">'.total_count'</span>).children(<span class="string">'em'</span>).text(total)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190406174518211.gif" alt></fancybox></p><ul><li><strong>step9</strong> 将增加商品数量以及减少商品数量复用的代码进行封装到函数中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">error_update = false;</span><br><span class="line">total = 0;</span><br><span class="line">function update_remote_cart_info(sku_id, count)&#123;</span><br><span class="line">    csrf = $(&apos;input[name=&quot;csrfmiddlewaretoken&quot;]&apos;).val();</span><br><span class="line">    // 组织参数</span><br><span class="line">    params = &#123;&apos;sku_id&apos;:sku_id, &apos;count&apos;:count, &quot;csrfmiddlewaretoken&quot;:csrf&#125;;</span><br><span class="line">     // 设置ajax请求为同步</span><br><span class="line">    $.ajaxSettings.async = false;</span><br><span class="line">    // 向后端发送ajax post请求</span><br><span class="line">    $.post(&apos;/cart/update&apos;, params, function (data) &#123;</span><br><span class="line">        if(data.errno == &quot;ok&quot;)&#123;</span><br><span class="line">            error_update = false;</span><br><span class="line">            total = data.total_count</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            // 更新失败</span><br><span class="line">            error_update = true;</span><br><span class="line">            alert(data.error_msg)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    // 设置ajax请求为异步</span><br><span class="line">    $.ajaxSettings.async = true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.购物车中的商品手动输入数量</p><ul><li><strong>step1</strong> input输入框类属性失去焦点则进行逻辑处理，跟前面的增加减少大同小异</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 记录用户输入商品数量之前的商品数量</span></span><br><span class="line">pre_count = <span class="number">0</span>;</span><br><span class="line">$(<span class="string">'.num_show '</span>).focus(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   pre_count = $(<span class="keyword">this</span>).val()</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">'.num_show '</span>).blur(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取商品id和当前数量</span></span><br><span class="line">    sku_id = $(<span class="keyword">this</span>).attr(<span class="string">'sku_id'</span>);</span><br><span class="line">    count = $(<span class="keyword">this</span>).val();</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isNaN</span>(count) || count.trim().length==<span class="number">0</span> || <span class="built_in">parseInt</span>(count)&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">// 当出现用户输入的数量不是数字或空格或小于等于0时，设置数量的值为输入前商品的数量</span></span><br><span class="line">        $(<span class="keyword">this</span>).val(pre_count);</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 更新购物车数据</span></span><br><span class="line">    count = <span class="built_in">parseInt</span>(count);</span><br><span class="line">    update_remote_cart_info(sku_id, count);</span><br><span class="line">    <span class="comment">// 判断是否更新成功</span></span><br><span class="line">    <span class="keyword">if</span>(error_update == <span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="comment">// 重新设置页面上商品数量</span></span><br><span class="line">        $(<span class="keyword">this</span>).val(count);</span><br><span class="line">        <span class="comment">// 计算商品小计</span></span><br><span class="line">        update_goods_amount($(<span class="keyword">this</span>).parents(<span class="string">'ul'</span>));</span><br><span class="line">         <span class="comment">// 获取商品对应的checkbox的选中状态，如果被选中，更新页面信息</span></span><br><span class="line">        is_checked = $(<span class="keyword">this</span>).parents(<span class="string">'ul'</span>).find(<span class="string">':checkbox'</span>).prop(<span class="string">'checked'</span>);</span><br><span class="line">        <span class="keyword">if</span> (is_checked)&#123;</span><br><span class="line">            <span class="comment">// 更新页面信息</span></span><br><span class="line">            get_cart_info()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 更新页面上购物车商品的总件数</span></span><br><span class="line">        $(<span class="string">'.total_count'</span>).children(<span class="string">'em'</span>).text(total)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 更新失败则设置为原来的手动输入前的值</span></span><br><span class="line">        $(<span class="keyword">this</span>).val(pre_count)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 效果演示，输入不合法的数量，数量显示为输入之前的数量，当输入的商品数量大于实际库存则显示之前的数量</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190406185720458.gif" alt></fancybox></p><p>6.在购物车中删除商品记录</p><ul><li><strong>step1</strong> 在df_cart/views中定义类视图，使用ajax post请求方式向该视图进行数据传递</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /cart/delete</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CartDelView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""删除购物车记录"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取参数校验参数数据库进行删除返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断用户是否登录</span></span><br><span class="line">user = request.user</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> user.is_authenticated():</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">0</span>, <span class="string">"error_msg"</span>: <span class="string">"请先登录"</span>&#125;)</span><br><span class="line"><span class="comment"># 1.获取参数并判断</span></span><br><span class="line">sku_id = request.POST.get(<span class="string">"sku_id"</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> sku_id:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">1</span>, <span class="string">"error_msg"</span>: <span class="string">"参数不完整"</span>&#125;)</span><br><span class="line"><span class="comment"># 2. 校验商品是否存在</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    sku = GoodsSKU.objects.get(id=sku_id)</span><br><span class="line"><span class="keyword">except</span> GoodsSKU.DoesNotExist:</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="number">2</span>, <span class="string">"error_msg"</span>: <span class="string">"商品不存在"</span>&#125;)</span><br><span class="line"><span class="comment">#3.删除购物车记录</span></span><br><span class="line">conn = get_redis_connection(<span class="string">"default"</span>)</span><br><span class="line">cart_key = <span class="string">"cart_%d"</span> % user.id</span><br><span class="line">conn.hdel(cart_key, sku_id)</span><br><span class="line"><span class="comment">#4.获取更新后的购物车中商品的总件数</span></span><br><span class="line">total_count = <span class="number">0</span></span><br><span class="line">vals = conn.hvals(cart_key)</span><br><span class="line"><span class="keyword">for</span> val <span class="keyword">in</span> vals:</span><br><span class="line">    total_count += int(val)</span><br><span class="line"><span class="keyword">return</span> JsonResponse(&#123;<span class="string">"errno"</span>: <span class="string">"ok"</span>, <span class="string">"total_count"</span>:total_count, <span class="string">"error_msg"</span>: <span class="string">"删除成功"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在模板文件中进行删除事件js编写</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除购物车记录</span></span><br><span class="line">$(<span class="string">'.cart_list_td'</span>).children(<span class="string">'.col08'</span>).children(<span class="string">'a'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取对应商品的id</span></span><br><span class="line">    sku_id = $(<span class="keyword">this</span>).parents(<span class="string">'ul'</span>).find(<span class="string">'.num_show'</span>).attr(<span class="string">"sku_id"</span>);</span><br><span class="line">    csrf = $(<span class="string">'input[name="csrfmiddlewaretoken"]'</span>).val();</span><br><span class="line">    params = &#123;<span class="string">"sku_id"</span>:sku_id, <span class="string">"csrfmiddlewaretoken"</span>:csrf&#125;;</span><br><span class="line">    <span class="comment">// 获取商品所在的ul元素</span></span><br><span class="line">    sku_ul = $(<span class="keyword">this</span>).parents(<span class="string">'ul'</span>);</span><br><span class="line">    $.post(<span class="string">'/cart/delete'</span>, params, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(data.errno == <span class="string">"ok"</span>)&#123;</span><br><span class="line">            <span class="comment">// 删除成功 移除页面上商品所在的ul元素</span></span><br><span class="line">            sku_ul.remove()</span><br><span class="line">            <span class="comment">// 获取被删除商品是否为选中状态</span></span><br><span class="line">            is_checked = sku_ul.find(<span class="string">':checkbox'</span>).prop(<span class="string">'checked'</span>)</span><br><span class="line">            <span class="keyword">if</span>(is_checked)&#123;</span><br><span class="line">                <span class="comment">// 更新页面信息</span></span><br><span class="line">                get_cart_info()</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 重新设置页面上的总件数</span></span><br><span class="line">            $(<span class="string">'.total_count'</span>).children(<span class="string">'em'</span>).text(data.total_count)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            alert(data.error_msg)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190406200201765.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/89015816" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/89015816</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目之Web端电商网站的实战开发（四）</title>
      <link href="/2019/11/07/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2019/11/07/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶Windows环境下安装FastDFS_Client"><span style="color:#4ea1db">一丶Windows环境下安装FastDFS_Client</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶Django二次开发对接FastDFS"><span style="color:#4ea1db">二丶Django二次开发对接FastDFS</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶天天生鲜首页"><span style="color:#4ea1db">三丶天天生鲜首页</span></a></li><a id="more"></a><h1 id="一丶Windows环境下安装FastDFS-Client"><a href="#一丶Windows环境下安装FastDFS-Client" class="headerlink" title="一丶Windows环境下安装FastDFS_Client"></a>一丶Windows环境下安装FastDFS_Client</h1><p>1.在windows环境下直接使用pip install fdfs-client-py进行安装则会出现以下提示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190331164922518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.在windows环境下需进行如下安装</p><ul><li><p><strong>step1</strong> 下载fdfs_client包<a href="https://pan.baidu.com/s/11Rd6q3vr7vH3Lr1_8JMfSw" target="_blank" rel="noopener">https://pan.baidu.com/s/11Rd6q3vr7vH3Lr1_8JMfSw</a>，提取码u1d7</p></li><li><p><strong>step2</strong> 将解压之后的fdfs_client文件夹copy到python解释器下的Lib目录中</p></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190331165713406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 进入fdfs_client目录，编辑storage_client.py文件，将第12行代码注释（避免提示ImportError: No module named sendfile错误信息）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190331165849498.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 安装mutagen</li></ul><p><img src="https://img-blog.csdnimg.cn/20190331170042559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step5</strong> 安装requests</li></ul><p><img src="https://img-blog.csdnimg.cn/20190331170105694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step6</strong> 在解释器目录下新建logs文件夹，用于存放fdfs客户端日志文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20190331170230826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step7</strong> 修改fdfs配置文件client.conf，需要注意的是base_path的路径是在以client.conf为起始路径进行查找的</li></ul><p><img src="https://img-blog.csdnimg.cn/20190331170340730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/20190331170521284.png" alt></p><ul><li><strong>step8</strong> 回到虚拟机ubuntu（192.168.1.10），开启fdfs服务以及nginx服务</li></ul><p><img src="https://img-blog.csdnimg.cn/20190331171207266.png" alt></p><p><img src="https://img-blog.csdnimg.cn/20190331171220833.png" alt></p><ul><li><strong>step9</strong> 进行上传文件测试，打开cmd命令窗口，进行python2环境（博主将一个水果图片直接放在D盘中然后进行此图片上传操作），配置文件路径以及要上传的文件路径均为绝对路径</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fdfs_client.client <span class="keyword">import</span> Fdfs_client</span><br><span class="line">client = Fdfs_client(<span class="string">r"D:\Python27\Lib\fdfs_client\client.conf"</span>)</span><br><span class="line">client.upload_by_filename(<span class="string">r"D:\goods.jpg"</span>)</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://img-blog.csdnimg.cn/20190331171553856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> <font style="color:red">上传成功后，返回文件id，在windows浏览器中直接访问ubuntu电脑的ip（也就是nginx服务器的ip端口，然后nginx再去到fdfs系统中获取对应文件id的文件，最后返回给浏览器，最后浏览器将该文件渲染出来，最终显示出图片）</font><a href="http://192.168.1.10:8888/group1//M00/00/00/wKgBClygfSuAO8GOAAAX1PFRdzg942.jpg" target="_blank" rel="noopener">http://192.168.1.10:8888/group1//M00/00/00/wKgBClygfSuAO8GOAAAX1PFRdzg942.jpg</a>，如下图可以看见响应报头中的server为在ubuntu中安装的nginx版本</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190331172049650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step11</strong> 同样的在ubuntu系统中访问该上传成功的文件id，一样成功的在浏览器中显示出来（这里的IP就要写本地的IP）</li></ul><p><img src="https://img-blog.csdnimg.cn/2019033117350672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><h1 id="二丶Django二次开发对接FastDFS"><a href="#二丶Django二次开发对接FastDFS" class="headerlink" title="二丶Django二次开发对接FastDFS"></a>二丶Django二次开发对接FastDFS</h1><p>1.项目中使用上传图片使用图片流程图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190331201507905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.更改django默认上传文件的存储方式 ，django站点管理中进行文件的上传默认使用的是FileSystemStorage类，这个类在本地文件系统上实现了基本的文件存储功能，它继承自Storage类 ，并且提供父类的所有公共方法的实现，所以可以定义一个类来继承Storage类，重写这个类中方法来实现更改django的默认存储方式，可以参考django的API文档</p><p>3.编写一个自定义存储系统，</p><ul><li><strong>step1</strong> 自定义的存储系统必须为 Django.core.files.storage.Storage的一个子类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.core.files.storage <span class="keyword">import</span> Storage</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStorage</span><span class="params">(Storage)</span>:</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在你的存储类中，除了其他自定义的方法外，还必须实现 _open()打开文件 以及 _save()保存文件方法，如果你的类提供了本地文件存储，它必须重载 path() 方法</li><li><strong>step3</strong> 在项目utils目录下创建一个fdfs的python包，并在这个包下创建storage.py模块，在这个模块中实现自定义存储系统</li></ul><p><img src="https://img-blog.csdnimg.cn/20190331173714275.png" alt></p><ul><li><strong>step4</strong> 在storage.py中定义一个类继承与storage的子类Stroage，实现_open()以及_save()方法</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190331174052546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 导入Fdfs_client类，将client.conf配置文件拷贝到utils/fdfs目录下</li></ul><p><img src="https://img-blog.csdnimg.cn/20190331174734841.png" alt></p><ul><li><strong>step6</strong> 修改client.conf配置文件中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">base_path=D:\Python27\logs</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 因为项目中场景不使用_open方法，只是用_save方法，所以在_save进行编写，创建Fdfs_client对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client = Fdfs_client(<span class="string">r"./utils/fdfs/client.conf"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 上传文件到FastDFS系统中,upload_by_buffer方法是上传文件内容，而不是文件名了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = client.upload_by_buffer(content.read())</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 判断是否上传成功</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上传成功返回的字段数据</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">dict</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    'Group name': group_name,</span></span><br><span class="line"><span class="string">    'Remote file_id': remote_file_id,</span></span><br><span class="line"><span class="string">    'Status': 'Upload successed.',</span></span><br><span class="line"><span class="string">    'Local file name': '',</span></span><br><span class="line"><span class="string">    'Uploaded size': upload_size,</span></span><br><span class="line"><span class="string">    'Storage IP': storage_ip</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">if</span> res.get(<span class="string">"Status"</span>) != <span class="string">"Upload successed."</span>:</span><br><span class="line">    <span class="comment"># 表示上传失败</span></span><br><span class="line">    <span class="keyword">raise</span></span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 上传成功获取文件id，并返回</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filename = res.get(<span class="string">"Remote file_id"</span>)</span><br><span class="line"><span class="keyword">return</span> filename</span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 重写exists方法调用_save方法之前会去调用exists方法，判断文件在系统中是够存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exists</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        <span class="string">"""如果提供的名称所引用的文件在文件系统中存在，则返回True，否则如果这个名称可用于新文件，返回False"""</span></span><br><span class="line">        <span class="comment"># 因为在django中不存在文件名情况，所以直接返回false</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>4.在django admin后台管理页面测试文件存储类</p><ul><li><strong>step1</strong> 在settings配置文件中设置django文件存储类为上面定义的类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEFAULT_FILE_STORAGE = <span class="string">"utils.fdfs.storage.FDFSStorage"</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在df_goods/admin中注册商品类型模型类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> df_goods.models <span class="keyword">import</span> GoodsType</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 注册商品类型模型类</span></span><br><span class="line">admin.site.register(GoodsType)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 创建超级管理员</li></ul><p><img src="https://img-blog.csdnimg.cn/20190331185455228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step4</strong> 在浏览器输入<a href="http://127.0.0.1:8000/admin/" target="_blank" rel="noopener">http://127.0.0.1:8000/admin/</a> 进入后台管理页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190331185828156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 在商品种类栏点击增加（标识标识的是商品分类中对应分类标签中的class的值）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019033119025756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 点击保存后，提示保存成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190331190634803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 进入新鲜水果后，出现错误提示，必须保证有一个url方法</li></ul><p><img src="https://img-blog.csdnimg.cn/20190331190730125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step8</strong> 在FDFSStorage类中定义url方法，直接返回name</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">url</span><span class="params">(self, name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> name</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 刷新报错页面，显示出filename的值（也就是上传文件到FastDFS成功后返回的文件id的值）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019033119145176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 在浏览器中访问<a href="http://192.168.1.10:8888/group1/M00/00/00/wKgBClygnuOATdepAAAgnaeGwNQ6841857" target="_blank" rel="noopener">http://192.168.1.10:8888/group1/M00/00/00/wKgBClygnuOATdepAAAgnaeGwNQ6841857</a>，则出现下载，因为在获取Remote file_id的值的时候，并没有后缀名，导致出现下载</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190331192401289.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step11</strong> 新建一个html文件，创建img标签，src就等于<a href="http://192.168.1.10:8888/group1/M00/00/00/wKgBClygnuOATdepAAAgnaeGwNQ6841857" target="_blank" rel="noopener">http://192.168.1.10:8888/group1/M00/00/00/wKgBClygnuOATdepAAAgnaeGwNQ6841857</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190331192704887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step12</strong> 直接打开该html文件，成功将图片显示出来</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190331193139786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step13</strong> 修改url方法返回参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">url</span><span class="params">(self, name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"http://192.168.1.10:8888/"</span>+name</span><br></pre></td></tr></table></figure><p>5.优化自定义文件存储类</p><ul><li><strong>step1</strong> 在settings配置文件中设置client.conf的路径以及nginx服务器的ip和port</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置fdfs使用client.conf配置文件的路径</span></span><br><span class="line">FDFS_CLIENT_CONF_PATH = <span class="string">r"./utils/fdfs/client.conf"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置fdfs存储系统上的ngin服务器的ip和端口</span></span><br><span class="line">FDFS_URL = <span class="string">r"http://192.168.1.10:8888/"</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在FDFSStorage类中定义魔法方法，使client.conf的路径以及nginx服务器的ip和port动态生成，增强存储类的灵活性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, client_conf=None, base_url=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> client_conf <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        client_conf = settings.FDFS_CLIENT_CONF_PATH</span><br><span class="line">    <span class="keyword">if</span> base_url <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        base_url = settings.FDFS_URL</span><br><span class="line">    self.client_conf = client_conf</span><br><span class="line">    self.base_url = base_url</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 将以下两处进行替换</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">client = Fdfs_client(self.client_conf)</span><br><span class="line"><span class="keyword">return</span> self.base_url+name</span><br></pre></td></tr></table></figure><h1 id="三丶天天生鲜首页"><a href="#三丶天天生鲜首页" class="headerlink" title="三丶天天生鲜首页"></a>三丶天天生鲜首页</h1><p>1.定义类视图显示首页页面</p><ul><li><strong>step1</strong> 在df_goods/views中定义IndexView类视图，并在这个类中定义get方法，用于显示首页</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http://127.0.0.1:8000</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">'''首页'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="string">'''显示首页'''</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">'index.html'</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在df_goods/urls中导入类视图，并调用其父类的as_view方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^$"</span>, IndexView.as_view(), name=<span class="string">"index"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 进入<a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a>项目首页地址，成功显示首页页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401092056392.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 将df_goods/models中的IndexPromotionBanner首页促销活动模型类的url字段的类型修改为CharField类型，因为URLField类型，在admin中注册后，在django管理后台进行添加时，会去解析URL链接地址是否有效，并且该字段是必须填写的，所以修改为CharField类型，就可填可不填，并且不用去解析</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = models.CharField(max_length=<span class="number">256</span>,  verbose_name=<span class="string">'活动链接'</span>)</span><br></pre></td></tr></table></figure><p>2.首页内容获取与展示</p><ul><li><strong>step1</strong> 在IndexView类视图get方法中，获取商品的种类信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401093907439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">types = GoodsType.objects.all()</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取首页页面幻灯片中的商品信息，以index字段（展示顺序）进行排序</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401094102431.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">goods_banners = IndexGoodsBanner.objects.all().order_by(<span class="string">'index'</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取首页促销活动信息，以以index字段（展示顺序）进行排序</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401094243685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">promotion_banners = IndexPromotionBanner.objects.all().order_by(<span class="string">'index'</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 获取首页中分类商品展示信息（types），遍历商品种类信息，获取每个商品种类（type）为GoodsType对象，然后在数据库商品分类表（IndexTypeGoodsBanner）中根据type字段（商品类型）以及display_type（展示类型）查询数据，并按照表index字段（展示顺序）进行排序显示，display_type=1表示图片展示类型，display_type=2表示文字展示类型；然后给每个商品种类对象添加image_banners属性以及title_banners属性</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401094452699.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> type <span class="keyword">in</span> types: <span class="comment"># GoodsType</span></span><br><span class="line">    <span class="comment"># 获取type种类首页分类商品的图片展示信息</span></span><br><span class="line">    image_banners = IndexTypeGoodsBanner.objects.filter(type=type, display_type=<span class="number">1</span>).order_by(<span class="string">'index'</span>)</span><br><span class="line">    <span class="comment"># 获取type种类首页分类商品的文字展示信息</span></span><br><span class="line">    title_banners = IndexTypeGoodsBanner.objects.filter(type=type, display_type=<span class="number">0</span>).order_by(<span class="string">'index'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 动态给type增加属性，分别保存首页分类商品的图片展示信息和文字展示信息</span></span><br><span class="line">    type.image_banners = image_banners</span><br><span class="line">    type.title_banners = title_banners</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 获取用户购物车商品数量信息，这里先设置为0，表示默认没有</li></ul><p><img src="https://img-blog.csdnimg.cn/20190401094654924.png" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cart_count = <span class="number">0</span>  <span class="comment"># 默认设置为0</span></span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 构造上下文响应数据，并返回给模板文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">context = &#123;<span class="string">'types'</span>:types,</span><br><span class="line">           <span class="string">'goods_banners'</span>:goods_banners,</span><br><span class="line">           <span class="string">'promotion_banners'</span>:promotion_banners,</span><br><span class="line">           <span class="string">'cart_count'</span>:cart_count&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用模板</span></span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">'index.html'</span>, context</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 在index.html模板文件中，进行填坑数据处理，在for循环遍历是从1开始累加</li></ul><p><strong>商品种类</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"subnav fl"</span>&gt;</span></span><br><span class="line">    &#123;% for type in types %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#model0&#123;&#123; forloop.counter &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"&#123;&#123; type.logo &#125;&#125;"</span>&gt;</span>&#123;&#123; type.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;#<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#model02"</span> <span class="attr">class</span>=<span class="string">"seafood"</span>&gt;</span>海鲜水产<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>#&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>幻灯片</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for banner in goods_banners %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> &gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; banner.image.url &#125;&#125;"</span> <span class="attr">alt</span>=<span class="string">"幻灯片"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>/li&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><strong>促销活动</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for banner in promotion_banners %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; banner.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; banner.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&#123;#<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/adv02.jpg' %&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>#&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><strong>分类商品</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"subnav fl"</span>&gt;</span></span><br><span class="line">    &#123;% for type in types %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#model0&#123;&#123; forloop.counter &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"&#123;&#123; type.logo &#125;&#125;"</span>&gt;</span>&#123;&#123; type.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;#<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#model02"</span> <span class="attr">class</span>=<span class="string">"seafood"</span>&gt;</span>海鲜水产<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>#&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide fl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"slide_pics"</span>&gt;</span></span><br><span class="line">        &#123;% for banner in goods_banners %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> &gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; banner.image.url &#125;&#125;"</span> <span class="attr">alt</span>=<span class="string">"幻灯片"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>/li&gt;</span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">&#123;#    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> &gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../static/images/slide02.jpg"</span> <span class="attr">alt</span>=<span class="string">"幻灯片"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>#&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"prev"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"next"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"points"</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"adv fl"</span>&gt;</span></span><br><span class="line">    &#123;% for banner in promotion_banners %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; banner.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; banner.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">&#123;#<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/adv02.jpg' %&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>#&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 刷新首页<a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a>页面后，只显示了商品分类信息，幻灯片和商品促销以及分类商品均为空白，这是因为数据库中并没有数据，而显示了商品分类信息，是因为博主前面注册了商品类型模型类（GoodsType）并在django管理后台进行了商品类型的添加，所以数据库中df_goods_type表有数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401121344409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><img src="https://img-blog.csdnimg.cn/20190401122120549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019040112191027.png" alt></fancybox></p><p>3.数据准备</p><ul><li><strong>step1</strong> 在df_goods/admin中注册模型类</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401130939420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><p><strong>step2</strong> 进入<a href="http://127.0.0.1:8000/admin/django" target="_blank" rel="noopener">http://127.0.0.1:8000/admin/django</a>后台管理页面</p></li><li><p><strong>step3</strong> 点击商品SPU栏的增加，进行数据库df_goods表数据的添加，添加后进行保存即可</p></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401131625709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 保存成功后进入商品SPU栏后，则显示添加后的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401132325960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 当添加商品SPU数据后，再对商品栏（df_goods_sku表）进行数据添加操作</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401134252998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 点击保存，结果报错了，根据报错提示没有找到文件的位置，异常目录为tracker_client.py，说明tracker服务器没有找到，于是博主立马知道了，因为博主在写博客分为两个时间，一个是在家，另一个是在公司，即IP端不同，此时在django后台添加数据是在公司的IP网段下，而client.conf中的配置为家里的IP段配置，所以添加数据报错了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401140142794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 修改ubuntu中fdfs目录下的storage.conf，mod_fastdfs.conf以及windows项目中fdfs目录下的client.conf配置文件里面的tracker_server的ip为公司环境IP后，刷新提交页面，添加记录成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401141542882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 添加操作都是体力活啊，这里就不一一进行演示了，博主花了大半会儿功夫将主页需要的数据添加完毕，添加6个表的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401185336372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step9</strong> 此时添加完主页必有的表字段数据后，刷新主页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190401193401295.gif" alt></fancybox></p><ul><li><strong>step10</strong> 在数据库中表示数相关的表数据</li><li><strong>说明</strong>：由于数据太多只截取前面两条数据</li></ul><p><strong>商品SPU</strong></p><p><img src="https://img-blog.csdnimg.cn/20190401194507114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>商品</strong></p><p><img src="https://img-blog.csdnimg.cn/20190401195013145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>商品种类</strong></p><p><img src="https://img-blog.csdnimg.cn/20190401195216397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>首页幻灯片商品</strong></p><p><img src="https://img-blog.csdnimg.cn/20190401195438397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>主页促销活动商品</strong></p><p><img src="https://img-blog.csdnimg.cn/20190401195746348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><strong>主页分类展示商品</strong></p><p><img src="https://img-blog.csdnimg.cn/2019040120041563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p>4.首页获取购物车商品数目</p><ul><li><strong>step1</strong> 分析存储购物车记录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.什么时候添加购物车数目</span><br><span class="line">  当用户点击商品加入购物车时，需要添加购物车数目</span><br><span class="line">2.什么时候需要获取购物车记录</span><br><span class="line">  当用户使用购物车记录时和用户访问购物车页面数据时</span><br><span class="line">3.使用什么来数据库来存储购物车的记录</span><br><span class="line">  使用redis数据库进行存储，因为加入购物车是高频的</span><br><span class="line">4.以哪种数据格式进行存储</span><br><span class="line">  使用hash（属性：值的关系进行购物车数目的存储）</span><br><span class="line">  cart_用户id:&#123;&apos;sku_id1&apos;:商品数目，&apos;sku_id2&apos;:商品数目&#125;</span><br><span class="line">  例如：&apos;cart_1&apos;:&#123;&apos;1&apos;:4,&apos;2&apos;,8&#125;</span><br><span class="line">  在首页左上方显示的购物车显示的是hash数据中的元素总数，即2（商品id为1的和商品id为2的共两个），大多网站都是显示商品类总数，而不是商品量总数</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在IndexView视图函数中获取用户购物车商品数目</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user = request.user  <span class="comment"># 获取user对象</span></span><br><span class="line">cart_count = <span class="number">0</span>  <span class="comment"># 默认设置为0</span></span><br><span class="line"><span class="keyword">if</span> user.is_authenticated():  <span class="comment"># 如果返回True表示用户已登录</span></span><br><span class="line">    <span class="comment"># 用户已登录</span></span><br><span class="line">    conn = get_redis_connection(<span class="string">'default'</span>)  <span class="comment"># 获取配置中default默认redis连接对象</span></span><br><span class="line">    cart_key = <span class="string">'cart_%d'</span>%user.id  <span class="comment"># 设置key</span></span><br><span class="line">    <span class="comment"># 通过hlen方法获取购物车商品数目</span></span><br><span class="line">    cart_count = conn.hlen(cart_key)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在父模板base.html文件中填写购物车数目的坑</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"goods_count fl"</span> <span class="attr">id</span>=<span class="string">"show_count"</span>&gt;</span>&#123;&#123; cart_count &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 刷新主页，因为还没有编写添加商品到购物车逻辑代码，所以cart_count为0，即在主页显示为0</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402091905143.png" alt></fancybox></p><ul><li><strong>step5</strong> 登录cdtaogang_2账号（用户id=2），进入redis数据库，选择settings配置文件中配置的第五个数据库，然后使用hmset设置模拟数据 （’cart_2’:{‘1’:4,’2’:8}），使用hlen获取元素长度（个数）2，即购物车数目为2</li></ul><p><img src="https://img-blog.csdnimg.cn/20190402093520429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step6</strong> 此时刷新页面，成功显示购物车数目为2</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402094140479.png" alt></fancybox></p><p><font style="color:red">5.将首页页面静态化，把原本动态的页面处理结果保存成html文件，让用户直接访问这个生成出来的静态的html页面</font></p><p><strong>说明</strong>：因为网站首页几乎是不变的，当首页需要更改修改数据时，才会发生变化，换句话说就是当后台管理员首页页面对应的数据时，才会生成新的首页静态页面，大多用户浏览网站都是看主页，当很多用户浏览主页时，不管登录与否页面显示的内容都是一样的，每次用户请求主页页面时，都会到数据库去查询数据，并且查询的数据都是一样的，所以将页面进行静态化后，就不用每次用户请求首页数据时都要到数据库进行查询数据，再返回给用户，这样做大大的对减少网站服务器的压力，还利于SEO的优化</p><ul><li><strong>step1</strong> 分析静态页面的实现</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.什么时候需要重新生成静态页面（用户未登录的主页页面）</span><br><span class="line">  当管理员在后台修改添加以及删除页面对应数据库表中的数据时需要重新生成新的静态页面</span><br><span class="line">2.如何生成</span><br><span class="line">使用celery，在tasks.py文件中异步生成首页静态页面</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在tasks.py文件中定义一个任务函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_static_index_page</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""生成首页静态页面"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取首页页面上的数据，直接把IndexView类视图get方法中的代码拿过来，因为生成的首页静态页面是用户不登录状态，所以，不需要获取购物车的数目，也不需要返回HttpResponse对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">types = GoodsType.objects.all()</span><br><span class="line">goods_banners = IndexGoodsBanner.objects.all().order_by(<span class="string">'index'</span>)</span><br><span class="line">promotion_banners = IndexPromotionBanner.objects.all().order_by(<span class="string">'index'</span>)</span><br><span class="line"><span class="keyword">for</span> type <span class="keyword">in</span> types:</span><br><span class="line">    image_banners = IndexTypeGoodsBanner.objects.filter(type=type, display_type=<span class="number">1</span>).order_by(<span class="string">'index'</span>)</span><br><span class="line">    title_banners = IndexTypeGoodsBanner.objects.filter(type=type, display_type=<span class="number">0</span>).order_by(<span class="string">'index'</span>)</span><br><span class="line">    type.image_banners = image_banners</span><br><span class="line">    type.title_banners = title_banners</span><br><span class="line">context = &#123;<span class="string">'types'</span>: types,</span><br><span class="line">           <span class="string">'goods_banners'</span>: goods_banners,</span><br><span class="line">           <span class="string">'promotion_banners'</span>: promotion_banners&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 因为是显示用户未登录的首页静态页面，所以必须创建一个新的主页模板文件，创建首页静态页面继承的父模板文件static_base.html以及静态主页模板文件static_index.html，将base.html内容直接拷贝到static_base.html中，再将index.html中的内容全部拷贝到static_index.html中，修改static_index.html模板文件的继承模板文件为static_base.html，然后去除父模板文件static_base.html中的欢迎以及显示用户所在的标签，只留下登录和登出即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402104006654.png" alt></fancybox></p><ul><li><strong>step5</strong> 使用loader方法加载模板文件，再通过模板对象中的render方法渲染出模板文件的内容，最后通过文件读写操作，将模板内容（static_index_html）写入到static目录下的index.html中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.加载模板文件</span></span><br><span class="line">template = loader.get_template(<span class="string">"static_index.html"</span>)  <span class="comment"># 返回模板对象</span></span><br><span class="line"><span class="comment"># 2.渲染模板内容（数据填坑）</span></span><br><span class="line">static_index_html = template.render(context)</span><br><span class="line"><span class="comment"># 3.生成首页静态文件</span></span><br><span class="line">save_index_static_file = os.path.join(settings.BASE_DIR, <span class="string">'static/index.html'</span>)  <span class="comment"># 生成首页静态文件的路径</span></span><br><span class="line"><span class="keyword">with</span> open(save_index_static_file, <span class="string">"w"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(static_index_html)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 在Terminal终端上新开一个终端，执行celery -A celery_tasks.tasks worker -l info 启动worker，结果报错了提示没有模块名，from df_goods.models import GoodsType, IndexGoodsBanner, IndexTypeGoodsBanner, IndexPromotionBanner导入模块报错，原因是在django配置环境没有初始化的时候，导入会报错，根本找不到，所以需要将这几个模型类放到django.setup()吃实话下面，这样就能找到，不会出现以下错误</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402153343246.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 重新执行celery -A celery_tasks.tasks worker -l info，启动2个worker成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402154204275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 向worker发出任务，打开IDE下方的Python Console，导入任务函数generate_static_index_page，去调用delay方法，向worker发送任务成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402155109799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step9</strong> 回到Terminal中查看celery 日志，显示任务执行成功，时长0.259秒</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402155342578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 查看static目录是否生成了index.html文件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402155635800.png" alt></fancybox></p><ul><li><strong>step11</strong> 查看index.html文件内容，该内容已经是对templates/index.html模板进行填坑后的数据了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019040216015266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step12</strong> 在浏览器中直接打开static/index.html静态页面，只显示出商品图片，也是所有填坑数据，所有的静态文件资源路径not found，无法找到</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402163714931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402163447634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><font style="color:red">6.配置nginx服务器，让nginx服务器来提交静态页面</font></p><ul><li><strong>step1</strong> 首先想要nginx服务器提交静态页面，那么就需要在nginx所在的服务器中有项目文件，所以拷贝项目到nginx服务器（Ubuntu）桌面上</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402164414656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 其次是添加nginx服务器server配置，添加如下配置<br><font style="color:red"><strong>说明</strong>：listen 监听80端口，也就是nginx的默认端口号</font></li></ul><p><font style="color:red">/static表示 访问请求地址为 nginx服务器IP:listen/static（192.168.4.63:80/static）alias指定文件路径为ubuntu中项目下的static目录，顺便说一下alisa配置端只有location本地，从本地获取路径，而root配置端为http、server、location、if</font></p><p><font style="color:red">/表示 访问请求地址为 nginx服务器IP:listen/static（192.168.4.63:80）root指定文件路径为ubuntu中项目下的static目录</font></p><p><font style="color:red">index 表示配置网页初始页，后面可以跟多个，会在root目录下去查找，找到匹配的就返回</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p><font style="color:red">之所以配置/static和/这两种路径是因为生成的static目录下的index.html文件内容中，静态资源文件路径都是/static开头的，当在浏览器中输入<a href="http://192.168.4.63/（nginx服务器IP）" target="_blank" rel="noopener">http://192.168.4.63/（nginx服务器IP）</a> ，就会匹配location / 地址，然后就会将static目录下查找是否存在index.html或者是index.htm文件并且将查找到的文件返回给浏览器，浏览器在对index.html进行解析时，然后发现内容中的所有静态资源需要从192.168.4.63:80/static/xxxxx地址进行获取，匹配location /static地址然后就会从ubuntu桌面项目static目录下获取文件</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        #charset koi8-r;</span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line">        location /static &#123;</span><br><span class="line">            alias   /home/taogang/Desktop/dailyfresh/static/;</span><br><span class="line">        &#125;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /home/taogang/Desktop/dailyfresh/static/;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 重启nginx服务</li></ul><p><img src="https://img-blog.csdnimg.cn/2019040217491480.png" alt></p><ul><li><strong>step4</strong> 在浏览器中输入<a href="http://192.168.4.63/成功显示出首页静态页面，**不输入端口号浏览器默认端口就是80" target="_blank" rel="noopener">http://192.168.4.63/成功显示出首页静态页面，**不输入端口号浏览器默认端口就是80</a>**</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402175144374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 查看首页静态页面中静态资源访问地址，验证<strong>step2</strong>博主说的静态资源访问地址</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190402175325741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>7.django后台管理更新首页数据时重新生成新的首页静态页面</p><ul><li><strong>step1</strong> <font style="color:red">在df_goods/admin中定义IndexPromotionBannerAdmin类，该类继承于admin.ModelAdmin，在这个类中重写父类的save_model方法以及delete_model方法用于django后台对表数据进行修改删除时，会调用我们重写父类的方法，在这两个方法中再调用父类的的save_model以及delete_model方法完成数据的更新操作，然后再向worker发出任务，重新从数据库中获取修改后的数据，读写templates目录下已经更新数据后的index.html文件的内容写入到static下的index.html中，显示最新的主页静态页面</font></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexPromotionBannerAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    <span class="string">"""重写父类中的save_model方法，该方法在后台管理页面对数据修改时时会调用此方法"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_model</span><span class="params">(self, request, obj, form, change)</span>:</span></span><br><span class="line">        <span class="comment"># 调用父类中国的save_model方法让数据完成更新</span></span><br><span class="line">        super(IndexPromotionBannerAdmin, self).save_model(request,obj,form,change)</span><br><span class="line">        <span class="comment"># 向worker发出任务，重新生成更新数据后的页面</span></span><br><span class="line">        <span class="keyword">from</span> celery_tasks.tasks <span class="keyword">import</span> generate_static_index_page</span><br><span class="line">        generate_static_index_page.delay()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_model</span><span class="params">(self, request, obj)</span>:</span></span><br><span class="line">        <span class="string">"""对数据进行删除时会调用"""</span></span><br><span class="line">        super(IndexPromotionBannerAdmin, self).delete_model(request, obj)</span><br><span class="line">        <span class="comment"># 向worker发出任务，重新生成更新数据后的页面</span></span><br><span class="line">        <span class="keyword">from</span> celery_tasks.tasks <span class="keyword">import</span> generate_static_index_page</span><br><span class="line">        generate_static_index_page.delay(</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 注册首页促销活动模型类</span></span><br><span class="line">admin.site.register(IndexPromotionBanner, IndexPromotionBannerAdmin)  <span class="comment"># 将管理类添加进去</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 因为首页静态页面是从nginx服务器中（ubuntu）本地项目static目录下的index.html，所以在windows项目这边需要将tasks.py文件中broker设置为nginx服务器的中的redis数据库作为中间人</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app = Celery(<span class="string">"celery_tasks.tasks"</span>, broker=<span class="string">"redis://192.168.1.8:6379/4"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在ubuntu中配置redis可任意ip连接，注释掉bind即可</li></ul><p><img src="https://img-blog.csdnimg.cn/20190403015303206.png" alt></p><ul><li><strong>step4</strong> 测试在windows电脑上远程ubuntu电脑上的redis数据库</li></ul><p><img src="https://img-blog.csdnimg.cn/20190403015503467.png" alt></p><ul><li><strong>step5</strong> 在nginx服务器中（ubuntu）中启动worker</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190403015706813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 然后在django后台修改数据，点击保存时即worker显示接收到任务，最后访问192.168.1.8（nginx服务器IP），查看静态页面是否更新，博主这里就修改主页中促销商品的显示顺序，index展示顺序</li></ul><p><img src="https://img-blog.csdnimg.cn/20190403015804937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step7</strong> 刷新主页静态页面<a href="http://192.168.1.8/" target="_blank" rel="noopener">http://192.168.1.8/</a>，结果页面没人任何数据，原因是在ubuntu中的项目配置的mysql数据库为本地，所以没说任何数据，之前在django管理页面添加数据为windows本地项目，所以需要在windows msyql中新建个用户用于ubuntu项目中进行访问数据，需要注意的是windows关闭防火墙</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on dailyfresh.* to &quot;taogang&quot;@&quot;%&quot; identified by &quot;123456&quot;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190403030703374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step8</strong> 修改ubuntu项目中的settings配置文件mysql项</li></ul><p><img src="https://img-blog.csdnimg.cn/20190403030950547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step9</strong> 重新刷新<a href="http://192.168.1.8/主页静态页面后，成功显示出数据" target="_blank" rel="noopener">http://192.168.1.8/主页静态页面后，成功显示出数据</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190403031242615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 修改IndexPromotionBannerAdmin类为BaseModelAdmin，并定义其他模型管理类，继承于BaseModelAdmin，当管理员在后台对其他表数据进行修改时也同样调用我们重写的方法对数据进行更新，然后向worker发出任务，完成首页静态页面数据的更新</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseModelAdmin</span><span class="params">(admin.ModelAdmin)</span>:</span></span><br><span class="line">    <span class="string">"""重写父类中的save_model方法，该方法在后台管理页面对数据修改时时会调用此方法"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_model</span><span class="params">(self, request, obj, form, change)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"11111111111"</span></span><br><span class="line">        <span class="comment"># 调用父类中国的save_model方法让数据完成更新</span></span><br><span class="line">        super(BaseModelAdmin, self).save_model(request,obj,form,change)</span><br><span class="line">        <span class="comment"># 向worker发出任务，重新生成更新数据后的页面</span></span><br><span class="line">        <span class="keyword">from</span> celery_tasks.tasks <span class="keyword">import</span> generate_static_index_page</span><br><span class="line">        generate_static_index_page.delay()</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_model</span><span class="params">(self, request, obj)</span>:</span></span><br><span class="line">        <span class="string">"""对数据进行删除时会调用"""</span></span><br><span class="line">        super(BaseModelAdmin, self).delete_model(request, obj)</span><br><span class="line">        <span class="comment"># 向worker发出任务，重新生成更新数据后的页面</span></span><br><span class="line">        <span class="keyword">from</span> celery_tasks.tasks <span class="keyword">import</span> generate_static_index_page</span><br><span class="line">        generate_static_index_page.delay()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsTypeAdmin</span><span class="params">(BaseModelAdmin)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsSKUAdmin</span><span class="params">(BaseModelAdmin)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsAdmin</span><span class="params">(BaseModelAdmin)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexGoodsBannerAdmin</span><span class="params">(BaseModelAdmin)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexPromotionBannerAdmin</span><span class="params">(BaseModelAdmin)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexTypeGoodsBannerAdmin</span><span class="params">(BaseModelAdmin)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 注册商品类型模型类</span></span><br><span class="line">admin.site.register(GoodsType, GoodsTypeAdmin)</span><br><span class="line"><span class="comment"># 注册商品SKU模型类</span></span><br><span class="line">admin.site.register(GoodsSKU, GoodsSKUAdmin)</span><br><span class="line"><span class="comment"># 注册商品SPU模型类</span></span><br><span class="line">admin.site.register(Goods, GoodsAdmin)</span><br><span class="line"><span class="comment"># 注册首页幻灯片展示模型类</span></span><br><span class="line">admin.site.register(IndexGoodsBanner, IndexGoodsBannerAdmin)</span><br><span class="line"><span class="comment"># 注册首页促销活动模型类</span></span><br><span class="line">admin.site.register(IndexPromotionBanner, IndexPromotionBannerAdmin)</span><br><span class="line"><span class="comment"># 注册分类商品展示模型类</span></span><br><span class="line">admin.site.register(IndexTypeGoodsBanner, IndexTypeGoodsBannerAdmin)</span><br></pre></td></tr></table></figure><p><font style="color:red">8.关于静态页面与django类视图IndexView调度说明</font></p><ul><li><strong>step1</strong> <font style="color:red">前面所有的访问操作都是192.168.1.8（主页静态页面，通过Ubuntu nginx服务器返回）以及127.0.0.1:8000（主页动态页面，通过windows django服务器返回），即问题是当用户访问时网站主页时，怎么区分给用户访问静态主页还是动态主页且用户只能输入一个IP地址，不可能一个网站有两个域名IP吧，所以我们设定用户请求的网站地址为192.168.1.8，当用户直接在浏览器中输入<a href="http://192.168.1.8/时，就相当于访问" target="_blank" rel="noopener">http://192.168.1.8/时，就相当于访问</a> /  就向ngin服务器获取静态主页，当用户输入<a href="http://192.168.1.8/index时，就想当于访问" target="_blank" rel="noopener">http://192.168.1.8/index时，就想当于访问</a> /index 就向django服务器获取类视图中返回的动态主面，因此就可以来判断用户请求的是静态主页还是动态主页，那么为了完成用户请求地址的判断，则需要使用调度服务器（另一个nginx服务器作为请求地址的调度）</font>，示意图如下</li></ul><p><img src="https://img-blog.csdnimg.cn/201904031549048.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step2</strong> 修改IndexView的url路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^/index$"</span>, IndexView.as_view(), name=<span class="string">"index"</span>),  <span class="comment"># 首页</span></span><br></pre></td></tr></table></figure><p>9.<font style="color:red">设置以及获取首页的缓存数据</font></p><ul><li><strong>step1</strong> 分析</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.把首页用到的数据存放到缓存中</span><br><span class="line">2.当用户请求首页页面数据时，就到redis数据中获取缓存数据</span><br><span class="line">3.如果数据获取不到时，再去数据进行查询，这样做就减少了数据库的查询操作</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在IndexView视图函数中先去获取获取缓存数据，当返回的数据为空时， 则对数据库进行查询操作，并设置缓存数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">    <span class="string">'''显示首页'''</span></span><br><span class="line">    <span class="comment"># 先从缓存中获取主页数据</span></span><br><span class="line">    context = cache.get(<span class="string">"index_page_data"</span>)</span><br><span class="line">    <span class="keyword">if</span> context <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="string">"""缓存中没有数据就去数据库查询获取并设置"""</span></span><br><span class="line">        print(<span class="string">"设置主页缓存数据"</span>)</span><br><span class="line">        <span class="comment"># 获取商品的种类信息</span></span><br><span class="line">        types = GoodsType.objects.all()</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 获取首页轮播商品信息</span></span><br><span class="line">        goods_banners = IndexGoodsBanner.objects.all().order_by(<span class="string">'index'</span>)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 获取首页促销活动信息</span></span><br><span class="line">        promotion_banners = IndexPromotionBanner.objects.all().order_by(<span class="string">'index'</span>)</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 获取首页分类商品展示信息</span></span><br><span class="line">        <span class="keyword">for</span> type <span class="keyword">in</span> types: <span class="comment"># GoodsType</span></span><br><span class="line">            <span class="comment"># 获取type种类首页分类商品的图片展示信息</span></span><br><span class="line">            image_banners = IndexTypeGoodsBanner.objects.filter(type=type, display_type=<span class="number">1</span>).order_by(<span class="string">'index'</span>)</span><br><span class="line">            <span class="comment"># 获取type种类首页分类商品的文字展示信息</span></span><br><span class="line">            title_banners = IndexTypeGoodsBanner.objects.filter(type=type, display_type=<span class="number">0</span>).order_by(<span class="string">'index'</span>)</span><br><span class="line"> </span><br><span class="line">            <span class="comment"># 动态给type增加属性，分别保存首页分类商品的图片展示信息和文字展示信息</span></span><br><span class="line">            type.image_banners = image_banners</span><br><span class="line">            type.title_banners = title_banners</span><br><span class="line"> </span><br><span class="line">        context = &#123;<span class="string">'types'</span>: types,</span><br><span class="line">                   <span class="string">'goods_banners'</span>: goods_banners,</span><br><span class="line">                   <span class="string">'promotion_banners'</span>: promotion_banners&#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 设置首页数据的缓存</span></span><br><span class="line">        cache.set(<span class="string">"index_page_data"</span>, context, <span class="number">3600</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 使用字段对象中的update方法，向content字段中设置购物车，这个方法是当字典中有这个cart_count键时，则不进行修改，没有这个键则进行添加操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">context.update(cart_count=cart_count)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 当第一次访问<a href="http://127.0.0.1:8000/index" target="_blank" rel="noopener">http://127.0.0.1:8000/index</a>主页页面时，查看django服务运行日志，成功打印出设置主页缓存数据，第二次访问则没有打印</li></ul><p><img src="https://img-blog.csdnimg.cn/20190403162723136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step5</strong> 查看redis数据</li></ul><p><img src="https://img-blog.csdnimg.cn/20190403162931800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p>10.更新首页缓存数据</p><ul><li><strong>step1</strong> 分析</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">什么时候需要更新首页中的缓存数据</span><br><span class="line">当后台管理员对主页表数据进行修改时，需要更新主页缓存数据</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在df_goods/admin中BaseModelAdmin中，进行缓存数据的清除</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清除缓存数据</span></span><br><span class="line">cache.delete(<span class="string">"index_page_data"</span>)</span><br></pre></td></tr></table></figure><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/88921322" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/88921322</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目之Web端电商网站的实战开发（三）</title>
      <link href="/2019/11/07/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2019/11/07/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶模板文件继承"><span style="color:#4ea1db">一丶模板文件继承</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶用户中心页面显示"><span style="color:#4ea1db">二丶用户中心页面显示</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶登录验证以及登录后跳转的地址"><span style="color:#4ea1db">三丶登录验证以及登录后跳转的地址</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶封装login_required方法"><span style="color:#4ea1db">四丶封装login_required方法</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶登录后显示用户名以及退出登录"><span style="color:#4ea1db">五丶登录后显示用户名以及退出登录</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶用户中心-地址"><span style="color:#4ea1db">六丶用户中心-地址</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#七丶用户中心-信息"><span style="color:#4ea1db">七丶用户中心-信息</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#八丶分布式文件系统FastDFS"><span style="color:#4ea1db">八丶分布式文件系统FastDFS</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#九丶Nginx配置FastDFS使用的安装和配置"><span style="color:#4ea1db">九丶Nginx配置FastDFS使用的安装和配置</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#十丶Python与FastDFS进行交互"><span style="color:#4ea1db">十丶Python与FastDFS进行交互</span></a></li><a id="more"></a><h1 id="一丶模板文件继承"><a href="#一丶模板文件继承" class="headerlink" title="一丶模板文件继承"></a>一丶模板文件继承</h1><p>1.分析网页中共有的模块，定义父模板</p><ul><li><strong>step1</strong> 在templates目录下常见base.html文件，用于主页（index.html），登录页（login.html）以及注册页（register.html）模板的继承</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&#123;# 首页 注册 登录 #&#125;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span> <span class="attr">xml:lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">&#123;% load staticfiles %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=UTF-8"</span>&gt;</span></span><br><span class="line">    &#123;# 网页标题内容块 #&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;% block title %&#125;&#123;% endblock title %&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"&#123;% static 'css/reset.css' %&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"&#123;% static 'css/main.css' %&#125;"</span>&gt;</span></span><br><span class="line">&#123;# 网页顶部引入文件块 #&#125;</span><br><span class="line">    &#123;% block topfiles %&#125;&#123;% endblock topfiles %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&#123;# 网页顶部欢迎信息块 #&#125;</span><br><span class="line">&#123;% block header_con %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header_con"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"welcome fl"</span>&gt;</span>欢迎来到天天生鲜!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login_info fl"</span>&gt;</span></span><br><span class="line">欢迎您：<span class="tag">&lt;<span class="name">em</span>&gt;</span>张 山<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login_btn fl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"login.html"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"register.html"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"user_link fl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../static/user_center_info.html"</span>&gt;</span>用户中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../static/cart.html"</span>&gt;</span>我的购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../static/user_center_order.html"</span>&gt;</span>我的订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endblock header_con %&#125;</span><br><span class="line"> </span><br><span class="line">&#123;# 网页顶部搜索框块 #&#125;</span><br><span class="line">&#123;% block search_bar %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"search_bar clearfix"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index.html"</span> <span class="attr">class</span>=<span class="string">"logo fl"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/logo.png' %&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"search_con fl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"input_text fl"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">placeholder</span>=<span class="string">"搜索商品"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"input_btn fr"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"搜索"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"guest_cart fr"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"cart_name fl"</span>&gt;</span>我的购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"goods_count fl"</span> <span class="attr">id</span>=<span class="string">"show_count"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endblock search_bar %&#125;</span><br><span class="line"> </span><br><span class="line">&#123;# 网站主体内容块 #&#125;</span><br><span class="line">&#123;% block body %&#125;&#123;% endblock body %&#125;</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"foot_link"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>招聘人才<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>CopyRight © 2016 北京天天生鲜信息技术有限公司 All Rights Reserved<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>电话：010-****888    京ICP备*******8号<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;# 网页底部html元素块 #&#125;</span><br><span class="line">    &#123;% block bottom %&#125;&#123;% endblock bottom %&#125;</span><br><span class="line">    &#123;# 网页底部引入文件块 #&#125;</span><br><span class="line">&#123;% block bottomfiles %&#125;&#123;% endblock bottomfiles %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在templates目录下常见base_detail_list.html文件，这个模板文件继承需base.html，用于详情页（detail.html），列表页（list.html）模板的继承</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&#123;# 详情页 列表页 #&#125;</span><br><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line">&#123;# 网站主体内容块 #&#125;</span><br><span class="line">&#123;% block body %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar_con"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar clearfix"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"subnav_con fl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>全部商品分类<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"subnav"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"fruit"</span>&gt;</span>新鲜水果<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"seafood"</span>&gt;</span>海鲜水产<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"meet"</span>&gt;</span>猪牛羊肉<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"egg"</span>&gt;</span>禽类蛋品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"vegetables"</span>&gt;</span>新鲜蔬菜<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"ice"</span>&gt;</span>速冻食品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"navlist fl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"interval"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>手机生鲜<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"interval"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>抽奖<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;# 详情页，列表页主体内容块 #&#125;</span><br><span class="line">    &#123;% block main_content %&#125;&#123;% endblock main_content %&#125;</span><br><span class="line">&#123;% endblock body %&#125;</span><br><span class="line">step3 在templates目录下常见base_no_cart.html文件，这个模板文件继承需base.html，用于购物车页（cart.html），提交订单页（place_order.html）模板的继承</span><br><span class="line">&#123;# 购物车 提交订单 #&#125;</span><br><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line">&#123;% load staticfiles %&#125;</span><br><span class="line">&#123;# 网页顶部搜索框块 #&#125;</span><br><span class="line">&#123;% block search_bar %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"search_bar clearfix"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index.html"</span> <span class="attr">class</span>=<span class="string">"logo fl"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;% static 'images/logo.png' %&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sub_page_name fl"</span>&gt;</span>|&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#123;% block page_title %&#125;&#123;% endblock page_title %&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"search_con fr"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"input_text fl"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">placeholder</span>=<span class="string">"搜索商品"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"input_btn fr"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"搜索"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endblock search_bar %&#125;</span><br><span class="line">step4 在templates目录下常见base_user_center.html文件，这个模板文件继承需base_no_cart.html，用于用户中心三个页面（user_center_info.html）（user_center_order.html）（user_center_site.html）模板的继承</span><br><span class="line">&#123;# 用户中心3页面 #&#125;</span><br><span class="line">&#123;% extends 'base_no_cart.html' %&#125;</span><br><span class="line">&#123;% block title %&#125;天天生鲜-用户中心&#123;% endblock title %&#125;</span><br><span class="line">&#123;% block page_title %&#125;用户中心&#123;% endblock page_title %&#125;</span><br><span class="line">&#123;% block body %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main_con clearfix"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left_menu_con clearfix"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>用户中心<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"user_center_info.html"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>· 个人信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"user_center_order.html"</span>&gt;</span>· 全部订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"user_center_site.html"</span>&gt;</span>· 收货地址<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;# 用户中心右侧内容块 #&#125;</span><br><span class="line">        &#123;% block right_content %&#125;&#123;% endblock right_content %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endblock body %&#125;</span><br></pre></td></tr></table></figure><p>2.注册页登录页主页继承于父模板</p><ul><li><strong>step1</strong> 编写注册页面（register.html）继承于base.html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327144408578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 编写登录页面（login.html）继承于base.html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327145129952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 编写主页（index.html）继承于bases.html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327150736139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 测试页面显示是否正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327151451155.gif" alt></fancybox></p><p>3.用户中心三个页面继承于父模板</p><ul><li><strong>step1</strong> 编写（user_center_info.html）继承于base_user_center.html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327152817401.png" alt></fancybox></p><ul><li><strong>step2</strong>  编写（user_center_order.html）继承于base_user_center.html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327152906538.png" alt></fancybox></p><ul><li><strong>step3</strong>  编写（user_center_site.html）继承于base_user_center.html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327152952318.png" alt></fancybox></p><p>4.购物车页提交订单页继承于父模板</p><ul><li><strong>step1</strong> 编写购物车页（cart.html）继承于base_no_cart.html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327160540915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 编写提交订单页（place_order.html） 继承于base_no_cart.html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327160656330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.商品详情页商品列表页继承于父模板</p><ul><li><strong>step1</strong>  编写详情页（detail.html）继承于base_detail_list.html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327162042783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong>  编写列表页（list.html）继承于base_detail_list.html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327163338894.png" alt></fancybox></p><h1 id="二丶用户中心页面显示"><a href="#二丶用户中心页面显示" class="headerlink" title="二丶用户中心页面显示"></a>二丶用户中心页面显示</h1><p>1.定义类视图</p><ul><li><strong>step1</strong> 定义UserInfoView类并定义get方法，用于显示用户信息页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /user</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfoView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""用户中心-信息"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="string">"""显示页面"""</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"user_center_info.html"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 定义UserOrderView类并定义get方法，用于显示用户订单页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserOrderView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""用户中心-订单"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="string">"""显示页面"""</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"user_center_order.html"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 定义UserAddressView类并定义get方法，用于显示用户地址页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /user/address</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAddressView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""用户中心-地址"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="string">"""显示页面"""</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"user_center_site.html"</span>)</span><br></pre></td></tr></table></figure><p>2.在df_user/urls中配置路由</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^$"</span>, UserInfoView.as_view(), name=<span class="string">"user"</span>),  <span class="comment"># 用户中心-信息</span></span><br><span class="line">url(<span class="string">r"^order$"</span>, UserOrderView.as_view(), name=<span class="string">"order"</span>),  <span class="comment"># 用户中心-订单</span></span><br><span class="line">url(<span class="string">r"^address$"</span>, UserAddressView.as_view(), name=<span class="string">"address"</span>), <span class="comment"># 用户中心-地址</span></span><br></pre></td></tr></table></figure><p>3.输入路由地址进行页面显示</p><ul><li><strong>step1</strong> 用户信息页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327235557523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 用户订单页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327235506355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 用户地址页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327235406836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.修改用户中心链接地址以及激活active选择器</p><ul><li><strong>step1</strong> 在用户中心页面点击个人信息，全部订单以及收货地址时，跳转到正确链接地址</li></ul><p><img src="https://img-blog.csdnimg.cn/20190328000051427.png" alt></p><ul><li><strong>step2</strong> 在base_user_center.html父模板中使用反向解析定义链接地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'user:user' %&#125;"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>· 个人信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'user:order' %&#125;"</span>&gt;</span>· 全部订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'user:address' %&#125;"</span>&gt;</span>· 收货地址<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在用户中心三个类视图中在返回模板文件时，传递三个页面不同的参数，根据参数来判断active激活哪个页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> render(request, <span class="string">"user_center_info.html"</span>, &#123;<span class="string">"page"</span>:<span class="string">"user"</span>&#125;)</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">"user_center_info.html"</span>, &#123;<span class="string">"page"</span>:<span class="string">"order"</span>&#125;)</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">"user_center_info.html"</span>, &#123;<span class="string">"page"</span>:<span class="string">"address"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 紧接着在base_user_center.html父模板对后端返回的数据进行判断处理</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'user:user' %&#125;"</span> &#123;% <span class="attr">if</span> <span class="attr">page</span> == <span class="string">'user'</span> %&#125;<span class="attr">class</span>=<span class="string">"active"</span>&#123;% <span class="attr">endif</span> %&#125;&gt;</span>· 个人信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'user:order' %&#125;"</span>&#123;% <span class="attr">if</span> <span class="attr">page</span> == <span class="string">'order'</span> %&#125;<span class="attr">class</span>=<span class="string">"active"</span>&#123;% <span class="attr">endif</span> %&#125;&gt;</span>· 全部订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'user:address' %&#125;"</span>&#123;% <span class="attr">if</span> <span class="attr">page</span> == <span class="string">'address'</span> %&#125;<span class="attr">class</span>=<span class="string">"active"</span>&#123;% <span class="attr">endif</span> %&#125;&gt;</span>· 收货地址<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 测试效果</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190328002227753.gif" alt></fancybox></p><h1 id="三丶登录验证以及登录后跳转的地址"><a href="#三丶登录验证以及登录后跳转的地址" class="headerlink" title="三丶登录验证以及登录后跳转的地址"></a>三丶登录验证以及登录后跳转的地址</h1><p>1.登录验证</p><ul><li><strong>step1</strong> 导入django模块中的login_required方法，验证用户是否是登录状态，也就是获取session的值，如果用户是登录状态，那么则可以访问需要登录成功后所访问的页面，如果用户未登录，直接访问需要登录后才能看到的页面，则login_required方法默认跳转到<a href="http://127.0.0.1:8000/accounts/login/?next=/user/页面" target="_blank" rel="noopener">http://127.0.0.1:8000/accounts/login/?next=/user/页面</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.decorators <span class="keyword">import</span> login_required</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在df_user/urls中对用户中心信息页添加login_required登录验证方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^$"</span>, login_required(UserInfoView.as_view()), name=<span class="string">"user"</span>),  <span class="comment"># 用户中心-信息</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 未登录状态直接访问<a href="http://127.0.0.1:8000/user/" target="_blank" rel="noopener">http://127.0.0.1:8000/user/</a>（用户中心信息页面）<br>说明：这里之所以换了个浏览器是因为之前的谷歌浏览器有登录成功保存的session，博主不想清除浏览缓存</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190328101949557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在官网文档中调用login_required方法，设置验证不成功跳转的地址，则需要在项目settings配置文件中配置LOGIN_URL，设置为登录地址</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190328103417858.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.登录成功后跳转的地址</p><ul><li><strong>step1</strong> 根据login_required方法验证未登录状态跳转的登录地址<a href="http://127.0.0.1:8000/user/login?next=/user/" target="_blank" rel="noopener">http://127.0.0.1:8000/user/login?next=/user/</a>，在LoginView类视图post方法中，获取请求地址next参数的值，如果当用户访问的是<a href="http://127.0.0.1:8000/user/login" target="_blank" rel="noopener">http://127.0.0.1:8000/user/login</a>登录页面，则next请求地址参数中的next参数无法获取，所以设置默认值为反向解析主页地址</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">next_url = request.GET.get(<span class="string">"next"</span>, reverse(<span class="string">"goods:index"</span>))</span><br><span class="line">response = redirect(next_url)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 验证当用户在未登录状态访问需要登录后才能访问的页面，跳转到<a href="http://127.0.0.1:8000/user/login?next=/user/" target="_blank" rel="noopener">http://127.0.0.1:8000/user/login?next=/user/</a>，进入登录页面，登录成功后是否跳转到未登录时访问的页面<a href="http://127.0.0.1:8000/user/" target="_blank" rel="noopener">http://127.0.0.1:8000/user/</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190328115920523.gif" alt></fancybox></p><ul><li><strong>step3</strong> 验证当用户直接访问登录页面是否进入主页<a href="http://127.0.0.1:8000" target="_blank" rel="noopener">http://127.0.0.1:8000</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190328115953204.gif" alt></fancybox></p><ul><li><strong>step4</strong> 同理将用户中心-订单（<a href="http://127.0.0.1:8000/user/order" target="_blank" rel="noopener">http://127.0.0.1:8000/user/order</a>）和用户中心地址（<a href="http://127.0.0.1:8000/user/address" target="_blank" rel="noopener">http://127.0.0.1:8000/user/address</a>）加上login_required方法，同样情况在未登录状态跳转的登录地址<a href="http://127.0.0.1:8000/user/login?next=/user/order" target="_blank" rel="noopener">http://127.0.0.1:8000/user/login?next=/user/order</a>和<a href="http://127.0.0.1:8000/user/login?next=/user/address" target="_blank" rel="noopener">http://127.0.0.1:8000/user/login?next=/user/address</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^order$"</span>, login_required(UserOrderView.as_view()), name=<span class="string">"order"</span>),  <span class="comment"># 用户中心-订单</span></span><br><span class="line">url(<span class="string">r"^address$"</span>, login_required(UserAddressView.as_view()), name=<span class="string">"address"</span>), <span class="comment"># 用户中心-地址</span></span><br></pre></td></tr></table></figure><h1 id="四丶封装login-required方法"><a href="#四丶封装login-required方法" class="headerlink" title="四丶封装login_required方法"></a>四丶封装login_required方法</h1><p>1.定义工具类</p><ul><li><strong>step1</strong> 在项目目录下创建utils包，在utils包下创建mixin.py文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20190328130430581.png" alt></p><ul><li><strong>step2</strong> 在mixin.py文件中创建LoginRequiredMixin类，封装login_required方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.decorators <span class="keyword">import</span> login_required  <span class="comment"># 验证是否登录</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginRequiredMixin</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">as_view</span><span class="params">(cls, **initkwargs)</span>:</span></span><br><span class="line">        view = super(LoginRequiredMixin, cls).as_view(**initkwargs)</span><br><span class="line">        <span class="keyword">return</span> login_required(view)</span><br></pre></td></tr></table></figure><p>2.在用户中心类视图中继承LoginRequiredMixin类并在urls中去掉login_required方法</p><ul><li><strong>step1</strong> 继承LoginRequiredMixin类</li></ul><p><img src="https://img-blog.csdnimg.cn/20190328131225946.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step2</strong> 去掉login_required方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^$"</span>, UserInfoView.as_view(), name=<span class="string">"user"</span>),  <span class="comment"># 用户中心-信息</span></span><br><span class="line">url(<span class="string">r"^order$"</span>, UserOrderView.as_view(), name=<span class="string">"order"</span>),  <span class="comment"># 用户中心-订单</span></span><br><span class="line">url(<span class="string">r"^address$"</span>, UserAddressView.as_view(), name=<span class="string">"address"</span>),  <span class="comment"># 用户中心-地址</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 验证成功</li></ul><p><img src="https://img-blog.csdnimg.cn/20190328134110705.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><h1 id="五丶登录后显示用户名以及退出登录"><a href="#五丶登录后显示用户名以及退出登录" class="headerlink" title="五丶登录后显示用户名以及退出登录"></a>五丶登录后显示用户名以及退出登录</h1><p>1.登录后显示用户名不显示登录注册功能选项</p><ul><li><strong>step1</strong> <font style="color:red">Django框架默认会给前端模板文件传递request.user对象，如果用户是登录状态访问页面会返回User类的对象user，如果未登录则返回AnonymousUser实力对象，当给前端模板文件返回的是user对象（已登录）则这个实力对象去调is_authenticated方法则会返回True，（未登录）AnonymousUser实力对象去调用is_authenticated方法则会返回False</font>，在base.html模板文件中根据user对象进行判断，如果没有使用重复模板的继承复用，则需要在有class=‘header_con’模块的模板文件中一一进行判断，在此体现出重复内容模板继承的重要性</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if user.is_authenticated %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login_btn fl"</span>&gt;</span></span><br><span class="line">欢迎您：<span class="tag">&lt;<span class="name">em</span> <span class="attr">style</span>=<span class="string">"color: #f89752"</span>&gt;</span>&#123;&#123; user.username &#125;&#125;<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login_btn fl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/user/login"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/user/register"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 直接刷新已登录后的主页进行验证</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190328140141462.png" alt></fancybox></p><p>2.退出登录</p><ul><li><strong>step1</strong> 在base.html模板文件中添加退出按钮</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login_btn fl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url 'user:logout' %&#125;"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在views中定义Logout类视图完成退出功能</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /user/logout</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LogoutView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""退出"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        logout(request)</span><br><span class="line">        <span class="comment"># 退出后跳转到主页</span></span><br><span class="line">        <span class="keyword">return</span> redirect(reverse(<span class="string">"goods:index"</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在urls中定义退出路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^logout$"</span>, LogoutView.as_view(), name=<span class="string">"logout"</span>),  <span class="comment"># 注销</span></span><br></pre></td></tr></table></figure><p>3.验证登录登出功能</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190328143509609.gif" alt></fancybox></p><h1 id="六丶用户中心-地址"><a href="#六丶用户中心-地址" class="headerlink" title="六丶用户中心-地址"></a>六丶用户中心-地址</h1><p>1.在UserAddressView类中定义post方法添加地址</p><ul><li><strong>step1</strong> 接收用户填写的数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">receiver = request.POST.get(<span class="string">"receiver"</span>)  <span class="comment"># 收件人</span></span><br><span class="line">addr = request.POST.get(<span class="string">"addr"</span>)  <span class="comment"># 地址</span></span><br><span class="line">zip_code = request.POST.get(<span class="string">"zip_code"</span>)  <span class="comment"># 邮编</span></span><br><span class="line">phone = request.POST.get(<span class="string">"phone"</span>)  <span class="comment"># 手机号</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong>  验证数据完整性，邮编可以不填</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([receiver, addr, phone]):</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"user_center_site.html"</span>, &#123;<span class="string">"error_msg"</span>:<span class="string">"数据不完整"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 验证手机号格式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> re.match(<span class="string">r'^1[3|4|5|7|8|9][0-9]&#123;9&#125;$'</span>, phone):</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"user_center_site.html"</span>, &#123;<span class="string">"error_msg"</span>: <span class="string">"手机号格式不正确"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 加收货地址，当用户已存在默认收货地址，添加的地址不作为默认收货地址，否则作为默认收货地址， 因为此界面输入登录后的界面，所以django保存了user对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">user = request.user</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    address = Address.objects.get(user=user, is_default=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">except</span> Address.DoesNotExist:</span><br><span class="line">    <span class="comment"># 出现异常表示该用户还没有设置默认地址</span></span><br><span class="line">    address = <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> address:</span><br><span class="line">    is_default = <span class="literal">False</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    is_default = <span class="literal">True</span></span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 保存收货地址，跳转到地址页</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Address.objects.create(user=user, receiver=receiver, addr=addr, zip_code=zip_code, phone=phone, is_default=is_default)</span><br><span class="line"><span class="keyword">return</span> redirect(reverse(<span class="string">"user:address"</span>))</span><br></pre></td></tr></table></figure><p>2.在UserAddressView类get方法中获取地址类Address对象</p><ul><li><strong>step1</strong> 通过登录后的user对象在Address类中获取该用户的地址对象，根据该对象中的is_default字段，设置值为True（也就是该用户存在默认地址）进行数据库df_address表查询，如果出现异常表示该用户并没有收货地，则设置address对象为None，最后将address对象返回给前端模板</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">    <span class="string">"""显示页面"""</span></span><br><span class="line">    <span class="comment"># 获取用户的的收货地址</span></span><br><span class="line">    user = request.user</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        address = Address.objects.get(user=user, is_default=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">except</span> Address.DoesNotExist:</span><br><span class="line">        <span class="comment"># 出现异常表示该用户还没有设置默认地址</span></span><br><span class="line">        address = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"user_center_site.html"</span>, &#123;<span class="string">"page"</span>:<span class="string">"address"</span>,<span class="string">"address"</span>:address&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在用户地址前端模板文件中进行判断，当后端返回的address对象不为空时则从该对象中获取用户填写的收件地址，收件人以及收件人电话，否则返回None</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"site_con"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>当前地址：<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        &#123;% if address %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>&#123;&#123; address.addr &#125;&#125; （&#123;&#123; address.receiver &#125;&#125; 收） &#123;&#123; address.phone &#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        &#123;% else %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span> <span class="attr">style</span>=<span class="string">"color: red"</span>&gt;</span>无默认地址<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.测试</p><ul><li><strong>step1</strong> 添加收货地址</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190328181225233.gif" alt></fancybox></p><ul><li><strong>step2</strong> 查看数据库</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190328181345966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.定义地址模型类管理器</p><ul><li><strong>step1</strong>  在df_use模块models.py文件中创建AddressManager模型类，在类中定义一个方法用于操作模型类对应的数据表，将视图中的UserAddressView类里获取登录后用户的地址对象代码拷贝到此方法中，进行封装</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddressManager</span><span class="params">(models.Manager)</span>:</span></span><br><span class="line">    <span class="string">"""地址模型类管理器"""</span></span><br><span class="line">    <span class="comment"># 用于操作模型类对应的数据表</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_default_address</span><span class="params">(self, user)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            address = self.get(user=user, is_default=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">except</span> self.model.DoesNotExist:</span><br><span class="line">            <span class="comment"># 出现异常表示该用户还没有设置默认地址</span></span><br><span class="line">            address = <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> address</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在df_use模块models.py文件中地址类（Address）中创建AddressManager的实例对象objects</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">objects = AddressManager()</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 回到UserAddressView类视图中，注释掉try包含的代码，直接通过调用Address.objects.get_default_address方法来获取address对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">address = Address.objects.get_default_address(user)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 测试添加地址</li></ul><p><strong>说明：</strong><font style="color:red">收货地址栏可以添加一个复选框，在这个复选框中显示出该用户所有的收货地址，当选择某一个收货地址时，则设置改收货地址的is_default值为1</font></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190328194232415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="七丶用户中心-信息"><a href="#七丶用户中心-信息" class="headerlink" title="七丶用户中心-信息"></a>七丶用户中心-信息</h1><p>1.显示基本信息</p><ul><li><strong>step1</strong> 在UserInfoView类视图get方法中获取用户基本信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">    <span class="string">"""显示页面"""</span></span><br><span class="line">    <span class="comment"># 获取用户地址信息</span></span><br><span class="line">    user = request.user</span><br><span class="line">    address = Address.objects.get_default_address(user)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"user_center_info.html"</span>, &#123;<span class="string">"page"</span>:<span class="string">"user"</span>, <span class="string">"address"</span>:address&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在模板文件user_center_info.html中获取后端返回的用户地址信息对象，根据该对象来对页面信息进行处理</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"user_info_list"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; user.username &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% if address %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>联系方式：<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; address.phone &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>联系地址：<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; address.addr &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>联系方式：<span class="tag">&lt;/<span class="name">span</span>&gt;</span>无<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>联系地址：<span class="tag">&lt;/<span class="name">span</span>&gt;</span>无<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 刷新<a href="http://127.0.0.1:8000/user/" target="_blank" rel="noopener">http://127.0.0.1:8000/user/</a>页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190328204329811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.获取用户历史浏览记录</p><ul><li><strong>step1</strong> 分析历史浏览记录存储设计</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.什么时候添加历史浏览记录</span><br><span class="line">  当用户点击进入某个商品详情页时，需要添加历史浏览记录</span><br><span class="line">2.什么时候获取历史浏览记录</span><br><span class="line">  在用户信息页面显示</span><br><span class="line">3.历史浏览记录往哪里存储</span><br><span class="line">  存储在内存级的redis数据库中提高读写效率</span><br><span class="line">4.以哪种数据格式进行存储</span><br><span class="line">  以list数据格式进行存储</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 通过django_redis包封装好的get_redis_connection方法获取redis中的StrictRedis类的实例对象 ，这个方法接收参数为default与settings配置文件中django缓存数据库设置名default一致</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn = get_redis_connection(<span class="string">"default"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 设置redis数据库的key</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">history_key = <span class="string">"history_%d"</span> % user.id</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 获取用户最新浏览的5个商品的id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sku_ids = conn.lrange(history_key, <span class="number">0</span> ,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 遍历查询到的用户sku_ids,根据遍历出的的id查询出对应的商品信息，之所以定义一个空列表是为了让存入列表中的商品信息，是以先进后出的方式进行排列，因为浏览记录第一个即是用户最后一个浏览的商品详情</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">goods_list = []</span><br><span class="line"><span class="keyword">for</span> sku_id <span class="keyword">in</span> sku_ids:</span><br><span class="line">    goods = GoodsSKU.objects.get(id=sku_id)</span><br><span class="line">    goods_list.append(goods)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 构造返回前端模板响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">content = &#123;<span class="string">"page"</span>:<span class="string">"user"</span>,</span><br><span class="line">           <span class="string">"address"</span>:address,</span><br><span class="line">           <span class="string">"goods_list"</span>:goods_list</span><br><span class="line">           &#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">"user_center_info.html"</span>, content )</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 在user_center_info模板文件中，获取后端返回的数据，并进行判断处理</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for goods in goods_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"detail.html"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; goods.image.url &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"detail.html"</span>&gt;</span>&#123;&#123; goods.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"operate"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"prize"</span>&gt;</span>￥&#123;&#123; goods.price &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"unit"</span>&gt;</span>&#123;&#123; goods.price &#125;&#125;/&#123;&#123; goods.unite &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"add_goods"</span> <span class="attr">title</span>=<span class="string">"加入购物车"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% empty %&#125;</span><br><span class="line">    无历史浏览记录</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 直接刷新<a href="http://127.0.0.1:8000/user/" target="_blank" rel="noopener">http://127.0.0.1:8000/user/</a>用户中心信息页，因为商品详情还没有做，所以数据库中并没有存储历史浏览的商品信息，所以显示无历史浏览记</li></ul><p><img src="https://img-blog.csdnimg.cn/20190329142352402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><h1 id="八丶分布式文件系统FastDFS"><a href="#八丶分布式文件系统FastDFS" class="headerlink" title="八丶分布式文件系统FastDFS"></a><font style="color:red">八丶分布式文件系统FastDFS</font></h1><p>1.FastDFS是一个开源的轻量级<a href="https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/1250388" target="_blank" rel="noopener">分布式文件系统</a>，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题</p><p>2.该项目之所以使用FastDFS进行图片存储，而不使用django管理员网页进行上传，是因为使用FastDFS对海量存储以及存储扩容方便，同时也解决了同文件重复的问题</p><p>3.FastDFS架构图</p><p><img src="https://img-blog.csdnimg.cn/20190330165654332.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p>服务端两个角色：</p><p>Tracker:管理集群，tracker 也可以实现集群。每个 tracker 节点地位平等。收集 Storage 集群的状态。 </p><p>Storage:实际保存文件 Storage 分为多个组，每个组之间保存的文件是不同的。每 个组内部可以有多个成员，组成员内部保存的内容是一样的，组成员的地位是一致的，没有 主从的概念。 </p><p>4.文件上传流程</p><p><img src="https://img-blog.csdnimg.cn/20190330170017981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p>说明：客户端上传文件后存储服务器将文件 ID 返回给客户端，此文件 ID 用于以后访问该文 件的索引信息。文件索引信息包括:组名，虚拟磁盘路径，数据两级目录，文件名</p><p>组名:文件上传后所在的 storage 组名称，在文件上传成功后有 storage 服务器返回， 需要客户端自行保存。 </p><p>虚拟磁盘路径:storage 配置的虚拟路径，与磁盘选项 store_path*对应。如果配置了 store_path0 则是 M00，如果配置了 store_path1 则是 M01，以此类推。 </p><p>数据两级目录:storage 服务器在每个虚拟磁盘路径下创建的两级目录，用于存储数据 文件。 </p><p>文件名:与文件上传时不同。是由存储服务器根据特定信息生成，文件名包含:源存储 服务器 IP 地址、文件创建时间戳、文件大小、随机数和文件拓展名等信息</p><p>5.文件下载流程</p><p><img src="https://img-blog.csdnimg.cn/20190330170237491.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p>6.开发环境搭建简易FastDFS架构</p><p><img src="https://img-blog.csdnimg.cn/20190330170443216.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><font style="color:red">7.FastDFS安装</font></p><p><strong>说明</strong>：FastDFS需要在Linux系统进行安装，网上查了资料并没有推出可以在Windows环境下安装的FastDFS版本，安装FastDFS之前需安装fastdfs依赖包libfastcommon-master.zip</p><ul><li><strong>step1</strong> 解压缩libfastcommon-master.zip包，进入到libfastcommon-master的目录中，执行 ./make.sh进行编译</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330171824317.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step2</strong> 执行 sudo ./make.sh install进行安装</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330171856664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step3</strong> 解压缩fastdfs-master.zip，进入到 fastdfs-master目录中，执行 ./make.sh进行编译</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330172107505.png" alt></p><ul><li><strong>step4</strong> 执行 sudo ./make.sh install进行安装</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330172142269.png" alt></p><p>8.配置跟踪服务器tracker</p><ul><li><strong>step1</strong> 安装完fdfs后在fdfd目录下会产生一个fdfs的配置文件样例 tracker.conf.sample，将该配置文件拷贝并重命名到当前路径下名为tracker.conf</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/fdfs/tracker.conf.sample /etc/fdfs/tracker.conf</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190330172953486.png" alt></p><ul><li><strong>step2</strong> 在/home/taogang/目录中创建目录 fastdfs/tracker两个层级目录，记得修改（/home/用户名）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330173019405.png" alt></p><ul><li><strong>step3</strong> 编辑/etc/fdfs/tracker.conf配置文件,修改 base_path=/home/taogang/fastdfs/tracker</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/fdfs/tracker.conf</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190330173103804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p>9.配置存储服务器storage </p><ul><li><strong>step1</strong> 将fdfs目录下的storage.conf.sample配置文件拷贝并重命名到当前路径下名为tracker.conf<br>sudo cp /etc/fdfs/storage.conf.sample /etc/fdfs/storage.conf</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330174019688.png" alt></p><ul><li><strong>step2</strong> 在/home/taogang/fastdfs/ 目录中创建目录 storage</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330174038474.png" alt></p><ul><li><strong>step3</strong> 编辑/etc/fdfs/storage.conf配置文件，修改如下配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/fdfs/storage.conf</span><br><span class="line">base_path=/home/taogang/fastdfs/storage</span><br><span class="line"> </span><br><span class="line">store_path0=/home/taogang/fastdfs/storage</span><br><span class="line"> </span><br><span class="line">tracker_server=你的ubuntu虚拟机的ip地址:22122</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190330174216666.png" alt></p><p><img src="https://img-blog.csdnimg.cn/20190330174736928.png" alt></p><p><img src="https://img-blog.csdnimg.cn/2019033017474990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><font style="color:red">10.启动tracker 和 storage</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service fdfs_trackerd start</span><br><span class="line">sudo service fdfs_storaged start</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190330180150925.png" alt></p><p><font style="color:red">11.测试是否安装成功</font></p><ul><li><strong>step1</strong> 将fdfs目录下的client.conf.sample配置文件拷贝并重命名到当前路径下名为client.conf</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/fdfs/client.conf.sample /etc/fdfs/client.conf</span><br></pre></td></tr></table></figure><p><strong>step2</strong> 编辑/etc/fdfs/client.conf配置文件，修改如下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/fdfs/client.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">base_path=/home/taogang/fastdfs/tracker</span><br><span class="line">tracker_server=你的ubuntu虚拟机的ip地址:22122</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190330180849102.png" alt></p><ul><li><strong>step3</strong> 上传文件测试，使用fdfs_upload_file /etc/fdfs/client.conf 要上传的文件 ，如果返回类似group1/M00/00/00/xxxxxxxxxxxxxxxxxxxx.sql（上传文件的后缀名）的文件id则说明文件上传成功</li></ul><p><img src="https://img-blog.csdnimg.cn/2019033018094170.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><h1 id="九丶Nginx配置FastDFS使用的安装和配置"><a href="#九丶Nginx配置FastDFS使用的安装和配置" class="headerlink" title="九丶Nginx配置FastDFS使用的安装和配置"></a><font style="color:red">九丶Nginx配置FastDFS使用的安装和配置</font></h1><p><font style="color:red"><strong>1.说明</strong></font>：使用FastDFS分布式系统架构在用户量比较大的时候，用户对内容的获取效率是非常低的，为了提高效率需要借助Nginx服务器来配置FastDFS进行使用，Nginx服务器在处理静态文件的效率是很高的，因为Nginx服务器内核是epoll，上传资源使用fdfs系统，获取资源则借助nginx服务器来获取；需安装nginx-1.8.1.tar.gz和fastdfs-nginx-module-master.zip这两个包，fastdfs-nginx-module-master.zip这个包的作用就是让nginx服务器和fdfs系统进行关联配置的作用</p><p><font style="color:red">2.安装nginx和fastdfs-nginx-module</font></p><ul><li><strong>step1</strong> 解压缩 nginx-1.8.1.tar.gz和fastdfs-nginx-module-master.zip这两个包，进入nginx-1.8.1目录中，执行sudo ./configure –prefix=/usr/local/nginx/ –add-module=（fastdfs-nginx-module-master）解压后的目录的绝对路径/src</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330182854255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p>结果报错了，看提示是缺少PCRE库</p><p><img src="https://img-blog.csdnimg.cn/20190330182957407.png" alt></p><ul><li><strong>step2</strong> 安装pcre，依次执行下面三条命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install libpcre3 libpcre3-dev</span><br><span class="line">sudo apt-get install openssl libssl-dev</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 安装pcre成功后再次执行configure命令，生成Makefile成功</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330183613235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step4</strong> 编译</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330183705485.png" alt></p><p><img src="https://img-blog.csdnimg.cn/2019033018372155.png" alt></p><ul><li><strong>step5</strong> 安装</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330183755669.png" alt></p><ul><li><strong>step6</strong> 安装成功后测试nginx是否安装成功，执行./nginx -t ，结果报错了，根据报错提示，当前用户对该nginx文件下的文件没有读写操作，执行su root切换到root权限，再次执行提示成功</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330184017294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step7</strong> 拷贝fastdfs-nginx-module-master解压后的目录中src下的mod_fastdfs.conf 到 /etc/fdfs/mod_fastdfs.conf命名为mod_fastdfs.conf</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330184414219.png" alt></p><ul><li><strong>step8</strong> 编辑/etc/fdfs/mod_fastdfs.conf配置文件，进行以下修改</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/fdfs/mod_fastdfs.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">connect_timeout=10  # 连接fdfs超时时间</span><br><span class="line">tracker_server=自己ubuntu虚拟机的ip地址:22122</span><br><span class="line">url_have_group_name=true  # 访问fdfs时带不带组的信息（group1）</span><br><span class="line">store_path0=/home/python/fastdfs/storage</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190330185254660.png" alt></p><p><img src="https://img-blog.csdnimg.cn/20190330185306955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/20190330185324758.png" alt></p><ul><li><strong>step9</strong> 拷贝解压缩的fastdfs-master目录下conf目录中http.conf和mime.types配置文件到 /etc/fdfs目录下</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330185519632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step10</strong> 编辑/usr/local/nginx/conf/目录下的nginx.conf配置文件，进行如下编写</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190330185841861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step11</strong> 开启nginx服务</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330185812764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p><font style="color:red">3.测试Nginx服务器配合FastDFS系统进行文件上传与获取</font></p><ul><li><strong>step1</strong> 开启fdfs服务，上传桌面上的goods_detail.jpg图片，返回文件id，这个id需记住，为了下一步的测试</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330190756675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step2</strong> 打开浏览器输入<a href="127.0.0.1:8888" target="_blank" rel="noopener">127.0.0.1:8888</a>(nginx配置的端口)/(上传成功返回的文件id)，成功显示出上传的图片</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330190855314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><h1 id="十丶Python与FastDFS进行交互"><a href="#十丶Python与FastDFS进行交互" class="headerlink" title="十丶Python与FastDFS进行交互"></a><font style="color:red">十丶Python与FastDFS进行交互</font></h1><ul><li><strong>step1</strong> 进入博主自己项目的虚拟环境（django_py2），使用pip安装fdfs_client-py包</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330203805151.png" alt></p><ul><li><strong>step2</strong> 查看虚拟环境中是否存在fdfs_client-py模块</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330203813295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step3</strong> 上传测试（上传成功）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330203918771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step4</strong> 最后话不多说，在浏览器中通过nginx服务器8888端口来访问上传的的test.py文件，输入上传文件成功返回的文件id，<a href="127.0.0.1:8888/group1/M00/00/00/wKgBClyfYxSAGPA_AAAAFZ3HQjA1801.py" target="_blank" rel="noopener">127.0.0.1:8888/group1/M00/00/00/wKgBClyfYxSAGPA_AAAAFZ3HQjA1801.py</a>，因为上传的文件为py脚本文件，所以提示下载窗口，即</li></ul><p><img src="https://img-blog.csdnimg.cn/20190330204730715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><font style="color:red"><strong>step5 归纳</strong></font>：python作为客户端与fdfs系统进行交互并上传文件成功，安装nginx服务器配合fdfs系统使用成功，最后通过访问配置nginx服务group[0-9]以及8888端口在浏览器中访问python客户端上产到fdfs系统上的文件，非常成功</li></ul><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/88842059" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/88842059</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目之Web端电商网站的实战开发（二）</title>
      <link href="/2019/11/06/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/11/06/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶用户注册"><span style="color:#4ea1db">一丶用户注册</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶用户登录"><span style="color:#4ea1db">二丶用户登录</span></a></li><a id="more"></a><h1 id="一丶用户注册"><a href="#一丶用户注册" class="headerlink" title="一丶用户注册"></a>一丶用户注册</h1><p>1.显示用户注册页面</p><ul><li><strong>step1</strong> 在static目录下将register.html文件拷贝到templates模板目录下</li></ul><p><img src="https://img-blog.csdnimg.cn/2019032600531495.png" alt></p><ul><li><strong>step2</strong> 在df_user模块下的views视图中定义一个register函数，定义这个函数的路由正则匹配为/user/register，显示用户注册页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /user/register</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""显示注册页面"""</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"register.html"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在df_user模块下的urls地址中配置注册页面正则规则，以及调用视图函数中的register函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r"^register$"</span>, views.register, name=<span class="string">"register"</span>)  <span class="comment"># 注册页</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 运行项目，在浏览器中输入<a href="http://127.0.0.1:8000/user/register" target="_blank" rel="noopener">http://127.0.0.1:8000/user/register</a>后，将注册页面渲染到浏览器上</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326005607546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 出现上面这种情况是，页面所需要的图片和css以及js文件路径错误404，因为此时的register.html文件放在了templates模板目录下，所以需要在register.html中动态获取路径，需导入静态资源，然后修改每个链接，因为之前在settings配置文件中配置了静态文件URL为/static/所以这里只需要写之后的路径即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load staticfiles %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>天天生鲜-注册<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"&#123;% static 'css/reset.css' %&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"&#123;% static 'css/main.css' %&#125;"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 刷新页面，成功显示出页面内容</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326011556584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.定义注册页面表单数据视图函数</p><ul><li><strong>step1</strong> 首先注册页面数据是以POST请求方式向服务器发送，那么在register.html文件中找到form表单标签，编写用户点击注册按钮后向服务器请求的url地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"/user/register_handle"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在django中发送POST请求表单数据，防止跨站攻击需在form标签下加上{% csrf_token %}</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"/user/register_handle"</span>&gt;</span></span><br><span class="line">    &#123;% csrf_token %&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在df_user/views视图函数中定义register_handle方法，用于处理注册页面数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /user/register/handle</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register_handle</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""处理用户注册数据"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 在在df_user/urls路由地址中定义register_handle视图函数正则匹配规则</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^register_handle$"</span>, views.register_handle, name=<span class="string">"register_handle"</span>)  <span class="comment"># 注册数据处理</span></span><br></pre></td></tr></table></figure><p>3.视图函数register_handle代码逻辑实现</p><ul><li><strong>step1</strong> 接收注册表单数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">username = request.POST.get(<span class="string">"user_name"</span>)</span><br><span class="line">password = request.POST.get(<span class="string">"pwd"</span>)</span><br><span class="line">email = request.POST.get(<span class="string">"email"</span>)</span><br><span class="line">allow = request.POST.get(<span class="string">"allow"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 判断用户传递过来的数据是否存在，不存在返回错误信息提示</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([username, password, email]):</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"register.html"</span>, &#123;<span class="string">"error_msg"</span>:<span class="string">"数据不完整"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 判断用户填写的邮箱是否为正确邮箱</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> re.match(<span class="string">r"^[a-z0-9][\w.\-]*@[a-z0-9\-]+(\.[a-z]&#123;2,5&#125;)&#123;1,2&#125;$"</span>, email):</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"register.html"</span>, &#123;<span class="string">"error_msg"</span>:<span class="string">"邮箱格式不正确"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断用户注册时是否勾选同意，同意后该字段POST请求参数为on</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> allow != <span class="string">"on"</span>:</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"register.html"</span>, &#123;<span class="string">"error_msg"</span>:<span class="string">"请勾选同意"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 进行用户注册，将数据保存在数据库用户名中, 因为在执行迁移文件时，在settings中配置了django认证系统指定的模型类为df_user.User 所以可以不使用传统方式向类中添加属性再保存到数据库，而是直接使用django认证系统封装好的create_user函数将数据直接保存到数据库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user = User.objects.create_user(username, email, password)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 注册成功后，使用反向解析跳转到首页 reverse(根基urls中的主页的namespace:goods模块中的urls主页的name)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> redirect(reverse(<span class="string">"goods:index"</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 为了显示主页，将static目录下的index.html文件拷贝到templates目录下，并加载静态资源文件{% load staticfiles %}修改index.html中的静态文件路径，这个页面的地址比较多，体力活</li></ul><p><img src="https://img-blog.csdnimg.cn/2019032613314426.png" alt></p><ul><li><strong>step8</strong> 在df_goods/views中定义index视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http://127.0.0.1:8000</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""显示首页"""</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"index.html"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 紧接着在df_goods/urls进行正则路由配置</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r"^$"</span>, views.index, name=<span class="string">"index"</span>),  <span class="comment"># 首页</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 查看数据库中的用户信息表</li></ul><p><img src="https://img-blog.csdnimg.cn/20190326131259922.png" alt></p><ul><li><strong>step11</strong> 运行项目，在浏览器中输入<a href="http://127.0.0.1:8000/user/register" target="_blank" rel="noopener">http://127.0.0.1:8000/user/register</a>，进行注册页，填写注册信息，点击注册按钮</li></ul><p><strong>说明：</strong>前端注册页面使用js对密码长度和两次密码是否一致以及邮箱地址是否同意都进行了校验</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326133819354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step12</strong> <font style="color:red">当点击注册按钮时，此时在会跳转到form表单中的action地址（/user/register_handle），匹配df_user/urls中的正则然后调用df_user/views中的register_handle视图函数，处理完数据后最终重定向到主页（index.html）</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326134132774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step13</strong> <font style="color:red">查看数据库df_user表数据，因为使用了django认证系统也就通俗点说在df_user/models中的User类继承了AbstractUser类，所以django的认证系统已经将用户注册时填写的密码进行加密处理后存到数据库，这样我们就不用在视图函数中获取密码并加密然后再保存到数据库表中</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326134839255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step14</strong> django认证系统默认用户表字段is_active为1（激活），所以这里需要进行设置为0（未激活）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user.is_active = <span class="number">0</span></span><br><span class="line">user.save()</span><br></pre></td></tr></table></figure><ul><li><strong>step15</strong> 再此回到注册页面，进行另一个用户注册，验证上一步is_active默认是否为未激活状态</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326140037127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step16</strong> 使用已经注册过的账号进行注册，查看django认证系统错误提示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326140906454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step17</strong> 提示信息为用户名已存在，但这样的显示页面不是我们想要的 </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326141154671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step18</strong> 在进行用户注册之前，需要判断用户注册的用户名是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user = User.objects.get(username=username)</span><br><span class="line"><span class="keyword">except</span> User.DoesNotExist:</span><br><span class="line">    <span class="string">"""如果出现该异常说明用户名不存在，则让user对象为空"""</span></span><br><span class="line">    user = <span class="literal">None</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 如果user对象存在，则表示用户名已存在，返回错误提示信息</span></span><br><span class="line"><span class="keyword">if</span> user:</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"register.html"</span>, &#123;<span class="string">"error_msg"</span>:<span class="string">"用户名已存在"</span>&#125;)</span><br></pre></td></tr></table></figure><p>4.测试数据不合法的情况下，提示错误信息</p><ul><li><strong>step1</strong> 在register.html中form标签下添加error_msg变量</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color: red"</span>&gt;</span>&#123;&#123; error_msg &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 注册已存在的用户名cdtaogang，查看错误提示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326143135430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 填写错误邮箱地址，然后点击注册</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326143041839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 不填写任何数据直接进行注册</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326143303905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.注册优化处理，让显示注册页面和注册数据处理为同一个url地址（/user/register） ，因为显示注册页面为get请求，而注册数据处理为post请求，可以根据请求方式不同来使用同一个url地址</p><ul><li><strong>step1</strong> 在register.html中将form表单action地址修改为/user/register与显示页面地址一致</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"/user/register"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在df_user/views中的register视图函数中进行请求方式判断</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="comment"># /user/register</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="string">"""注册"""</span></span><br><span class="line">    <span class="comment"># 当请求方式为get时表示请求注册页面，反之为处理用户注册数据</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">"GET"</span>:</span><br><span class="line">        <span class="string">"""显示注册页面"""</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"register.html"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="string">"""处理用户注册数据"""</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 注册一个新用户</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326145113930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 查看数据库用户表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326145228243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>6.使用类视图来区分用户请求</p><ul><li><strong>step1</strong> 在df_user/views视图中定义RegisterView视图类，在这个类中定义注册所需的get方法以及post方法，这个方法名必须等同于请求方式名</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.views.generic <span class="keyword">import</span> View</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># /user/register</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RegisterView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""注册"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="string">"""显示注册页面"""</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"register.html"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="string">"""处理用户注册数据"""</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在df_user/urls中需导入RegisterView类，并调用这个类所属父类View中的as_view方法来根据请求方式调用对应的方法完成代码逻辑</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line"> </span><br><span class="line">    url(<span class="string">r"^register$"</span>, RegisterView.as_view(), name=<span class="string">"register"</span>),  <span class="comment"># 注册</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 刷新注册页，进行新用户注册</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326152141898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>7.<font style="color:red">生成用户激活邮件中的token，当在不错的网站进行用户注册成功后，会想用户注册填写的邮箱地址发送账户激活的邮件，在这个邮件内容中会有一个激活的链接地址，并且会提示用户请在2小时内进行激活，2小时后失效；定义激活链接为</font><a href="http://127.0.0.1:8000/user/active/" target="_blank" rel="noopener">http://127.0.0.1:8000/user/active/</a>用户id，<font style="color:red">如果在链接地址明文显示用户的id值的话，就会出现某些懂技术的用户，修改链接地址中的用户id，就很有可能去激活其他用户，所以需要将链接地址中的用户id值进行加密并设置密钥的有效期</font></p><ul><li><strong>step1</strong> 安装itsdangerous模块，使用改模块生成我们所需的token</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install itsdangerous</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 导致该模块中的TimedJSONWebSignatureSerializer类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itsdangerous <span class="keyword">import</span> TimedJSONWebSignatureSerializer <span class="keyword">as</span> Serializer</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 加密用户id，生成激活的token</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">serializer = Serializer(settings.SECRET_KEY, <span class="number">3600</span>)  <span class="comment"># 有效期1小时</span></span><br><span class="line">info = &#123;<span class="string">"confirm"</span>:user.id&#125;</span><br><span class="line">token = serializer.dumps(info)</span><br></pre></td></tr></table></figure><p>8.使用django内置函数发送邮件（这个QQ邮箱为博主小小小小号）</p><ul><li><strong>step1</strong> 这里有QQ邮箱为例，进入QQ邮箱设置，开启POP3/SMTP服务</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326161238828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 使用提示的密保手机向指定的号码发送指定内容来完成验证</li></ul><p><img src="https://img-blog.csdnimg.cn/20190326161522481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step3</strong> 发送成功后，显示出授权码，记住此授权码后，点击保存设置</li></ul><p><img src="https://img-blog.csdnimg.cn/20190326161610326.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step4</strong> 在settings配置文件中进行发送邮件配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 发送邮件配置</span><br><span class="line">EMAIL_BACKEND = &apos;django.core.mail.backends.smtp.EmailBackend&apos;</span><br><span class="line">EMAIL_HOST = &apos;smtp.qq.com&apos;</span><br><span class="line">EMAIL_PORT = 25</span><br><span class="line">#发送邮件的邮箱</span><br><span class="line">EMAIL_HOST_USER = &apos;2384005622@qq.com&apos;</span><br><span class="line">#在邮箱中设置的客户端授权密码</span><br><span class="line">EMAIL_HOST_PASSWORD = &apos;授权码&apos;</span><br><span class="line">#收件人看到的发件人</span><br><span class="line">EMAIL_FROM = &apos;天天生鲜&lt;2384005622@qq.com&gt;&apos;</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在df_user/view视图中导入django内置函数中的send_mail方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.core.mail <span class="keyword">import</span> send_mail</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 在RegisterView类中调用send_mail方法发送邮件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">subject = <span class="string">"天天生鲜欢迎你"</span> <span class="comment"># 邮件标题</span></span><br><span class="line">message = <span class="string">"how are you"</span>  <span class="comment"># 邮件正文</span></span><br><span class="line">sender = settings.EMAIL_FROM  <span class="comment"># 发件人</span></span><br><span class="line">receiver = [email]  <span class="comment"># 收件人</span></span><br><span class="line">send_mail(subject, message, sender, receiver)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 注册一个新用户</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326164334851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 登录注册时的邮箱，查看收件箱</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326164502374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step9</strong> 向邮箱发送账户激活链接地址，htmp_message参数为渲染html标签后再进行内容发送</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">subject = <span class="string">"天天生鲜欢迎你"</span> <span class="comment"># 邮件标题</span></span><br><span class="line">message = <span class="string">''</span>  <span class="comment"># 邮件正文</span></span><br><span class="line">sender = settings.EMAIL_FROM  <span class="comment"># 发件人</span></span><br><span class="line">receiver = [email]  <span class="comment"># 收件人</span></span><br><span class="line">html_message = <span class="string">"""</span></span><br><span class="line"><span class="string">           &lt;h1&gt;%s  恭喜您成为天天生鲜注册会员&lt;/h1&gt;&lt;br/&gt;&lt;h3&gt;请您在1小时内点击以下链接进行账户激活&lt;/h3&gt;&lt;a href="http://127.0.0.1:8000/user/active/%s"&gt;http://127.0.0.1:8000/user/active/%s&lt;/a&gt;</span></span><br><span class="line"><span class="string">"""</span>  %  (username, token, token)</span><br><span class="line">send_mail(subject, message, sender, receiver, html_message=html_message)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 注册一个新用户</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326170550319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step11</strong> 查看邮件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326170614621.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step12</strong> 点击邮件中的链接地址</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326170944448.png" alt></fancybox></p><p>9.<font style="color:red">用户注册激活</font></p><ul><li><strong>step1</strong> 在df_user/views视图中定义ActiveView类，在这个类中定义get方法，用于处理用户激活</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /user/active/......</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ActiveView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""账户激活"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, token)</span>:</span></span><br><span class="line">        <span class="string">"""进行用户激活"""</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取加密的serializer对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">serializer = Serializer(settings.SECRET_KEY, <span class="number">3600</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 解密token，获取要激活的用户信息，首先需要导入itsdangerous包中的SignatureExpired类来处理超时异常，所以接下里的代码需要写到try里面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    info = serializer.loads(token)</span><br><span class="line">    <span class="comment"># 获取用户id</span></span><br><span class="line">    user_id = info[<span class="string">'confirm'</span>]</span><br><span class="line">    <span class="comment"># 根据用户id 获取该用户对象</span></span><br><span class="line">    user = User.objects.get(id=user_id)</span><br><span class="line">    <span class="comment"># 设置该用户对象中的is_active字段的值为1</span></span><br><span class="line">    user.is_active = <span class="number">1</span></span><br><span class="line">    user.save()</span><br><span class="line">    <span class="comment"># 使用反向解析跳转到登录页</span></span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">"user:login"</span>))</span><br><span class="line"><span class="keyword">except</span> SignatureExpired <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment"># 出现异常表示链接失效</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"激活链接已过期"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 创建LoginView类并在这个类中定义get方法用于显示登录页</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /user/login</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginView</span><span class="params">(View)</span>:</span></span><br><span class="line">    <span class="string">"""登录"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="string">"""显示登录页"""</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在df_user/urls中定义以上两个类视图对应的正则以及对应的方法调用，将static目录下的login.html文件拷贝到templates目录下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r"^active/(?P&lt;token&gt;.*)$"</span>, ActiveView.as_view(), name=<span class="string">"active"</span>),  <span class="comment"># 账户激活</span></span><br><span class="line">url(<span class="string">r"^login$"</span>, LoginView.as_view(), name=<span class="string">"login"</span>),  <span class="comment"># 登录</span></span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 注册一个新用户，查看数据库中is_active的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/201903261801150.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 查看邮箱邮件信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326180243868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 在邮箱中点击链接地址进行激活操作，成功跳转到登录页</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326181022705.gif" alt></fancybox></p><ul><li><strong>step9</strong> 查看数据库，该用户is_active字段的是为1表示已激活</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326181141195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>10.使用celery异步发送邮件</p><ul><li><strong>step1</strong> 在项目目录下创建celery_tasks包，在该包下创建tasks.py文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20190326190722226.png" alt></p><ul><li><strong>step2</strong> 在tasks.py文件中创建Celery实例对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app = Celery(<span class="string">"celery_tasks.tasks"</span>, broker=<span class="string">"redis://127.0.0.1:6379/4"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 定义任务函数send_active_email，说明之所以睡眠5秒是为了体现celery异步的强大</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_active_email</span><span class="params">(to_email, username, token)</span>:</span></span><br><span class="line">    <span class="string">"""发送用户激活邮件"""</span></span><br><span class="line">    subject = <span class="string">"天天生鲜欢迎你"</span>  <span class="comment"># 邮件标题</span></span><br><span class="line">    message = <span class="string">''</span>  <span class="comment"># 邮件正文</span></span><br><span class="line">    sender = settings.EMAIL_FROM  <span class="comment"># 发件人</span></span><br><span class="line">    receiver = [to_email]  <span class="comment"># 收件人</span></span><br><span class="line">    html_message = <span class="string">"""</span></span><br><span class="line"><span class="string">                      &lt;h1&gt;%s  恭喜您成为天天生鲜注册会员&lt;/h1&gt;&lt;br/&gt;&lt;h3&gt;请您在1小时内点击以下链接进行账户激活&lt;/h3&gt;&lt;a href="http://127.0.0.1:8000/user/active/%s"&gt;http://127.0.0.1:8000/user/active/%s&lt;/a&gt;</span></span><br><span class="line"><span class="string">           """</span> % (username, token, token)</span><br><span class="line">    send_mail(subject, message, sender, receiver, html_message=html_message)</span><br><span class="line">    <span class="comment"># 为了体现出celery异步完成发送邮件，这里睡眠5秒</span></span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 另打开一个Terminal终端，执行celery -A celery_tasks.tasks worker -l info 运行任务处理者，需要在broker所在的服务器中执行，<font style="color:red">需要注意的是windows不支持celery4.0以上的版本</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326192044268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> <font style="color:red">注册一个新用户，注册成功跳转到首页后，查看celery处理者运行日志，发现报错了，导致用户注册成功，但邮件并未发送成功原因是在tasks.py文件中导入了项目配置文件settings，而未在执行任务进行初始化，并且在windows环境中要成功使用celery，celery版本必须在4.0以下，任务队列（中间人）redis数据库版本必须在3.0以下，博主经验</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326204135262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326205252287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong>  在tasks.py文件中添加如下代码，作用于worker工作室初始化django配置，因为博主这里使用celery是将任务发布者和中间人（broker）以及任务处理者（worker）在一台主机上运行，所以将下面的初始化配置写在这里，该初始化配置是跟随worker走的</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> django</span><br><span class="line">os.environ.setdefault(<span class="string">"DJANGO_SETTINGS_MODULE"</span>, <span class="string">"dailyfresh.settings"</span>)</span><br><span class="line">django.setup()</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 在新终端中执行celery -A celery_tasks.tasks worker -l info，然后进行新用户注册</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326211933598.gif" alt></fancybox></p><ul><li><strong>step8</strong> <font style="color:red">查看celery运行日志，显示成功，时间为6秒，之所以这么长时间是因为在send_active_email函数中睡眠5秒，由此可见尽管睡眠五秒，但用户在注册的时候根本感觉不到，注册成功瞬间跳转到主页，说明使用celery进行异步发送邮件的重要性</font></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326212246909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step9</strong> 查看用户表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326212101214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 查看redis数据库</li></ul><p><img src="https://img-blog.csdnimg.cn/20190326212403193.png" alt></p><h1 id="二丶用户登录"><a href="#二丶用户登录" class="headerlink" title="二丶用户登录"></a>二丶用户登录</h1><p>1.显示登录页面</p><ul><li><strong>step1</strong> 在用户注册时已经定义了LoginView类视图中的get方法，显示登录页，所以直接在login.html文件中定义form表单请求方式以及请求地址，注：action不写默认表示与登录地址一致，跟用户注册一样，使用同一地址显示并处理登录</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">&#123;% csrf_token %&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在浏览器中输入<a href="http://127.0.0.1:8000/user/login，显示出登录页" target="_blank" rel="noopener">http://127.0.0.1:8000/user/login，显示出登录页</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190326214942236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.处理登录数据校验</p><ul><li><strong>step1</strong> 在类视图LoginView中定义post函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request)</span>:</span></span><br><span class="line">    <span class="string">"""登录校验"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 接收用户填写的数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username = request.POST.get(<span class="string">"username"</span>)</span><br><span class="line">password = request.POST.get(<span class="string">"pwd"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 校验参数完整性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([username, password]):</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>, &#123;<span class="string">"error_msg"</span>:<span class="string">"数据不完整"</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 校验用户名密码，当用户名密码正确情况下保存登录状态到session中，使用django认证系统中的</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">authenticate和login方法</span><br><span class="line">user = authenticate(username=username, password=password)  <span class="comment"># 正确返回user对象，不正确返回None</span></span><br><span class="line"><span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="comment"># 用户名密码正确</span></span><br><span class="line">    <span class="keyword">if</span> user.is_active:</span><br><span class="line">        <span class="comment"># 用户已激活</span></span><br><span class="line">        <span class="comment"># 将用户登录成功后状态保存在session，使用django认证系统中的login方法</span></span><br><span class="line">        login(request, user)</span><br><span class="line">        <span class="comment"># 重定向到主页</span></span><br><span class="line">        <span class="keyword">return</span> redirect(reverse(<span class="string">"goods:index"</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 用户未激活</span></span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>, &#123;<span class="string">"error_msg"</span>:<span class="string">"账户未激活"</span>&#125;)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 用户名或密码错误</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">"login.html"</span>, &#123;<span class="string">"error_msg"</span>:<span class="string">"用户名或密码错误"</span>&#125;)</span><br></pre></td></tr></table></figure><p>3.进行登录测试 ，查看网页走下方红色字样提示</p><ul><li><strong>step1</strong> 登录已激活的账户</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327000454319.gif" alt></fancybox></p><ul><li><strong>step2</strong> 登录不存在的账号</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327001033188.gif" alt></fancybox></p><ul><li><strong>step3</strong> <font style="color:red">登录未激活的账号，这里有一个bug那就是在进行未激活账号登录时一直提示用户名和密码错误，在post方法中通过打印username和password的值查看输入的用户名和密码没错与当初注册时填写的用户名密码对的上，查看django认证系统文档，方法时候啥的都没问题，但是在校验用户名密码时调用的authenticate方法一直返回的是None，这就很奇怪了，通过网上查资料发现需要在settings配置文件中添加如下配置，让django认证系统中的create_user方法再保存用户注册数据时，不关联用户表中的is_active字段，这样再进行登录验证时调用authenticate方法返回错误的None对象</font></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AUTHENTICATION_BACKENDS = [&apos;django.contrib.auth.backends.AllowAllUsersModelBackend&apos;]</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327002936796.gif" alt></fancybox></p><ul><li><strong>step4</strong> 不填写数据直接登录</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327003223436.gif" alt></fancybox></p><p>4.配置django缓存以及session数据存储后端到redis数据库，django默认将session数据存储到mysql数据库（settings配置的数据库）中的django_session表中</p><ul><li><strong>step1</strong> 安装django-redis包</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip2 install django-redis</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在settings中添加django缓存配置以及设置django-redis作为session存储后端</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># django缓存配置</span><br><span class="line">CACHES = &#123;</span><br><span class="line">    &quot;default&quot;: &#123;</span><br><span class="line">        &quot;BACKEND&quot;: &quot;django_redis.cache.RedisCache&quot;,</span><br><span class="line">        &quot;LOCATION&quot;: &quot;redis://127.0.0.1:6379/5&quot;,</span><br><span class="line">        &quot;OPTIONS&quot;: &#123;</span><br><span class="line">            &quot;CLIENT_CLASS&quot;: &quot;django_redis.client.DefaultClient&quot;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 使用django-redis 作为 session 储存后端</span><br><span class="line">SESSION_ENGINE = &quot;django.contrib.sessions.backends.cache&quot;</span><br><span class="line">SESSION_CACHE_ALIAS = &quot;default&quot;</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 查看reids中5库中的键</li></ul><p><img src="https://img-blog.csdnimg.cn/20190327010553653.png" alt></p><ul><li><strong>step4</strong> 进行用户登录，服务器返回响应的sessionid</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327011103986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 查看redis数据库</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327011311323.png" alt></fancybox></p><p>5.用户勾选记住用户名</p><ul><li><strong>step1</strong> 在保存用户登录状态代码中进行如下代码逻辑判断，当用户勾选记住用户名时，remember的值为on，并将用户名保存到cookie中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 因为redirect方法返回的是HttpResponseRedirect对象，而这个对象是HttpResponse的子类，所以可以设置cookie</span></span><br><span class="line">response = redirect(reverse(<span class="string">"goods:index"</span>))</span><br><span class="line"><span class="comment"># 判断用户是否记勾选记住用户名</span></span><br><span class="line">remember = request.POST.get(<span class="string">"remember"</span>)</span><br><span class="line"><span class="keyword">if</span> remember == <span class="string">"on"</span>:</span><br><span class="line">    <span class="comment"># 表示勾选了,将用户名保存在cookie中</span></span><br><span class="line">    response.set_cookie(<span class="string">"username"</span>, username, max_age=<span class="number">7</span>*<span class="number">24</span>*<span class="number">3600</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 删除cookie</span></span><br><span class="line">    response.delete_cookie(<span class="string">"username"</span>)</span><br><span class="line"><span class="comment"># 重定向到主页</span></span><br><span class="line"><span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在显示登录页面get函数中判断用户是否记住用户名，记住用户名则获取cookie中的username并且设置勾选框为checked勾选状态，并返回给前端模板中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断是否勾选记住用户名</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">'username'</span> <span class="keyword">in</span> request.COOKIES:</span><br><span class="line">    username = request.COOKIES.get(<span class="string">"username"</span>)</span><br><span class="line">    checked = <span class="string">"checked"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    username=<span class="string">''</span></span><br><span class="line">    checked = <span class="string">''</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">"login.html"</span>, &#123;<span class="string">"username"</span>:username, <span class="string">"checked"</span>:checked&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在login.html中设置用户名username标签的value值，以及remember的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type="text" name="username" class="name_input" value="&#123;&#123; username &#125;&#125;" placeholder="请输入用户名" autocomplete="off"&gt;</span><br><span class="line">&lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"remember"</span> &#123;&#123; checked &#125;&#125;&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 测试登录时记住用户名</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327015409290.gif" alt></fancybox></p><ul><li><strong>step5</strong> 勾选记住用户名后，查看网站cookie看到刚设置的名为username的cookie了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327015831163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 测试登录时不记住用户名</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190327015455680.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/88810060" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/88810060</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django项目之Web端电商网站的实战开发（一）</title>
      <link href="/2019/11/06/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/11/06/Django%E9%A1%B9%E7%9B%AE%E4%B9%8BWeb%E7%AB%AF%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><fancybox><img src="https://cdn.jsdelivr.net/gh/Hellotaogang/cdn@4.6.6/images/django_dailyfresh.png" width="900px" height="300px" align></fancybox><br>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶项目介绍"><span style="color:#4ea1db">一丶项目介绍</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶电商项目开发流程"><span style="color:#4ea1db">二丶电商项目开发流程</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶项目需求"><span style="color:#4ea1db">三丶项目需求</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶项目架构概览"><span style="color:#4ea1db">四丶项目架构概览</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶项目数据库设计"><span style="color:#4ea1db">五丶项目数据库设计</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶项目框架搭建"><span style="color:#4ea1db">六丶项目框架搭建</span></a></li><a id="more"></a><h1 id="一丶项目介绍"><a href="#一丶项目介绍" class="headerlink" title="一丶项目介绍"></a>一丶项目介绍</h1><ul><li><strong>产品</strong>：关于Web端的电商网站</li><li><strong>商业模式</strong>：B2C模式 企业对个人</li><li><strong>设计模式</strong>：使用前后端不分离进行项目开发(后端控制前端的效果展示)</li></ul><p>前端效果展示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019032514093763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶电商项目开发流程"><a href="#二丶电商项目开发流程" class="headerlink" title="二丶电商项目开发流程"></a>二丶电商项目开发流程</h1><p>1.流程图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325212907224.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.1 前奏<br>    项目立项：公司BOSS决定做项目<br>    需求分析：分析客户的需求<br>    原型设计：产品经理画出产品原型图</p><p>2.2 前端<br>    UI设计：使用PS等工具对产品进行界面设计<br>    前端设计：根据UI人员设计的图片，写成对应的前端页面</p><p>2.3 后端<br>    架构设计：①模块划分，功能架构 ② 开发环境选择 ③其他技术 ④部署架构<br>    数据库设计：①分析数据表和表字段 ②表关系<br>    模块代码实现和单元测试：①后端开发人员进行分工开发 ②开发完成后给测试人员进行单元测试</p><p>2.4 尾声<br>    代码整合：将后端代码与前端代码进行耦合合并<br>    集成测试：将整合后的代码再次进行测试<br>    网站发布：在生产环境进行上线</p><h1 id="三丶项目需求"><a href="#三丶项目需求" class="headerlink" title="三丶项目需求"></a>三丶项目需求</h1><p><strong>用户模块</strong></p><ol><li><p>注册页<br> 1.1 注册时校验用户名是否已被注册<br> 1.2 完成用户信息的注册<br> 1.3 给用户的注册邮箱发送邮件，用户点击邮件中的激活链接完成用户账户的激活<br> 1.4 城区的区域信息需动态加载</p></li><li><p>登录页<br> 2.1 实现用户的登录功能</p></li><li><p>用户中心<br> 3.1 用户中心信息页：显示登录用户的信息，包括用户名、电话和地址，同时页面下方显示出用户最近浏览的商品信息<br> 3.2 用户中心地址页：显示登录用户的默认收件地址，页面下方的表单可以新增用户的收货地址<br> 3.3 用户中心订单页：显示登录用户的订单信息<br> 3.4 用户可以选择城区、入住时间、离开时间等条件进行搜索</p></li><li><p>其他<br> 4.1 如果用户已经登录，页面顶部显示登录用户的信息</p></li></ol><p><strong>商品相关</strong></p><ol><li><p>首页<br> 1.1 动态指定首页轮播商品信息<br> 1.2 动态指定首页活动信息<br> 1.3 动态获取商品的种类信息并显示<br> 1.4 动态指定首页显示的每个种类的商品(包括图片商品和文字商品)<br> 1.5 点击某一个商品时跳转到商品的详情页面</p></li><li><p>商品详情页<br> 2.1 显示出某个商品的详情信息<br> 2.2 页面的左下方显示出该种类商品的2个新品信息</p></li><li><p>商品列表页<br> 3.1 显示出某一个种类商品的列表数据，分页显示并支持按照默认、价格、和人气进行排序<br> 3.2 页面的左下方显示出该种类商品的2个新品信息</p></li><li><p>其他<br> 4.1 通过页面搜索框搜索商品信息</p></li></ol><p><strong>购物车相关</strong><br>    1 列表页和详情页将商品添加到购物车<br>    2 用户登录后，首页，详情页，列表页显示登录用户购物车中商品的数目<br>    3 购物车页面：对用户购物车中商品的操作。如选择某件商品，增加或减少购物车中商品的数目</p><p><strong>订单相关</strong><br>    1 提交订单页面：显示用户准备购买的商品信息<br>    2 点击提交订单完成订单的创建<br>    3 用户中心订单页显示用户的订单信息<br>    4 点击支付完成订单的支付</p><h1 id="四丶项目架构概览"><a href="#四丶项目架构概览" class="headerlink" title="四丶项目架构概览"></a>四丶项目架构概览</h1><p>1.页面图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325142424812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.功能图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325142457358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.部署图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325142558314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶项目数据库设计"><a href="#五丶项目数据库设计" class="headerlink" title="五丶项目数据库设计"></a>五丶项目数据库设计</h1><p>1.分析网站页面所需的参数</p><p><strong>注册页（register.html）</strong><br>    ①用户名<br>    ②密码<br>    ③邮箱</p><p><strong>登录页（login.html）</strong><br>    ①用户名<br>    ②密码</p><p><strong>用户中心页（user_center_site.html）</strong><br>    ①收件人<br>    ②详细地址<br>    ③邮编<br>    ④联系方式</p><p><strong>商品详情页（detail.html）</strong><br>    ①商品名称<br>    ②简介<br>    ③价格<br>    ④单位<br>    ⑤商品库存<br>    ⑥商品详情<br>    ⑦商品图片<br>    ⑧商品种类编号</p><p><strong>主页（index.html）</strong><br>    ①商品种类名称<br>    ②logo<br>    ③图片</p><p><strong>商品列表页（list.html）</strong><br>    ①商品名称<br>    ②商品价格<br>    ③商品图片<br>    ④商品分类</p><p><strong>购物车页（cart.html）</strong><br>    ①商品图片<br>    ②商品名称<br>    ③商品SKU（库存量单位）</p><p><strong>提交订单页（place_order.html）</strong><br>    ①地址<br>    ②支付方式<br>    ③商品信息<br>    ④总金额<br>    ⑤运费<br>    ⑥商品信息</p><p><strong>用户订单页（user_center_order.html）</strong><br>    ①订单编号<br>    ②支付状态<br>    ③订单创建时间</p><p>2.将参数拆分到其所对应的表中</p><p><strong>用户表（df_user）</strong><br>    ①主键ID<br>    ②用户名<br>    ③密码<br>    ④邮箱<br>    ⑤激活标识（是否激活邮箱）<br>    ⑥权限标识（普通用户和管理员）</p><p><strong>地址表（df_address）</strong><br>    ①主键ID<br>    ②收件人<br>    ③收件地址<br>    ④邮编<br>    ⑤联系方式<br>    ⑥是否默认（默认收货地址）<br>    ⑦用户ID （外键）</p><p><strong>商品SKU表（df_goods_sku）</strong><br>    ①主键ID<br>    ②商品名称<br>    ③简介<br>    ④价格<br>    ⑤单位<br>    ⑥库存<br>    ⑦销量<br>    ⑧图片（这个图片字段只存一张商品封面图）<br>    ⑨状态<br>    ⑩商品种类ID（外键）<br>    ⑪spu ID（外键）</p><p><strong>商品种类表（df_goods_type）</strong><br>    ①主键ID<br>    ②种类名称<br>    ③logo<br>    ④图片</p><p><strong>主页幻灯片商品表（df_index_banner）</strong><br>    ①主键ID<br>    ②sku ID （外键）<br>    ③图片<br>    ④index （图片索引值）</p><p><strong>主页促销活动表（df_index_promotion）</strong><br>    ①主键ID<br>    ②图片<br>    ③活动url地址<br>    ④index（图片索引值）</p><p><strong>商品SPU表（df_goods）</strong><br>    ①主键ID<br>    ②名称<br>    ③商品详情</p><p><strong>主页分类商品展示表（df_index_type_goods）</strong><br>    ①主键ID<br>    ②sku ID （外键）<br>    ③种类ID<br>    ④展示标识<br>    ⑤index（图片索引值）</p><p><strong>商品图片表（df_goods_image）</strong><br>    ①主键ID<br>    ②图片<br>    ③sku ID</p><p><strong>订单商品表（df_order_goods）</strong><br>    ①主键ID<br>    ②订单ID （外键）<br>    ③sku ID （外键）<br>    ④商品数量<br>    ⑤商品价格<br>    ⑥评论</p><p><strong>订单信息表（df_order_info）</strong><br>    ①主键ID<br>    ②订单ID （外键）<br>    ③用户ID （外键）<br>    ④支付方式<br>    ⑤总数量<br>    ⑥总金额<br>    ⑦运费<br>    ⑧支付状态<br>    ⑨创建时间</p><h1 id="六丶项目框架搭建"><a href="#六丶项目框架搭建" class="headerlink" title="六丶项目框架搭建"></a>六丶项目框架搭建</h1><p><strong>说明：</strong>博主这里使用开发环境为Windows7+PyCharm</p><p>1.在PyCharm中创建dailyfresh项目，然后再到终端中创建项目应用模块，如下图所示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019032517551860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.在实际项目开发中应用比较多时，会在项目下创建一个名为apps的包，并将应用目录放在该apps下</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325180249457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.在配置文件settings中注册应用</p><ul><li><strong>step1</strong> 项目配置文件settings中导入sys模块，添加apps包到系统路径中，这样做的目的是在添加应用时不用写apps.应用名</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(BASE_DIR, <span class="string">"apps"</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 注册刚创建出来的应用 </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">    &apos;df_cart&apos;,</span><br><span class="line">    &apos;df_goods&apos;,</span><br><span class="line">    &apos;df_order&apos;,</span><br><span class="line">    &apos;df_user&apos;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>4.在配置文件settings中配置mysql数据库</p><ul><li><strong>step1</strong> 在mysql中创建dailyfresh数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> dailyfresh <span class="keyword">charset</span>=utf8;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 配置数据库 </li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    'default': &#123;</span><br><span class="line">        'ENGINE': 'django.db.backends.mysql',</span><br><span class="line">        'NAME': 'dailyfresh',</span><br><span class="line">        'USER': 'root',</span><br><span class="line">        'PASSWORD': 'mysql',</span><br><span class="line">        'HOST': 'localhost',</span><br><span class="line">        'PORT': '3306',</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 顺便设置语言和时区</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LANGUAGE_CODE = &apos;zh-hans&apos;</span><br><span class="line"> </span><br><span class="line">TIME_ZONE = &apos;Asia/Shanghai&apos;</span><br></pre></td></tr></table></figure><p>5.在配置文件settings中配置静态文件目录</p><ul><li><strong>step1</strong> 在项目目录下创建static目录，用于存放前端静态文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20190325184103681.png" alt></p><ul><li><strong>step2</strong> 在settings配置文件末端将static目录路径添加到系统路径中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STATICFILES_DIRS = [os.path.join(BASE_DIR, &quot;static&quot;)]</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 将前端资源放到static目录下</li></ul><p><img src="https://img-blog.csdnimg.cn/20190326002613320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><p>6.在根基urls.py文件设置正则匹配将应用模块中的urls包含进来</p><ul><li><strong>step1</strong> 在根基urls.py文件中进行如下编写，namespace表示反向解析</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, include(admin.site.urls)),</span><br><span class="line">    url(<span class="string">r'^user/'</span>, include(<span class="string">'df_user.urls'</span>, namespace=<span class="string">'user'</span>)),  <span class="comment"># 用户模块</span></span><br><span class="line">    url(<span class="string">r'^cart/'</span>, include(<span class="string">'df_cart.urls'</span>, namespace=<span class="string">'cart'</span>)),  <span class="comment"># 购物车模块</span></span><br><span class="line">    url(<span class="string">r'^order/'</span>, include(<span class="string">'df_order.urls'</span>, namespace=<span class="string">'order'</span>)),  <span class="comment"># 订单模块</span></span><br><span class="line">    url(<span class="string">r'^'</span>, include(<span class="string">'df_goods.urls'</span>, namespace=<span class="string">'goods'</span>)),  <span class="comment"># 商品模块</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在每个应用模块中创建urls.py文件，内容如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">   </span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>7.在项目目录下创建一个名为db的python包，在这个包下创建一个base_model.py文件，用作于基类完成数据库表共有字段</p><ul><li><strong>step1</strong> 创建base_model.py文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20190325190821194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step2</strong> 在base_model.py中进行如下编写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseModel</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="string">"""抽象模型基类"""</span></span><br><span class="line">    create_time = models.DateTimeField(auto_now_add=<span class="literal">True</span>, verbose_name=<span class="string">"创建时间"</span>)</span><br><span class="line">    update_time = models.DateTimeField(auto_now=<span class="literal">True</span>, verbose_name=<span class="string">"更新时间"</span>)</span><br><span class="line">    isDelete = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">"删除标记"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        <span class="comment"># 表示为抽象模型类</span></span><br><span class="line">        abstract = <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>8.在df_user模块中的models.py中定义两个模型类分别是用户模型类和地址模型类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AbstractUser</span><br><span class="line"><span class="keyword">from</span> db.base_model <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(AbstractUser, BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''用户模型类'''</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_user'</span></span><br><span class="line">        verbose_name = <span class="string">'用户'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Address</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''地址模型类'''</span></span><br><span class="line">    user = models.ForeignKey(<span class="string">'User'</span>, verbose_name=<span class="string">'所属账户'</span>)</span><br><span class="line">    receiver = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'收件人'</span>)</span><br><span class="line">    addr = models.CharField(max_length=<span class="number">256</span>, verbose_name=<span class="string">'收件地址'</span>)</span><br><span class="line">    zip_code = models.CharField(max_length=<span class="number">6</span>, null=<span class="literal">True</span>, verbose_name=<span class="string">'邮政编码'</span>)</span><br><span class="line">    phone = models.CharField(max_length=<span class="number">11</span>, verbose_name=<span class="string">'联系电话'</span>)</span><br><span class="line">    is_default = models.BooleanField(default=<span class="literal">False</span>, verbose_name=<span class="string">'是否默认'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_address'</span></span><br><span class="line">        verbose_name = <span class="string">'地址'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><p>9.在df_goods模块中的models.py中定义模型类</p><ul><li><strong>step1</strong> 在models.py中进行如下编写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> db.base_model <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> tinymce.models <span class="keyword">import</span> HTMLField</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsType</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''商品类型模型类'''</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'种类名称'</span>)</span><br><span class="line">    logo = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'标识'</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">'type'</span>, verbose_name=<span class="string">'商品类型图片'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_goods_type'</span></span><br><span class="line">        verbose_name = <span class="string">'商品种类'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsSKU</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''商品SKU模型类'''</span></span><br><span class="line">    status_choices = (</span><br><span class="line">        (<span class="number">0</span>, <span class="string">'下线'</span>),</span><br><span class="line">        (<span class="number">1</span>, <span class="string">'上线'</span>),</span><br><span class="line">    )</span><br><span class="line">    type = models.ForeignKey(<span class="string">'GoodsType'</span>, verbose_name=<span class="string">'商品种类'</span>)</span><br><span class="line">    goods = models.ForeignKey(<span class="string">'Goods'</span>, verbose_name=<span class="string">'商品SPU'</span>)</span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'商品名称'</span>)</span><br><span class="line">    desc = models.CharField(max_length=<span class="number">256</span>, verbose_name=<span class="string">'商品简介'</span>)</span><br><span class="line">    price = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, verbose_name=<span class="string">'商品价格'</span>)</span><br><span class="line">    unite = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'商品单位'</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">'goods'</span>, verbose_name=<span class="string">'商品图片'</span>)</span><br><span class="line">    stock = models.IntegerField(default=<span class="number">1</span>, verbose_name=<span class="string">'商品库存'</span>)</span><br><span class="line">    sales = models.IntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">'商品销量'</span>)</span><br><span class="line">    status = models.SmallIntegerField(default=<span class="number">1</span>, choices=status_choices, verbose_name=<span class="string">'商品状态'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_goods_sku'</span></span><br><span class="line">        verbose_name = <span class="string">'商品'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Goods</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''商品SPU模型类'''</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'商品SPU名称'</span>)</span><br><span class="line">    <span class="comment"># 富文本类型:带有格式的文本</span></span><br><span class="line">    detail = HTMLField(blank=<span class="literal">True</span>, verbose_name=<span class="string">'商品详情'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_goods'</span></span><br><span class="line">        verbose_name = <span class="string">'商品SPU'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoodsImage</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''商品图片模型类'''</span></span><br><span class="line">    sku = models.ForeignKey(<span class="string">'GoodsSKU'</span>, verbose_name=<span class="string">'商品'</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">'goods'</span>, verbose_name=<span class="string">'图片路径'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_goods_image'</span></span><br><span class="line">        verbose_name = <span class="string">'商品图片'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexGoodsBanner</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''首页轮播商品展示模型类'''</span></span><br><span class="line">    sku = models.ForeignKey(<span class="string">'GoodsSKU'</span>, verbose_name=<span class="string">'商品'</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">'banner'</span>, verbose_name=<span class="string">'图片'</span>)</span><br><span class="line">    index = models.SmallIntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">'展示顺序'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_index_banner'</span></span><br><span class="line">        verbose_name = <span class="string">'首页轮播商品'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexTypeGoodsBanner</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''首页分类商品展示模型类'''</span></span><br><span class="line">    DISPLAY_TYPE_CHOICES = (</span><br><span class="line">        (<span class="number">0</span>, <span class="string">"标题"</span>),</span><br><span class="line">        (<span class="number">1</span>, <span class="string">"图片"</span>)</span><br><span class="line">    )</span><br><span class="line"> </span><br><span class="line">    type = models.ForeignKey(<span class="string">'GoodsType'</span>, verbose_name=<span class="string">'商品类型'</span>)</span><br><span class="line">    sku = models.ForeignKey(<span class="string">'GoodsSKU'</span>, verbose_name=<span class="string">'商品SKU'</span>)</span><br><span class="line">    display_type = models.SmallIntegerField(default=<span class="number">1</span>, choices=DISPLAY_TYPE_CHOICES, verbose_name=<span class="string">'展示类型'</span>)</span><br><span class="line">    index = models.SmallIntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">'展示顺序'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_index_type_goods'</span></span><br><span class="line">        verbose_name = <span class="string">"主页分类展示商品"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexPromotionBanner</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''首页促销活动模型类'''</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>, verbose_name=<span class="string">'活动名称'</span>)</span><br><span class="line">    url = models.URLField(verbose_name=<span class="string">'活动链接'</span>)</span><br><span class="line">    image = models.ImageField(upload_to=<span class="string">'banner'</span>, verbose_name=<span class="string">'活动图片'</span>)</span><br><span class="line">    index = models.SmallIntegerField(default=<span class="number">0</span>, verbose_name=<span class="string">'展示顺序'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_index_promotion'</span></span><br><span class="line">        verbose_name = <span class="string">"主页促销活动"</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 因为在df_goods模块中使用了第三方模块tinymce富文本编辑器所以需要在settings中进行添加应用</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">    &apos;tinymce&apos;,</span><br><span class="line">    &apos;df_cart&apos;,</span><br><span class="line">    &apos;df_goods&apos;,</span><br><span class="line">    &apos;df_order&apos;,</span><br><span class="line">    &apos;df_user&apos;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在配置文件末尾添加编辑器的配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 富文本编辑器配置</span><br><span class="line">TINYMCE_DEFAULT_CONFIG = &#123;</span><br><span class="line">    &apos;theme&apos;: &apos;advanced&apos;,</span><br><span class="line">    &apos;width&apos;: 600,</span><br><span class="line">    &apos;height&apos;: 400,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 在根基urls文件中配置编辑器url</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^tinymce/'</span>, include(<span class="string">'tinymce.urls'</span>)),  <span class="comment"># 富文本编辑器</span></span><br></pre></td></tr></table></figure><p>10.在df_order模块中的models.py中定义如下模型类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> db.base_model <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderInfo</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''订单模型类'''</span></span><br><span class="line">    PAY_METHOD_CHOICES = (</span><br><span class="line">        (<span class="number">1</span>, <span class="string">'货到付款'</span>),</span><br><span class="line">        (<span class="number">2</span>, <span class="string">'微信支付'</span>),</span><br><span class="line">        (<span class="number">3</span>, <span class="string">'支付宝'</span>),</span><br><span class="line">        (<span class="number">4</span>, <span class="string">'银联支付'</span>)</span><br><span class="line">    )</span><br><span class="line"> </span><br><span class="line">    ORDER_STATUS_CHOICES = (</span><br><span class="line">        (<span class="number">1</span>, <span class="string">'待支付'</span>),</span><br><span class="line">        (<span class="number">2</span>, <span class="string">'待发货'</span>),</span><br><span class="line">        (<span class="number">3</span>, <span class="string">'待收货'</span>),</span><br><span class="line">        (<span class="number">4</span>, <span class="string">'待评价'</span>),</span><br><span class="line">        (<span class="number">5</span>, <span class="string">'已完成'</span>)</span><br><span class="line">    )</span><br><span class="line"> </span><br><span class="line">    order_id = models.CharField(max_length=<span class="number">128</span>, primary_key=<span class="literal">True</span>, verbose_name=<span class="string">'订单id'</span>)</span><br><span class="line">    user = models.ForeignKey(<span class="string">'df_user.User'</span>, verbose_name=<span class="string">'用户'</span>)</span><br><span class="line">    addr = models.ForeignKey(<span class="string">'df_user.Address'</span>, verbose_name=<span class="string">'地址'</span>)</span><br><span class="line">    pay_method = models.SmallIntegerField(choices=PAY_METHOD_CHOICES, default=<span class="number">3</span>, verbose_name=<span class="string">'支付方式'</span>)</span><br><span class="line">    total_count = models.IntegerField(default=<span class="number">1</span>, verbose_name=<span class="string">'商品数量'</span>)</span><br><span class="line">    total_price = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, verbose_name=<span class="string">'商品总价'</span>)</span><br><span class="line">    transit_price = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>,verbose_name=<span class="string">'订单运费'</span>)</span><br><span class="line">    order_status = models.SmallIntegerField(choices=ORDER_STATUS_CHOICES, default=<span class="number">1</span>, verbose_name=<span class="string">'订单状态'</span>)</span><br><span class="line">    trade_no = models.CharField(max_length=<span class="number">128</span>, verbose_name=<span class="string">'支付编号'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_order_info'</span></span><br><span class="line">        verbose_name = <span class="string">'订单'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderGoods</span><span class="params">(BaseModel)</span>:</span></span><br><span class="line">    <span class="string">'''订单商品模型类'''</span></span><br><span class="line">    order = models.ForeignKey(<span class="string">'OrderInfo'</span>, verbose_name=<span class="string">'订单'</span>)</span><br><span class="line">    sku = models.ForeignKey(<span class="string">'df_goods.GoodsSKU'</span>, verbose_name=<span class="string">'商品SKU'</span>)</span><br><span class="line">    count = models.IntegerField(default=<span class="number">1</span>, verbose_name=<span class="string">'商品数目'</span>)</span><br><span class="line">    price = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, verbose_name=<span class="string">'商品价格'</span>)</span><br><span class="line">    comment = models.CharField(max_length=<span class="number">256</span>, verbose_name=<span class="string">'评论'</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">'df_order_goods'</span></span><br><span class="line">        verbose_name = <span class="string">'订单商品'</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><p>11.在settings配置文件中使用django内置的认证系统指定的模型类为df_user下的User类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># django认证系统指定的模型类</span><br><span class="line">AUTH_USER_MODEL = &apos;df_user.User&apos;</span><br></pre></td></tr></table></figure><p>12.生成迁移文件</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325204751966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>13.执行迁移文件</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019032520492812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>14.查看数据库</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190325205129354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>15.运行项目</p><p><img src="https://img-blog.csdnimg.cn/2019032520532189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/88790662" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/88790662</a></p>]]></content>
      
      
      <categories>
          
          <category> Django开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> Django网站实战 </tag>
            
            <tag> Python Web开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（完结）</title>
      <link href="/2019/11/06/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%AE%8C%E7%BB%93%EF%BC%89/"/>
      <url>/2019/11/06/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%AE%8C%E7%BB%93%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶注册和登录以及用户退出功能"><span style="color:#4ea1db">一丶注册和登录以及用户退出功能</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶上传头像功能和修改用户名功能测试"><span style="color:#4ea1db">二丶上传头像功能和修改用户名功能测试</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶发布房源以及实名认证功能测试"><span style="color:#4ea1db">三丶发布房源以及实名认证功能测试</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶网站房屋搜索功能测试"><span style="color:#4ea1db">四丶网站房屋搜索功能测试</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶我的订单功能以及客户订单功能测试"><span style="color:#4ea1db">五丶我的订单功能以及客户订单功能测试</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶网站主页房屋幻灯片功能测试"><span style="color:#4ea1db">六丶网站主页房屋幻灯片功能测试</span></a></li><a id="more"></a><h1 id="一丶注册和登录以及用户退出功能"><a href="#一丶注册和登录以及用户退出功能" class="headerlink" title="一丶注册和登录以及用户退出功能"></a>一丶注册和登录以及用户退出功能</h1><p>1.注册功能</p><ul><li><strong>step1</strong> 使用博主自己的手机号码进行注册功能测试，注册界面（左图），手机收到短信验证（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203100139178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203100312989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 点击注册则成功进入网站主页，并在右上角显示注册的手机号码，功能测试成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203100722415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 查看数据库用户表ih_user_profile与刚注册的用户信息一致</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203101038573.png" alt></fancybox></p><ul><li><strong>step4</strong> 查看redis数据库保存用户登录信息的session数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203103640694.png" alt></fancybox></p><p>2.退出功能</p><ul><li><strong>step1</strong> 点击网站主页右上角的手机号码（左图，刚注册还未设置用户名，所以用户名默认为手机号），进入我的爱家界面（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203101734856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203101744663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 在我的爱家页面，点击最下面的退出功能按钮，成功退出并清除用户信息相关的session数据，在主页右上方显示注册登录按钮</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203102012902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 此时查看redis数据库中session数据，按上一篇博客写的逻辑，正确则只显示csrf_token的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019020310383990.png" alt></fancybox></p><p>3.登录功能</p><p>点击登录按钮，进入登录页（左图），输入刚注册时的手机号码以及密码，成功登录进入主页（右图）</p><p><img src="https://img-blog.csdnimg.cn/2019020310261483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203102644808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><h1 id="二丶上传头像功能和修改用户名功能测试"><a href="#二丶上传头像功能和修改用户名功能测试" class="headerlink" title="二丶上传头像功能和修改用户名功能测试"></a>二丶上传头像功能和修改用户名功能测试</h1><p>1.上传头像功能</p><ul><li><strong>step1</strong> 进入我的爱家（左图），点击修改进入个人信息页面（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/201902031059569.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203110038632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 点击选择文件按钮，选择头像图片（左图），点击上传则设置头像成功（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203110939319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203111009296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step3</strong> 查看数据库用户信息表ih_user_profile，avatar_url头像图片url字段不再为null</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203111233758.png" alt></fancybox></p><p>2.修改用户名功能</p><ul><li><strong>step1</strong> 在用户名一栏输入要修改后用户名（左图），点击保存按钮，则提示保存成功（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203111738595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203111750399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 查看数据库用户信息表ih_user_profile，name字段的值为刚设置的用户名</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203112041314.png" alt></fancybox></p><ul><li><strong>step3</strong> 进入我的爱家页面，在个人信息栏，成功显示出设置的用户头像和用户名</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203112254310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 回到主页，在右上角成功显示出设置的用户名</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203120818378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶发布房源以及实名认证功能测试"><a href="#三丶发布房源以及实名认证功能测试" class="headerlink" title="三丶发布房源以及实名认证功能测试"></a>三丶发布房源以及实名认证功能测试</h1><p>1.实名认证功能</p><ul><li><strong>step1</strong> 首先先进入我的房源页面，当用户想发布房源那么就需要进行实名认证，实名认证成功后，在我的房源页面才有发布房源的功能按钮</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203112906521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 进入实名认证页面（左图），输入姓名以及身份证号（这个身份证号乱输的），如（右图）所示</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203113110987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203113227504.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step3</strong> 点击保存后，成功则提示保存成功（左图），然后此页面便变成灰色输入框不可编写状态（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203113431423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203113439222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step4</strong> 数据库用户信息表ih_user_profile，real_name和id_card字段的值为用户实名认证填写的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203113723536.png" alt></fancybox></p><p>2.发布房源功能</p><ul><li><strong>step1</strong> 当用户进行实名注册成功之后，再次进入我的房源页，则出现发布房源功能按钮（左图），点击发布房源功能出现（右图）界面</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203114005321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203114015635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 填写房源信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203115501527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 店家发布房源信息进入发布新房源页面（左图），选择房屋图片，点击上传（右图），可以传多张</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203115759821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203120117244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step4</strong> 查看数据库房屋信息表ih_house_info，表字段值与填写的新房源数据一致</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203120404350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 回到我的房源页面，则成功显示该用户发布的房源信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203120548663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶网站房屋搜索功能测试"><a href="#四丶网站房屋搜索功能测试" class="headerlink" title="四丶网站房屋搜索功能测试"></a>四丶网站房屋搜索功能测试</h1><p>1.网站主页搜索</p><ul><li><strong>step1</strong> 用户在主页中选择入住条件</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019020312534569.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 点击搜索后则跳转到房屋列表页，显示出满足用户选择的入住条件的房屋（左图），客户点击此列表页中任意一房屋后，则显示该房屋的相关信息（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203125734149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" div align="left"><img src="https://img-blog.csdnimg.cn/20190203125917613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" div align="right"></p><ul><li><strong>step3</strong> 此账号用户刚好在锦江区发布过一个房源，因为代码逻辑设定用户自己不能预订自己发布的房屋，所以点击进行该房屋，则不显示即可预定功能按钮</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203130258473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.房源列表页进行搜索</p><p>在房源列表页上，可进行入住日期区域以及按照条件进行筛选，选择2-3~2-5日入住，房屋位置为武侯区，筛选条件为价格由低到高，进行搜索，筛选条件就不进行一一测试了</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203134638737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶我的订单功能以及客户订单功能测试"><a href="#五丶我的订单功能以及客户订单功能测试" class="headerlink" title="五丶我的订单功能以及客户订单功能测试"></a>五丶我的订单功能以及客户订单功能测试</h1><p>1.我的订单功能</p><ul><li><strong>step1</strong> 进入我的订单页面，显示为空，因为该用户并未进行房屋预定（左图），对云漫单间进行预定（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203143007544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203143016295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 因为预订房屋为张三发布的，所以切换到张三账户，在我的订单中对该订单进行接单处理</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203143237309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203143246597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step3</strong> 回到之前账户，查看我的订单显示为待支付状态，功能测试成功，支付功能测试在客户订单功能中进行测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203143421785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.客户订单功能</p><ul><li><strong>step1</strong> 该用户在锦江区成功发布了一个新房源，登录18033333333（张三）账号，对此房源进行预定，在主页选择锦江区（左图），点击搜索按钮，默认筛选条件为最新，所以第一个为该用户发布的房屋（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203135015341.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203135218152.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 点击房屋图片显示房屋信息，点击即可预定对该房屋进行预定（左图），输入入住以及离开日期后，显示出订单总金额（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203135504587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203135513511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step3</strong> 提交订单后，显示该订单状态信息为待接单</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203135651800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 此时登录180XXXXX796（2019 努力 奋斗）账号，进入我的爱家—–客户订单页面，显示18033333333（张三）预定了我的房屋的订单信息（左图），选择接单，此单状态变为已接单状态（右图），选择拒单则需要填写拒单原因，拒单就不进行演示了，之前的博客已经演示过了</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203140215668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/2019020314041149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step5</strong> 切换到18033333333（张三）账号，查看我的订单则显示此单的状态为待支付状态（左图），正常来说是待使用，等到客户到店入住后，则显示为入住中，退房时显示为待支付，支付后显示为待评价，评价完成后，此订单状态才为已完成，前面的三个步骤给省略掉了，因为没那个时间去等待测试，点击去支付则跳转到登录支付宝页面（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203140640233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203141009857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step6</strong> 登录支付宝后，则显示订单的信息，以及付款金额（左图），确认付款输入支付密码后，则显示支付成功界面（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203141247167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203141324300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step7</strong> 点击完成后，则跳转到我的订单页面，此时订单的状态为待评价状态</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203141509454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 点击发表评价后，弹出评价框（左图），输入评价信息，然后确定则此单的评价信息成功显示出来（右图）</li></ul><p><img src="https://img-blog.csdnimg.cn/20190203141947840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203141957537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step9</strong> 切换到180XXXXX796（2019 努力 奋斗）账号，进入到客户订单中，在此订单我的评价一栏也显示了用户作出的评价信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203142714893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="六丶网站主页房屋幻灯片功能测试"><a href="#六丶网站主页房屋幻灯片功能测试" class="headerlink" title="六丶网站主页房屋幻灯片功能测试"></a>六丶网站主页房屋幻灯片功能测试</h1><p><strong>说明</strong>：网站主页五张幻灯片是按照订单量倒序进行筛选的，意思就是订单量越大则显示到幻灯片主页第一张，以此类推，因为主页幻灯片属于用户经常访问的资源，所以是保存在redis数据库中当中缓存数据的，所以就会有有效期（7200S），当过了有效期后则会按照此时的订单量进行筛选房屋数据的，按照房屋的订单量进行倒序排序，取出5条数据对象，每个对象中的房屋图片，则显示拿到前端主页页面进行显示给所有用户</p><ul><li><strong>step1</strong> 在数据库中按照订单量的倒序进行查询，并显示5条</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203145240141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 根据数据库查询结果，得值云漫单间排名第一，所以在主页房屋幻灯片第一张应该是云漫单间</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203145501912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/86756248" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86756248</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（十四）</title>
      <link href="/2019/11/06/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
      <url>/2019/11/06/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶支付接口"><span style="color:#4ea1db">一丶支付接口</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶支付宝支付后端接口编写"><span style="color:#4ea1db">二丶支付宝支付后端接口编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶支付宝支付测试"><span style="color:#4ea1db">三丶支付宝支付测试</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶获取支付宝支付结果对订单状态进行修改"><span style="color:#4ea1db">四丶获取支付宝支付结果对订单状态进行修改</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶测试订单支付成功后对订单状态的修改"><span style="color:#4ea1db">五丶测试订单支付成功后对订单状态的修改</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶测试客户评论对订单状态以及订单量的增加"><span style="color:#4ea1db">六丶测试客户评论对订单状态以及订单量的增加</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#七丶项目优化"><span style="color:#4ea1db">七丶项目优化</span></a></li><a id="more"></a><h1 id="一丶支付接口"><a href="#一丶支付接口" class="headerlink" title="一丶支付接口"></a>一丶支付接口</h1><p>1.分析：当客户下单后，房东需要进入客户订单中，将该订单进行接单处理后，那么在客户的我的订单功能中，才能对此订单进行支付操作，当客户点击支付后，接入支付宝支付（这里以支付宝为支付方式，微信的话逻辑也是一样）</p><p>2.支付宝开发文档</p><ul><li><strong>step1</strong> 进入支付宝开放平台<a href="https://open.alipay.com/platform/home.htm，进入开发接入-----查看详情" target="_blank" rel="noopener">https://open.alipay.com/platform/home.htm，进入开发接入-----查看详情</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130102723785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 然后选择支付应用下的接入文档</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130102959142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 点击全部文档</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130103648730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 进入手机网站支付，查看开发说明文档</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130103810293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.支付宝产品流程</p><ul><li><strong>step1</strong> 用户已安装支付宝支付流程：</li></ul><p>步骤1：用户在浏览器中访问商家网页应用，选择商品下单、确认购买，进入支付环节，选择支付宝付款，用户点击去支付，如下图1；<br>步骤2：进入到支付宝支付路由页面，支付宝处理支付请求，并尝试唤起支付宝客户端，如下图2；<br>步骤3：进入到支付宝页面，调起支付宝支付，出现确认支付界面，如下图3；</p><table>    <tbody>        <tr>            <td colspan="1" rowspan="1">图1：                <p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZzAxLnRhb2Jhb2Nkbi5jb20vdG9wL2kxL0xCMTViUlhMWFhYWFhhMlhwWFhYWFhYWFhYWA" width="277" height="491" div align="left"></p>            </td>            <td colspan="1" rowspan="1">图2：                <p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZzAxLnRhb2Jhb2Nkbi5jb20vdG9wL2kxL0xCMVNkTU5LVlhYWFhjeGFYWFhYWFhYWFhYWA" width="277" height="491" div align="left">                </p>            </td>            <td colspan="1" rowspan="1">图3：                <p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZzAxLnRhb2Jhb2Nkbi5jb20vdG9wL2kxL0xCMUR2TTNLVlhYWFhYT1hGWFhYWFhYWFhYWA" width="277" height="491" div align="left">                </p>            </td>        </tr>    </tbody></table><p>步骤4：用户确认收款方和金额，点击立即支付后出现输入密码界面，如下图4；<br>步骤5：输入正确密码后，支付宝端显示支付结果，如下图5；<br>步骤6：自动回跳到浏览器中，商家根据付款结果个性化展示订单处理结果，如下图6。<br><strong>注意</strong>：<font style="color:red">在iOS系统中，唤起支付宝App支付完成后，不会自动回到浏览器或商户App。用户可手工切回到浏览器或商户App。</font></p><table>    <tbody>        <tr>            <td colspan="1" rowspan="1">图4：                <p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZzAxLnRhb2Jhb2Nkbi5jb20vdG9wL2kxL0xCMVhhcGJMWFhYWFhhLlhwWFhYWFhYWFhYWA" width="277" height="491" div align="left"></p>            </td>            <td colspan="1" rowspan="1">图5：                <p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZzAxLnRhb2Jhb2Nkbi5jb20vdG9wL2kxL0xCMVI0VVlLVlhYWFhielhGWFhYWFhYWFhYWA" width="277" height="491" div align="left">                </p>            </td>            <td colspan="1" rowspan="1">图6：                <p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZzAxLnRhb2Jhb2Nkbi5jb20vdG9wL2kxL0xCMTdic1BLVlhYWFhiemFYWFhYWFhYWFhYWA" width="277" height="491" div align="left">                </p>            </td>        </tr>    </tbody></table><ul><li><strong>step2</strong> 用户未安装支付宝支付流程：<br>用户未安装支付宝支付流程<br>步骤1：若用户未安装支付宝客户端，用户进入到支付宝网页收银台，用户登录支付宝账户，如图7和图8；<br>步骤2：登录成功后，进入付款确认页面，如图9；<br>步骤3：用户点击确认付款，进入支付密码页面，如图10；<br>步骤4：用户输入密码，完成支付，展示支付结果，如图11。</li></ul><table>    <tbody>        <tr>            <td colspan="1" rowspan="1">图7：                <p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZzAxLnRhb2Jhb2Nkbi5jb20vdG9wL2kxL0xCMUo2VTdLVlhYWFhiMlhwWFhYWFhYWFhYWA" width="277" height="491" div align="left"></p>            </td>            <td colspan="1" rowspan="1">图8：                <p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZzAxLnRhb2Jhb2Nkbi5jb20vdG9wL2kxL0xCMWlWbzRLVlhYWFhhY1hGWFhYWFhYWFhYWA" width="277" height="491" div align="left">                </p>            </td>            <td colspan="1" rowspan="1">图9：                <p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZzAxLnRhb2Jhb2Nkbi5jb20vdG9wL2kxL0xCMThLZ0dLVlhYWFhYWmFGWFhYWFhYWFhYWA" width="277" height="491" div align="left">                </p>            </td>        </tr>    </tbody></table><table>    <tbody>        <tr>            <td colspan="1" rowspan="1">图10：                <p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZzAxLnRhb2Jhb2Nkbi5jb20vdG9wL2kxL0xCMXJxSU5LVlhYWFhYdmFwWFhYWFhYWFhYWA" width="277" height="491" div align="left"></p>            </td>            <td colspan="1" rowspan="1">图11：                <p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZzAxLnRhb2Jhb2Nkbi5jb20vdG9wL2kxL0xCMU00QVBLVlhYWFhiNmFYWFhYWFhYWFhYWA" width="277" height="491" div align="left">                </p>            </td>        </tr>    </tbody></table><p>4.创建应用</p><ul><li><strong>step1</strong> 登录支付宝，进入管理中心</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130111242786.png" alt></fancybox></p><ul><li><strong>step2</strong> 填写入住申请</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130111401726.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 提交后进入如下界面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130112043979.png" alt></fancybox></p><ul><li><strong>step4</strong> 进入网页&amp;移动应用列表，进入支付接入</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130115857399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 创建应用并提交审核，通过后，方可在线上使用 ，需要审核，还有填写营业执照啥的，这样太麻烦，微信有测试环境，那么支付宝同样也有，沙箱就是支付宝测试环境</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130121120477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.沙箱：这是支付宝提供开发人员测试的那么一个环境，这个沙箱环境与线上的环境是一样的，在沙箱环境与线上使用唯一不同的就是APPID，如果需要转换为线上的话，只需要将APPID修改为你的应用的APPID即可，程序代码不需要作任何改变，进入支付宝沙箱，在沙箱账号中分为卖家信息和买家信息，账户余额可以任意充值</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130131456363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>6.支付流程图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130140334265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>7.在支付宝开发平台中，只有JAVA PHP 以及.NET三种语言的SDK，在github上也有他人封装好的支付宝支付的SDK</p><p><a href="https://github.com/fzlee/alipay/blob/master/README.zh-hans.md" target="_blank" rel="noopener">https://github.com/fzlee/alipay/blob/master/README.zh-hans.md</a></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130164255213.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶支付宝支付后端接口编写"><a href="#二丶支付宝支付后端接口编写" class="headerlink" title="二丶支付宝支付后端接口编写"></a>二丶支付宝支付后端接口编写</h1><p>1.生成秘钥文件</p><ul><li><strong>step1</strong> 在linux系统中有openssl命令，用来生成秘钥的，进入openssl，执行genrsa -out app_private_key.pem 2048命令，生成2048字节的私钥并保存到app_private_key.pem文件中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130154553643.png" alt></fancybox></p><ul><li><strong>step2</strong> 生成完私钥后，执行rsa -in app_private_key.pem -pubout -out app_public_key.pem，对应根据私钥生成公钥</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130154919488.png" alt></fancybox></p><ul><li><strong>step3</strong> 在终端中使用cat 查看公钥，复制公钥</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130155110536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在沙箱中查看应用公钥点击修改，将刚复制的公钥进行粘贴保存即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190130155556467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 在项目文件api_1_0目录下新建keys目录用于保存项目所需的秘钥，再将在linux系统中生成的app_private_key.pem拷贝到keys项目目录下，在keys目录下创建一个alipay_public_key.pem文件，然后在上图中，查看支付宝公钥，复制支付宝公钥，将复制的支付宝公钥粘贴到alipay_public_key.pem文件中</li></ul><p><img src="https://img-blog.csdnimg.cn/20190130161030109.png" alt></p><p>2.逻辑编写 </p><ul><li><strong>step1</strong> 在api_1_0目录下创建一个pay.py模块，用作于支付，然后子啊<strong>init</strong>中导入此模块</li></ul><p><img src="https://img-blog.csdnimg.cn/2019013016152924.png" alt></p><ul><li><strong>step2</strong> 定义接口路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/orders/&lt;int:order_id&gt;/payment", methods=["POST"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">order_pay</span><span class="params">(order_id)</span>:</span></span><br><span class="line">    <span class="string">"""支付宝支付"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断订单的状态，需要满足参数中订单id与客户的订单id一致，当前订单的用户与登录的用户id一致，以及订单的状态为待支付</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    order = Order.query.filter(Order.id==order_id, Order.user_id==user_id, Order.status==<span class="string">"WAIT_PAYMENT"</span>).first()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"数据库异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 判断订单对象是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> order:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"订单数据有误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 获取应用私钥</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app_private_key_path = os.path.join(os.path.dirname(__file__), <span class="string">"keys/app_private_key.pem"</span>)</span><br><span class="line">app_private_key_string = open(app_private_key_path).read()</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 获取支付宝公钥</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alipay_public_key_path = os.path.join(os.path.dirname(__file__), <span class="string">"keys/alipay_public_key.pem"</span>)</span><br><span class="line">alipay_public_key_string = open(alipay_public_key_path).read()</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 创建支付宝sdk工具对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app_client = AliPay(</span><br><span class="line">    appid=<span class="string">"2016092400589177"</span>, <span class="comment"># 沙箱的appid</span></span><br><span class="line">    app_notify_url=<span class="literal">None</span>,  <span class="comment"># 默认回调url</span></span><br><span class="line">    app_private_key_string=app_private_key_string, <span class="comment"># 私钥</span></span><br><span class="line">    <span class="comment"># 支付宝的公钥，验证支付宝回传消息使用，不是你自己的公钥,</span></span><br><span class="line">    alipay_public_key_string=alipay_public_key_string,</span><br><span class="line">    sign_type=<span class="string">"RSA2"</span>, <span class="comment"># RSA 或者 RSA2</span></span><br><span class="line">    debug = <span class="literal">True</span>  <span class="comment"># 默认False</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 手机网站支付，需要跳转到<a href="https://openapi.alipaydev.com/gateway.do" target="_blank" rel="noopener">https://openapi.alipaydev.com/gateway.do</a>? + order_string</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">order_string = app_client.api_alipay_trade_wap_pay(</span><br><span class="line">    out_trade_no=order.id, <span class="comment"># 订单编号</span></span><br><span class="line">    total_amount=str(order.amount/<span class="number">100.0</span>), <span class="comment"># 总金额</span></span><br><span class="line">    subject=<span class="string">u"爱家租房&lt;%s&gt;"</span> % order.id, <span class="comment"># 订单标题</span></span><br><span class="line">    return_url=<span class="string">"http://127.0.0.1:5000/orders.html"</span>,</span><br><span class="line">    notify_url=<span class="literal">None</span>  <span class="comment"># 可选, 不填则使用默认notify url</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 构造用户跳转的支付链接地址，并返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pay_url = constants.ALIPAY_URL_PREFIX + order_string</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"pay_url"</span>:pay_url&#125;)</span><br></pre></td></tr></table></figure><h1 id="三丶支付宝支付测试"><a href="#三丶支付宝支付测试" class="headerlink" title="三丶支付宝支付测试"></a>三丶支付宝支付测试</h1><p>1.运行项目，清除浏览器缓存，进入<a href="http://127.0.0.1:5000/orders.html" target="_blank" rel="noopener">http://127.0.0.1:5000/orders.html</a>我的订单页面</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190131093200546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.在订单编号为5的订单上进行点击去支付， 然后会出现一个检查客户到的页面，如果客户端存在则会在手机上打开支付宝客户端<font style="color:red">（注：因为这里博主使用的是沙箱进行开发测试，所以在手机端需要安装沙箱版的支付宝，详细说明在开发平台文档中有相关说明，此支付宝只暂不支持IOS）</font></p><p>3.因为博主是在电脑Web上进行测试，所以当环境中没有支付宝客户端，那么就会跳转到支付宝手机网页登录界面，选择支付宝账号登录（左图），输入开发平台沙箱买家账号（右图）进行登录</p><table>    <tbody>        <tr>            <td colspan="1" rowspan="1">图10：                <p><img src="https://img-blog.csdnimg.cn/20190131094134598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="277" height="491" div align="left"></p>            </td>            <td colspan="1" rowspan="1">图11：                <p><img src="https://img-blog.csdnimg.cn/20190131094144359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="277" height="491" div align="left">                </p>            </td>        </tr>    </tbody></table><p>4.点击下一步后，会出现房屋的编号，以及金额，与我的订单中编号5的的订单信息一致（左图），点击确认付款后，输入支付密码，然后出现（右图）成功界面</p><table>    <tbody>        <tr>            <td colspan="1" rowspan="1">                <p><img src="https://img-blog.csdnimg.cn/20190131094313767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="277" height="491" div align="left"></p>            </td>            <td colspan="1" rowspan="1">                <p><img src="https://img-blog.csdnimg.cn/2019013109432472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="277" height="491" div align="left">                </p>            </td>        </tr>    </tbody></table><p>5.点击完成后，根据return_url编写的代码逻辑会跳转到<a href="http://127.0.0.1:5000/orders.html订单页面，此时订单5的状态依然显示待支付（左图），那是因为这一块的逻辑还未进行编写，当支付宝支付成功返回正确响应数据给我们时，我们还未在页面中对订单的状态进行修改，如果此时再点击该订单的去支付，则会出现（右图）页面，而不会跳转到订单支付界面，此时如果点击继续支付，则会报错，因为此订单在支付宝后台已经有对应的流水了" target="_blank" rel="noopener">http://127.0.0.1:5000/orders.html订单页面，此时订单5的状态依然显示待支付（左图），那是因为这一块的逻辑还未进行编写，当支付宝支付成功返回正确响应数据给我们时，我们还未在页面中对订单的状态进行修改，如果此时再点击该订单的去支付，则会出现（右图）页面，而不会跳转到订单支付界面，此时如果点击继续支付，则会报错，因为此订单在支付宝后台已经有对应的流水了</a></p><table>    <tbody>        <tr>            <td colspan="1" rowspan="1">                <p><img src="https://img-blog.csdnimg.cn/20190131094754193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="277" height="491" div align="left"></p>            </td>            <td colspan="1" rowspan="1">                <p><img src="https://img-blog.csdnimg.cn/20190131095004126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="277" height="491" div align="left">                </p>            </td>        </tr>    </tbody></table><h1 id="四丶获取支付宝支付结果对订单状态进行修改"><a href="#四丶获取支付宝支付结果对订单状态进行修改" class="headerlink" title="四丶获取支付宝支付结果对订单状态进行修改"></a>四丶获取支付宝支付结果对订单状态进行修改</h1><p>1.分析：根据代码逻辑当客户进行订单支付后，支付显示成功后，支付宝会携带以下参数跳转到订单页面，正常来说那么在这个页面就应该根据支付宝返回的参数，进行处理，但是放在订单页面进行处理的话就比较麻烦，因为我客户访问我的订单页面时，是不需要携带参数的，而从我的订单页面去访问支付宝支付接口时，成功支付后，返回的我的订单页面是携带了参数的，所以如果要在我的订单页面进行处理的话，需要进行判断到底是客户访问的还是支付宝返回回来的这是其一，其二就是在我的订单页面什么时候让后端去对订单状态进行更改，所以在我的订单页面进行处理的话，逻辑比较复杂，那么最好的方式就是定义一个过渡页面，当支付宝支付成功后，不是直接跳转到我的订单页面，而是跳转到我们定义的过渡页面，在这个过渡页面肯定是有支付宝发送过来的参数，那么就在后端对订单状态进行修改，再跳转到我的订单页面，显示成功支付后的订单状态</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190131101136986.png" alt></fancybox></p><p>前台回跳参数</p><p>公共参数：</p><table><thead><tr><th>参数</th><th align="center">类型</th><th align="center">是否必填</th><th align="center">最大长度</th><th align="center">描述</th><th align="right">示例值</th></tr></thead><tbody><tr><td>app_id</td><td align="center">String</td><td align="center">是</td><td align="center">32</td><td align="center">支付宝分配给开发者的应用ID</td><td align="right">2016040501024706</td></tr><tr><td>method</td><td align="center">String</td><td align="center">是</td><td align="center">128</td><td align="center">接口名称</td><td align="right">alipay.trade.wap.pay.return</td></tr><tr><td>sign_type</td><td align="center">String</td><td align="center">是</td><td align="center">10</td><td align="center">签名算法类型，目前支持RSA2和RSA，推荐使用RSA2</td><td align="right">RSA2</td></tr><tr><td>sign</td><td align="center">String</td><td align="center">是</td><td align="center">256</td><td align="center">支付宝对本次支付结果的<a href="https://docs.open.alipay.com/291/106074" target="_blank" rel="noopener">签名</a>，开发者必须使用支付宝公钥验证签名</td><td align="right">详见示例</td></tr><tr><td>charset</td><td align="center">String</td><td align="center">是</td><td align="center">10</td><td align="center">编码格式，如utf-8,gbk,gb2312等</td><td align="right">utf-8</td></tr><tr><td>timestamp</td><td align="center">String</td><td align="center">是</td><td align="center">19</td><td align="center">前台回跳的时间，格式”yyyy-MM-dd HH:mm:ss”</td><td align="right">2016-08-11 19:36:01</td></tr><tr><td>version</td><td align="center">String</td><td align="center">是</td><td align="center">3</td><td align="center">调用的接口版本，固定为：1.0</td><td align="right">1.0</td></tr></tbody></table><p>业务参数：</p><table><thead><tr><th>参数</th><th align="center">类型</th><th align="center">是否必填</th><th align="center">最大长度</th><th align="center">描述</th><th align="right">示例值</th></tr></thead><tbody><tr><td>out_trade_no</td><td align="center">String</td><td align="center">是</td><td align="center">64</td><td align="center">商户网站唯一订单号</td><td align="right">70501111111S001111119</td></tr><tr><td>trade_no</td><td align="center">String</td><td align="center">是</td><td align="center">64</td><td align="center">该交易在支付宝系统中的交易流水号。最长64位。</td><td align="right">2016081121001004630200142207</td></tr><tr><td>total_amount</td><td align="center">Price</td><td align="center">是</td><td align="center">9</td><td align="center">该笔订单的资金总额，单位为RMB-Yuan。取值范围为[0.01，100000000.00]，精确到小数点后两位。</td><td align="right">9.00</td></tr><tr><td>seller_id</td><td align="center">String</td><td align="center">是</td><td align="center">16</td><td align="center">收款支付宝账号对应的支付宝唯一用户号。 以2088开头的纯16位数字</td><td align="right">2088111111116894</td></tr></tbody></table><p>2.逻辑编写 </p><ul><li><strong>step1</strong> 在static静态文件目录下创建一个payComplete.html订单支付完成页面，将orders.html的代码复制到此文件中，并进行修改</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top-bar"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav-bar"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"page-title"</span>&gt;</span>支付完成<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-btn fl"</span> <span class="attr">href</span>=<span class="string">"/my.html"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-left fa-2x"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"orders-con"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-size: 20px;margin: auto"</span>&gt;</span>支付已完成<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"orders.html"</span> <span class="attr">style</span>=<span class="string">"font-size: 18px"</span>&gt;</span>返回到我的订单页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-copyright"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>爱家租房&amp;nbsp;&amp;nbsp;享受家的温馨<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在pay.py中将return_url修改为<a href="http://127.0.0.1:5000/payComplete.html" target="_blank" rel="noopener">http://127.0.0.1:5000/payComplete.html</a>过渡页面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return_url=<span class="string">"http://127.0.0.1:5000/payComplete.html"</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 访问如下地址，查看此过渡页面</li></ul><p><a href="http://127.0.0.1:5000/payComplete.html?charset=utf-8&out_trade_no=5&method=alipay.trade.wap.pay.return&total_amount=2544.00&sign=U%2Fl06mjzgZwNEdXo0ePmldLIE6wuMZ4qo2PgyDf4Q%2BRZh1b0KdBqaRkckEBZ136Zyr283FzBlNOMprucQcjH6E9i1Df0ZVRx9HJAm54yN6n%2F1ENFpSOG9znILGbGj%2BV9v%2F0efrcUIvBnYgMIHvp2rBJ8ygRjnhQlTC0q5TVafJQ9OHt%2BX9Ae5F7yiJsb%2B8MVoaG6CDSxqy6MpT2JG7h14alKF6At%2BiJVCN6lbs9RCHZgABabTLDgHbkjJWusElCbi6NEzR%2FHvu9ANSz9onb0RmiyfZ35hwVNw1EATKTsdM47TwYxHxHv%2BFS0gFXdDsQnCYpsH%2F0SCL6aqjK%2Fj1r9eg%3D%3D&trade_no=2019013122001459890500811871&auth_app_id=xxx&version=1.0&app_id=xxx&sign_type=RSA2&seller_id=xxx&timestamp=2019-01-31+10%3A47%3A16" target="_blank" rel="noopener">http://127.0.0.1:5000/payComplete.html?charset=utf-8&amp;out_trade_no=5&amp;method=alipay.trade.wap.pay.return&amp;total_amount=2544.00&amp;sign=U%2Fl06mjzgZwNEdXo0ePmldLIE6wuMZ4qo2PgyDf4Q%2BRZh1b0KdBqaRkckEBZ136Zyr283FzBlNOMprucQcjH6E9i1Df0ZVRx9HJAm54yN6n%2F1ENFpSOG9znILGbGj%2BV9v%2F0efrcUIvBnYgMIHvp2rBJ8ygRjnhQlTC0q5TVafJQ9OHt%2BX9Ae5F7yiJsb%2B8MVoaG6CDSxqy6MpT2JG7h14alKF6At%2BiJVCN6lbs9RCHZgABabTLDgHbkjJWusElCbi6NEzR%2FHvu9ANSz9onb0RmiyfZ35hwVNw1EATKTsdM47TwYxHxHv%2BFS0gFXdDsQnCYpsH%2F0SCL6aqjK%2Fj1r9eg%3D%3D&amp;trade_no=2019013122001459890500811871&amp;auth_app_id=xxx&amp;version=1.0&amp;app_id=xxx&amp;sign_type=RSA2&amp;seller_id=xxx&amp;timestamp=2019-01-31+10%3A47%3A16</a></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190131105132158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong>  在pay.py模块中定义接口路由，用于保存订单支付结果</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /api_v1.0/order/payment</span></span><br><span class="line"><span class="meta">@api.route("/order/payment", methods=["PUT"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_order_payment_result</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""保存订单支付结果"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 获取支付宝支付成功返回的响应参数并转换为字典格式数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alipay_dict = request.form.to_dict()</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 对支付宝的数据进行分离 将签名参数sign提取出去并获取值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alipay_sign = alipay_dict.pop(<span class="string">"sign"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 获取应用私钥和支付宝公钥</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取应用私钥</span></span><br><span class="line">app_private_key_path = os.path.join(os.path.dirname(__file__), <span class="string">"keys/app_private_key.pem"</span>)</span><br><span class="line">app_private_key_string = open(app_private_key_path).read()</span><br><span class="line"><span class="comment"># 获取支付宝公钥</span></span><br><span class="line">alipay_public_key_path = os.path.join(os.path.dirname(__file__), <span class="string">"keys/alipay_public_key.pem"</span>)</span><br><span class="line">alipay_public_key_string = open(alipay_public_key_path).read()</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 创建支付宝sdk工具对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app_client = AliPay(</span><br><span class="line">    appid=<span class="string">"2016092400589177"</span>,  <span class="comment"># 沙箱的appid</span></span><br><span class="line">    app_notify_url=<span class="literal">None</span>,  <span class="comment"># 默认回调url</span></span><br><span class="line">    app_private_key_string=app_private_key_string,  <span class="comment"># 应用私钥</span></span><br><span class="line">    <span class="comment"># 支付宝的公钥，验证支付宝回传消息使用，不是你自己的公钥,</span></span><br><span class="line">    alipay_public_key_string=alipay_public_key_string, <span class="comment"># 支付宝公钥</span></span><br><span class="line">    sign_type=<span class="string">"RSA2"</span>,  <span class="comment"># RSA 或者 RSA2</span></span><br><span class="line">    debug=<span class="literal">True</span>  <span class="comment"># 默认False</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 通过支付宝sdk工具对象中的verify方法验证支付宝返回的响应参数中剔除sign参数后，剩余参数与响应参数中的sign值是否一致，如果确定参数是支付宝的，返回True，否则返回false</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = app_client.verify(alipay_dict, alipay_sign)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 验证正确则修改数据库的订单状态信息，最后返回正确响应</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> result:</span><br><span class="line">    <span class="comment"># 获取请求中的参数</span></span><br><span class="line">    order_id = alipay_dict.get(<span class="string">"out_trade_no"</span>)  <span class="comment"># 订单号</span></span><br><span class="line">    trade_no = alipay_dict.get(<span class="string">"trade_no"</span>)  <span class="comment"># 支付宝的流水号</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 查询并修改该订单的状态以及在支付宝中的交易流水号</span></span><br><span class="line">        Order.query.filter_by(id=order_id).update(&#123;<span class="string">"status"</span>: <span class="string">"WAIT_COMMENT"</span>, <span class="string">"trade_no"</span>: trade_no&#125;)</span><br><span class="line">        db.session.commit()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        current_app.logger.error(e)</span><br><span class="line">        db.session.rollback()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>)</span><br></pre></td></tr></table></figure><p>3.更新数据库ih_order_info表字段，增加trade_no字段</p><p><strong>说明：</strong>因为当初在创建数据库时，未设置订单对应的支付宝交易流水号的字段，所以这里进行一个更新</p><ul><li><strong>step1</strong> 在models.py中找到Order类，添加此字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trade_no = db.Column(db.String(<span class="number">128</span>)) <span class="comment"># 支付宝交易流水号</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 生成迁移文件并对数据库进行更新操作</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190131123725297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 查看数据库ih_order_info表结构，添加trade_no字段成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190131123548871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.在payComplete.html中编写js代码，向后端/api/v1.0/order/payment接口发送请求，并携带支付宝支付成功返回的参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r = <span class="built_in">document</span>.cookie.match(<span class="string">"\\b"</span> + name + <span class="string">"=([^;]*)\\b"</span>);</span><br><span class="line">        <span class="keyword">return</span> r ? r[<span class="number">1</span>] : <span class="literal">undefined</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取支付宝返回的url中的参数，并通过substr方法从去掉第一个元素?,因为返回的url参数是以键值对方式进行构造的，所以这里是以请求体数据进行发送给后端接口</span></span><br><span class="line">    <span class="keyword">var</span> alipayData = <span class="built_in">document</span>.location.search.substr(<span class="number">1</span>);</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">"/api/v1.0/order/payment"</span>,</span><br><span class="line">        type: <span class="string">"put"</span>,</span><br><span class="line">        data: alipayData,</span><br><span class="line">        headers: &#123;</span><br><span class="line">            <span class="string">"X-CSRFToken"</span>: getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h1 id="五丶测试订单支付成功后对订单状态的修改"><a href="#五丶测试订单支付成功后对订单状态的修改" class="headerlink" title="五丶测试订单支付成功后对订单状态的修改"></a>五丶测试订单支付成功后对订单状态的修改</h1><p>1.运行项目，清除页面缓存，刷新网页，进入我的订单（左图），因为前面测试支付时，对订单编号为5的订单已经支付成功，所以对应的在支付宝后台中已经形成了此订单编号为5的交易号，所以这里需从数据库中将该订单的编号进行修改，这里修改为100（右图）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> ih_order_info <span class="keyword">set</span> <span class="keyword">id</span>= <span class="number">100</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">5</span>;</span><br></pre></td></tr></table></figure><table>    <tbody>        <tr>            <td colspan="1" rowspan="1">                <p><img src="https://img-blog.csdnimg.cn/20190131125014394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="277" height="491" div align="left"></p>            </td>            <td colspan="1" rowspan="1">                <p><img src="https://img-blog.csdnimg.cn/20190131125517694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="277" height="491" div align="left">                </p>            </td>        </tr>    </tbody></table><p>2.然后将订单编号为100的订单进行支付（左图），点击确认付款后，支付宝显示成功后，则跳转到payComplete.html页面，在此页面中点击返回我的订单页，此订单状态为发表评价（右图），按理说当订单支付成功后，该订单状态显示为已支付，等待用户退房或者完成住宿后，才会出现待评价，这个逻辑被直接省掉了，在此项目中用户一旦支付成功则该订单显示发表评价</p><table>    <tbody>        <tr>            <td colspan="1" rowspan="1">                <p><img src="https://img-blog.csdnimg.cn/20190131125657343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="277" height="491" div align="left"></p>            </td>            <td colspan="1" rowspan="1">                <p><img src="https://img-blog.csdnimg.cn/20190131125710192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="277" height="491" div align="left">                </p>            </td>        </tr>    </tbody></table><p>3.第一次使用支付宝支付接口的朋友们，一般不知道支付宝会收取手续费的，那么博主就带大家看看支付宝的手续费是多少</p><ul><li><strong>step1</strong> 修改我的订单中订单标号为1的订单，将编号改为101，来进行测试，这个房屋之前博主测试过电脑网页支付接口，所以是需要进行编号修改的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190131130650731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 查看蚂蚁金服开放平台—沙箱账号中商家的账户余额为2009144.81，测试订单的金额为4112，没有手续费的情况下，客户支付此单后，商家的账户余额就应该为2013256.81</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190131131024270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 支付编号为101的订单，下面展示支付流程图</li></ul><p><img src="https://img-blog.csdnimg.cn/201901311314073.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190131131419385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><p><img src="https://img-blog.csdnimg.cn/20190131131432717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190131131445124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step4</strong> 点击返回到我的订单页后，订单标号为101的订单显示为可以发表评价</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019013113154872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 在step2时，如果没有支付宝不收取手续费的情况下，客户在支付4112元订单后，商家的账户余额应该为2013256.81元，那么此时在商家信息看看商家的账户余额到底是不是这么多钱，结果发现商家的余额是2013232.14元</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190131132104182.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 计算下支付宝的收费需收取比例是多少，原来是千分之6，还是比较多的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190131140038340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="六丶测试客户评论对订单状态以及订单量的增加"><a href="#六丶测试客户评论对订单状态以及订单量的增加" class="headerlink" title="六丶测试客户评论对订单状态以及订单量的增加"></a>六丶测试客户评论对订单状态以及订单量的增加</h1><p>1.对订单编号为100的订单（左图），点击发表评论按钮，弹出评论框（右图）</p><p><img src="https://img-blog.csdnimg.cn/20190203123132633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190203123141669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><p>2.点击确定按钮后，该订单的状态变成已完成，显示客户评论</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203123309941.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.查看数据库房屋信息表ih_user_info，订单量order_count值从0变成1，代码逻辑当订单状态变成已完成则order_count加1</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190203123515388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="七丶项目优化"><a href="#七丶项目优化" class="headerlink" title="七丶项目优化"></a>七丶项目优化</h1><p>1.解决csrf_token缺失的bug，INFO csrf.py:251 The CSRF token is missing.，在用户进行退出时，不将session数据全部清除，需要将csrf_token的数据保存到session中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在清除session数据时，先从session中获取csrf_token的值</span></span><br><span class="line">csrf_token = session.get(<span class="string">"csrf_token"</span>)</span><br><span class="line">session.clear()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当session数据清除完后 再设置session中的csrf_token的值，这样可以解决csrf_token缺失的bug</span></span><br><span class="line">session[<span class="string">"csrf_token"</span>] = csrf_token</span><br></pre></td></tr></table></figure><p>2.数据库优化：</p><p>a. 表结构设计  扩展  查询的快慢<br>    三范式  <a href="https://www.zhihu.com/question/24696366" target="_blank" rel="noopener">https://www.zhihu.com/question/24696366</a><br>    设计的时候就考虑可能会用到的查询，为方便查询而设计，比如用空间换时间，适当增加冗余字段节省查询开销</p><p>b. 建索引   主键  唯一(unique)  索引(key   index)  （外键）<br>    <a href="http://www.jianshu.com/p/2b541c028157" target="_blank" rel="noopener">http://www.jianshu.com/p/2b541c028157</a><br>    提升 查询速度  复合索引  where k1     k2   k3  k4<br>    降低   增删改</p><p>c. sql语句优化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">使用索引 注意关键字顺序 最左原则  where</span><br><span class="line"></span><br><span class="line">    不要select *</span><br><span class="line"></span><br><span class="line">    能使用联合查询，不使用嵌套（子查询）</span><br><span class="line"></span><br><span class="line">    select  from tbl_a a inner join tbl_b b on a.field=b.filed where b.=</span><br><span class="line"></span><br><span class="line">    select from tbl_a where filed=(select field from tbl_b where b.=)</span><br><span class="line"></span><br><span class="line">    能不使用联合查询，尽量不用联合查询</span><br><span class="line"></span><br><span class="line">    外键 cascade 级联 （维护外键有额外开销，影响性能）  数据量大的时候，不再使用外键</span><br><span class="line"></span><br><span class="line">    使用分析工具分析效率低的sql语句   慢查询工具</span><br></pre></td></tr></table></figure><p><a href="https://flyerboy.github.io/2016/12/23/mysql_slow/" target="_blank" rel="noopener">https://flyerboy.github.io/2016/12/23/mysql_slow/</a><br><a href="https://yemengying.com/2016/05/24/mysql-tuning/" target="_blank" rel="noopener">https://yemengying.com/2016/05/24/mysql-tuning/</a></p><p>d. 缓存<br>    redis memcached</p><p>e. 读写分离<br>    主从热备份       主（写   增删改）  从（查）</p><p>f. 分库分表  水平分库分表<br>    <a href="http://www.infoq.com/cn/articles/key-steps-and-likely-problems-of-split-table" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/key-steps-and-likely-problems-of-split-table</a></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/86699086" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86699086</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（十三）</title>
      <link href="/2019/11/05/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/"/>
      <url>/2019/11/05/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶保存订单后端接口编写"><span style="color:#4ea1db">一丶保存订单后端接口编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶预订页面前端编写以及接口测试"><span style="color:#4ea1db">二丶预订页面前端编写以及接口测试</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶订单模块（我的订单）后端接口编写"><span style="color:#4ea1db">三丶订单模块（我的订单）后端接口编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶订单模块（我的订单）前端编写"><span style="color:#4ea1db">四丶订单模块（我的订单）前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶我的订单功能测试"><span style="color:#4ea1db">五丶我的订单功能测试</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶订单模块（客户订单）后端接口编写"><span style="color:#4ea1db">六丶订单模块（客户订单）后端接口编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#七丶订单模块（客户订单）前端编写以及接口测试"><span style="color:#4ea1db">七丶订单模块（客户订单）前端编写以及接口测试</span></a></li><a id="more"></a><h1 id="一丶保存订单后端接口编写"><a href="#一丶保存订单后端接口编写" class="headerlink" title="一丶保存订单后端接口编写"></a>一丶保存订单后端接口编写</h1><p>1.分析：当用户点击房屋图片进入房间信息页面时，在页面最下面会出现即可预定功能按钮（左图），当用户点击预定时，即跳转到预定页面（右图），在该页面中，首选是获取用户点击的房屋信息显示到此页面上，然后需要用户选择入住的时间和离开的时间，当用户选择完时间后那么在界面左下角即显示出订单的价格，点击提交订单后，此时需要从后端来判断此房间在用户选择入住离开期间有没有冲突订单，如果有则提示用户房屋被抢订，重新选择日期的一个提示，如果提交订单成功，则在我的订单中显示出该订单，这是整个业务逻辑</p><p><img src="https://img-blog.csdnimg.cn/20190127094248993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190127094301338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><p>2.逻辑编写如下</p><ul><li><strong>step1</strong> 在api_v1.0目录下创建orders.py模块，用于编写订单相关的接口，并在<strong>init</strong>.py模块中导入此模块</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127095436279.png" alt></p><ul><li><strong>step2</strong> 定义路由接口</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/orders", methods=["POST"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_order</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""保存用户的订单"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 获取前端发送的请求参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order_data = request.get_json()</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> order_data:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 获取用户预订的房屋编号，入住时间以及离开时间</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">house_id = order_data.get(<span class="string">"house_id"</span>)</span><br><span class="line">start_date_str = order_data.get(<span class="string">"start_date"</span>)</span><br><span class="line">end_date_str = order_data.get(<span class="string">"end_date"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 校验参数完整性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([house_id, start_date_str, end_date_str]):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数不完整"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 检查日期格式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 将str格式的日期数据转换成datetime格式的日期数据</span></span><br><span class="line">    start_date = datetime.strptime(start_date_str, <span class="string">"%Y-%m-%d"</span>)</span><br><span class="line">    end_date = datetime.strptime(end_date_str, <span class="string">"%Y-%m-%d"</span>)</span><br><span class="line">    <span class="keyword">assert</span> start_date &lt;= end_date <span class="comment">#使用断言就行判断</span></span><br><span class="line">    <span class="comment"># 计算预订的天数</span></span><br><span class="line">    days = (end_date-start_date).days + <span class="number">1</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"日期格式不正确"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 查询用户预订的房屋是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    house = House.query.get(house_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取房屋信息失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 判断房屋是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> house:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"房屋不存在"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 判断房东预订的房屋是不是自己的发布的房屋</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> user_id == house.user_id:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.ROLEERR, errmsg=<span class="string">"不能预订自己发布的房屋"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step12</strong> 检查用户预订的时间内，房屋没有被别人下单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 查询时间冲突的订单数 select count(*) from ih_order_info where ()</span></span><br><span class="line">    count = Order.query.filter(Order.house_id == house_id, Order.begin_date &lt;= end_date, Order.end_date &gt;= start_date).count()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"系统繁忙，请稍候重试"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step13</strong> 如果查询的订单冲突数大于0，则说明房屋在用户预订时间内，已被他人预订</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> count &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DATAERR, errmsg=<span class="string">"房屋已被预订"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step14</strong> 计算订单总额</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">amount = house.price * days</span><br></pre></td></tr></table></figure><ul><li><strong>step15</strong> 保存订单数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">order = Order(</span><br><span class="line">        house_id=house_id,</span><br><span class="line">        user_id=user_id,</span><br><span class="line">        begin_date=start_date,</span><br><span class="line">        end_date=end_date,</span><br><span class="line">        days=days,</span><br><span class="line">        house_price=house.price,</span><br><span class="line">        amount=amount</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li><strong>step16</strong> 将订单数据提交到数据库中，并返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    db.session.add(order)</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> (e):</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"保存订单失败"</span>)</span><br><span class="line"></span><br><span class="line">返回正确响应数据</span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"order_id"</span>: order.id&#125;)</span><br></pre></td></tr></table></figure><h1 id="二丶预订页面前端编写以及接口测试"><a href="#二丶预订页面前端编写以及接口测试" class="headerlink" title="二丶预订页面前端编写以及接口测试"></a>二丶预订页面前端编写以及接口测试</h1><p>1.在booking.js中进行如下编写</p><ul><li><strong>step1</strong> 首先当页面加载完时，则判断用户是否登录</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$.get(<span class="string">"/api/v1.0/session"</span>, function(resp) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"0"</span> != resp.errno) &#123;</span><br><span class="line">        location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="string">"json"</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取详情页面要展示的房屋编号</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> queryData = decodeQuery();</span><br><span class="line"><span class="keyword">var</span> houseId = queryData[<span class="string">"id"</span>];</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取房屋的基本信息</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="keyword">get</span>("/api/v1.0/houses/" + houseId, function(resp)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == resp.errno) &#123;</span><br><span class="line">            $(<span class="string">".house-info&gt;img"</span>).attr(<span class="string">"src"</span>, resp.data.house.img_urls[<span class="number">0</span>]);</span><br><span class="line">            $(<span class="string">".house-text&gt;h3"</span>).html(resp.data.house.title);</span><br><span class="line">            $(<span class="string">".house-text&gt;p&gt;span"</span>).html((resp.data.house.price/<span class="number">100.0</span>).toFixed(<span class="number">0</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 提交订单</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".submit-btn"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($(<span class="string">".order-amount&gt;span"</span>).html()) &#123;</span><br><span class="line">        $(<span class="keyword">this</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">var</span> startDate = $(<span class="string">"#start-date"</span>).val();</span><br><span class="line">        <span class="keyword">var</span> endDate = $(<span class="string">"#end-date"</span>).val();</span><br><span class="line">        <span class="keyword">var</span> data = &#123;</span><br><span class="line">            <span class="string">"house_id"</span>:houseId,</span><br><span class="line">            <span class="string">"start_date"</span>:startDate,</span><br><span class="line">            <span class="string">"end_date"</span>:endDate</span><br><span class="line">        &#125;;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"/api/v1.0/orders"</span>,</span><br><span class="line">            type:<span class="string">"POST"</span>,</span><br><span class="line">            data: <span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">            contentType: <span class="string">"application/json"</span>,</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            headers:&#123;</span><br><span class="line">                <span class="string">"X-CSRFTOKEN"</span>:getCookie(<span class="string">"csrf_token"</span>),</span><br><span class="line">            &#125;,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"4101"</span> == resp.errno) &#123;</span><br><span class="line">                    location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"4004"</span> == resp.errno) &#123;</span><br><span class="line">                    showErrorMsg(<span class="string">"房间已被抢定，请重新选择日期！"</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">                    location.href = <span class="string">"/orders.html"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.测试</p><ul><li><strong>step1</strong> 在房屋信息页（左图），点击即可预定后成功跳转到预定界面（右图），并成功显示预定房屋的信息</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127115846581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/2019012711585629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step2</strong> 在预定房屋界面，选择入住时间以及离开时间后，左下角则成功显示正确的订单总额（左图），当点击提交订单成功后，则跳转到我的订单页面（右图），因为此页面接口未编写，所以啥都没有属于正常情况</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127121041498.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190127121136714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step3</strong> 此时查看数据库ih_order_info表，则显示我们成功提交的订单信息，此功能测试成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019012712143515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶订单模块（我的订单）后端接口编写"><a href="#三丶订单模块（我的订单）后端接口编写" class="headerlink" title="三丶订单模块（我的订单）后端接口编写"></a>三丶订单模块（我的订单）后端接口编写</h1><p>1.分析：第一当用户成功提交订单后，则会跳转到我的订单页面，此时在这个页面就应该显示出用户刚才预定房屋的订单情况，第二就是需要对角色进行一个判断，如果是下单人那么在我的订单中查看订单，如果是房东那么就在客户订单中，查看别人预定我发布的房屋的订单，无论是哪种情况，对于后端来说都是查询数据库订单信息情况而已，所以这两个功能可以用一个查询订单接口在后端进行实现</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127122606756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.说明：之所以不管哪种角色在我的爱家页面都出现这两个有关订单的功能（我的订单和客户订单），那是因为对于任何注册网站的用户来说，我既可以订房，也可以发布房源，即一个账号可以切换成两种角色</p><p>3.逻辑编写</p><ul><li><strong>step1</strong> 定义接口路由</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /api/v1.0/user/orders?role=(custom/landlord)</span></span><br><span class="line"><span class="meta">@api.route("/user/orders", methods=["GET"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_orders</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""查询用户的订单信息"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取前端请求数据中角色role,如果没有则默认为空字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">role = request.args.get(<span class="string">"role"</span>, <span class="string">""</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 获取订单数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 以房东的身份在数据库中查询自己发布过的房屋</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">"landlord"</span> == role:</span><br><span class="line">        houses = House.query.filter(House.user_id == user_id).all()</span><br><span class="line">        <span class="comment"># 通过列表生成式方式保存房东名下的所有房屋的id</span></span><br><span class="line">        houses_ids = [house.id <span class="keyword">for</span> house <span class="keyword">in</span> houses]</span><br><span class="line">        <span class="comment"># 在Order表中查询预定了自己房子的订单,并按照创建订单的时间的倒序排序，也就是在此页面显示最新的订单信息</span></span><br><span class="line">        orders = Order.query.filter(Order.house_id.in_(houses_ids)).order_by(Order.create_time.desc()).all()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 以房客的身份查询订单，则查询的是我的订单</span></span><br><span class="line">        orders = Order.query.filter(Order.user_id == user_id).order_by(Order.create_time.desc()).all()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取订单信息失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在models.py模块Order类中构建to_dict方法，用于将详细信息转换为字典数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_dict</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""将订单信息转换为字典数据"""</span></span><br><span class="line">    order_dict = &#123;</span><br><span class="line">        <span class="string">"order_id"</span>: self.id,</span><br><span class="line">        <span class="string">"title"</span>: self.house.title,</span><br><span class="line">        <span class="string">"img_url"</span>: constants.QINIU_URL_DOMAIN + self.house.index_image_url <span class="keyword">if</span> self.house.index_image_url <span class="keyword">else</span> <span class="string">""</span>,</span><br><span class="line">        <span class="string">"start_date"</span>: self.begin_date.strftime(<span class="string">"%Y-%m-%d"</span>),</span><br><span class="line">        <span class="string">"end_date"</span>: self.end_date.strftime(<span class="string">"%Y-%m-%d"</span>),</span><br><span class="line">        <span class="string">"ctime"</span>: self.create_time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>),</span><br><span class="line">        <span class="string">"days"</span>: self.days,</span><br><span class="line">        <span class="string">"amount"</span>: self.amount,</span><br><span class="line">        <span class="string">"status"</span>: self.status,</span><br><span class="line">        <span class="string">"comment"</span>: self.comment <span class="keyword">if</span> self.comment <span class="keyword">else</span> <span class="string">""</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 订单存在则将订单对象orders转换成字典数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">orders_dict_list = []</span><br><span class="line">    <span class="keyword">if</span> orders:</span><br><span class="line">        <span class="keyword">for</span> order <span class="keyword">in</span> orders:</span><br><span class="line">            orders_dict_list.append(order.to_dict())</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 最后向前端返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"orders"</span>: orders_dict_list&#125;)</span><br></pre></td></tr></table></figure><h1 id="四丶订单模块（我的订单）前端编写"><a href="#四丶订单模块（我的订单）前端编写" class="headerlink" title="四丶订单模块（我的订单）前端编写"></a>四丶订单模块（我的订单）前端编写</h1><p>1.我的订单orders.js中进行如下编写，需注意的是当客户预定的房间后，会引导到支付链接去</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询房客订单</span></span><br><span class="line">    $.<span class="keyword">get</span>("/api/v1.0/user/orders?role=custom", function(resp)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">            $(<span class="string">".orders-list"</span>).html(template(<span class="string">"orders-list-tmpl"</span>, &#123;<span class="attr">orders</span>:resp.data.orders&#125;));</span><br><span class="line">            $(<span class="string">".order-pay"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> orderId = $(<span class="keyword">this</span>).parents(<span class="string">"li"</span>).attr(<span class="string">"order-id"</span>);</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    url: <span class="string">"/api/v1.0/orders/"</span> + orderId + <span class="string">"/payment"</span>,</span><br><span class="line">                    type: <span class="string">"post"</span>,</span><br><span class="line">                    dataType: <span class="string">"json"</span>,</span><br><span class="line">                    headers: &#123;</span><br><span class="line">                        <span class="string">"X-CSRFToken"</span>: getCookie(<span class="string">"csrf_token"</span>),</span><br><span class="line">                    &#125;,</span><br><span class="line">                    success: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">"4101"</span> == resp.errno) &#123;</span><br><span class="line">                            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">                            <span class="comment">// 引导用户跳转到支付宝连接</span></span><br><span class="line">                            location.href = resp.data.pay_url;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><p>2.在orders.html中进行如下编写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"orders-list-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> orders&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="actionscript">    &#123;&#123;<span class="keyword">each</span> orders <span class="keyword">as</span> order&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">order-id</span>=</span></span><span class="template-variable">&#123;&#123;order.order_id&#125;&#125;</span><span class="xml"><span class="tag">&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"order-title"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>订单编号：</span><span class="template-variable">&#123;&#123;order.order_id&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">            &#123;&#123; <span class="keyword">if</span> <span class="string">"WAIT_COMMENT"</span> == order.status &#125;&#125;</span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fr order-operate"</span>&gt;</span></span><br><span class="line"><span class="javascript">                &lt;button type=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-success order-comment"</span> data-toggle=<span class="string">"modal"</span> data-target=<span class="string">"#comment-modal"</span>&gt;发表评价&lt;<span class="regexp">/button&gt;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">            &#123;&#123; <span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"WAIT_PAYMENT"</span> == order.status &#125;&#125;</span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fr order-operate"</span>&gt;</span></span><br><span class="line"><span class="javascript">                &lt;button type=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-success order-pay"</span>&gt;去支付&lt;<span class="regexp">/button&gt;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"order-content"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;order.img_url&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"order-text"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123;order.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>创建时间：</span><span class="template-variable">&#123;&#123;order.ctime&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>入住日期：</span><span class="template-variable">&#123;&#123;order.start_date&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>离开日期：</span><span class="template-variable">&#123;&#123;order.end_date&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>合计金额：￥</span><span class="template-variable">&#123;&#123;(order.amount/100.0).toFixed(0)&#125;&#125;</span><span class="xml">(共</span><span class="template-variable">&#123;&#123;order.days&#125;&#125;</span><span class="xml">晚)<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>订单状态：</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">if</span> <span class="string">"WAIT_ACCEPT"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                待接单</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"WAIT_PAYMENT"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                待支付</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"WAIT_COMMENT"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                待评价</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"COMPLETE"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                已完成</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"REJECTED"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                已拒单</span><br><span class="line"><span class="handlebars"><span class="xml">                            </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">                    &#123;&#123;<span class="keyword">if</span> <span class="string">"COMPLETE"</span> == order.status&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>我的评价： </span><span class="template-variable">&#123;&#123;order.comment&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">                    &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"REJECTED"</span> == order.status&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>拒单原因： </span><span class="template-variable">&#123;&#123;order.comment&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line">    暂时没有订单。</span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="五丶我的订单功能测试"><a href="#五丶我的订单功能测试" class="headerlink" title="五丶我的订单功能测试"></a>五丶我的订单功能测试</h1><p>1.登录18022222222（Hellotaogang）账户后，直接进入我的订单页面，成功显示我的订单信息，如下</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127133933172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.以客户的角色进行预定房间，选择锦江区，价格由高到低，选择最贵的房间</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019012713411835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.进入房间信息后，点击即可预定（左图），然后提交成功后跳转到我的订单页（右图），成功按照最新预定时间进行排序显示</p><p><img src="https://img-blog.csdnimg.cn/20190127134417361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190127134428412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><p>4.查看数据库ih_user_profile用户信息表以及ih_order_info订单信息表，当前的所有订单都是由18022222222（Hellotaogang）账号进行的预定</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127134938646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.现在博主登录18033333333（张三）账号进行测试，测试房东能不能预定自己发布的房屋（刷单）</p><ul><li><strong>step1</strong> 首先在数据中查看张三发布了哪些房屋</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127135507485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 这里对house_id为10的房屋进行预定，也就是至朴大床房进行预定，结果发现根本没有即可预定按钮（左图），反之对house_id为8的商务套房进行预定，如果成功显示即可预定功能按钮（右图），那么说明编写的代码逻辑没有任何问题</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127135831672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" div align="left"><img src="https://img-blog.csdnimg.cn/20190127140157913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" div align="right"></p><p>6.上一篇博客中有一个搜索条件未进行测试，因为当时并没有编写订单模块接口，所以无法查询到冲突订单，现在我使用18111111111（taogang123）账号进行相同房间时间冲突为条件进行搜索测试</p><ul><li><strong>step1</strong> 根据数据库订单表以及房屋信息表，获取Hellotaogang账号的订单信息以及对应的房屋信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127140951110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 根据获取的信息来进行冲突订单搜索条件测试，金牛区房屋id为13的云篆单间入住时间为2019-01-27到2019-01-30的订单已经被Hellotaogang账号预定，无法预定则表示代码逻辑正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127151404233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 在主页进行条件搜索时，则不显示冲突订单中房屋信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127151552797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="六丶订单模块（客户订单）后端接口编写"><a href="#六丶订单模块（客户订单）后端接口编写" class="headerlink" title="六丶订单模块（客户订单）后端接口编写"></a>六丶订单模块（客户订单）后端接口编写</h1><p>1.分析：当房东进入客户订单后，即显示出该房东的房屋被客户预定的订单信息，在每个订单上都会有接单以及拒单的功能按钮，不管是接单还是拒单都是改变订单的一个状态，只是房东在选择拒单时必需填写拒绝原因，所以这关于接单和拒单这两个功能接口可以进行复用</p><p>2.接口逻辑编写</p><ul><li><strong>step1</strong> 定义路由接口，需从前端请求中获取订单编号，使用PUT方式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/orders/&lt;int:order_id&gt;/status", methods=["PUT"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">accept_reject_order</span><span class="params">(order_id)</span>:</span></span><br><span class="line">    <span class="string">"""接单拒单"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取请求参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req_data = request.get_json()</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> req_data:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 获取前端用户请求为接单还是拒单，关键字action</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">action = req_data.get(<span class="string">"action"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 判断action参数的值在不在accept接单和reject拒单之间</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">"accept"</span>, <span class="string">"reject"</span>):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 在数据库中根据订单号查询订单状态为等待接单状态的订单</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    order = Order.query.filter(Order.id == order_id, Order.status == <span class="string">"WAIT_ACCEPT"</span>).first()</span><br><span class="line">    <span class="comment"># 获取order订单对象中的house对象</span></span><br><span class="line">    house = order.house</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"无法获取订单数据"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 如果order对象不存在或者订单中的房屋id不等于用户id 则说明房东在修改不属于自己房屋订单</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> order <span class="keyword">or</span> house.user_id != user_id:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.REQERR, errmsg=<span class="string">"操作无效"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 房东选择接单，则对应订单状态为等待评论，拒单则需房东填写拒单的原因</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action == <span class="string">"accept"</span>: <span class="comment"># 接单</span></span><br><span class="line">    order.status = <span class="string">"WAIT_PAYMENT"</span></span><br><span class="line"><span class="keyword">elif</span> action == <span class="string">"reject"</span>: <span class="comment"># 拒单</span></span><br><span class="line">    reason = req_data.get(<span class="string">"reason"</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> reason:</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br><span class="line">    order.status = <span class="string">"REJECTED"</span></span><br><span class="line">    order.comment = reason</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 将订单修改后的对象提交到数据库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    db.session.add(order)</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"操作失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 返回正确响应，因为接口逻辑是在数据库的修改以及查询，所以不需要向前端返回数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>)</span><br></pre></td></tr></table></figure><h1 id="七丶订单模块（客户订单）前端编写以及接口测试"><a href="#七丶订单模块（客户订单）前端编写以及接口测试" class="headerlink" title="七丶订单模块（客户订单）前端编写以及接口测试"></a>七丶订单模块（客户订单）前端编写以及接口测试</h1><p>1.在客户订单页lorders.js中进行如下编写</p><ul><li><strong>step1</strong> 查询房东的订单</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="keyword">get</span>("/api/v1.0/user/orders?role=landlord", function(resp)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">            $(<span class="string">".orders-list"</span>).html(template(<span class="string">"orders-list-tmpl"</span>, &#123;<span class="attr">orders</span>:resp.data.orders&#125;));</span><br><span class="line">            $(<span class="string">".order-accept"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> orderId = $(<span class="keyword">this</span>).parents(<span class="string">"li"</span>).attr(<span class="string">"order-id"</span>);</span><br><span class="line">                $(<span class="string">".modal-accept"</span>).attr(<span class="string">"order-id"</span>, orderId);</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 接单处理</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".modal-accept"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> orderId = $(<span class="keyword">this</span>).attr(<span class="string">"order-id"</span>);</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    url:<span class="string">"/api/v1.0/orders/"</span>+orderId+<span class="string">"/status"</span>,</span><br><span class="line">                    type:<span class="string">"PUT"</span>,</span><br><span class="line">                    data:<span class="string">'&#123;"action":"accept"&#125;'</span>,</span><br><span class="line">                    contentType:<span class="string">"application/json"</span>,</span><br><span class="line">                    dataType:<span class="string">"json"</span>,</span><br><span class="line">                    headers:&#123;</span><br><span class="line">                        <span class="string">"X-CSRFTOKEN"</span>:getCookie(<span class="string">"csrf_token"</span>),</span><br><span class="line">                    &#125;,</span><br><span class="line">                    success:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">"4101"</span> == resp.errno) &#123;</span><br><span class="line">                            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">                            $(<span class="string">".orders-list&gt;li[order-id="</span>+ orderId +<span class="string">"]&gt;div.order-content&gt;div.order-text&gt;ul li:eq(4)&gt;span"</span>).html(<span class="string">"已接单"</span>);</span><br><span class="line">                            $(<span class="string">"ul.orders-list&gt;li[order-id="</span>+ orderId +<span class="string">"]&gt;div.order-title&gt;div.order-operate"</span>).hide();</span><br><span class="line">                            $(<span class="string">"#accept-modal"</span>).modal(<span class="string">"hide"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">            $(<span class="string">".order-reject"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> orderId = $(<span class="keyword">this</span>).parents(<span class="string">"li"</span>).attr(<span class="string">"order-id"</span>);</span><br><span class="line">                $(<span class="string">".modal-reject"</span>).attr(<span class="string">"order-id"</span>, orderId);</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 拒单处理</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".modal-reject"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> orderId = $(<span class="keyword">this</span>).attr(<span class="string">"order-id"</span>);</span><br><span class="line">    <span class="keyword">var</span> reject_reason = $(<span class="string">"#reject-reason"</span>).val();</span><br><span class="line">    <span class="keyword">if</span> (!reject_reason) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">var</span> data = &#123;</span><br><span class="line">        action: <span class="string">"reject"</span>,</span><br><span class="line">        reason:reject_reason</span><br><span class="line">    &#125;;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"/api/v1.0/orders/"</span>+orderId+<span class="string">"/status"</span>,</span><br><span class="line">        type:<span class="string">"PUT"</span>,</span><br><span class="line">        data:<span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">        contentType:<span class="string">"application/json"</span>,</span><br><span class="line">        headers: &#123;</span><br><span class="line">            <span class="string">"X-CSRFTOKEN"</span>:getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        dataType:<span class="string">"json"</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"4101"</span> == resp.errno) &#123;</span><br><span class="line">                location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">                $(<span class="string">".orders-list&gt;li[order-id="</span>+ orderId +<span class="string">"]&gt;div.order-content&gt;div.order-text&gt;ul li:eq(4)&gt;span"</span>).html(<span class="string">"已拒单"</span>);</span><br><span class="line">                $(<span class="string">"ul.orders-list&gt;li[order-id="</span>+ orderId +<span class="string">"]&gt;div.order-title&gt;div.order-operate"</span>).hide();</span><br><span class="line">                $(<span class="string">"#reject-modal"</span>).modal(<span class="string">"hide"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2.在lorders.html中进行如下编写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"orders-list-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> orders&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="actionscript">    &#123;&#123;<span class="keyword">each</span> orders <span class="keyword">as</span> order&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">order-id</span>=</span></span><span class="template-variable">&#123;&#123;order.order_id&#125;&#125;</span><span class="xml"><span class="tag">&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"order-title"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>订单编号：</span><span class="template-variable">&#123;&#123;order.order_id&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">            &#123;&#123; <span class="keyword">if</span> <span class="string">"WAIT_ACCEPT"</span> == order.status &#125;&#125;</span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fr order-operate"</span>&gt;</span></span><br><span class="line"><span class="javascript">                &lt;button type=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-success order-accept"</span> data-toggle=<span class="string">"modal"</span> data-target=<span class="string">"#accept-modal"</span>&gt;接单&lt;<span class="regexp">/button&gt;</span></span></span><br><span class="line"><span class="javascript">                &lt;button type=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-danger order-reject"</span> data-toggle=<span class="string">"modal"</span> data-target=<span class="string">"#reject-modal"</span>&gt;拒单&lt;<span class="regexp">/button&gt;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"order-content"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;order.img_url&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"order-text"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123;order.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>创建时间：</span><span class="template-variable">&#123;&#123;order.ctime&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>入住日期：</span><span class="template-variable">&#123;&#123;order.start_date&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>离开日期：</span><span class="template-variable">&#123;&#123;order.end_date&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>合计金额：￥</span><span class="template-variable">&#123;&#123;(order.amount/100.0).toFixed(0)&#125;&#125;</span><span class="xml">(共</span><span class="template-variable">&#123;&#123;order.days&#125;&#125;</span><span class="xml">晚)<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>订单状态：</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">if</span> <span class="string">"WAIT_ACCEPT"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                待接单</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"WAIT_COMMENT"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                待评价</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"COMPLETE"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                已完成</span><br><span class="line"><span class="actionscript">                            &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"REJECTED"</span> == order.status&#125;&#125;</span></span><br><span class="line">                                已拒单</span><br><span class="line"><span class="handlebars"><span class="xml">                            </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">                    &#123;&#123;<span class="keyword">if</span> <span class="string">"COMPLETE"</span> == order.status&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>我的评价： </span><span class="template-variable">&#123;&#123;order.comment&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">                    &#123;&#123;<span class="keyword">else</span> <span class="keyword">if</span> <span class="string">"REJECTED"</span> == order.status&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>拒单原因： </span><span class="template-variable">&#123;&#123;order.comment&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line">    暂时没有订单。</span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.测试</p><ul><li><strong>step1</strong> 使用18033333333（张三）账号进行此接口测试，账号登录后进入客户订单，成功显示客户预定了我发布的房屋列表信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127184900869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 查询数据库ih_order_info订单表，验证是否有4张客户订单，结果显示正确，<font style="color:red">需要注意的是这里的user_id指的是哪个账号预定的</font>，通过user_id发现用户id为3的用户预定了三间，而用户id为8的预定了一间</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127185518102.png" alt></fancybox></p><ul><li><strong>step3</strong> 查看数据库ih_user_profile表，查看是user_id =3 和 8 的是哪个账号</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127185905456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 分别登录这两个账号，进入我的订单，如果订单详情和张三客户订单一样，说明代码逻辑完全没问题，左图为Hellotaogang账户，右图为taogang123账户</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127190213627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190127190223306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step5</strong> 接单功能接口测试，切换18033333333（张三）账号，进入客户订单，选择订单编号为1的订单，点击接单出现提示信息（左图），点击确定接单后，则在客户订单页中此编号的订单的状态即变成了已接单状态，而在前端中此订单不在显示出接单和拒单功能按钮，说明代码逻辑正确</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127190756932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190127190808322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step6</strong> 拒单功能接口测试，选择订单编号为3的订单进行测试，当点击拒单时，必须要填写原因（左图），然后点击确定后，则该订单状态为已拒绝，说明代码逻辑没问题</li></ul><p><img src="https://img-blog.csdnimg.cn/20190127191313368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="left"><img src="https://img-blog.csdnimg.cn/20190127191322613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="368" height="655" div align="right"></p><ul><li><strong>step7</strong> 查看数据库订单状态信息，状态为WAIT_PAYMENT的表示已接单，REJECTED表示已拒单，填写的拒单原因存到comment评论字段，证明代码逻辑完全没问题</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127192018139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 切换到到18022222222（Hellotaogang）客户账号，进入我的订单中，查看18033333333（张三）房东对于订单的接单以及拒单情况，对于只有房东接单的订单才会出现去支付的功能按钮，因为该接口还没有写，所以在这里不进行演示，显示信息与上面测试结果一样，代码逻辑正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190127194718107.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="八丶订单评价后端接口编写"><a href="#八丶订单评价后端接口编写" class="headerlink" title="八丶订单评价后端接口编写"></a>八丶订单评价后端接口编写</h1><p>1.分析：因为订单评价接口和接单拒单功能接口一样，也是对数据库进行修改操作，所以在定义接口路由的时候请求方式也是选择的是PUT，本来订单评价接口是在支付接口后面才去写的，但因为此接口与拒单接单接口大同小异，所以便一块接着客户订单接口在orders.py中一起写了，需要注意的时这个接口是在订单状态变成待评价时，才能触发这个功能接口进行评价</p><p>2.逻辑编写</p><ul><li><strong>step1</strong> 定义路由接口</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/orders/&lt;int:order_id&gt;/comment", methods=["PUT"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_order_comment</span><span class="params">(order_id)</span>:</span></span><br><span class="line">    <span class="string">"""保存订单评价信息"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取请求参数中的评价信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">req_data = request.get_json()</span><br><span class="line">comment = req_data.get(<span class="string">"comment"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> comment:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 确保用户只能评价自己的订单并且订单处于待评价的状态</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    order = Order.query.filter(Order.id == order_id, Order.user_id == user_id, Order.status == <span class="string">"WAIT_COMMENT"</span>).first()</span><br><span class="line">    house = order.house</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"无法获取订单数据"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 查询的订单对象order不存在，则返回错误信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> order:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.REQERR, errmsg=<span class="string">"操作无效"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 构建订单参数，并提交到数据库中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 将订单的状态设置为已完成</span></span><br><span class="line">    order.status = <span class="string">"COMPLETE"</span></span><br><span class="line">    <span class="comment"># 保存订单的评价信息</span></span><br><span class="line">    order.comment = comment</span><br><span class="line">    <span class="comment"># 将房屋的完成订单数增加1</span></span><br><span class="line">    house.order_count += <span class="number">1</span></span><br><span class="line">    db.session.add(order)</span><br><span class="line">    db.session.add(house)</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"操作失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 因为在房屋详情中有会显示订单的评价信息，为了在房屋详情中显示最新的评价信息，所以需要删除redis中该订单对应的房屋的信息，并返回正确响应</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    redis_store.delete(<span class="string">"house_info_%s"</span> % order.house.id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>)</span><br></pre></td></tr></table></figure><p>3.在order.js中补充处理评论的逻辑</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url:<span class="string">"/api/v1.0/orders/"</span>+orderId+<span class="string">"/comment"</span>,</span><br><span class="line">    type:<span class="string">"PUT"</span>,</span><br><span class="line">    data:<span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">    contentType:<span class="string">"application/json"</span>,</span><br><span class="line">    dataType:<span class="string">"json"</span>,</span><br><span class="line">    headers:&#123;</span><br><span class="line">        <span class="string">"X-CSRFTOKEN"</span>:getCookie(<span class="string">"csrf_token"</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"4101"</span> == resp.errno) &#123;</span><br><span class="line">            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">            $(<span class="string">".orders-list&gt;li[order-id="</span>+ orderId +<span class="string">"]&gt;div.order-content&gt;div.order-text&gt;ul li:eq(4)&gt;span"</span>).html(<span class="string">"已完成"</span>);</span><br><span class="line">            $(<span class="string">"ul.orders-list&gt;li[order-id="</span>+ orderId +<span class="string">"]&gt;div.order-title&gt;div.order-operate"</span>).hide();</span><br><span class="line">            $(<span class="string">"#comment-modal"</span>).modal(<span class="string">"hide"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong><font style="color:red">注</font>：此接口在客户支付订单后，订单状态变成待评价时，才能进行测试</strong></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/86660480" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86660480</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（十二）</title>
      <link href="/2019/11/05/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/11/05/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶房源列表页后端编写"><span style="color:#4ea1db">一丶房源列表页后端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶房源列表页缓存处理"><span style="color:#4ea1db">二丶房源列表页缓存处理</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶redis中pipeline（管道）的使用"><span style="color:#4ea1db">三丶redis中pipeline（管道）的使用</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶房源列表页前端编写"><span style="color:#4ea1db">四丶房源列表页前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶搜索条件测试"><span style="color:#4ea1db">五丶搜索条件测试</span></a></li><a id="more"></a><h1 id="一丶房源列表页后端编写"><a href="#一丶房源列表页后端编写" class="headerlink" title="一丶房源列表页后端编写"></a>一丶房源列表页后端编写</h1><p>1.搜索条件分析：用户在主页页面中点击搜索按钮，即跳转到房源列表页面，需要注意的是，第一用户在不选择任何搜索条件下，点击搜索按钮跳转到的房源列表页，此房源页显示的房屋列表应该是采用默认排序，将所有的房屋信息显示出来；第二用户还可以只选择某一个搜索条件（比如区县或者入住日期）；第三就是用户选择区县以及入住日期，那么在房源列表页则根据用户的搜索条件进行显示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190123103554146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt>)<fancybox><fancybox><img src="https://img-blog.csdnimg.cn/20190123103631809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></fancybox></fancybox></p><p>2.入住日期分析：最开始在项目中创建数据库模型类models.py文件中，在House房屋类并未定义入住时间，而是在Order订单类中定义了预定起始以及结束时间，因为在一个房屋可以被多次入住，所以放到House类中显然不合适，而放在Order订单类中 ，是因为一旦订单中出现了该房屋的入住时间，那么代表该房屋其余时间都是可以被用户搜索到并预定下单</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190123111243628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.接口逻辑编写</p><ul><li><strong>step1</strong> 定义视图函数，需要构建请求地址</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /api/v1.0/houses?sd=2019-01-23&amp;ed=2019-01-31&amp;aid=3&amp;sk=new&amp;p=1</span></span><br><span class="line"><span class="meta">@api.route("/houses")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_house_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""房源页房屋列表信息"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取请求参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">start_date = request.args.get(<span class="string">"sd"</span>) <span class="comment"># 用户入住日期</span></span><br><span class="line">end_date = request.args.get(<span class="string">"ed"</span>) <span class="comment"># 用户离开日期</span></span><br><span class="line">area_id = request.args.get(<span class="string">"aid"</span>) <span class="comment"># 入住区县</span></span><br><span class="line">sort_key = request.args.get(<span class="string">"sk"</span>, <span class="string">"new"</span>) <span class="comment"># 排序关键字,当未选择排序条件时，默认按最新排序，这个new关键字根据前端定义走的</span></span><br><span class="line">page = request.args.get(<span class="string">"p"</span>) <span class="comment"># 页数</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 处理日期 用户可能选择入住日期或者是离开日期，所以要一一进行判断</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">if</span> start_date:</span><br><span class="line">        start_date = datetime.strptime(start_date, <span class="string">"%Y-%m-%d"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> end_date:</span><br><span class="line">        end_date = datetime.strptime(end_date, <span class="string">"%Y-%m-%d"</span>)</span><br><span class="line">    <span class="comment"># 当用户两者都选择情况下，需要进行判断，入住日期肯定是小于或等于离开日期的</span></span><br><span class="line">    <span class="keyword">if</span> start_date <span class="keyword">and</span> end_date:</span><br><span class="line">        <span class="keyword">assert</span> start_date &lt;= end_date</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"日期参数有误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断区县id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> area_id:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        area = Area.query.get(area_id)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        current_app.logger.error(e)</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"区县参数有误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 处理页数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    page = int(page)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="comment"># 如果出现异常则使page=1</span></span><br><span class="line">    page = <span class="number">1</span></span><br><span class="line">    current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 定义过滤条件的参数列表容器以及存放冲突订单对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filter_params = []</span><br><span class="line">conflict_orders = <span class="literal">None</span></span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 在数据库中查询订单表中的冲突订单，这里稍微比较绕，就是以什么条件来筛选订单中冲突的订单，其实简单一句就是用户不管选择的入住日期或者是离开日期又或者是入住以及离开日期，这三种情况中任一情况的日期都不能在Order表中订单起始日期begin_date与end_date结束日期这范围内，即作出以下逻辑判断</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">if</span> start_date <span class="keyword">and</span> end_date:</span><br><span class="line">        <span class="comment"># 查询冲突的订单所有对象</span></span><br><span class="line">        conflict_orders = Order.query.filter(Order.begin_date &lt;= end_date, Order.end_date &gt;= start_date).all()</span><br><span class="line">    <span class="keyword">elif</span> start_date:</span><br><span class="line">        <span class="comment"># 用户只选择入住日期</span></span><br><span class="line">        conflict_orders = Order.query.filter(Order.end_date &gt;= start_date).all()</span><br><span class="line">    <span class="keyword">elif</span> end_date:</span><br><span class="line">        <span class="comment"># 用户只选择离开日期</span></span><br><span class="line">        conflict_orders = Order.query.filter(Order.begin_date &lt;= end_date).all()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"数据库异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 当获取的冲突订单对象存在时，获取冲突房屋的id，如果冲突的房屋id不为空，则向查询参数中添加条件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> conflict_orders:</span><br><span class="line">    <span class="comment"># 从订单中获取冲突的房屋id</span></span><br><span class="line">    conflict_house_ids = [order.house_id <span class="keyword">for</span> order <span class="keyword">in</span> conflict_orders] <span class="comment"># 使用列表生成式进行简写操作</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 如果冲突的房屋id不为空，向查询参数中添加条件</span></span><br><span class="line">    <span class="keyword">if</span> conflict_house_ids:</span><br><span class="line">        filter_params.append(House.id.notin_(conflict_house_ids))</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 当区县id存在时，向列表中添加条件，这个条件House.area_id == area_id返回的不是True或者是False而是返回的是SQLALchemy表达式，所以才能在filter方法中进行过滤</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> area_id:</span><br><span class="line">    filter_params.append(House.area_id == area_id)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 根据过滤参数列表，查询数据库，并进行条件排序</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> sort_key == <span class="string">"booking"</span>:  <span class="comment"># 入住做多</span></span><br><span class="line">    house_query = House.query.filter(*filter_params).order_by(House.order_count.desc())</span><br><span class="line"><span class="keyword">elif</span> sort_key == <span class="string">"price-inc"</span>: <span class="comment"># 价格低-高</span></span><br><span class="line">    house_query = House.query.filter(*filter_params).order_by(House.price.asc())</span><br><span class="line"><span class="keyword">elif</span> sort_key == <span class="string">"price-des"</span>: <span class="comment"># 价格高-低</span></span><br><span class="line">    house_query = House.query.filter(*filter_params).order_by(House.price.desc())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 如果用户什么都没选择，则按照最新排序（数据库字段创建时间）</span></span><br><span class="line">    house_query = House.query.filter(*filter_params).order_by(House.create_time.desc())</span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 分页处理 paginate方法需传递三个参数，page:分页页数 per_page:每页显示多少条数据 error_out: 错误输出</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    page_obj = house_query.paginate(page=page, per_page=constants.HOUSE_LIST_PAGE_CAPACITY, error_out=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"数据库异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step12</strong> 获取分页页面数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">houses = []</span><br><span class="line">house_list = page_obj.items</span><br><span class="line"><span class="keyword">for</span> house <span class="keyword">in</span> house_list:</span><br><span class="line">    houses.append(house.to_basic_dict())</span><br></pre></td></tr></table></figure><ul><li><strong>step13</strong> 获取总页数，并返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">total_page = page_obj.pages</span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"houses"</span>:houses, <span class="string">"total_page"</span>:total_page, <span class="string">"current_page"</span>:page&#125;)</span><br></pre></td></tr></table></figure><p>4.测试此接口</p><ul><li><strong>step1</strong> 在Postman工具中向127.0.0.1:5000/api/v1.0/houses接口发送请求，注意该请求未携带任何参数，后端接口逻辑分页设定每页显示2条数据，总页数为4页，说明数据库中房屋数据为7条或者8条</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190123205426524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 查看数据库房屋信息表，房屋数据为7条，后端分页逻辑正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190123205808964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 为了进行搜索条件测试，博主这里进行发布一套房源，详情如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190123210625449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 点击发布房源，并上传图片，此时再查看数据库则显示刚发布的房屋信息了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190123211029450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 向127.0.0.1:5000/api/v1.0/houses接口发送请求，并携带搜索条件参数，按价格从低到高进行筛选</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190123211623587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 向127.0.0.1:5000/api/v1.0/houses接口发送请求，并携带参数在第3页价格从低到高，因博主之前测试，除了今天发布的房源不同于其他7条数据，之前的7条数据价格都是一样的，所以这里走个过程，但逻辑是没问题的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190123212049590.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 当发送请求参数中不存在的页数5时，则后端返回一个空列表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190123212302521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶房源列表页缓存处理"><a href="#二丶房源列表页缓存处理" class="headerlink" title="二丶房源列表页缓存处理"></a>二丶房源列表页缓存处理</h1><p>1.分析，为什么添加缓存处理，因为可能会出现不同的用户在进行房源条件搜索时，出现条件相同，所以需要进行页面数据缓存处理</p><p>2.具体实现</p><ul><li><strong>step1</strong> 需要将页面数据以hash类型存到redis数据库</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">"house_入住_离开_区域id_排序条件": hash</span><br><span class="line">&#123;    </span><br><span class="line">     <span class="attr">"page"</span>: <span class="string">"&#123;&#125;"</span></span><br><span class="line">     <span class="string">"1"</span>: <span class="string">"&#123;&#125;"</span>,</span><br><span class="line">     <span class="attr">"2"</span>: <span class="string">"&#123;&#125;"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 将响应数据构建成json格式数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">resp_dict = dict(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"houses"</span>:houses, <span class="string">"total_page"</span>:total_page, <span class="string">"current_page"</span>:page&#125;)</span><br><span class="line">resp_json = json.dumps(resp_dict)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 设置redis数据库的key</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis_key = <span class="string">"house_%s_%s_%s_%s"</span> % (start_date, end_date, area_id, sort_key)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 设置缓存数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    redis_store.hset(redis_key, page, resp_json) <span class="comment"># 将数据存入redis数据</span></span><br><span class="line">    redis_store.expire(redis_key, constants.HOUES_LIST_PAGE_REDIS_CACHE_EXPIRES) <span class="comment"># 设置有效期</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> resp_json, <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 设置获取参数的默认值，因为需要在数据刚开始需要去数据库获取缓存数据，所以给参数设置默认值，防止查询出错</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">start_date = request.args.get(<span class="string">"sd"</span>, <span class="string">""</span>) <span class="comment"># 用户入住日期</span></span><br><span class="line">end_date = request.args.get(<span class="string">"ed"</span>, <span class="string">""</span>) <span class="comment"># 用户离开日期</span></span><br><span class="line">area_id = request.args.get(<span class="string">"aid"</span>, <span class="string">""</span>) <span class="comment"># 入住区县</span></span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 在接口函数处理完请求完数据时，此时需在数据库从获取缓存数据，使用hget方法获取存入数据的hash类型数据，page为hash数据中的键，当查询获取的json响应数据不为空时，则将该数据进行返回，如果出现异常或者查询数据不存在时，则进入mysql数据库数据查询，设置缓存，以及返回正确响应逻辑操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">redis_key = <span class="string">"house_%s_%s_%s_%s"</span> % (start_date, end_date, area_id, sort_key)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    resp_json = redis_store.hget(redis_key, page)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> resp_json:</span><br><span class="line">        <span class="keyword">return</span> resp_json, <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>:<span class="string">"application/json"</span>&#125;</span><br></pre></td></tr></table></figure><p>3.测试</p><ul><li><strong>step1</strong> 打开Postman测试工具向127.0.0.1:5000/api/v1.0/houses发送数据，不携带任何参数，此时在工具中返回了正确响应以及数据，第一个箭头表示当前页码，第二个箭头表示总页数</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190125140900118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 查看redis数据库，因为向接口发送请求时，为携带任何参数，而当初在接口函数中获取请求参数时，设置了默认值为空字符串，所以这里看的key为house____new，通过hget方式获取house____new键page为1的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190125141051630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 在Postman工具中设置请求参数p=2,，即获取第二页的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190125141416716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 此时在redis数据库中通过hgetall house____new，查看该键所有数据，此时显示数据出现了第一页和第二页数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190125141647404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 房屋信息数据一共只有8条数据，每页显示2条数据，则总页数为4页，当发送请求参数p=5时，那么编写的逻辑也会把这个不存在的数据存到redis数据库</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190125142037420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 经查看redis数据库发现，获取到的第5页空数据，也存到了数据库，这可是我不想要的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190125142241813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.修改代码逻辑，在设置数据缓存的时候进行判断如果current_page &lt;= total_page，然后才设置数据缓存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> page &lt;= total_page:</span><br><span class="line">    <span class="comment"># 设置缓存数据</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        redis_store.hset(redis_key, page, resp_json) <span class="comment"># 将数据存入redis数据</span></span><br><span class="line">        redis_store.expire(redis_key, constants.HOUES_LIST_PAGE_REDIS_CACHE_EXPIRES) <span class="comment"># 设置有效期</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        current_app.logger.error(e)</span><br></pre></td></tr></table></figure><h1 id="三丶redis中pipeline（管道）的使用"><a href="#三丶redis中pipeline（管道）的使用" class="headerlink" title="三丶redis中pipeline（管道）的使用"></a>三丶redis中pipeline（管道）的使用</h1><p>1.为什么使用pipeline，因为我们在设置缓存数据时，使用hash类型进行数据的存储，而不是像之前写的接口的数据缓存那样使用的是str类型存储，所以没有一步到位的存入数据以及有效期的设置放到一块，hash没有setex方法，设想如果将数据存入到redis数据库成功，而expire设置有效期时未成功，那么此数据就变成了永久有效，即使用pipeline是可取的</p><p>2.具体实现如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建redis pipeline 管道对象，可以一次性执行多条语句</span></span><br><span class="line">pipeline = redis_store.pipeline()</span><br><span class="line"><span class="comment"># 开启多个语句的记录</span></span><br><span class="line">pipeline.multi()</span><br><span class="line"><span class="comment"># 使用管道对象管理多条语句</span></span><br><span class="line">pipeline.hset(redis_key, page, resp_json) <span class="comment"># 将数据存入redis数据</span></span><br><span class="line">pipeline.expire(redis_key, constants.HOUES_LIST_PAGE_REDIS_CACHE_EXPIRES) <span class="comment"># 设置有效期</span></span><br><span class="line"><span class="comment"># 执行语句</span></span><br><span class="line">pipeline.execute()</span><br></pre></td></tr></table></figure><h1 id="四丶房源列表页前端编写"><a href="#四丶房源列表页前端编写" class="headerlink" title="四丶房源列表页前端编写"></a>四丶房源列表页前端编写</h1><p>1.在房源页面search.js中进行编写</p><ul><li><strong>step1</strong> 构建js代码中所用到的全局变量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var cur_page = <span class="number">1</span>; // 当前页</span><br><span class="line">var next_page = <span class="number">1</span>; // 下一页</span><br><span class="line">var total_page = <span class="number">1</span>;  // 总页数</span><br><span class="line">var house_data_querying = true; // 是否正在向后台获取数据</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 定义decodeQuery函数用于解析url中的查询字符串</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decodeQuery</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> search = <span class="built_in">decodeURI</span>(<span class="built_in">document</span>.location.search);</span><br><span class="line">    <span class="keyword">return</span> search.replace(<span class="regexp">/(^\?)/</span>, <span class="string">''</span>).split(<span class="string">'&amp;'</span>).reduce(<span class="function"><span class="keyword">function</span>(<span class="params">result, item</span>)</span>&#123;</span><br><span class="line">        values = item.split(<span class="string">'='</span>);</span><br><span class="line">        result[values[<span class="number">0</span>]] = values[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;, &#123;&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 定义updateFilterDateDisplay函数用于更新用户点选的筛选条件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateFilterDateDisplay</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> startDate = $(<span class="string">"#start-date"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> endDate = $(<span class="string">"#end-date"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> $filterDateTitle = $(<span class="string">".filter-title-bar&gt;.filter-title"</span>).eq(<span class="number">0</span>).children(<span class="string">"span"</span>).eq(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (startDate) &#123;</span><br><span class="line">        <span class="keyword">var</span> text = startDate.substr(<span class="number">5</span>) + <span class="string">"/"</span> + endDate.substr(<span class="number">5</span>);</span><br><span class="line">        $filterDateTitle.html(text);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $filterDateTitle.html(<span class="string">"入住日期"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 定义updateHouseData函数用于更新房源列表信息</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateHouseData</span>(<span class="params">action</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> areaId = $(<span class="string">".filter-area&gt;li.active"</span>).attr(<span class="string">"area-id"</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">undefined</span> == areaId) areaId = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">var</span> startDate = $(<span class="string">"#start-date"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> endDate = $(<span class="string">"#end-date"</span>).val();</span><br><span class="line">    <span class="keyword">var</span> sortKey = $(<span class="string">".filter-sort&gt;li.active"</span>).attr(<span class="string">"sort-key"</span>);</span><br><span class="line">    <span class="keyword">var</span> params = &#123;</span><br><span class="line">        aid:areaId,</span><br><span class="line">        sd:startDate,</span><br><span class="line">        ed:endDate,</span><br><span class="line">        sk:sortKey,</span><br><span class="line">        p:next_page</span><br><span class="line">    &#125;;</span><br><span class="line">    $.<span class="keyword">get</span>("/api/v1.0/houses", params, function(resp)&#123;</span><br><span class="line">        house_data_querying = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> == resp.data.total_page) &#123;</span><br><span class="line">                $(<span class="string">".house-list"</span>).html(<span class="string">"暂时没有符合您查询的房屋信息。"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                total_page = resp.data.total_page;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"renew"</span> == action) &#123;</span><br><span class="line">                    cur_page = <span class="number">1</span>;</span><br><span class="line">                    $(<span class="string">".house-list"</span>).html(template(<span class="string">"house-list-tmpl"</span>, &#123;<span class="attr">houses</span>:resp.data.houses&#125;));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    cur_page = next_page;</span><br><span class="line">                    $(<span class="string">".house-list"</span>).append(template(<span class="string">"house-list-tmpl"</span>, &#123;<span class="attr">houses</span>: resp.data.houses&#125;));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>step5</strong> 在页面加载时获取筛选条件中的城市区域信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="keyword">get</span>("/api/v1.0/areas", function(data)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"0"</span> == data.errno) &#123;</span><br><span class="line">            <span class="comment">// 用户从首页跳转到这个搜索页面时可能选择了区县，所以尝试从url的查询字符串参数中提取用户选择的区县</span></span><br><span class="line">            <span class="keyword">var</span> areaId = queryData[<span class="string">"aid"</span>];</span><br><span class="line">            <span class="comment">// 如果提取到了区县id的数据</span></span><br><span class="line">            <span class="keyword">if</span> (areaId) &#123;</span><br><span class="line">                <span class="comment">// 遍历从后端获取到的区县信息，添加到页面中</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;data.data.length; i++) &#123;</span><br><span class="line">                    <span class="comment">// 对于从url查询字符串参数中拿到的区县，在页面中做高亮展示</span></span><br><span class="line">                    <span class="comment">// 后端获取到区县id是整型，从url参数中获取到的是字符串类型，所以将url参数中获取到的转换为整型，再进行对比</span></span><br><span class="line">                    areaId = <span class="built_in">parseInt</span>(areaId);</span><br><span class="line">                    <span class="keyword">if</span> (data.data[i].aid == areaId) &#123;</span><br><span class="line">                        $(<span class="string">".filter-area"</span>).append(<span class="string">'&lt;li area-id="'</span>+ data.data[i].aid+<span class="string">'" class="active"&gt;'</span>+ data.data[i].aname+<span class="string">'&lt;/li&gt;'</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        $(<span class="string">".filter-area"</span>).append(<span class="string">'&lt;li area-id="'</span>+ data.data[i].aid+<span class="string">'"&gt;'</span>+ data.data[i].aname+<span class="string">'&lt;/li&gt;'</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 如果url参数中没有区县信息，不需要做额外处理，直接遍历展示到页面中</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;data.data.length; i++) &#123;</span><br><span class="line">                    $(<span class="string">".filter-area"</span>).append(<span class="string">'&lt;li area-id="'</span>+ data.data[i].aid+<span class="string">'"&gt;'</span>+ data.data[i].aname+<span class="string">'&lt;/li&gt;'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 在页面添加好城区选项信息后，更新展示房屋列表信息</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updateHouseData(<span class="string">"renew"</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong>  获取页面显示窗口的高度</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> windowHeight = $(<span class="built_in">window</span>).height();</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 为窗口的滚动添加事件函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.οnscrοll=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">// var a = document.documentElement.scrollTop==0? document.body.clientHeight : document.documentElement.clientHeight;</span></span><br><span class="line">            <span class="keyword">var</span> b = <span class="built_in">document</span>.documentElement.scrollTop==<span class="number">0</span>? <span class="built_in">document</span>.body.scrollTop : <span class="built_in">document</span>.documentElement.scrollTop;</span><br><span class="line">            <span class="keyword">var</span> c = <span class="built_in">document</span>.documentElement.scrollTop==<span class="number">0</span>? <span class="built_in">document</span>.body.scrollHeight : <span class="built_in">document</span>.documentElement.scrollHeight;</span><br><span class="line">            <span class="comment">// 如果滚动到接近窗口底部</span></span><br><span class="line">            <span class="keyword">if</span>(c-b&lt;windowHeight+<span class="number">50</span>)&#123;</span><br><span class="line">                <span class="comment">// 如果没有正在向后端发送查询房屋列表信息的请求</span></span><br><span class="line">                <span class="keyword">if</span> (!house_data_querying) &#123;</span><br><span class="line">                    <span class="comment">// 将正在向后端查询房屋列表信息的标志设置为真，</span></span><br><span class="line">                    house_data_querying = <span class="literal">true</span>;</span><br><span class="line">                    <span class="comment">// 如果当前页面数还没到达总页数</span></span><br><span class="line">                    <span class="keyword">if</span>(cur_page &lt; total_page) &#123;</span><br><span class="line">                        <span class="comment">// 将要查询的页数设置为当前页数加1</span></span><br><span class="line">                        next_page = cur_page + <span class="number">1</span>;</span><br><span class="line">                        <span class="comment">// 向后端发送请求，查询下一页房屋数据</span></span><br><span class="line">                        updateHouseData();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        house_data_querying = <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>2.在search.html中定义模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"house-list-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="actionscript">            &#123;&#123;<span class="keyword">each</span> houses <span class="keyword">as</span> house&#125;&#125;</span></span><br><span class="line"><span class="javascript">            &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-item"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/detail.html?id=</span></span></span><span class="template-variable">&#123;&#123;house.house_id&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;house.img_url&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-desc"</span>&gt;</span></span><br><span class="line"><span class="javascript">                    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"landlord-pic"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;house.user_avatar&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"house-price"</span>&gt;</span>￥<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123;(house.price/100.0).toFixed(0)&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span>/晚<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">                    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-intro"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"house-title"</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        <span class="tag">&lt;<span class="name">em</span>&gt;</span>出租</span><span class="template-variable">&#123;&#123;house.room_count&#125;&#125;</span><span class="xml">间 - </span><span class="template-variable">&#123;&#123;house.order_count&#125;&#125;</span><span class="xml">次入住 - </span><span class="template-variable">&#123;&#123;house.address&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">em</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="五丶搜索条件测试"><a href="#五丶搜索条件测试" class="headerlink" title="五丶搜索条件测试"></a>五丶搜索条件测试</h1><p>1.用户选择不同的区域信息，显示出对应区域下的房屋列表信息</p><ul><li><strong>step1</strong> 之前在测试接口的时候，导致有些房屋没有上传图片，所以这里在后台数据库进行补充</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019012615395261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 查看当前18022222222账号的发布的房源列表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190126154111390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 查看主页中显示的房屋图片，此时应该是按最初开发需求那样在主页显示5张房屋logo图片</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019012615425989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 为了方便主页搜索接口测试，所以这里使用18033333333（张三） 账号进行其他区县房源发布</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190126171853832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 查看数据库房屋信息，一共有18套房屋包括（成都主城区）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190126170833195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 在主页选择锦江区，搜索界面如下（右边没完全显示因为截图工具原因），每页显示2个房屋信息，当滚动鼠标时，触发js函数，向后端接口获取第二页数据，依次类推</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190126170141661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt>)</fancybox><fancybox><img src="https://img-blog.csdnimg.cn/20190126170245403.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 在如上搜索页面，选择青羊区以及金牛区，查看该区域下的房屋列表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190126170518777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt>)</fancybox><fancybox><img src="https://img-blog.csdnimg.cn/2019012617092177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 在如上搜索页面，选择武侯区以及成华区 ，查看该区域下的房屋列表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190126171107841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt>)</fancybox><fancybox><img src="https://img-blog.csdnimg.cn/20190126171118487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.根据用户选择的入住以及离开日期，显示出对应时间下的房屋列表信息</p><ul><li><strong>step1</strong> 以锦江区为例进行测试（左边图为未选择时间条件，右边图为选择时间条件），<font style="color:red">可以发现当选择了入住时间以及离开时间后，所对应条件的房屋列表并未发生任何改变，原因是现在所有的房屋都是未被入住，所以在后端接口中未有冲突订单，即房源列表显示一样</font>，此测试等待订单接口写完后，再进行测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190126173616317.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt>)</fancybox><fancybox><img src="https://img-blog.csdnimg.cn/20190126173636140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 当在页面滚动鼠标时，则向接口发送请求数据，期间根据用户鼠标滚动的浮动来决定p为多少</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190126185810716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.根据用户选择排序关键字，显示对应的房源列表信息</p><p><strong>说明</strong>：首先默认排序为最新上线，这个不用进行测试，然后入住最多是按照订单量来排序，因订单接口还没写，所以也不用测试，这里只需要对价格进行排序</p><p>左图为按价格由低到高进行排序，右图为按价格由高到低进行排序</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190126190618943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt>)</fancybox><fancybox><img src="https://img-blog.csdnimg.cn/20190126190725987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/86599482" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86599482</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（十一）</title>
      <link href="/2019/11/05/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/"/>
      <url>/2019/11/05/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶用户房屋管理后端编写"><span style="color:#4ea1db">一丶用户房屋管理后端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶用户房屋管理前端编写"><span style="color:#4ea1db">二丶用户房屋管理前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶测试用户管理后端接口"><span style="color:#4ea1db">三丶测试用户管理后端接口</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶主页幻灯片房屋信息后端编写"><span style="color:#4ea1db">四丶主页幻灯片房屋信息后端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶主页幻灯片房屋信息前端编写"><span style="color:#4ea1db">五丶主页幻灯片房屋信息前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶测试主页幻灯片接口和区县信息以及房屋信息缓存"><span style="color:#4ea1db">六丶测试主页幻灯片接口和区县信息以及房屋信息缓存</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#七丶房屋详情页后端编写"><span style="color:#4ea1db">七丶房屋详情页后端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#八丶房屋详情页前端编写"><span style="color:#4ea1db">八丶房屋详情页前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#九丶测试房屋详情页面显示正确数据是否成功"><span style="color:#4ea1db">九丶测试房屋详情页面显示正确数据是否成功</span></a></li><a id="more"></a><h1 id="一丶用户房屋管理后端编写"><a href="#一丶用户房屋管理后端编写" class="headerlink" title="一丶用户房屋管理后端编写"></a>一丶用户房屋管理后端编写</h1><p>1.需求分析：在我的房源界面显示出房东发布的房源信息，在前端中就需要从后端接口中发送获取用户id，房屋标题，图片以及房屋信息，显示在前端页面中</p><p>2.逻辑编写</p><ul><li><strong>step1</strong> 在houses.py中定义接口</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/user/houses", methods=["GET"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_houses</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取房东发布的房源信息</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 通过用户id从数据库USER中获取用户对象，通过user对象来获取用户发布的房屋</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user = User.query.get(user_id)</span><br><span class="line">    houses = user.houses</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取数据失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 在models.py中house里面定义一个to_basic_dict方法，将房屋基本信息转换成字典数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_basic_dict</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""将基本信息转换为字典数据"""</span></span><br><span class="line">    house_dict = &#123;</span><br><span class="line">        <span class="string">"house_id"</span>: self.id,</span><br><span class="line">        <span class="string">"title"</span>: self.title,</span><br><span class="line">        <span class="string">"price"</span>: self.price,</span><br><span class="line">        <span class="string">"area_name"</span>: self.area.name,</span><br><span class="line">        <span class="string">"img_url"</span>: constants.QINIU_URL_DOMAIN + self.index_image_url <span class="keyword">if</span> self.index_image_url <span class="keyword">else</span> <span class="string">""</span>,</span><br><span class="line">        <span class="string">"room_count"</span>: self.room_count,</span><br><span class="line">        <span class="string">"order_count"</span>: self.order_count,</span><br><span class="line">        <span class="string">"address"</span>: self.address,</span><br><span class="line">        <span class="string">"user_avatar"</span>: constants.QINIU_URL_DOMAIN + self.user.avatar_url <span class="keyword">if</span> self.user.avatar_url <span class="keyword">else</span> <span class="string">""</span>,</span><br><span class="line">        <span class="string">"ctime"</span>: self.create_time.strftime(<span class="string">"%Y-%m-%d"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> house_dict</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 将查询到的房屋信息转换成字典数据，添加到定义的houses_list列表中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">houses_list = []</span><br><span class="line"><span class="keyword">for</span> house <span class="keyword">in</span> houses:</span><br><span class="line">    houses_list.append(house.to_basic_dict())</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 最后返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"houses"</span>:houses_list&#125;)</span><br></pre></td></tr></table></figure><h1 id="二丶用户房屋管理前端编写"><a href="#二丶用户房屋管理前端编写" class="headerlink" title="二丶用户房屋管理前端编写"></a>二丶用户房屋管理前端编写</h1><p>1.在myhouse.js中通过get请求方式向后端接口发送请求，通过后端返回的正确响应以及data数据，传到前端html中的template模本进行数据显示，如下编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="keyword">get</span>("/api/v1.0/user/houses", function(resp)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">                $(<span class="string">"#houses-list"</span>).html(template(<span class="string">"houses-list-tmpl"</span>, &#123;<span class="attr">houses</span>:resp.data.houses&#125;));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(<span class="string">"#houses-list"</span>).html(template(<span class="string">"houses-list-tmpl"</span>, &#123;<span class="attr">houses</span>:[]&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>2.引入template.js模板，在my.html中进行如下编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script id=<span class="string">"houses-list-tmpl"</span> type=<span class="string">"text/html"</span>&gt;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"new-house"</span>&gt;</span><br><span class="line">            &lt;a href=<span class="string">"/newhouse.html"</span>&gt;发布新房源&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">    &#123;&#123;each houses as house&#125;&#125;</span></span><br><span class="line"><span class="regexp">    &lt;li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;a href="/</span>detail.html?id=&#123;&#123;house.house_id&#125;&#125;<span class="string">"&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="</span>house-title<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                &lt;h3&gt;房屋ID:&#123;&#123;house.house_id&#125;&#125; —— &#123;&#123;house.title&#125;&#125;&lt;/h3&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="</span>house-content<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                &lt;img src="</span>&#123;&#123;house.img_url&#125;&#125;<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                &lt;div class="</span>house-text<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                    &lt;ul&gt;</span></span><br><span class="line"><span class="string">                        &lt;li&gt;位于：&#123;&#123;house.area_name&#125;&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li&gt;价格：￥&#123;&#123;(house.price/100.0).toFixed(0)&#125;&#125;/晚&lt;/li&gt;</span></span><br><span class="line"><span class="string">                        &lt;li&gt;发布时间：&#123;&#123;house.ctime&#125;&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="string">                    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &#123;&#123;/each&#125;&#125;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三丶测试用户管理后端接口"><a href="#三丶测试用户管理后端接口" class="headerlink" title="三丶测试用户管理后端接口"></a>三丶测试用户管理后端接口</h1><p>1.之前在编写发布房源接口时，已经发布过房源信息了，所以当进入我的房源页面时，就会向后端接口发送请求，获取房源数据，显示在页面上，如下图所示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190121192311960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.查看数据库房屋信息表ih_house_info</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190121192819745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶主页幻灯片房屋信息后端编写"><a href="#四丶主页幻灯片房屋信息后端编写" class="headerlink" title="四丶主页幻灯片房屋信息后端编写"></a>四丶主页幻灯片房屋信息后端编写</h1><p>1.分析：首先主页幻灯片上显示的房屋信息，需要在后端定义一个接口，在这个接口中我们需要在数据库中将房屋订单数目最多的5条数据查询出来，展示到主页上，这个需求也是刚开始开发项目的需求，因为主页时用户大量访问的，所以这5条数据需要缓存到redis数据库中，减少我们对数据库的查询</p><p>2.逻辑编写(具体实现)</p><ul><li><strong>step1</strong> 定义视图函数，此接口因为是在主页所以不需要用户登录验证</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/houses/index", methods=["GET"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_house_index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取主页幻灯片房屋信息</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 查询数据库获取房屋订单数目最多的5条数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 查询房屋订单倒序排序并显示5条</span></span><br><span class="line">    houses = House.query.order_by(House.order_count.desc()).limit(constants.HOME_PAGE_MAX_HOUSES)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"查询数据失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 判断数据是否存在,不存在则返回异常错误信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> houses:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"无相关数据"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 将查询到的房屋信息转换成字典数据，添加到定义的houses_list列表中，如过房屋未设置主图片，则跳过</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">houses_list = []</span><br><span class="line"><span class="keyword">for</span> house <span class="keyword">in</span> houses:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> house.index_image_url:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    houses_list.append(house.to_basic_dict())</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 将列表数据转换从json格式的数据，并存到redis数据库中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    json_houses = json.dumps(houses_list)</span><br><span class="line">    redis_store.setex(<span class="string">"home_page_data"</span>, constants.HOME_PAGE_DATA_REDIS_EXPIRES, json_houses)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">'&#123;"errno":"0", "errmsg":"OK", "data":%s&#125;'</span> % json_houses, <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>:<span class="string">"application/json"</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 因为第一次是不存在缓存数据的，所以我们在进入函数时，就先从redis中拿取数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    ret = redis_store.get(<span class="string">"home_page_data"</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    ret = <span class="literal">None</span></span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 此时需要对获取数据进行判断，当获取数据结果不为空时，则返回给前端正确响应数据，不存在时else就在数据库中进行数据查询，再将查询结果写入到redis数据库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当ret获取数据结果不为空时，则返回给前端正确响应数据，不存在时else就在数据库中进行数据查询，再将查询结果写入到redis数据库</span></span><br><span class="line"><span class="keyword">if</span> ret:</span><br><span class="line">    current_app.logger.info(<span class="string">"house index info from redis"</span>)</span><br><span class="line">    <span class="comment"># 因为redis中保存的是json字符串，所以直接进行字符串拼接返回</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&#123;"errno":0, "errmsg":"OK", "data":%s&#125;'</span> % ret, <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 查询数据库获取房屋订单数目最多的5条数据</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 查询房屋订单倒序排序并显示5条</span></span><br><span class="line">        houses = House.query.order_by(House.order_count.desc()).limit(constants.HOME_PAGE_MAX_HOUSES)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        current_app.logger.error(e)</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"查询数据失败"</span>)</span><br></pre></td></tr></table></figure><h1 id="五丶主页幻灯片房屋信息前端编写"><a href="#五丶主页幻灯片房屋信息前端编写" class="headerlink" title="五丶主页幻灯片房屋信息前端编写"></a>五丶主页幻灯片房屋信息前端编写</h1><p>1.在主页前端index.js中，需要向后端接口发送请求来获取主页幻灯片要展示的房屋信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取幻灯片要展示的房屋基本信息</span></span><br><span class="line">$.<span class="keyword">get</span>("/api/v1.0/houses/index", function(resp)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">        $(<span class="string">".swiper-wrapper"</span>).html(template(<span class="string">"swiper-houses-tmpl"</span>, &#123;<span class="attr">houses</span>:resp.data&#125;));</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 设置幻灯片对象，开启幻灯片滚动</span></span><br><span class="line">        <span class="keyword">var</span> mySwiper = <span class="keyword">new</span> Swiper (<span class="string">'.swiper-container'</span>, &#123;</span><br><span class="line">            loop: <span class="literal">true</span>,</span><br><span class="line">            autoplay: <span class="number">2000</span>,</span><br><span class="line">            autoplayDisableOnInteraction: <span class="literal">false</span>,</span><br><span class="line">            pagination: <span class="string">'.swiper-pagination'</span>,</span><br><span class="line">            paginationClickable: <span class="literal">true</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.在主页页面中选择区县按钮块，需要从后端接口获取区县信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取区县信息</span></span><br><span class="line">$.<span class="keyword">get</span>("/api/v1.0/areas", function(resp)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">        $(<span class="string">".area-list"</span>).html(template(<span class="string">"area-list-tmpl"</span>, &#123;<span class="attr">areas</span>:resp.data&#125;));</span><br><span class="line">        $(<span class="string">".area-list a"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            $(<span class="string">"#area-btn"</span>).html($(<span class="keyword">this</span>).html());</span><br><span class="line">            $(<span class="string">".search-btn"</span>).attr(<span class="string">"area-id"</span>, $(<span class="keyword">this</span>).attr(<span class="string">"area-id"</span>));</span><br><span class="line">            $(<span class="string">".search-btn"</span>).attr(<span class="string">"area-name"</span>, $(<span class="keyword">this</span>).html());</span><br><span class="line">            $(<span class="string">"#area-modal"</span>).modal(<span class="string">"hide"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.在主页index.html中进行一个模板使用，将后端返回的响应数据显示在模板中，幻灯片部分如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"swiper-houses-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    &#123;&#123;<span class="keyword">each</span> houses <span class="keyword">as</span> house&#125;&#125;</span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-slide"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/detail.html?id=</span></span></span><span class="template-variable">&#123;&#123;house.house_id&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;house.img_url&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide-title"</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.在主页index.html中区县模板，编写如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"area-list-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="actionscript">&#123;&#123;<span class="keyword">each</span> areas <span class="keyword">as</span> area&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">area-id</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;area.aid&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span><span class="template-variable">&#123;&#123;area.aname&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml"></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="六丶测试主页幻灯片接口和区县信息以及房屋信息缓存"><a href="#六丶测试主页幻灯片接口和区县信息以及房屋信息缓存" class="headerlink" title="六丶测试主页幻灯片接口和区县信息以及房屋信息缓存"></a>六丶测试主页幻灯片接口和区县信息以及房屋信息缓存</h1><p>1.幻灯片接口</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122140546673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.区县信息显示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122140801332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.查看项目运行日志</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019012214093725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.此时查看数据库缓存</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122141333900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="七丶房屋详情页后端编写"><a href="#七丶房屋详情页后端编写" class="headerlink" title="七丶房屋详情页后端编写"></a>七丶房屋详情页后端编写</h1><p>1.分析：①在房屋详情页面，角色分为房东以及客户，当客户进入时对于前端页面来说需显示预定功能按钮，如是房东角色进入就不展示此功能按钮；②对于角色来说，那么就需要用到user_id了；③尝试从session中去获取用户id，如果存在，说明用户为登录状态，那么将用户id返回给前端，不存在返回user_id = -1</p><p>2.逻辑编写</p><ul><li><strong>step1</strong> 创建视图函数，需要前端给后端传递房屋id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/houses/&lt;int:house_id&gt;", methods=["GET"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_house_detail</span><span class="params">(house_id)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取房屋详情</span></span><br><span class="line"><span class="string">    :param house_id:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 从session中尝试获取用户id,没有则赋值-1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = session.get(<span class="string">"user_id"</span>, <span class="string">"-1"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 校验house_id, 不存在则返回错误信息提示</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> house_id:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数缺失"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 通过house_id 查询数据库获取房屋对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    house = House.query.get(house_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"查询数据失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 判断对象是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> house:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"房屋不存在"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 在models.py文件House类中定义to_full_dict方法，用作于将详细信息转换为字典数据；在这个方法里面需要将房屋图片，房屋设施以及评论信息，单独添加到列表中，最后在将该列表以值的方式保存到字典house_dict中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_full_dict</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""将详细信息转换为字典数据"""</span></span><br><span class="line">        house_dict = &#123;</span><br><span class="line">            <span class="string">"hid"</span>: self.id,</span><br><span class="line">            <span class="string">"user_id"</span>: self.user_id,</span><br><span class="line">            <span class="string">"user_name"</span>: self.user.name,</span><br><span class="line">            <span class="string">"user_avatar"</span>: constants.QINIU_URL_DOMAIN + self.user.avatar_url <span class="keyword">if</span> self.user.avatar_url <span class="keyword">else</span> <span class="string">""</span>,</span><br><span class="line">            <span class="string">"title"</span>: self.title,</span><br><span class="line">            <span class="string">"price"</span>: self.price,</span><br><span class="line">            <span class="string">"address"</span>: self.address,</span><br><span class="line">            <span class="string">"room_count"</span>: self.room_count,</span><br><span class="line">            <span class="string">"acreage"</span>: self.acreage,</span><br><span class="line">            <span class="string">"unit"</span>: self.unit,</span><br><span class="line">            <span class="string">"capacity"</span>: self.capacity,</span><br><span class="line">            <span class="string">"beds"</span>: self.beds,</span><br><span class="line">            <span class="string">"deposit"</span>: self.deposit,</span><br><span class="line">            <span class="string">"min_days"</span>: self.min_days,</span><br><span class="line">            <span class="string">"max_days"</span>: self.max_days,</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 房屋图片</span></span><br><span class="line">        img_urls = []</span><br><span class="line">        <span class="keyword">for</span> image <span class="keyword">in</span> self.images:</span><br><span class="line">            img_urls.append(constants.QINIU_URL_DOMAIN + image.url)</span><br><span class="line">        house_dict[<span class="string">"img_urls"</span>] = img_urls</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 房屋设施</span></span><br><span class="line">        facilities = []</span><br><span class="line">        <span class="keyword">for</span> facility <span class="keyword">in</span> self.facilities:</span><br><span class="line">            facilities.append(facility.id)</span><br><span class="line">        house_dict[<span class="string">"facilities"</span>] = facilities</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 评论信息</span></span><br><span class="line">        comments = []</span><br><span class="line">        orders = Order.query.filter(Order.house_id == self.id, Order.status == <span class="string">"COMPLETE"</span>, Order.comment != <span class="literal">None</span>) \</span><br><span class="line">            .order_by(Order.update_time.desc()).limit(constants.HOUSE_DETAIL_COMMENT_DISPLAY_COUNTS)</span><br><span class="line">        <span class="keyword">for</span> order <span class="keyword">in</span> orders:</span><br><span class="line">            comment = &#123;</span><br><span class="line">                <span class="string">"comment"</span>: order.comment,  <span class="comment"># 评论的内容</span></span><br><span class="line">                <span class="string">"user_name"</span>: order.user.name <span class="keyword">if</span> order.user.name != order.user.mobile <span class="keyword">else</span> <span class="string">"匿名用户"</span>,  <span class="comment"># 发表评论的用户</span></span><br><span class="line">                <span class="string">"ctime"</span>: order.update_time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)  <span class="comment"># 评价的时间</span></span><br><span class="line">            &#125;</span><br><span class="line">            comments.append(comment)</span><br><span class="line">        house_dict[<span class="string">"comments"</span>] = comments</span><br><span class="line">        <span class="keyword">return</span> house_dict</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 将查询到的房屋对象转换成字典</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    house_data = house.to_full_dict()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DATAERR, errmsg=<span class="string">"数据错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 将房屋详情数据转换成json格式的数据，并存到redis数据库中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">json_houses = json.dumps(house_data)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    redis_store.setex(<span class="string">"house_info_%s"</span> % house_id, constants.HOUSE_DETAIL_REDIS_EXPIRE_SECOND, json_houses)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 构造响应数据, 并返回</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">resp = <span class="string">'&#123;"errno":"0", "errmsg":"OK", "data":&#123;"user_id":%s, "house":%s&#125;&#125;'</span> %(user_id, json_houses), <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> resp</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 尝试从redis数据库中获取房屋详情信息, 出现异常则使ret为None，所以需要在进入函数后，那么需要从去数据库中获取房屋详情信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    ret = redis_store.get(<span class="string">"house_info_%s"</span> % house_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    ret = <span class="literal">None</span></span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 对ret进行判断, 存在不为None 则直接返回正确响应数据即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ret:</span><br><span class="line">    current_app.logger.info(<span class="string">"house info from redis"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&#123;"errno":"0", "errmsg":"OK", "data":&#123;"user_id":%s, "house":%s&#125;&#125;'</span> % (user_id, ret), <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br></pre></td></tr></table></figure><h1 id="八丶房屋详情页前端编写"><a href="#八丶房屋详情页前端编写" class="headerlink" title="八丶房屋详情页前端编写"></a>八丶房屋详情页前端编写</h1><p>1.在detail.js文件中</p><ul><li><strong>step1</strong> 定义decodeQuery函数，用作于解析提取url中的查询字符串参数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decodeQuery</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> search = <span class="built_in">decodeURI</span>(<span class="built_in">document</span>.location.search);</span><br><span class="line">    <span class="keyword">return</span> search.replace(<span class="regexp">/(^\?)/</span>, <span class="string">''</span>).split(<span class="string">'&amp;'</span>).reduce(<span class="function"><span class="keyword">function</span>(<span class="params">result, item</span>)</span>&#123;</span><br><span class="line">        values = item.split(<span class="string">'='</span>);</span><br><span class="line">        result[values[<span class="number">0</span>]] = values[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;, &#123;&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在$(document).ready(function(){}回调函数中，获取详情页面要展示的房屋编号</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> queryData = decodeQuery();</span><br><span class="line"><span class="keyword">var</span> houseId = queryData[<span class="string">"id"</span>];</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取房屋详细信息</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="keyword">get</span>("/api/v1.0/houses/" + houseId, function(resp)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">        $(<span class="string">".swiper-container"</span>).html(template(<span class="string">"house-image-tmpl"</span>, &#123;<span class="attr">img_urls</span>:resp.data.house.img_urls, <span class="attr">price</span>:resp.data.house.price&#125;));</span><br><span class="line">        $(<span class="string">".detail-con"</span>).html(template(<span class="string">"house-detail-tmpl"</span>, &#123;<span class="attr">house</span>:resp.data.house&#125;));</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// resp.user_id为访问页面用户,resp.data.user_id为房东</span></span><br><span class="line">        <span class="keyword">if</span> (resp.data.user_id != resp.data.house.user_id) &#123;</span><br><span class="line">            $(<span class="string">".book-house"</span>).attr(<span class="string">"href"</span>, <span class="string">"/booking.html?hid="</span>+resp.data.house.hid);</span><br><span class="line">            $(<span class="string">".book-house"</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> mySwiper = <span class="keyword">new</span> Swiper (<span class="string">'.swiper-container'</span>, &#123;</span><br><span class="line">            loop: <span class="literal">true</span>,</span><br><span class="line">            autoplay: <span class="number">2000</span>,</span><br><span class="line">            autoplayDisableOnInteraction: <span class="literal">false</span>,</span><br><span class="line">            pagination: <span class="string">'.swiper-pagination'</span>,</span><br><span class="line">            paginationType: <span class="string">'fraction'</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2.在detail.html文件中</p><ul><li><strong>step1</strong> 房屋详情页面中幻灯片房屋信息编写如下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"house-image-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="javascript">    &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-wrapper"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        &#123;&#123;<span class="keyword">each</span> img_urls <span class="keyword">as</span> img_url&#125;&#125;</span></span><br><span class="line"><span class="javascript">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-slide"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;img_url&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"swiper-pagination"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"house-price"</span>&gt;</span>￥<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123;(price/100.0).toFixed(0)&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span>/晚<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 房屋标题，房屋地址，房屋详情，配套设施以及评价信息编写如下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"house-detail-tmpl"</span> <span class="attr">type</span>=<span class="string">"text/html"</span>&gt;</span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"detail-header layout-style"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"house-title"</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.title&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"landlord-pic"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;house.user_avatar&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"landlord-name"</span>&gt;</span>房东： <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.user_name&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-info layout-style"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">       <span class="tag">&lt;<span class="name">h3</span>&gt;</span>房屋地址<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">       &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-info-list text-center"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.address&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-type layout-style"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-house"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-text"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>出租</span><span class="template-variable">&#123;&#123;house.room_count&#125;&#125;</span><span class="xml">间<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>房屋面积:</span><span class="template-variable">&#123;&#123;house.acreage&#125;&#125;</span><span class="xml">平米<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>房屋户型:</span><span class="template-variable">&#123;&#123;house.unit&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-user"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-text"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>宜住</span><span class="template-variable">&#123;&#123;house.capacity&#125;&#125;</span><span class="xml">人<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-bed"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"icon-text"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>卧床配置<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.beds&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-info layout-style"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>房间详情<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-info-list"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>收取押金<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123;(house.deposit/100.0).toFixed(0)&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>最少入住天数<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123;house.min_days&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>最多入住天数<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.max_days==0&#125;&#125;</span><span class="xml">无限制</span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"></span><span class="template-variable">&#123;&#123;house.max_days&#125;&#125;</span><span class="xml"></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-facility layout-style"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>配套设施<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-facility-list clearfix"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(1)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">wirelessnetwork-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>无线网络<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(2)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">shower-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>热水淋浴<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(3)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">aircondition-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>空调<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(4)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">heater-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>暖气<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(5)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">smoke-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>允许吸烟<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(6)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">drinking-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>饮水设备<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(7)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">brush-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>牙具<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(8)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">soap-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>香皂<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(9)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">slippers-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>拖鞋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(10)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">toiletpaper-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>手纸<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(11)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">towel-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>毛巾<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(12)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">toiletries-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>沐浴露、洗发露<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(13)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">icebox-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>冰箱<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(14)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">washer-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>洗衣机<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(15)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">elevator-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>电梯<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(16)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">iscook-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>允许做饭<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(17)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">pet-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>允许带宠物<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(18)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">meet-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>允许聚会<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(19)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">accesssys-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>门禁系统<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(20)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">parkingspace-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>停车位<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(21)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">wirednetwork-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>有线网络<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(22)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">tv-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>电视<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.facilities.indexOf(23)&gt;=0&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">hotbathtub-ico</span></span></span><span class="template-variable">&#123;&#123;<span class="builtin-name">else</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">jinzhi-ico</span></span></span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>浴缸<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-variable">&#123;&#123;<span class="builtin-name">if</span> house.comments &#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="javascript">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-info layout-style"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>评价信息<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">        &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"house-comment-list"</span>&gt;</span></span><br><span class="line"><span class="actionscript">            &#123;&#123; <span class="keyword">each</span> house.comments <span class="keyword">as</span> comment&#125;&#125;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123;comment.user_name&#125;&#125;</span><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fr"</span>&gt;</span></span><span class="template-variable">&#123;&#123;comment.ctime&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123;comment.comment&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">each</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    </span><span class="template-tag">&#123;&#123;/<span class="name"><span class="builtin-name">if</span></span>&#125;&#125;</span><span class="xml"></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="九丶测试房屋详情页面显示正确数据是否成功"><a href="#九丶测试房屋详情页面显示正确数据是否成功" class="headerlink" title="九丶测试房屋详情页面显示正确数据是否成功"></a>九丶测试房屋详情页面显示正确数据是否成功</h1><p>1.运行项目，在浏览器输入<a href="http://127.0.0.1:5000" target="_blank" rel="noopener">http://127.0.0.1:5000</a>，即进入网站主页，如下图所示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122170042950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.点击主页任意幻灯片，进入房屋详情页面</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122172200702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.前端房屋完整信息图如下</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122172320588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.查询数据库中房屋信息表以及设备设施表id和house_id为3的数据与前端页面显示数据进行对比</p><ul><li><strong>step1</strong> 在ih_house_info 房屋信息表中查看id=3的数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122172921566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 在ih_house_facility 房屋设备表中，查看house_id为3的设备数据为9条，与前端页面house_id为3的设备信息一致</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122173113799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 将step2 查询结果与ih_facility_info设备表进行一一对应，然后与第3点前端房屋完整信息图进行对比验证</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122173540870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.查看redis数据库中缓存的房屋详情数据</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122173726223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>6.查看项目运行日志，显示成功说明本次进入房屋详情页使用的页面数据为缓存数据</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190122173911957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/86580344" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86580344</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（十）</title>
      <link href="/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%EF%BC%89/"/>
      <url>/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%8D%81%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶区县信息前端编写"><span style="color:#4ea1db">一丶区县信息前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶发布新房源后端接口编写"><span style="color:#4ea1db">二丶发布新房源后端接口编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶发布新房源前端编写"><span style="color:#4ea1db">三丶发布新房源前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶测试接口"><span style="color:#4ea1db">四丶测试接口</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶celery的使用"><span style="color:#4ea1db">五丶celery的使用</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶测试celery"><span style="color:#4ea1db">六丶测试celery</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#七丶celery以目录形式创建"><span style="color:#4ea1db">七丶celery以目录形式创建</span></a></li><a id="more"></a><h1 id="一丶区县信息前端编写"><a href="#一丶区县信息前端编写" class="headerlink" title="一丶区县信息前端编写"></a>一丶区县信息前端编写</h1><p>1.分析，当用户进入发布新房源，页面加载完毕即向后端发送请求拿取数据库中的区域信息数据，显示在页面上所在区县栏</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190116183638471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.所以需在此页面newhouse.js中进行如下编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当页面加载完成时，想后端获取区县信息</span></span><br><span class="line">$.<span class="keyword">get</span>("/api/v1.0/areas", function (resp) &#123;</span><br><span class="line">    <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> areas = resp.data;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;areas.length; i++)&#123;</span><br><span class="line">            <span class="keyword">var</span> area = areas[i]</span><br><span class="line">            $(<span class="string">"#area-id"</span>).append(<span class="string">'&lt;option value="'</span>+area.aid+<span class="string">'"&gt;'</span>+area.aname+<span class="string">'&lt;/option&gt;'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        alert(resp.errmsg)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="string">"json"</span>)</span><br></pre></td></tr></table></figure><p>3.当通过js向后端获取区域信息全部对象，通过循环遍历获取每个对象，将每个对象中的aid以及aname通过append方式追加到id为area_id的select标签下，所以最后需要在newhouse.html中将原有的option标签删除</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"area-id"</span> <span class="attr">name</span>=<span class="string">"area_id"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="1"&gt;锦江区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="2"&gt;青羊区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="3"&gt;金牛区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="4"&gt;武侯区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="5"&gt;成华区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="6"&gt;龙泉驿区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="7"&gt;青白江区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="8"&gt;新都区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="9"&gt;温江区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="10"&gt;郫都区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="11"&gt;双流区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="12"&gt;高新区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="13"&gt;天府新区&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="14"&gt;新津县&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="15"&gt;大邑县&lt;/option&gt;--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;option value="16"&gt;金堂县&lt;/option&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.测试，重新启动程序，清除页面缓存，查看发布房源页面中的所有区县栏是否有数据，此时显示的区县数据，就是从后端数据库获取的</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190116190644439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.查看网页Network，从api/v1.0/area接口获取的数据</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190116191023549.png" alt></fancybox></p><p>6.当前端页面需要从后端拿取很多数据时候，如果用上面的方式通过jquery想后端获取数据，再填充到标签中，这样就太麻烦了，所以这里需要在前端去引入一个js模板，来帮助我们更快的完成页面数据的填充</p><ul><li><strong>step1</strong> 比如在房间信息详情页面，需要很多数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190116192120663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 使用art_template前端js模板来帮助我们解决此问题 <a href="https://aui.github.io/art-template/zh-cn/index.html" target="_blank" rel="noopener">https://aui.github.io/art-template/zh-cn/index.html</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190116192522100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>7.将发布新房源页面中的所在区县栏使用前端js模板进行改写</p><ul><li><strong>step1</strong> 在newhouse.html中引入template.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"/static/js/template.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">step2 在newhouse.html中定义模板</span><br><span class="line">&lt;script type=<span class="string">"text/html"</span> id=<span class="string">"areas-template"</span>&gt;</span><br><span class="line">    &#123;&#123; each areas <span class="keyword">as</span> area &#125;&#125;</span><br><span class="line">    &lt;option value=<span class="string">"&#123;&#123;area.aid&#125;&#125;"</span>&gt;&#123;&#123;area.aname&#125;&#125;&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">    &#123;&#123; /</span>each &#125;&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt; </span></span><br><span class="line"><span class="regexp">```  </span></span><br><span class="line"><span class="regexp">- **step3** 在newhouse.js中使用js模板</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">```javascript</span></span><br><span class="line"><span class="regexp">var html_text =template("areas-template", &#123;areas:areas&#125;);</span></span><br><span class="line"><span class="regexp">$("#area-id").html(html_text)</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 测试，清除缓存，刷新网页，查看结果使用js模板成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190116203456403.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶发布新房源后端接口编写"><a href="#二丶发布新房源后端接口编写" class="headerlink" title="二丶发布新房源后端接口编写"></a>二丶发布新房源后端接口编写</h1><p>1.流程分析，在发布房源前端文件newhouse.html中将该页面下的上传图片栏隐藏了#form-house-image，当用户完成先关填写后，该上传房屋图片表单才会显示出来</p><ul><li><strong>step1</strong> 在浏览器开发端进行显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118084506991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 查看发布房源界面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011808463590.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.在house.py中进行房屋信息接口编写</p><ul><li><strong>step1</strong> 创建视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/houses/info", methods=["POST"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_house_info</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    保存房屋信息</span></span><br><span class="line"><span class="string">    :return: </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br><span class="line">house_data = request.get_json()</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 从获取的data数据中拿取必填字段的值，facility配套设施可能啥都没有，前端就会传个空列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">title = house_data.get(<span class="string">"title"</span>)  <span class="comment"># 房屋名称标题</span></span><br><span class="line">price = house_data.get(<span class="string">"price"</span>)  <span class="comment"># 房屋单价</span></span><br><span class="line">area_id = house_data.get(<span class="string">"area_id"</span>)  <span class="comment"># 房屋所属城区的编号</span></span><br><span class="line">address = house_data.get(<span class="string">"address"</span>)  <span class="comment"># 房屋地址</span></span><br><span class="line">room_count = house_data.get(<span class="string">"room_count"</span>)  <span class="comment"># 房屋包含的房间数目</span></span><br><span class="line">acreage = house_data.get(<span class="string">"acreage"</span>)  <span class="comment"># 房屋面积</span></span><br><span class="line">unit = house_data.get(<span class="string">"unit"</span>)  <span class="comment"># 房屋布局（几室几厅)</span></span><br><span class="line">capacity = house_data.get(<span class="string">"capacity"</span>)  <span class="comment"># 房屋容纳人数</span></span><br><span class="line">beds = house_data.get(<span class="string">"beds"</span>)  <span class="comment"># 房屋卧床数目</span></span><br><span class="line">deposit = house_data.get(<span class="string">"deposit"</span>)  <span class="comment"># 押金</span></span><br><span class="line">min_days = house_data.get(<span class="string">"min_days"</span>)  <span class="comment"># 最小入住天数</span></span><br><span class="line">max_days = house_data.get(<span class="string">"max_days"</span>)  <span class="comment"># 最大入住天数</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([title, price, area_id, address, room_count, acreage, unit,capacity, beds, deposit, min_days, max_days]):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数不完整"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 判断用户输入的房屋单价和押金是否为正确参数，通过存入数据库字段单位分，如果用户输入的值不能转换为float和int类型，说明参数错误</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    price = int(float(price)*<span class="number">100</span>)</span><br><span class="line">    deposit = int(float(deposit)*<span class="number">100</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 判断区县id是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    area = Area.query.get(area_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"数据库异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 如果在数据库中查询不到区域信息，表示区县信息有误</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> area <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"区县信息有误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 保存房屋信息到数据库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">house = House(</span><br><span class="line">    user_id = user_id,</span><br><span class="line">    title = title,</span><br><span class="line">    price = price,</span><br><span class="line">    area_id = area_id,</span><br><span class="line">    address = address,</span><br><span class="line">    room_count = room_count,</span><br><span class="line">    acreage = acreage,</span><br><span class="line">    unit = unit,</span><br><span class="line">    capacity = capacity,</span><br><span class="line">    beds = beds,</span><br><span class="line">    deposit = deposit,</span><br><span class="line">    min_days = min_days,</span><br><span class="line">    max_days = max_days</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 获取设备设施数据id值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">facility_ids = house_data.get(<span class="string">"facility"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 对获取设备设施字段的值进行判断,下判断这个值存不存在，当用户勾选设备设施时，举例facility_ids值为[2,4]</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> facility_ids:</span><br><span class="line">    <span class="comment"># 通过Facility类中的id值使用in_方法查询其中的id</span></span><br><span class="line">    <span class="comment"># select * from ih_facility_info where id in facility_ids;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        facilities = Facility.query.filter(Facility.id.in_(facility_ids)).all()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        current_app.logger.error(e)</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"数据库异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 判断查询的每个facility对象是否存在,存在则保存设施数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> facilities:</span><br><span class="line">    house.facilities = facilities</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        db.session.add(house)</span><br><span class="line">        db.session.commit()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        current_app.logger.error(e)</span><br><span class="line">        db.session.rollback()</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"保存数据异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step12</strong> 返回正确响应内容</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"house_id"</span>:house.id&#125;)</span><br></pre></td></tr></table></figure><p>3.上传房屋图片接口编写</p><ul><li><strong>step1</strong> 定义视图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/houses/image", methods=["POST"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_house_image</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""保存房屋图片"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取图片</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image_file = request.files.get(<span class="string">"house_image"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取图片id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">house_id = request.form.get(<span class="string">"house_id"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([image_file, house_id]):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 判断房屋是否在，存在才上传到七牛，如果不存在就不上传</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    house = House.query.get(house_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"数据库异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> house对象不存在则返回错误信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> house <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"房屋不存在"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 获取图片二进制数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image_data = image_file.read()</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 将图片保存到七牛中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    file_name = storage(image_data)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.THIRDERR, errmsg=<span class="string">"上传图片失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 保存图片信息到数据库中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">house_image = HouseImage(house_id=house_id, url=file_name)</span><br><span class="line">db.session.add(house_image)</span><br></pre></td></tr></table></figure><ul><li><strong>step10</strong> 当house对象中的index_image_url不存在时，设置网站主页房屋图片</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> house.index_image_url:</span><br><span class="line">    house.index_image_url = file_name</span><br><span class="line">    db.session.add(house)</span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 提交到数据库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"保存图片异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step12</strong> 拼接图片完整url，最后返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">image_url = constants.QINIU_URL_DOMAIN + file_name</span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"image_url"</span>:image_url&#125;)</span><br></pre></td></tr></table></figure><h1 id="三丶发布新房源前端编写"><a href="#三丶发布新房源前端编写" class="headerlink" title="三丶发布新房源前端编写"></a>三丶发布新房源前端编写</h1><p>1.在newhouse.js中进行提交房屋信息表单事件编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#form-house-info"</span>).submit(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step1</strong> 阻止表单默认行为</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.preventDefault();</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 处理表单数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = &#123;&#125;;</span><br><span class="line">$(<span class="string">"#form-house-info"</span>).serializeArray().map(<span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123; data[x.name] = x.value &#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 收集用户勾选的设备id</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> facility = [];</span><br><span class="line">$(<span class="string">":checked[name=facility]"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index, x</span>) </span>&#123;facility[index] = $(x).val()&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 将收集到的用户勾选id存到data数据库里的facility属性中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> facility = [];</span><br><span class="line">$(<span class="string">":checked[name=facility]"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index, x</span>) </span>&#123;facility[index] = $(x).val()&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 通过ajax方式向后端接口发送请求</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url:<span class="string">"/api/v1.0/houses/info"</span>,</span><br><span class="line">    type:<span class="string">"post"</span>,</span><br><span class="line">    contentType:<span class="string">"application/json"</span>,</span><br><span class="line">    data:<span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">    dataType:<span class="string">"json"</span>,</span><br><span class="line">    headers:&#123;</span><br><span class="line">        <span class="string">"X-CSRFToken"</span>: getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resp.errno == <span class="string">"4101"</span>)&#123;</span><br><span class="line">            location.href = <span class="string">"/login.html"</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>)&#123;</span><br><span class="line">            <span class="comment">// 将设备设施表单隐藏</span></span><br><span class="line">            $(<span class="string">"#form-house-info"</span>).hide();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 将上传房屋图片表单显示</span></span><br><span class="line">            $(<span class="string">"#form-house-image"</span>).show();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 设置上传房屋图片表单中的house_id</span></span><br><span class="line">            $(<span class="string">"#house-id"</span>).val(resp.data.house_id);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            alert(resp.errmsg)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,<span class="string">"json"</span>)</span><br></pre></td></tr></table></figure><p>2.在newhouse.js中进行上传房屋图片表单事件编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#form-house-image"</span>).submit(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>step1</strong> 阻止表单默认行为</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.preventDefault();</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 利用jquery.form.min.js插件通过的ajaxSubmit对表单进行异步提交，当后端返回正确响应时， 往class 为 house-image-cons div标签下去添加img标签，该div下的img标签为用户上传图片的标签，上传一个图片则在此div下追加一个img标签</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">this</span>).ajaxSubmit(&#123;</span><br><span class="line">    url:<span class="string">"/api/v1.0/houses/image"</span>,</span><br><span class="line">    type:<span class="string">"post"</span>,</span><br><span class="line">    dataType:<span class="string">"json"</span>,</span><br><span class="line">    headers:&#123;</span><br><span class="line">        <span class="string">"X-CSRFToken"</span>: getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(resp.errno == <span class="string">"4101"</span>)&#123;</span><br><span class="line">            location.href = <span class="string">"/login.html"</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>)&#123;</span><br><span class="line">            <span class="comment">// 往class 为 house-image-cons div标签下去添加img标签</span></span><br><span class="line">            $(<span class="string">".house-image-cons"</span>).append(<span class="string">'&lt;img src="'</span> + resp.data.image_url+<span class="string">'"&gt;'</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            alert(resp.errmsg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="四丶测试接口"><a href="#四丶测试接口" class="headerlink" title="四丶测试接口"></a>四丶测试接口</h1><p>1.运行项目，清除浏览器缓存，刷新网页，进入发布房源，博主这里使用的FS截图工具进行滚动窗口截图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118170036647.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.填写房屋信息</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118170831661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.填写完数据后，点击发布房源信息，逻辑成功则显示上传房屋图片界面</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118170937556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>查看数据库ih_house_info房屋信息表，数据显示为刚填写的表单勾选数据，此时并没有上传图片所以index_image_url为空</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118175751791.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.点击选择文件，选择桌面上的图片后，再点击上传，则显示在页面中</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118173402241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.依次上传三张图片后</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118174309689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>查看此时数据库ih_house_image表信息，在上图上传的三张图片是house_id为6的房屋例子，所以在下标显示house_id为6的图片url链接为三个</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118174853406.png" alt></fancybox></p><p>6.同时查看七牛云上的存储空间</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190118180427123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶celery的使用"><a href="#五丶celery的使用" class="headerlink" title="五丶celery的使用"></a>五丶celery的使用</h1><p>1.问题，我们在做网站后端程序开发时，会碰到这样的需求：用户需要在我们的网站填写注册信息，我们发给用户一封注册激活邮件到用户邮箱，如果由于各种原因，这封邮件发送所需时间较长，那么客户端将会等待很久，造成不好的用户体验.</p><p>2.解决，celery适用异步处理问题，当发送邮件、或者文件上传, 图像处理等等一些比较耗时的操作，我们可将其异步执行，这样用户不需要等待很久，提高用户体验。 celery的特点是：</p><p>简单，易于使用和维护，有丰富的文档。<br>高效，单个celery进程每分钟可以处理数百万个任务。<br>灵活，celery中几乎每个部分都可以自定义扩展。</p><p>3.Task Queue</p><p>celery通过消息进行通信，通常使用一个叫Broker(中间人)来协client(任务的发出者)和worker(任务的处理者). clients发出消息到队列中，broker将队列中的信息派发给worker来处理。</p><p>  一个celery系统可以包含很多的worker和broker，可增强横向扩展性和高可用性能</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119094125417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.在项目ihome目录下创建一个tasks包，用于处理项目中的需要的异步任务，在这个包下创建单一文件来处理对应的异步任务，这种方式是对于所有的web框架来说，都是万能的，像django中使用的djcelery包是别人针对于django框架封装好的包</p><ul><li><strong>step1</strong> 在task包下创建一个task_sms.py文件，在这个文件中去编写对于发送短信的任务</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119095436319.png" alt></fancybox></p><ul><li><strong>step2</strong> 定义celery对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app = Celery(<span class="string">"ihome"</span>, broker=<span class="string">"redis://127.0.0.1:6379/1"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 定义短信的异步任务</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_sms</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""发送短信的异步任务"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 导入之前定义好云通讯中封装的CCP类，并创建CCP的对象ccp</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome.libs.yuntongxun.SendSMS <span class="keyword">import</span> CCP</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 通过ccp对象调用sendTemplateSMS方法，同时调用send_sms方法时传递三个参数，从这三个参数拿sendTemplateSMS方法中即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_sms</span><span class="params">(to, datas, tempId)</span>:</span></span><br><span class="line">    <span class="string">"""发送短信的异步任务"""</span></span><br><span class="line">    ccp = CCP()</span><br><span class="line">    ccp.sendTemplateSMS(to, datas, tempId)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 回到api_1_0目录下的verify_code中，将之前写的get_sms_code方法中发送短信逻辑代码进行重新编写，跟之前写的逻辑不一样，之前是发送成功则返回发送成功msg，失败则返回发送失败msg，大多网站都是现在以下这种逻辑</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用celery异步发送短信</span></span><br><span class="line">send_sms.delay(mobile, [sms_code, int(constants.SMS_CODE_REDIS_EXPIRES/<span class="number">60</span>)], <span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 发送成功与否，用户自己去查看手机，大多网站都是这样做的</span></span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"发送短信成功"</span>)</span><br></pre></td></tr></table></figure><h1 id="六丶测试celery"><a href="#六丶测试celery" class="headerlink" title="六丶测试celery"></a>六丶测试celery</h1><p>1.在终端中运行项目</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119104246640.png" alt></fancybox></p><p>2.另开一个终端执行celery -A ihome.tasks.task_sms worker -l info，-l代表开启日志 info级别，但是出现了报错</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011910492251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.在百度上查询此报错信息，明白原来是celery4.0以上版本不支持windows</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119105123371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.所以博主这里进行 pip install celery==3.1.7 进行3.x版本安装</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119112227903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.在新开启的终端上，重新执行celery -A ihome.tasks.task_sms worker -l info，报错问题解决</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119105942103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>6.进入网站注册界面<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a>，后进行注册，输入博主本人手机号，输入正确验证码，然后点击获取短信验证码后，回头查看celery终端，结果又报错了</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119114933981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>7.这次报的错好像是跟redis有关，查看redis版本为3.0的</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119115014275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>8.将redis版本缓存2.0的，再看看是否报错，pip install redis==2.10.5</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119115115354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>9.先运行项目，再开启另一终端执行celery -A ihome.tasks.task_sms worker -l info</p><ul><li><strong>step1</strong> 在注册页面进行注册</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119115537165.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 查看celery终端日志，显示七牛SDK发送短信成功日志</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119115950736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 查看博主手机上短信验证码为987427</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119120213276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><ul><li><strong>step4</strong> 查看redis数据库1中的keys</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119120537671.png" alt></fancybox></p><h1 id="七丶celery以目录形式创建"><a href="#七丶celery以目录形式创建" class="headerlink" title="七丶celery以目录形式创建"></a>七丶celery以目录形式创建</h1><p>1.在ihome/tasks目录下创建main.py用于启动文件，再创建一个config.py用于作配置文件，然后在tasks目录下创建一个sms包，再该包下创建一个tasks.py文件或者是celery.py文件用于创建worker</p><p><img src="https://img-blog.csdnimg.cn/20190119125912867.png" alt></p><p>2.拆分task_sms.py文件</p><ul><li><strong>step1</strong> 在启动文件main.py中编写以下代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app = Celery(<span class="string">"ihome"</span>, broker=<span class="string">"redis://127.0.0.1:6379/1"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 将如下代码拷贝到tasks.py中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_sms</span><span class="params">(to, datas, tempId)</span>:</span></span><br><span class="line">    <span class="string">"""发送短信的异步任务"""</span></span><br><span class="line">    ccp = CCP()</span><br><span class="line">    ccp.sendTemplateSMS(to, datas, tempId)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 将main.py中创建app对象中的配置文件拿到config.py中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BROKER_URL = <span class="string">"redis://127.0.0.1:6379/1"</span></span><br><span class="line">CELERY_RESULT_BACKEND = <span class="string">'redis://127.0.0.1:6379/2'</span></span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 回到main.py中进入如下编写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app = Celery(<span class="string">"ihome"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 引入配置信息</span></span><br><span class="line">app.config_from_object(config)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 自动搜索任务</span></span><br><span class="line">app.autodiscover_tasks([<span class="string">"ihome.tasks.sms"</span>])</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 回到ihome/api_1_0/verify_code.py中，将之前写的代码进行修改，将不在从from ihome.tasks.task_sms去导入send_sms，而是从我们刚定义好的sms.tasks中去导入send_sms</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome.tasks.sms.tasks <span class="keyword">import</span> send_sms</span><br></pre></td></tr></table></figure><p>3.测试</p><ul><li><strong>step1</strong> 首先启动项目，再另起终端启动worker，结果又特么报错了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119135139410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 这个错是因为操作系统原因导致的，在linux系统上运行则不会保错</li></ul><p>原因：<font style="color:red">因为windows操作系统的原因，在Windows中，多进程multiprocessing使用的是序列化pickle来在多进程之间转移数据，而socket对象是不能被序列化的，但是在linux操作系统上却没问题，因为在linux上多进程multiprocessing使用的是fork，所以在windows上可以改用多线程，而celery是使用多进程以及携程方式进行异步工作，博主又是在windows环境进行测试开发，所以这里先暂时这样，等开发完成部署在linux服务器即可</font></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190119141425707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（九）</title>
      <link href="/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B9%9D%EF%BC%89/"/>
      <url>/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B9%9D%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶区县信息后端编写"><span style="color:#4ea1db">一丶区县信息后端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶为区县信息补充缓存机制"><span style="color:#4ea1db">二丶为区县信息补充缓存机制</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶缓存数据同步问题"><span style="color:#4ea1db">三丶缓存数据同步问题</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶完善后端用户模块"><span style="color:#4ea1db">四丶完善后端用户模块</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶完善前端用户模块"><span style="color:#4ea1db">五丶完善前端用户模块</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶测试用户模块中个人信息栏，我的爱家，实名认证"><span style="color:#4ea1db">六丶测试用户模块中个人信息栏，我的爱家，实名认证</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#七丶效果动图展示"><span style="color:#4ea1db">七丶效果动图展示</span></a></li><a id="more"></a><h1 id="一丶区县信息后端编写"><a href="#一丶区县信息后端编写" class="headerlink" title="一丶区县信息后端编写"></a>一丶区县信息后端编写</h1><p>1.定义视图函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/areas")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_area_info</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    获取区县信息</span></span><br><span class="line"><span class="string">    :return: </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>2.逻辑编写</p><ul><li><strong>step1</strong> 从数据库中获取所有区县信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 从数据库中获取所有区县信息</span></span><br><span class="line">    area_li = Area.query.all()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"数据库异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在Area类中构建一个to_dict方法，将对象转换成字典，因为我们给前端传输数据是需要传输json格式数据的</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_dict</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""将对象转换为字典"""</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"aid"</span>: self.id,</span><br><span class="line">        <span class="string">"aname"</span>: self.name</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 遍历对象列表，调用每个对象中的to_dict方法，将返回的值添加到area_dict_li列表中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将对象转换为字典</span></span><br><span class="line">area_dict_li = []</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> area <span class="keyword">in</span> area_li:</span><br><span class="line">    area_dict_li.append(area.to_dict())</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 返回正确响应数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=area_dict_li)</span><br></pre></td></tr></table></figure><p>3.测试接口</p><ul><li><strong>step1</strong> 运行项目，打开Postman测试工具，向127.0.0.1:5000/api/v1.0/areas发送get请求</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115142331749.png" alt></fancybox></p><ul><li><strong>step2</strong> 返回接口正确响应数据，因为数据库Area表没有数据，所以返回的响应数据为空</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115142537149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.向数据库中ih_area_info以及ih_facility_info两张表插入测试数据</p><ul><li><strong>step1</strong> 执行如下SQL语句</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`ih_area_info`</span>(<span class="string">`name`</span>) <span class="keyword">VALUES</span> (<span class="string">'锦江区'</span>),(<span class="string">'青羊区'</span>),(<span class="string">'金牛区'</span>),(<span class="string">'武侯区'</span>),(<span class="string">'成华区'</span>),(<span class="string">'龙泉驿区'</span>),(<span class="string">'青白江区'</span>),(<span class="string">'新都区'</span>),(<span class="string">'温江区'</span>),(<span class="string">'郫都区'</span>),(<span class="string">'双流区'</span>),(<span class="string">'高新区'</span>),(<span class="string">'天府新区'</span>),(<span class="string">'新津县'</span>),(<span class="string">'大邑县'</span>),(<span class="string">'金堂县'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`ih_facility_info`</span>(<span class="string">`name`</span>) <span class="keyword">VALUES</span>(<span class="string">'无线网络'</span>),(<span class="string">'热水淋浴'</span>),(<span class="string">'空调'</span>),(<span class="string">'暖气'</span>),(<span class="string">'允许吸烟'</span>),(<span class="string">'饮水设备'</span>),(<span class="string">'牙具'</span>),(<span class="string">'香皂'</span>),(<span class="string">'拖鞋'</span>),(<span class="string">'手纸'</span>),(<span class="string">'毛巾'</span>),(<span class="string">'沐浴露、洗发露'</span>),(<span class="string">'冰箱'</span>),(<span class="string">'洗衣机'</span>),(<span class="string">'电梯'</span>),(<span class="string">'允许做饭'</span>),(<span class="string">'允许带宠物'</span>),(<span class="string">'允许聚会'</span>),(<span class="string">'门禁系统'</span>),(<span class="string">'停车位'</span>),(<span class="string">'有线网络'</span>),(<span class="string">'电视'</span>),(<span class="string">'浴缸'</span>);</span><br></pre></td></tr></table></figure><p>ih_area_info表</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115144350737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>ih_facility_info表</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115144445814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 再回到Postman中Send发送请求，显示出正确响应数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115144716273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶为区县信息补充缓存机制"><a href="#二丶为区县信息补充缓存机制" class="headerlink" title="二丶为区县信息补充缓存机制"></a>二丶为区县信息补充缓存机制</h1><p>1.为什么要补充缓存机制</p><ul><li><strong>step1</strong> 在网站首页，需要频繁获取区域数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115145249618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 在我的爱家中，发布房源也需要频繁获取区域数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115145600238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 以及在房源列表，搜索栏也要频繁获取区域数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115145708692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.分析，因为区县一般都是固定的，不会经常变化，搜索页面和主页是用户经常访问的地方，那么即我们后端接口以及数据库就会被大量访问，而且是在很短时间内，这样可能会出现异常问题，导致访问速度缓慢，所以完美解决方法就是使用缓存</p><p>3.具体实现流程</p><ul><li><strong>step1</strong> 当用户访问区县信息时，就会调用后端我们写的get_area_info接口，之前写的代码是，每次访问都会从数据库中拿去数据，现在将这一块改变一下，先从redis数据中拿去数据库（这里选择redis数据库，因为是内存级的数据库）</li><li><strong>step2</strong> 如果redis数据库中有区域数据，直接返回给前端</li><li><strong>step3</strong> 当redis数据库中没有区域数据时，此时再去mysql数据库中进行数据获取，拿到的区域数据不会马上返回给前端，而是将拿到的数据保存到redis数据库中，最后才返回给前端</li></ul><p>4.逻辑代码编写</p><p>思考：将数据保存到redis数据库中，此时需要思考，以怎么形式保存数据，保存哪些数据到redis数据库</p><p>实现：是将整个返回给前端正确响应数据全部以json格式的字符串保存</p><ul><li><strong>step1</strong> 将数据转换为json字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">resp_dict = dict(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=area_dict_li)</span><br><span class="line">resp_json_str = json.dumps(resp_dict)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 将构建的json格式的字符串响应数据保存到redis数据库中， 并设置有效期</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    redis_store.setex(<span class="string">"area_info"</span>,constants.AREA_INFO_REDIS_CACHE_EXPIRES, resp_json_str)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 返回构造响应头数据，设置Content-Type为json，默认的为html</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> resp_json_str, <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>:<span class="string">"application/json"</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 调用接口一开始从redis数据库中拿去区域数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    resp_json_str = redis_store.get(<span class="string">"area_info"</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> resp_json_str <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> resp_json_str, <span class="number">200</span>, &#123;<span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 当redis数据库中获取的数据不为空时，往日志info中记录一句话，方便测试是从mysql 还是 redis 获取的区域数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">current_app.logger.info(<span class="string">"Area data from redis"</span>)</span><br></pre></td></tr></table></figure><p>5.测试redis缓存是否成功</p><ul><li><strong>step1</strong> 运行项目</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115162249936.png" alt></fancybox></p><ul><li><strong>step2</strong> 在Postman测试工具中向后端接口</li></ul><p>第一次Send发送请求，查看程序运行日志，并没有显示我们定义日志信息</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115162754415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>第二次Send发送请求，则显示我们定义的info日志信息，说明区域数据是从redis数据库中获取的</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115162944855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 查看redis数据库，并获取area_info键的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115164249197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶缓存数据同步问题"><a href="#三丶缓存数据同步问题" class="headerlink" title="三丶缓存数据同步问题"></a>三丶缓存数据同步问题</h1><p><strong>问</strong>：怎么保证redis缓存的数据和mysql数据保持一致性？</p><p><strong>第一种</strong>方式：mysql数据库维护人员在修改区域表数据时，将redis数据库key删除</p><p><strong>第二种</strong>方式：就是我们这种简单暴力有效的方式，设置数据的有效期，让redis数据库来帮我们把数据进行删除</p><h1 id="四丶完善后端用户模块"><a href="#四丶完善后端用户模块" class="headerlink" title="四丶完善后端用户模块"></a>四丶完善后端用户模块</h1><p>1.对profile模块中的update_name进行修改</p><ul><li><strong>step1</strong> 修改路由请求方式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/users/name", methods=["PUT"])</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 从g对象中获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取前端请求中的参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req_dict = request.get_json()</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断参数是否为空</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> req_dict:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数不完整"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 获取用户修改的名字</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name = req_dict.get(<span class="string">"name"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 判断用户是否输入用户名</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"名字不能为空"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 将用户修改后的名字保存到数据库，需要注意的是这里不需要判断名字name是否重复，因为当初在创建数据库表字段name的时候设置了唯一索引</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    User.query.filter_by(id=user_id).update(&#123;<span class="string">"name"</span>: name&#125;)</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"保存用户名字失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 因为在登录和注册接口编写时候最后都将name保存到session中，所以当用户修改name后，也需要将新的name进行session保存</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session[<span class="string">"name"</span>] = name</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 最后返回正确响应</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"修改成功"</span>, data=&#123;<span class="string">"name"</span>: name&#125;)</span><br></pre></td></tr></table></figure><p>2.获取个人信息在我的爱家中进行显示</p><ul><li><strong>step1</strong> 定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/user", methods=["GET"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_profile</span><span class="params">()</span>:</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 根据用户id在数据库中查询个人信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user = User.query.get(user_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取用户信息失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断用户对象是否为空</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> User <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"无效操作"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在models模块中构建一个to_dict方法，用于构建我们返回给前端的数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_dict</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""将对象转换为字典数据"""</span></span><br><span class="line">    user_dict = &#123;</span><br><span class="line">        <span class="string">"user_id"</span>: self.id,</span><br><span class="line">        <span class="string">"name"</span>: self.name,</span><br><span class="line">        <span class="string">"mobile"</span>: self.mobile,</span><br><span class="line">        <span class="string">"avatar"</span>: constants.QINIU_URL_DOMAIN + self.avatar_url <span class="keyword">if</span> self.avatar_url <span class="keyword">else</span> <span class="string">""</span>,</span><br><span class="line">        <span class="string">"create_time"</span>: self.create_time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> user_dict</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 回到profile模块中，返回正确响应数据给前端</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=user.to_dict())</span><br></pre></td></tr></table></figure><p>3.获取用户的实名认证信息</p><ul><li><strong>step1</strong> 定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/users/auth", methods=["GET"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_auth</span><span class="params">()</span>:</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 根据用户id在数据库中进行查询, 获取用户对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user = User.query.get(user_id)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取用户实名认证信息失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断用户对象是否为空</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> user <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"无效操作"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在models模块中构建一个auth_to_dict方法，用于构建我们返回给前端的数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">auth_to_dict</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""将用户实名信息转换为字典数据"""</span></span><br><span class="line">    auth_dict = &#123;</span><br><span class="line">        <span class="string">"user_id"</span>: self.id,</span><br><span class="line">        <span class="string">"real_name"</span>: self.real_name,</span><br><span class="line">        <span class="string">"id_card"</span>: self.id_card</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> auth_dict</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 回到profile模块中，返回正确响应数据给前端</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=user.auth_to_dict())</span><br></pre></td></tr></table></figure><p>4.向数据库中保存用户实名认证信息</p><ul><li><strong>step1</strong> 定义视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/users/auth", methods=["POST"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_user_auth</span><span class="params">()</span>:</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取前端发送请求中的参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req_data = request.get_json()</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断参数是否为空</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> req_data:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 获取用户输入的真实姓名和身份证号</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">real_name = req_data.get(<span class="string">"real_name"</span>)</span><br><span class="line">id_card = req_data.get(<span class="string">"id_card"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 校验参数完整性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([real_name,id_card]):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 将用户填写的真实姓名和身份证号保存到数据库中，这里在数据库进行数据更新是为什么将real_name和id_card默认为空，因为在后端来说，用户只能设置一次实名认证，当real_name和id_card为None时，才代用户是第一次进行认证，当获取的real_name和id_card不为空时，说明用户之前已经认证过了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    User.query.filter_by(id=user_id, real_name=<span class="literal">None</span>, id_card=<span class="literal">None</span>).update(&#123;<span class="string">"real_name"</span>:real_name, <span class="string">"id_card"</span>:id_card&#125;)</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"保存用户实名信息失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 向前端返回正确响应</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>)</span><br></pre></td></tr></table></figure><h1 id="五丶完善前端用户模块"><a href="#五丶完善前端用户模块" class="headerlink" title="五丶完善前端用户模块"></a>五丶完善前端用户模块</h1><p>1.在profile.html文件中进行如下修改</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form-name"</span> <span class="attr">action</span>=<span class="string">"/api/profile/name"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.在profile.js中进行如下编写</p><ul><li><strong>step1</strong> 在个人信息栏显示用户信息</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在页面加载是向后端查询用户的信息</span></span><br><span class="line">    $.<span class="keyword">get</span>("/api/v1.0/user", function(resp)&#123;</span><br><span class="line">        <span class="comment">// 当后端接口检验登录装饰器返回4101状态码，表示用户未登录，即跳转到登录页面</span></span><br><span class="line">        <span class="keyword">if</span> (resp.errno == <span class="string">"4101"</span>) &#123;</span><br><span class="line">            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 后端返回正确响应码，将响应数据中的name填写到id = user-name的标签内容上</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>) &#123;</span><br><span class="line">            $(<span class="string">"#user-name"</span>).val(resp.data.name);</span><br><span class="line">            <span class="comment">// 头像链接存在则显示到src下</span></span><br><span class="line">            <span class="keyword">if</span> (resp.data.avatar) &#123;</span><br><span class="line">                $(<span class="string">"#user-avatar"</span>).attr(<span class="string">"src"</span>, resp.data.avatar);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="string">"json"</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 将用户修改后的名字保存到数据库中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将用户修改后名字向后端进行发送</span></span><br><span class="line">    $(<span class="string">"#form-name"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        e.preventDefault();</span><br><span class="line">        <span class="comment">// 获取用户输入的名字</span></span><br><span class="line">        <span class="keyword">var</span> name = $(<span class="string">"#user-name"</span>).val();</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (!name) &#123;</span><br><span class="line">            alert(<span class="string">"请填写用户名！"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"/api/v1.0/users/name"</span>,</span><br><span class="line">            type:<span class="string">"PUT"</span>,</span><br><span class="line">            data: <span class="built_in">JSON</span>.stringify(&#123;<span class="attr">name</span>: name&#125;),</span><br><span class="line">            contentType: <span class="string">"application/json"</span>,</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            headers:&#123;</span><br><span class="line">                <span class="string">"X-CSRFTOKEN"</span>:getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (data.errno == <span class="string">"0"</span>) &#123;</span><br><span class="line">                    $(<span class="string">".error-msg"</span>).hide();</span><br><span class="line">                    showSuccessMsg();</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.errno == <span class="string">"4001"</span>) &#123;</span><br><span class="line">                    $(<span class="string">".error-msg"</span>).show();</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.errno == <span class="string">"4101"</span>) &#123;</span><br><span class="line">                    location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>3.在我的爱家my.js中进行如下编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.<span class="keyword">get</span>("/api/v1.0/user", function(resp)&#123;</span><br><span class="line">        <span class="comment">// 用户未登录</span></span><br><span class="line">        <span class="keyword">if</span> (resp.errno == <span class="string">"4101"</span>) &#123;</span><br><span class="line">            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 查询到了用户的信息</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>) &#123;</span><br><span class="line">            $(<span class="string">"#user-name"</span>).html(resp.data.name);</span><br><span class="line">            $(<span class="string">"#user-mobile"</span>).html(resp.data.mobile);</span><br><span class="line">            <span class="keyword">if</span> (resp.data.avatar) &#123;</span><br><span class="line">                $(<span class="string">"#user-avatar"</span>).attr(<span class="string">"src"</span>, resp.data.avatar);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="string">"json"</span>);</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>4.在实名认证auth.js中进行如下编写</p><ul><li><strong>step1</strong> 当页面加载完毕时，想后端接口发送请求来获取用户的姓名和身份证</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 查询用户的实名认证信息</span></span><br><span class="line">    $.<span class="keyword">get</span>("/api/v1.0/users/auth", function(resp)&#123;</span><br><span class="line">        <span class="comment">// 4101代表用户未登录</span></span><br><span class="line">        <span class="keyword">if</span> (resp.errno == <span class="string">"4101"</span>) &#123;</span><br><span class="line">            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果返回的数据中real_name与id_card不为null，表示用户有填写实名信息</span></span><br><span class="line">            <span class="keyword">if</span> (resp.data.real_name &amp;&amp; resp.data.id_card) &#123;</span><br><span class="line">                $(<span class="string">"#real-name"</span>).val(resp.data.real_name);</span><br><span class="line">                $(<span class="string">"#id-card"</span>).val(resp.data.id_card);</span><br><span class="line">                <span class="comment">// 给input添加disabled属性，禁止用户修改</span></span><br><span class="line">                $(<span class="string">"#real-name"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span><br><span class="line">                $(<span class="string">"#id-card"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span><br><span class="line">                <span class="comment">// 隐藏提交保存按钮</span></span><br><span class="line">                $(<span class="string">"#form-auth&gt;input[type=submit]"</span>).hide();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            alert(resp.errmsg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="string">"json"</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 当页面加载完毕时，如果用户已经进行了实名认证，那么就不显示保存按钮以及对输入框进行禁止修改</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 管理实名信息表单的提交行为</span></span><br><span class="line">    $(<span class="string">"#form-auth"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        e.preventDefault();</span><br><span class="line">        <span class="comment">// 如果用户没有填写完整，展示错误信息</span></span><br><span class="line">        <span class="keyword">var</span> realName = $(<span class="string">"#real-name"</span>).val();</span><br><span class="line">        <span class="keyword">var</span> idCard = $(<span class="string">"#id-card"</span>).val();</span><br><span class="line">        <span class="keyword">if</span> (realName == <span class="string">""</span> ||  idCard == <span class="string">""</span>) &#123;</span><br><span class="line">            $(<span class="string">".error-msg"</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 将表单的数据转换为json字符串</span></span><br><span class="line">        <span class="keyword">var</span> data = &#123;</span><br><span class="line">            real_name: realName,</span><br><span class="line">            id_card: idCard</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> jsonData = <span class="built_in">JSON</span>.stringify(data);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 向后端发送请求</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"/api/v1.0/users/auth"</span>,</span><br><span class="line">            type:<span class="string">"post"</span>,</span><br><span class="line">            data: jsonData,</span><br><span class="line">            contentType: <span class="string">"application/json"</span>,</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            headers: &#123;</span><br><span class="line">                <span class="string">"X-CSRFTOKEN"</span>: getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>) &#123;</span><br><span class="line">                    $(<span class="string">".error-msg"</span>).hide();</span><br><span class="line">                    <span class="comment">// 显示保存成功的提示信息</span></span><br><span class="line">                    showSuccessMsg();</span><br><span class="line">                    $(<span class="string">"#real-name"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span><br><span class="line">                    $(<span class="string">"#id-card"</span>).prop(<span class="string">"disabled"</span>, <span class="literal">true</span>);</span><br><span class="line">                    $(<span class="string">"#form-auth&gt;input[type=submit]"</span>).hide();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>5.当用户进行实名制后，那么在我的房源页面，就不应该显示去实名认证按钮</p><ul><li><strong>step1</strong> 实名制之前显示界面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190121173205965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 在myhouse.js中进行判断验证，如果用户已经实名制了，那么就不显示此按钮，否则才会显示</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 对于发布房源，只有认证后的用户才可以，所以先判断用户的实名认证状态</span></span><br><span class="line">    $.<span class="keyword">get</span>("/api/v1.0/users/auth", function(resp)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"4101"</span> == resp.errno) &#123;</span><br><span class="line">            <span class="comment">// 用户未登录</span></span><br><span class="line">            location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"0"</span> == resp.errno) &#123;</span><br><span class="line">            <span class="comment">// 未认证的用户，在页面中展示 "去认证"的按钮</span></span><br><span class="line">            <span class="keyword">if</span> (!(resp.data.real_name &amp;&amp; resp.data.id_card)) &#123;</span><br><span class="line">                $(<span class="string">".auth-warn"</span>).show();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 实名制之后显示页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190121173708406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="六丶测试用户模块中个人信息栏，我的爱家，实名认证"><a href="#六丶测试用户模块中个人信息栏，我的爱家，实名认证" class="headerlink" title="六丶测试用户模块中个人信息栏，我的爱家，实名认证"></a>六丶测试用户模块中个人信息栏，我的爱家，实名认证</h1><p>1.个人信息栏测试</p><ul><li><strong>step1</strong> 登录网站，进入个人信息栏，显示如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115202637893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 当修改用户名后，点击保存，显示保存成功提示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115202916720.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.我的爱家栏测试，成功显示出用户头像，用户名以及手机号</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115203111552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.用户实名认证栏测试</p><ul><li><strong>step1</strong> 首次进行实名认证，界面显示如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115203228933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 当未填写姓名和身份证号时，出现如下显示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115203940925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 当输入完整信息后，会显示保存成功，出现如下界面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011520444388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 查看数据库信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115204947136.png" alt></fancybox></p><ul><li><strong>step5</strong> 此号码已经实名认证成功，再次进入实名认证，则显示如下界面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115205408537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="七丶效果动图展示"><a href="#七丶效果动图展示" class="headerlink" title="七丶效果动图展示"></a>七丶效果动图展示</h1><p><fancybox><img src="https://img-blog.csdnimg.cn/20190115211230304.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/86488529" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86488529</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（八）</title>
      <link href="/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%85%AB%EF%BC%89/"/>
      <url>/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%85%AB%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶构建一个用于验证登录状态的装饰器"><span style="color:#4ea1db">一丶构建一个用于验证登录状态的装饰器</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶七牛云的使用"><span style="color:#4ea1db">二丶七牛云的使用</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶上传头像后端编写"><span style="color:#4ea1db">三丶上传头像后端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶上传头像前端编写"><span style="color:#4ea1db">四丶上传头像前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶修改用户名后端编写"><span style="color:#4ea1db">五丶修改用户名后端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶修改用户名前端编写"><span style="color:#4ea1db">六丶修改用户名前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#七丶在我的爱家上，显示头像用户名以及手机号"><span style="color:#4ea1db">七丶在我的爱家上，显示头像用户名以及手机号</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#八丶最终效果动图"><span style="color:#4ea1db">八丶最终效果动图</span></a></li><a id="more"></a><h1 id="一丶构建一个用于验证登录状态的装饰器"><a href="#一丶构建一个用于验证登录状态的装饰器" class="headerlink" title="一丶构建一个用于验证登录状态的装饰器"></a>一丶构建一个用于验证登录状态的装饰器</h1><p>1.因为这个装饰器用的地方比较多，所以就在项目中的utils目录下的commons模块中进行定义</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login_required</span><span class="params">(view_func)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    验证登录状态的装饰器</span></span><br><span class="line"><span class="string">    :param view_func: 需要装饰的视图函数</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>2.获取session中用户id</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = session.get(<span class="string">"user_id"</span>)</span><br></pre></td></tr></table></figure><p>3.根据user_id来判断用户登录状态，如果user_id不为空，说明用户已经登录，那么就执行视图函数,否则返回对应错误信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> user_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> view_func(*args, **kwargs)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.SESSIONERR, errmsg=<span class="string">"用户未登录"</span>)</span><br></pre></td></tr></table></figure><p>4.通过flask中的g对象来保存将来在视图函数中要用的user_id</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.user_id = user_id</span><br></pre></td></tr></table></figure><p>5.导入python标准库functools，见名知义，就是函数工具库，这个库有个wraps方法，用于作为在闭包中的内置函数的装饰器，意义就是不会改变函数使用装饰前的特性（建议再定义装饰器时，在内置函数上添加@functools.wraps()装饰器）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@functools.wraps(view_func)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br></pre></td></tr></table></figure><h1 id="二丶七牛云的使用"><a href="#二丶七牛云的使用" class="headerlink" title="二丶七牛云的使用"></a>二丶七牛云的使用</h1><p>1.图片存储服务—七牛云</p><ul><li><strong>step1</strong> 在<a href="https://portal.qiniu.com/signup" target="_blank" rel="noopener">https://portal.qiniu.com/signup</a> 进行注册</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111175459281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 注册成功后，添加进入对象存储</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111175325995.png" alt></fancybox></p><ul><li><strong>step3</strong>  新建存储空间，如下图所示（需要实名认证审核期为三天）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111180945921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>创建成功后，1个月的测试使用期限 </p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114103628218.png" alt></fancybox></p><ul><li><strong>step4</strong> 进入文档中心—-》选择SDK&amp;工具—-》官方SDK—-》找到Python（服务端），点击文档说明，有案列以及安装方法</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111181513120.png" alt></fancybox></p><ul><li><strong>step5</strong> 查看官网提供的上传图片案列</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># flake8: noqa</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> qiniu <span class="keyword">import</span> Auth, put_file, etag</span><br><span class="line"><span class="keyword">import</span> qiniu.config</span><br><span class="line"> </span><br><span class="line"><span class="comment">#需要填写你的 Access Key 和 Secret Key</span></span><br><span class="line">access_key = <span class="string">'Access_Key'</span></span><br><span class="line">secret_key = <span class="string">'Secret_Key'</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#构建鉴权对象</span></span><br><span class="line">q = Auth(access_key, secret_key)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#要上传的空间</span></span><br><span class="line">bucket_name = <span class="string">'Bucket_Name'</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#上传到七牛后保存的文件名</span></span><br><span class="line">key = <span class="string">'my-python-logo.png'</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#生成上传 Token，可以指定过期时间等</span></span><br><span class="line">token = q.upload_token(bucket_name, key, <span class="number">3600</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#要上传文件的本地路径</span></span><br><span class="line">localfile = <span class="string">'./sync/bbb.jpg'</span></span><br><span class="line"> </span><br><span class="line">ret, info = put_file(token, key, localfile)</span><br><span class="line">print(info)</span><br><span class="line"><span class="keyword">assert</span> ret[<span class="string">'key'</span>] == key</span><br><span class="line"><span class="keyword">assert</span> ret[<span class="string">'hash'</span>] == etag(localfile)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> Access_Key以及Secret_Key在个人面板—–》密匙管理里进行查看</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111182114877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.在项目utils目录下创建一个image_storage.py文件，用于我们作进一步的封装</p><ul><li><strong>step1</strong> 将案列代码拷贝到该py文件中，填写access_key和secret_key，以及要上传的空间名bucket_name</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011411014559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 不设定key上传到七牛上的文件名，即设定key变量的值为None</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114110337547.png" alt></fancybox></p><ul><li><strong>step3</strong> 通过导入的qiniu库，查看qiniu/init中除了案列中import的put_file方法（通过文件名上传），还有另外一个put_data方法（通过文件二进制流上传），我们使用put_data方法，这样直接从本地通过with open read方法直接将图片读取出来的二进制数据上传到七牛</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114110750511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114110834911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 修改代码，不使用put_file方法，使用put_data方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ret, info = put_data(token, <span class="literal">None</span>, localfile)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 封装代码到storage方法中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114121731954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 通过with open read方式读取image_storage文件同路径下的1.jpg图片，调用storage方法将读取的二进制内容传给此方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"./1.jpg"</span>,<span class="string">"rb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_data = f.read()</span><br><span class="line">        storage(file_data)</span><br></pre></td></tr></table></figure><p>3.测试七牛云接口，进行图片上传</p><ul><li><strong>step1</strong> 运行程序，查看打印的ret的值和info的值，状态码200就表示上传成功，hash值顾名思义使用hash转换后的值，因为程序中注释掉了key文件名，所以七牛云就将hash值当作了key值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114122048290.png" alt></fancybox></p><ul><li><strong>step2</strong> 回到七牛云上，刷新页面，进入存储空间中的内容管理，就能看到我们刚上传的图片了，这里图片名字就是程序运行结果中的hash值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114122815493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 浏览器中打开新的标签，将域名+/+文件名中间以/分割，拼接到一起，粘贴到标签地址栏中，回车则可以查看该我们上传的图片了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114123219240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶上传头像后端编写"><a href="#三丶上传头像后端编写" class="headerlink" title="三丶上传头像后端编写"></a>三丶上传头像后端编写</h1><p>1.在api_1.0目录下创建profile.py文件，用于作个人信息逻辑编辑</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114124101597.png" alt></fancybox></p><p>2.在init文件中导入此py文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> verify_code, passport, profile</span><br></pre></td></tr></table></figure><p>3.定义视图函数以及路由规则</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/users/avatar", methods=["POST"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_user_avatar</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    上传头像图片</span></span><br><span class="line"><span class="string">    :param image user_id</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>4.导入之前定义的验证登录状态的装饰器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome.utils.commons <span class="keyword">import</span> login_required</span><br></pre></td></tr></table></figure><p>5.编写业务逻辑</p><ul><li><strong>step1</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取图片</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image_file = request.files.get(<span class="string">"avatar"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 判断用户是否上传图片</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> image_file <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"未上传图片"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 读取图片二进制数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image_data = image_file.read()</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 修改image_storage文件，当状态码为200时，返回key值，不为200时表示上传失败，返回异常</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> info.status_code == <span class="number">200</span>:</span><br><span class="line">    <span class="string">"""表示图片上传成功"""</span></span><br><span class="line">    <span class="keyword">return</span> ret.get(<span class="string">"key"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 上传失败</span></span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">"图片上传七牛云失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 回到profile中，调用封装好的七牛接口上传图片，返回文件名</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    file_name = storage(image_data)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.THIRDERR, errmsg=<span class="string">"上传图片失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 将图片地址保存到数据库avatar_url字段，思考，需要将域名与文件名拼接好后保存，还是只保存文件名，为了节省空间，并且只有文件名不同，所以执行保存文件名到数据库avatar_url字段即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    User.query.filter_by(id=user_id).update(&#123;<span class="string">"avatar_url"</span>:file_name&#125;)</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"保存图片信息失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 拼接图片完整链接</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar_url = constants.QINIU_URL_DOMAIN + file_name</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 保存成功后，返回给前端正确响应</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"保存成功"</span>, data=&#123;<span class="string">"avatar_url"</span>: avatar_url&#125;)</span><br></pre></td></tr></table></figure><h1 id="四丶上传头像前端编写"><a href="#四丶上传头像前端编写" class="headerlink" title="四丶上传头像前端编写"></a>四丶上传头像前端编写</h1><p>1.前端个人信息HTML代码（不展示）</p><p>2.前端个人信息JS代码（不展示）</p><p>3.修改profile.html代码，将id=”form-avatar”的表单中的action=”/api/profile/avatar” method=”post”去掉，通过导入的jquery.form.min.js插件来发送表单数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form-avatar"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    选择头像：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">"image/*"</span> <span class="attr">name</span>=<span class="string">"avatar"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> <span class="attr">value</span>=<span class="string">"上传"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.在profile.js中进行如下编写</p><ul><li><strong>step1</strong> 阻止表单默认行为</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'#form-avatar'</span>).submit(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 阻止表单默认行为</span></span><br><span class="line">        e.preventDefault();</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 利用jquery.form.min.js插件通过的ajaxSubmit对表单进行异步提交</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">this</span>).ajaxSubmit(&#123;</span><br><span class="line">    url:<span class="string">"/api/v1.0/users/avatar"</span>,</span><br><span class="line">    type:<span class="string">"post"</span>,</span><br><span class="line">    dataType:<span class="string">"json"</span>,</span><br><span class="line">    headers:&#123;</span><br><span class="line">      <span class="string">"X-CSRFToken"</span>: getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>)&#123;</span><br><span class="line">            <span class="comment">// 上传成功</span></span><br><span class="line">            <span class="keyword">var</span> avatarUrl = resp.data.avatar_url;</span><br><span class="line">            $(<span class="string">'#user-avatar'</span>).attr(<span class="string">"src"</span>, avatarUrl)</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            alert(resp.errmsg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>5.测试</p><ul><li><strong>step1</strong> 运行项目</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 输入<a href="http://127.0.0.1:5000" target="_blank" rel="noopener">http://127.0.0.1:5000</a> 主页进行登录，然后进入个人信息，点击修改，选择头像点击上传后，如下图所示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114162003442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 查看七牛云内容管理</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114162305109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶修改用户名后端编写"><a href="#五丶修改用户名后端编写" class="headerlink" title="五丶修改用户名后端编写"></a>五丶修改用户名后端编写</h1><p>1.创建视图函数以及定义路由接口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/users/name", methods=["POST"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_name</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>2.逻辑编写，当用户输入昵称后，点击保存，向后端接口发送请求，携带用户填写的昵称name，以json格式发送数据，然后在后端获取name，并通过用户id，数据库操作更新name字段的值为用户输入的昵称name</p><ul><li><strong>step1</strong> 获取用户id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_id = g.user_id</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 获取前端发送过来的参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">req_dict = request.get_json()</span><br><span class="line">name = req_dict.get(<span class="string">"name"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 判断用户是否输入用户名</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断用户是否输入用户名</span></span><br><span class="line">    <span class="keyword">if</span> name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"昵称不能为空"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 判断昵称是否存在</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user = User.query.filter_by(id=user_id).first()</span><br><span class="line">    <span class="comment"># 从数据中获取用户昵称</span></span><br><span class="line">    user_name = user.name</span><br><span class="line">    <span class="keyword">if</span> user_name <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> user_name == name:</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.DATAEXIST, errmsg=<span class="string">"用户名已存在"</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 将用户输入的name昵称保存到数据库中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    User.query.filter_by(id=user_id).update(&#123;<span class="string">"name"</span>: name&#125;)</span><br><span class="line">    db.session.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    db.session.rollback()</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"保存用户昵称失败"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 最后返回正确响应</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"修改成功"</span>, data=&#123;<span class="string">"name"</span>: name&#125;)</span><br></pre></td></tr></table></figure><h1 id="六丶修改用户名前端编写"><a href="#六丶修改用户名前端编写" class="headerlink" title="六丶修改用户名前端编写"></a>六丶修改用户名前端编写</h1><p>1.前端个人信息HTML代码（不展示）</p><p>2.前端个人信息JS代码（不展示）</p><p>3.去掉profile.html中action=”/api/profile/name” method=”post”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"form-name"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.在profile.js中添加脚本，当点击保存时，触发id = form-name的submit回调函数，发送users/name地址调用update_name是视图函数，将构造用户填写的name通过ajax方式传给后端，来完成后端逻辑，当后端返回响应码为0时，代表更新数据库成功，那么在前端直接跳转到登录页，进行登录，登录成功后则显示修改后的用户名了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#form-name'</span>).submit(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">       e.preventDefault();</span><br><span class="line">       <span class="keyword">var</span> name = $(<span class="string">"#user-name"</span>).val();</span><br><span class="line">       <span class="keyword">var</span> data = &#123;</span><br><span class="line">           name:name</span><br><span class="line">       &#125;;</span><br><span class="line">       <span class="keyword">var</span> jsonData = <span class="built_in">JSON</span>.stringify(data);</span><br><span class="line">       $.ajax(&#123;</span><br><span class="line">           url:<span class="string">"/api/v1.0/users/name"</span>,</span><br><span class="line">           type:<span class="string">"post"</span>,</span><br><span class="line">           data:jsonData,</span><br><span class="line">           contentType:<span class="string">"application/json"</span>,</span><br><span class="line">           dataType:<span class="string">"json"</span>,</span><br><span class="line">           headers:&#123;</span><br><span class="line">               <span class="string">"X-CSRFToken"</span>: getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">           &#125;,</span><br><span class="line">           success: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">               <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>)&#123;</span><br><span class="line">                   location.href = <span class="string">"/login.html"</span>;</span><br><span class="line">               &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                   alert(resp.errmsg)</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;)</span><br><span class="line"></span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><p>5.测试</p><p>说明：测试以18022222222账号为例</p><ul><li><strong>step1</strong> 查看数据库中ih_user_profile表，获取所有用户信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114191353818.png" alt></fancybox></p><ul><li><strong>step2</strong> 启动项目</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 登录18022222222账号进入我的爱家，点击修改，进入修改页面，如下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114191641444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 先输入依存在的用户名，点击保存，如果打印用户名已存在，说明逻辑正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114192307469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 输入不存在的昵称这里输入的为Hellotaogang，如果成功修改则，,逻辑正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114192847131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 查看数据库显示为修改后的昵称，表示前后端逻辑编写正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011419294120.png" alt></fancybox></p><h1 id="七丶在我的爱家上，显示头像用户名以及手机号"><a href="#七丶在我的爱家上，显示头像用户名以及手机号" class="headerlink" title="七丶在我的爱家上，显示头像用户名以及手机号"></a>七丶在我的爱家上，显示头像用户名以及手机号</h1><p>说明：这里可以写一个后端接口用来显示出此三项，我这里写了两个接口，第一个是显示头像的，第二个是显示用户名和手机号</p><p>1.先看看实现之前的效果</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114203115759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.显示头像后端逻辑编写</p><ul><li><strong>step1</strong> 定义show_avatar视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/users/show_avatar", methods=["POST"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_avatar</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 因为实现代码太简单，详细过程不细说</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取user_id</span></span><br><span class="line">user_id = g.user_id</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 从数据库中获取avatar_url</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user = User.query.filter_by(id=user_id).first()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取图片信息失败"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拼接图片完整链接</span></span><br><span class="line">avatar_url = constants.QINIU_URL_DOMAIN + user.avatar_url</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=&#123;<span class="string">"avatar_url"</span>: avatar_url&#125;)</span><br></pre></td></tr></table></figure><p>3.显示用户名和手机号后端逻辑编写</p><ul><li><strong>step1</strong> 定义show_name_mobile视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/users/show_name_mobile", methods=["POST"])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_name_mobile</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p><strong>step2</strong> 因为实现代码太简单，详细过程不细说</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取用户id</span></span><br><span class="line">user_id = g.user_id</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据用户id 在数据库中获取对应的 用户名和手机号</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user = User.query.filter_by(id=user_id).first()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取用户信息失败"</span>)</span><br><span class="line"><span class="comment"># 获取用户名</span></span><br><span class="line">use_name = user.name</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 获取用户手机号</span></span><br><span class="line">user_mobile = user.mobile</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 构造响应数据</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">"user_name"</span>: use_name,</span><br><span class="line">    <span class="string">"user_mobile"</span>: user_mobile</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将响应数据返回给前端</span></span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>, data=data)</span><br></pre></td></tr></table></figure><p>4.显示头像和显示用户名和手机号前端编写（这里只演示显示头像的，后者可以自己尝试编写，基本一样，逻辑简单）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"/api/v1.0/users/show_avatar"</span>,</span><br><span class="line">        type:<span class="string">"post"</span>,</span><br><span class="line">        headers:&#123;</span><br><span class="line">            <span class="string">"X-CSRFToken"</span>:getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        dataType:<span class="string">"json"</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> avatarUrl = resp.data.avatar_url;</span><br><span class="line">                $(<span class="string">'#user-avatar'</span>).attr(<span class="string">"src"</span>, avatarUrl)</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                 alert(resp.errmsg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>5.代码实现后的效果图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114210558891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="八丶最终效果动图"><a href="#八丶最终效果动图" class="headerlink" title="八丶最终效果动图"></a>八丶最终效果动图</h1><p>注：这里以18111111111账号为例，进行动图演示</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190114212833842.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/86302733" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86302733</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（七）</title>
      <link href="/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%83%EF%BC%89/"/>
      <url>/2019/11/04/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶登录后端接口编写"><span style="color:#4ea1db">一丶登录后端接口编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶登录接口测试"><span style="color:#4ea1db">二丶登录接口测试</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶登录前端编写"><span style="color:#4ea1db">三丶登录前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶用户登录功能测试"><span style="color:#4ea1db">四丶用户登录功能测试</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶定义检查登录状态与用户退出接口"><span style="color:#4ea1db">五丶定义检查登录状态与用户退出接口</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶效果图"><span style="color:#4ea1db">六丶效果图</span></a></li><a id="more"></a><h1 id="一丶登录后端接口编写"><a href="#一丶登录后端接口编写" class="headerlink" title="一丶登录后端接口编写"></a>一丶登录后端接口编写</h1><p>1.获取参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">req_dict = request.get_json()</span><br><span class="line">mobile = req_dict.get(<span class="string">"mobile"</span>)</span><br><span class="line">password = req_dict.get(<span class="string">"password"</span>)</span><br></pre></td></tr></table></figure><p>2.校验参数的完整性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([mobile, password]):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"请求参数不完整"</span>)</span><br></pre></td></tr></table></figure><p>3.校验手机号码格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> re.match(<span class="string">r"1[345789]\d&#123;9&#125;"</span>, mobile):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"手机号码格式错误"</span>)</span><br></pre></td></tr></table></figure><p>4.将用户登录的错误次数以用户的IP作为标识，保存到redis数据库中，通过redis数据库来限制时间，如次数超过10分钟内错误登录超过5次</p><ul><li><strong>step1</strong> 获取用户IP地址</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user_ip = request.remote_addr</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 判断用户登录错误次数是否超出限制</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    access_nums = redis_store.get(<span class="string">"access_nums_%s"</span> % user_ip)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> access_nums <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> int(access_nums) &gt;= constants.LOGIN_ERROR_MAX_TIMES:</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.REQERR, errmsg=<span class="string">"错误次数过多，请稍后重试"</span>)</span><br></pre></td></tr></table></figure><p>5.从数据库中根据用户手机号查询对应的数据对象user</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user = User.query.filter_by(mobile=mobile).first()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"获取用户信息失败"</span></span><br></pre></td></tr></table></figure><p>6.校验用户输入的手机号以及密码与数据库是否一致，将用户名(手机号)与密码放在一起进行校验，不管是密码错误还是用户名错误，返回的提示信息都为用户名或密码错误，不展示细节与前端上</p><ul><li><strong>step1</strong> 在models中定义一个校验密码的函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_password</span><span class="params">(self, passwd)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    检验用户输入密码与数据库中密码是否一致</span></span><br><span class="line"><span class="string">    :param passwd: 用户输入的原始密码</span></span><br><span class="line"><span class="string">    :return: 匹配正确返回True 否则 返回false</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> check_password_hash(self.password_hash, passwd)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 回过头在passport中进行校验</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> user <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> user.check_password(password) <span class="keyword">is</span> <span class="literal">False</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DATAERR, errmsg=<span class="string">"用户名或密码错误"</span>)</span><br></pre></td></tr></table></figure><p>7.验证失败需要记录失败次数，保存到redis数据库中</p><ul><li><strong>step1</strong> 通过redis数据库python中的incr方法累积保存access_nums_ip到redis数据库中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis_store.incr(<span class="string">"access_nums_%s"</span> % user_ip)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 设置access_nums_ip键的有效期</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis_store.expire(<span class="string">"access_nums_%s"</span> % user_ip, constants.LOGIN_ERROR_FORBID_TIME)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 抛出异常，并记录到日志中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    redis_store.incr(<span class="string">"access_nums_%s"</span> % user_ip)</span><br><span class="line">    redis_store.expire(<span class="string">"access_nums_%s"</span> % user_ip, constants.LOGIN_ERROR_FORBID_TIME)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br></pre></td></tr></table></figure><p>8.如果用户名和密码验证成功，则将登录成功状态保存到session中，并返回正确响应</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">session[<span class="string">"name"</span>] = user.name</span><br><span class="line">session[<span class="string">"mobile"</span>] = user.mobile</span><br><span class="line">session[<span class="string">"user_id"</span>] = user.id</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"登录成功"</span>)</span><br></pre></td></tr></table></figure><h1 id="二丶登录接口测试"><a href="#二丶登录接口测试" class="headerlink" title="二丶登录接口测试"></a>二丶登录接口测试</h1><p>1.在ihome/init中注释CSRF验证，运行程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><p>2.Postman测试工具中添加127.0.0.1:5000/api/v1.0/sessions登录接口路由</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111123826163.png" alt></fancybox></p><p>3.查看之前我们测试注册接口时注册的账号密码</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011112411693.png" alt></fancybox></p><p>4.在Postman工具中构造Body体JSON数据</p><ul><li><strong>step1</strong> 构造错误数据，输入错误密码，查看提示</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111125200808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 输入错误账号</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111125304876.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 多次错误登录</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111130206239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>查看数据库中保存的登录错误次数</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111130519832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 输入正确账号和密码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111125508103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶登录前端编写"><a href="#三丶登录前端编写" class="headerlink" title="三丶登录前端编写"></a>三丶登录前端编写</h1><p>1.前端登录HTML代码（不展示）</p><p>2.前端登录JS代码（不展示）</p><p>3.在login.js中在submit提交回调函数中进行如下编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将表单的数据存到对象data中</span></span><br><span class="line"><span class="keyword">var</span> data = &#123;</span><br><span class="line">    mobile:mobile,</span><br><span class="line">    password:passwd</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 将data数据转换成json字符串</span></span><br><span class="line"><span class="keyword">var</span> jsonData = <span class="built_in">JSON</span>.stringify(data);</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">    url:<span class="string">"/api/v1.0/sessions"</span>,</span><br><span class="line">    type:<span class="string">"post"</span>,</span><br><span class="line">    data:jsonData,</span><br><span class="line">    contentType:<span class="string">"application/json"</span>,</span><br><span class="line">    dataType:<span class="string">"json"</span>,</span><br><span class="line">    headers:&#123;</span><br><span class="line">        <span class="string">"X-CSRFToken"</span>:getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(data.errno == <span class="string">"0"</span>)&#123;</span><br><span class="line">            <span class="comment">// 则代表登录成功，跳转到主页</span></span><br><span class="line">            location.href = <span class="string">"/"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 登录不成功则在页面中显示错误信息</span></span><br><span class="line">            $(<span class="string">"#password-err span"</span>).html(data.errmsg);</span><br><span class="line">            $(<span class="string">"#password-err"</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>4.在js构建一个getCookie的方法来获取前端名为csrf_token的cookie的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="built_in">document</span>.cookie.match(<span class="string">"\\b"</span> + name + <span class="string">"=([^;]*)\\b"</span>);</span><br><span class="line">    <span class="keyword">return</span> r ? r[<span class="number">1</span>] : <span class="literal">undefined</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.将获取的cookie的值，放在请求头中的X-CSRFToken键中，方便后端进行csrf验证（需将ihome/init中的CSRF验证开启）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">headers:&#123;</span><br><span class="line">          <span class="string">"X-CSRFToken"</span>:getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure><h1 id="四丶用户登录功能测试"><a href="#四丶用户登录功能测试" class="headerlink" title="四丶用户登录功能测试"></a>四丶用户登录功能测试</h1><p>1.运行程序后，在<a href="http://127.0.0.1:5000/login.html" target="_blank" rel="noopener">http://127.0.0.1:5000/login.html</a> 上进行测试</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111135615548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.输入错误的账号或密码</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111135732232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.输入正确的用户名和密码，跳转到主页（这里还没有完善，在登录成功后右上角不再显示登录与注册，而是显示登录时的用户名 ）</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111140337113.gif" alt></fancybox></p><h1 id="五丶定义检查登录状态与用户退出接口"><a href="#五丶定义检查登录状态与用户退出接口" class="headerlink" title="五丶定义检查登录状态与用户退出接口"></a>五丶定义检查登录状态与用户退出接口</h1><p>1.检查登录状态</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/session", methods=["GET"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    检查登录状态</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 从注册和登录成功时保存到session数据中获取name的值</span></span><br><span class="line">    name = session.get(<span class="string">"name"</span>)</span><br><span class="line">    <span class="comment"># name不为空，则返回ok，并将name以字典形式传给前端，为空则返回对应错误信息</span></span><br><span class="line">    <span class="keyword">if</span> name <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"true"</span>, data=&#123;<span class="string">"name"</span>:name&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(errno=RET.SESSIONERR, errmsg=<span class="string">"false"</span>)</span><br></pre></td></tr></table></figure><p>2.用户退出(清除session数据)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/session", methods=["DELETE"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    用户退出 清除session数据</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    session.clear()</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"OK"</span>)</span><br></pre></td></tr></table></figure><p>3.登录成功时，跳转到主页，那么在index.js中进行编写，因为是当页面加载完时需要显示出用户名，所以在$(document).ready下进行编写即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="keyword">get</span>("/api/v1.0/session", function (resp) &#123;</span><br><span class="line">        <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>)&#123;</span><br><span class="line">            $(<span class="string">".top-bar&gt;.user-info&gt;.user-name"</span>).html(resp.data.name);</span><br><span class="line">            $(<span class="string">".top-bar&gt;.user-info"</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            $(<span class="string">".top-bar&gt;.register-login"</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="string">"json"</span>);</span><br></pre></td></tr></table></figure><p>4.当登录成功后，主页右上角显示用户名（手机号），点击用户名进入后，在个人主页，点击退出再回到主页，此时主页右上角显示登录和注册，那么需要在my.js中进行如下代码编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logout</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url:<span class="string">"/api/v1.0/session"</span>,</span><br><span class="line">        type:<span class="string">"delete"</span>,</span><br><span class="line">        headers:&#123;</span><br><span class="line">            <span class="string">"X-CSRFToken"</span>:getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        dataType:<span class="string">"json"</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (resp.errno == <span class="string">"0"</span>)&#123;</span><br><span class="line">                location.href = <span class="string">"/"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六丶效果图"><a href="#六丶效果图" class="headerlink" title="六丶效果图"></a>六丶效果图</h1><p><fancybox><img src="https://img-blog.csdnimg.cn/20190111151124899.gif" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/86247891" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/86247891</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（六）</title>
      <link href="/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%85%AD%EF%BC%89/"/>
      <url>/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%85%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶补充"><span style="color:#4ea1db">一丶补充</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶短信验证码前端编写"><span style="color:#4ea1db">二丶短信验证码前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶注册后端接口编写"><span style="color:#4ea1db">三丶注册后端接口编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶注册后端测试"><span style="color:#4ea1db">四丶注册后端测试</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#五丶注册前端编写"><span style="color:#4ea1db">五丶注册前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#六丶用户注册功能测试"><span style="color:#4ea1db">六丶用户注册功能测试</span></a></li><a id="more"></a><h1 id="一丶补充"><a href="#一丶补充" class="headerlink" title="一丶补充"></a>一丶补充</h1><p>1.之前写的获取的图片验证码，有一个地方需要做进一步的处理，需要删除redis数据库中的图片验证码，防止用户使用同一个图片验证码验证多次，所以将删除代码放在取出redis数据库中图片验证码的值之后，也就是在real_image_code变量之后进行删除，这样即使删除了redis数据中的数据，也不会影响接下来的判断校验，这样做的目的就是说不管用户填对填错，只有一次验证机会</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106164545368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.测试以上逻辑是否正确</p><ul><li><strong>step1</strong> 重新运行程序，刷新<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a> 注册页面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106165322181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 查看redis数据库图片验证码的值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106165639391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 在Postman工具中发送短信验证码路由地址</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106170016580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>此时绑定的手机号码上就会收到我们定义的6位数验证码</p><p><img src="https://img-blog.csdnimg.cn/20190106170220288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step4</strong> 查看redis数据库(这个时候并没有超过180秒)，发现图片验证码的key已经被删除</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010618225260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.短信验证码这一块，大多网站都会在用户发送第一次验证码后，在前端页面会出现60s后再试之类的提醒，那么对于后端来说，也是需要的，比如被人知道了后我端口的接口，1分钟之类不断的发送短信，那可就不好了，所以为了做到优化以及安全防范，那么就需要在后端进行一个禁止60s内发送第二次短信的一个逻辑，不仅仅限于前端</p><ul><li><p><strong>step1</strong> 逻辑分析，首先当发送第一次短信时，需要记住发送短信记录，当时间超过60s以上，才可以发送第二条短信，此时就需要想想是在什么时候将这个发送短信的记录存到redis数据库，大多公司是这样做的，不管发送成功与否，都是需要等待60s后才能发送第二次，所以我们这里也是这样做的，在发送短信之前就将记录存到redis数据库当中去</p></li><li><p><strong>step2</strong> 当在保存短信验证码的时候，将这个第一次发送短信的记录存到redis数据库中，让redis数据库去维护记录的有效期60s，这个记录的数据随便起，这里设置1，那么当在redis数据库查询不到这个记录时，代表可以记录过了有效期被删除了，则代表可以发送第二条短信验证码了</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis_store.setex(<span class="string">"send_sms_code_%s"</span> % mobile, constants.SEND_SMS_CODE_INTERVAL, <span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 然后在判断手机号是否注册之前进行校验判断，判断对于此手机号码在60s以内有没有之前发送短信的操作，如果有，则不代表用户操作频繁，不予处理（注：经测试如果在判断获取记录的值的时候代码为if send_flag == 1时，会出现bug，所以建议使用is not None即可）</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106184125601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.测试以上逻辑是否正常</p><ul><li><strong>step1</strong> 启动项目程序</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106175447918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 刷新<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a> 注册页面，生成新的图片验证码，将验证码内容以及对应编码通过发送短信路由发送到对应接口进行测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106180053624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 此时从redis数据库中查看图片验证码的id以及值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106180213386.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在Postman工具中，对短信接口地址进行访问，并携带image_code以及image_code_id</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106180352665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>同时收到手机短信验证码</p><p><img src="https://img-blog.csdnimg.cn/20190106180531689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step5</strong> 最关键的一步，与此同时，刷新图片验证码，获取新的图片验证码，然后在redis数据查询id以及图片验证码的值后在Postman中进行再次发送（注：这里的演示是在60s之内发送第二次请求给后端短信接口），出现如下提示，代表逻辑正确</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106182755941.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶短信验证码前端编写"><a href="#二丶短信验证码前端编写" class="headerlink" title="二丶短信验证码前端编写"></a>二丶短信验证码前端编写</h1><p>1.在register.js中构造请求数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> req_data = &#123;</span><br><span class="line">      <span class="string">"image_code"</span>: imageCode,  <span class="comment">//用户输入图片验证码的值</span></span><br><span class="line">      <span class="string">"image_code_id"</span>: imageCodeId  <span class="comment">//对应图片验证码的编号</span></span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p>2.通过ajax方式想后端去发送请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 想后端发送请求</span></span><br><span class="line">$.<span class="keyword">get</span>("/api/v1.0/sms_codes/"+mobile, req_data, function (resp) &#123;</span><br><span class="line">    <span class="comment">// 回调函数中的resp是后端返回的json字符串，通过ajax将这个字符串转换成js对象</span></span><br><span class="line">    <span class="comment">// 所以这里的resp为ajax转换后的对象</span></span><br><span class="line">    <span class="keyword">if</span> (resp.error == <span class="string">"0"</span>) &#123;</span><br><span class="line">        <span class="comment">// 表示发送成功</span></span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">60</span>;</span><br><span class="line">        <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (num&gt;<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// 修改倒计时的文本内容</span></span><br><span class="line">                $(<span class="string">".phonecode-a"</span>).html(num + <span class="string">"s"</span>);</span><br><span class="line">                num -= <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(<span class="string">".phonecode-a"</span>).html(<span class="string">"获取验证码"</span>);</span><br><span class="line">                $(<span class="string">".phonecode-a"</span>).attr(<span class="string">"onclick"</span>, <span class="string">"sendSMSCode();"</span>);</span><br><span class="line">                clearInterval(timer)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">1000</span>, <span class="number">60</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(resp.errmsg);</span><br><span class="line">        $(<span class="string">".phonecode-a"</span>).attr(<span class="string">"onclick"</span>, <span class="string">"sendSMSCode();"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.测试</p><ul><li><strong>step1</strong> 启动程序</li></ul><p><img src="https://img-blog.csdnimg.cn/20190106192433994.png" alt></p><ul><li><strong>step2</strong> 访问<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a> 注册界面</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106193817884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>step3</strong> 输入手机号，图片验证码后点击获取短信验证码，成功出现倒计时，同时手机收到短信验证码</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106193854456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>手机验证码</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106194011945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在谷歌浏览器中查看接口地址的NetWork</li></ul><p>General数据</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106194231188.png" alt></fancybox></p><p>Response响应数据 </p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106194826574.png" alt></fancybox></p><h1 id="三丶注册后端接口编写"><a href="#三丶注册后端接口编写" class="headerlink" title="三丶注册后端接口编写"></a>三丶注册后端接口编写</h1><p>1.在项目api_1_0目录下创建passport.py文件用作于注册以及登录的逻辑接口文件</p><p><img src="https://img-blog.csdnimg.cn/20190106202450959.png" alt></p><p>2.构建register视图函数，并在ihome/init文件中导入passport模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api.route("/users", methods=["POST"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>3.逻辑编写</p><ul><li><strong>step1</strong> 获取前端请求发送请求中的json数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">req_dict = request.get_json()</span><br><span class="line">mobile = req_dict.get(<span class="string">"mobile"</span>) <span class="comment">#跟前端约定好的</span></span><br><span class="line">sms_code = req_dict.get(<span class="string">"sms_code"</span>)</span><br><span class="line">password = req_dict.get(<span class="string">"password"</span>)</span><br><span class="line">password2 = req_dict.get(<span class="string">"password2"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([mobile, sms_code, password, password2]):</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"请求参数不完整"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 判断用户输入的手机号码格式</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110163000831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 从redis数据库中取出短信验证码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    real_sms_code = redis_store.get(<span class="string">"sms_code_%s"</span> % mobile)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"读取真实短信验证码异常"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 判断短信验证码是否过期</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> real_sms_code <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.NODATA, errmsg=<span class="string">"短信验证码失效"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 判断用户输入的短信验证码是否正确</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> real_sms_code != sms_code:</span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.DATAERR, errmsg=<span class="string">"短信验证码填写错误"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 同图片验证码一样，在redis数据库中进行删除，防止一个短信验证码多次使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    redis_store.delete(<span class="string">"sms_code_%s"</span> % mobile)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 判断用户的手机号是否注册过</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110091124408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step9</strong> 将用户注册的数据保存到mysql数据库中，这时候为了减少数据库的查询，不增加程序运行的负荷，所以我们在判断用户手机号是否注册过的时候，不再进行查询，而是在保存用户注册数据时候，判断手机号码是否存在，因之前在models中创建数据库表时，将mobile字段的数据设置为唯一约束，所以当数据库ih_user_profile表中已存在mobile字段的数据时，再进行插入相同手机号mobile的数据时，mysql数据库则会抛出异常，那么我们就利用数据库抛出的异常来判断手机号码是否存在，从而减少在视图函数中数据库的查询</li></ul><p>数据库测试mobile字段异常</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110093442168.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 注释step8代码重新编写，大体如下，因密码需要进行加密后再存到数据库，所以到最后面再进行处理</li></ul><p><strong>说明：</strong>这里的注册名为手机号，后面会另写接口让name为名字昵称，当出现异常时候，需要进行数据库回滚操作</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110100506671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step11</strong> 将登陆状态保存到session中，并返回注册成功结果</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">session[<span class="string">"name"</span>] = mobile</span><br><span class="line">session[<span class="string">"mobile"</span>] = mobile</span><br><span class="line">session[<span class="string">"user_id"</span>] = user.id</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> jsonify(errno=RET.OK, errmsg=<span class="string">"注册成功"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step12</strong> 将用户输入的密码进行加密</li></ul><p><strong>说明：</strong>将对用户输入的密码添加salt值(盐值)，再进行加密存储，说白了就是，在户输入的密码基础上再添加一个随机生成的字符串，即使用户1和用户2密码一样，但在进行salt处理后，在数据库中也不会相同，不存在撞库说法，这样做安全性极高，即使密码泄露，破解出来后也并不是用户的真是密码</p><p><strong>问题：</strong>反过来当用户注册成功后，进行用户登录时，那么这个密码是如何进行判断？是将用户输入的密码进行加密后再和数据库加密密码进行对比，可是当初在注册时对用户输入的密码进行加密时候添加了随机的salt值，所以这里需要注意思考一下，我们这里的想法是通过在注册时候将salt值进行保存在数据库中另起一个字段，这是其一方法，其二是将这个salt值与加密后的密码中间以某个分隔符进行分隔，这样做的话就不用再创建表字段另存salt值，如qwe@ohcuncacaucaooa08c03qoca08q08，@符前为salt值，后为用户加密后的密码</p><p><strong>注：</strong>MD5已被攻破，利用暴力测试以及算法公式成功反推出加密前的密码，sh1估计等不了几年就会被破解，我们这里使用的是sha256进行密码的加密</p><p>①在models文件中通过导入werkzeug.security类中的generate_password_hash方法将密码进行加密，并存到数据库中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_password_hash</span><span class="params">(self, origin_password)</span>:</span></span><br><span class="line">    self.password_hash = generate_password_hash(origin_password)</span><br></pre></td></tr></table></figure><p>②在passport文件中，在构建User对象的时候，通过调用models文件中的generate_password_hash方法，将前端用户输入的password传参给此方法，并保存到User模型类的passwor_hash字段中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.generate_password_hash(password)</span><br></pre></td></tr></table></figure><p>4.property装饰器的使用</p><ul><li><strong>step1</strong> 将函数调用转换为对象属性设置（在passport文件中）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.password = password</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在models中注释之前的generate_password_hash方法的调用，使用property装饰器对新创建的password函数装饰为password属性(注，在passport文件中user.password对象的password属性名要与models文件中的方法同名)，再通过password属性的setter方法，设置类属性的值，这个值就是我们在passport文件中通过user.password = password这个password值</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110123210526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶注册后端测试"><a href="#四丶注册后端测试" class="headerlink" title="四丶注册后端测试"></a>四丶注册后端测试</h1><ul><li><strong>step1</strong> 因测试users注册后端接口使用的POST请求方式，而此时还没有编写注册前端端口测试，所以需要在ihome/init文件中将csrf后端机制关闭，再进行测试</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 为flask补充csrf防护</span><br><span class="line"># CSRFProtect(app)</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 运行程序，在浏览器输入<a href="http://127.0.0.1:5000/register.html，进入注册页面" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html，进入注册页面</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110130521369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 在注册页面输入错误手机号，正确的图片验证码，当点击获取短信验证码时候，会提示发送短信失败，无所谓，我们从redis数据库直接读取sms_code即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110130737547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在redis数据库中获取短信验证码(因为在上一步输入的是错误手机号，导致无法发送短信，测试无所谓嘛)</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110130954105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 在测试工具Postman中，添加127.0.0.1:5000/api/v1.0/users地址，构造json格式的body体数据，就是我们注册页面所需要的数据，成功返回注册成功响应数据，代表注册后端接口没问题</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011013131489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 响应数据表示注册成功后，查看数据库ih_user_profile表信息，第一条数据是之前测试使用的</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110132045476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="五丶注册前端编写"><a href="#五丶注册前端编写" class="headerlink" title="五丶注册前端编写"></a>五丶注册前端编写</h1><p>1.前端注册HTML代码（不展示）</p><p>2.前端注册JS代码（不展示）</p><p>3.在register.js文件中通过ajax方式向后端接口发送注册请求（在callback for submit()）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用ajax向后端发送注册请求</span></span><br><span class="line">        <span class="keyword">var</span> req_data = &#123;</span><br><span class="line">            mobile:mobile,</span><br><span class="line">            sms_code:phoneCode,</span><br><span class="line">            password:passwd,</span><br><span class="line">            password2:passwd2</span><br><span class="line"> </span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> req_json = <span class="built_in">JSON</span>.stringify(req_data)</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"/api/v1.0/users"</span>,</span><br><span class="line">            type:<span class="string">"post"</span>,</span><br><span class="line">            data:req_json,</span><br><span class="line">            contentType:<span class="string">"application/json"</span>,</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            headers:&#123;</span><br><span class="line">              <span class="string">"X-CSRFToken"</span>:getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (resp.errno== <span class="string">"0"</span>)&#123;</span><br><span class="line">                    <span class="comment">// 注册成功，即跳转到主页</span></span><br><span class="line">                    location.href = <span class="string">"/index.html"</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    alert(resp.errmsg);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>4.在js构建一个getCookie的方法来获取前端名为csrf_token的cookie的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="built_in">document</span>.cookie.match(<span class="string">"\\b"</span> + name + <span class="string">"=([^;]*)\\b"</span>);</span><br><span class="line">    <span class="keyword">return</span> r ? r[<span class="number">1</span>] : <span class="literal">undefined</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.将获取的cookie的值，放在请求头中的X-CSRFToken键中，方便后端进行csrf验证（需将ihome/init中的CSRF验证开启）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">headers:&#123;</span><br><span class="line">          <span class="string">"X-CSRFToken"</span>:getCookie(<span class="string">"csrf_token"</span>)</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure><h1 id="六丶用户注册功能测试"><a href="#六丶用户注册功能测试" class="headerlink" title="六丶用户注册功能测试"></a>六丶用户注册功能测试</h1><p>1.进行注册测试，输入不存在的号码是为了演示给大家，虽然提示发送短信验证码失败，但我可以从redis数据库去拿取短信验证码，注册成功后，即跳转到登录页面</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190110171730944.gif" alt></fancybox></p><p>2.用户注册成功后，查看数据库中ih_user_profile表的内容，成功将用户注册信息保存到数据库</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019011017351791.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85934776" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85934776</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（五）</title>
      <link href="/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%94%EF%BC%89/"/>
      <url>/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶图片验证码前端编写"><span style="color:#4ea1db">一丶图片验证码前端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶短信验证码后端编写"><span style="color:#4ea1db">二丶短信验证码后端编写</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶测试向后端接口发送短信验证码"><span style="color:#4ea1db">三丶测试向后端接口发送短信验证码</span></a></li><a id="more"></a><h1 id="一丶图片验证码前端编写"><a href="#一丶图片验证码前端编写" class="headerlink" title="一丶图片验证码前端编写"></a>一丶图片验证码前端编写</h1><p>1.当用户进入到注册页后，页面进行刷新，所以在static前端静态资源register.js中定义一个generateImageCode函数，当页面加载完后，形成图片验证码的后端地址， 设置到页面中，让浏览请求验证码图片，同理在register.html中onclick点击验证码图片时，也要触发generateImageCode函数</p><p><strong>register.html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group-addon image-code"</span> ο<span class="attr">nclick</span>=<span class="string">"generateImageCode();"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>register.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    generateImageCode();&#125;</span><br></pre></td></tr></table></figure><p>2.生成图片验证码编号两种方式：第一种是时间轴；第二种是UUID全局唯一标识符，这里我们使用UUID</p><ul><li><strong>step1</strong> 在js中获取UUID的值（这里在网上找的一个代码）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">generateUUID</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.performance &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">window</span>.performance.now === <span class="string">"function"</span>)&#123;</span><br><span class="line">        d += performance.now(); <span class="comment">//use high-precision timer if available</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> uuid = <span class="string">'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'</span>.replace(<span class="regexp">/[xy]/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r = (d + <span class="built_in">Math</span>.random()*<span class="number">16</span>)%<span class="number">16</span> | <span class="number">0</span>;</span><br><span class="line">        d = <span class="built_in">Math</span>.floor(d/<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">return</span> (c==<span class="string">'x'</span> ? r : (r&amp;<span class="number">0x3</span>|<span class="number">0x8</span>)).toString(<span class="number">16</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> uuid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 在generateImageCode函数中调用generateUUID，将生成的UUID赋值给imageCodeId变量，记得先使用var在函数外声明该变量</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">generateImageCode</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 生成图片验证码编号</span></span><br><span class="line">    imageCodeId = generateUUID();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.拼接二维码图片的url地址，设置register.html中图片二维码div标签class=image_code下的img标签的src地址为拼接后的url，也就是二维码图片的链接地址</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">"/api/v1.0/image_codes/"</span> + imageCodeId;</span><br><span class="line">   $(<span class="string">".image-code img"</span>).attr(<span class="string">"src"</span>, url);</span><br></pre></td></tr></table></figure><p>4.运行程序，清除浏览器缓存，输入<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a>后，查看注册页面二维码生成是否成功</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105174855460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.在后端redis数据库中成功生成image_code_uuid的key了</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105175220758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>6.效果图，鼠标连续点击图片验证码，请注意验证码</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105180758761.gif" alt></fancybox></p><h1 id="二丶短信验证码后端编写"><a href="#二丶短信验证码后端编写" class="headerlink" title="二丶短信验证码后端编写"></a>二丶短信验证码后端编写</h1><p>1.发送短信服务介绍，这里使用的是容联云，云通讯</p><ul><li><strong>step1</strong> 需要在官网<a href="https://www.yuntongxun.com/" target="_blank" rel="noopener">https://www.yuntongxun.com/</a>进行注册，注册时会通过打电话形式告诉你验证码，注册成功后会赠送8元测试费用，如下图</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105182249832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 然后选择测试平台，添加测试手机号，最多三个，验证成功才能添加上 </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105182811413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 进入开发文档—Rest API—-短信—-短信发送接口，具体文档说明请到官网自寻查看</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105183426568.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 我们直接去下载官方给开发人员封装好的工具SDK，找到Demo示例，然后在文章上方点击Demo下载，找到python语言对应的SDK进行下载即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105184630743.png" alt></fancybox></p><ul><li><strong>step5</strong> 解压后的目录文件如下，请查看README.txt等说明文件，DEMO问案列，这里我们只需要将SDK文件拷贝到项目中的libs目录下，并命名为yuntongxun，然后再将DEMO文件夹中的SendTemplateSMS.py文件拷贝到yuntongxun目录下</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105185110256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.封装发送短信辅助工具</p><ul><li><strong>step1</strong> 在libs以及云通讯目录下创建init文件，使其变成python的包</li></ul><p><img src="https://img-blog.csdnimg.cn/2019010611572470.png" alt></p><ul><li><strong>step2</strong> 在SendTemplateSMS.py文件中创建一个CCP的类，用于封装发送短信的辅助类，目的是在我们调用sendTemplateSMS方法的时候，只初始化一次REST SDK，使用python单例达到不管创建多少个对象，都只初始化一次</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106121920408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 将云通讯开发者主账号中的ACCOUNT SID和AUTH TOKEN以及AppID，复制到代码中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106122431980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 编写测试脚本，内容分为验证码9527，有效期5分钟，使用测试模板1</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106122739892.png" alt></fancybox></p><ul><li><strong>step5</strong> 运行sendTemplateSMS程序，最下面的statusCode为000000，代表短信发送成功，在官网短信接口有详细说明</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106125231272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 此时手机便收到了短信</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106123637876.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><ul><li><strong>step7</strong> 修改代码，不需要使用官方的代码将result字典数据进行遍历打印，而是只获取状态statusCode进行判断，如果为000000代表发送成功返回0，否则发送失败返回-1</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010612460514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>查看运行结果，验证逻辑没有问题</strong></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106125018343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 将sendTemplateSMS重命名为sendSMS，为了后面使用方便 </li></ul><p>3.定义获取短信接口</p><ul><li><strong>step1</strong> 在接口文件verify_code中定义一个get_sms_code的视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_sms_code</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 构建路由规则，同理与构建图片验证码一样，使用restful风格，并且需要有一个短信验证码的编码，以手机进行编号，之前在分析图片验证码时，已经说过发送短信验证码时需携带图片验证码的文本内容以及图片验证码的编号，所以路由如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># GET /api/v1.0/sms_codes/&lt;mobile&gt;?image_code=xxxx&amp;image_code_id=xxxx</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 获取image_code以及image_code_id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">image_code = request.args.get(<span class="string">"image_code"</span>)</span><br><span class="line">image_code_id = request.args.get(<span class="string">"image_code_id"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 校验参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 校验参数</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> all([image_code, image_code_id]):</span><br><span class="line">    <span class="comment"># 参数不完整返回对应错误</span></span><br><span class="line">    <span class="keyword">return</span> jsonify(errno=RET.PARAMERR, errmsg=<span class="string">"参数不完整"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 业务逻辑处理，从redis数据库取出验证码与用户输入的验证码进行校验，期间需要对验证码是否存在进行判断</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106133815681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 接下来判断手机号是否存在</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106135630145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 随机生成6位数验证码（使用字符串格式化的方式来生成，从0到999999，当不足6位时，以0做填充）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sms_code = <span class="string">"%06d"</span> % random.randint(<span class="number">0</span>, <span class="number">999999</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 在redis数据库中保存真实的短信验证码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106141216779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step9</strong> 发送短信</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010614205175.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 异常说明</li><li>放在try与except中的代码越少越好，会影响程序执行效率</li></ul><h1 id="三丶测试向后端接口发送短信验证码"><a href="#三丶测试向后端接口发送短信验证码" class="headerlink" title="三丶测试向后端接口发送短信验证码"></a>三丶测试向后端接口发送短信验证码</h1><ul><li><strong>step1</strong> 打开Postman测试工具，发送接口路由127.0.0.1:5000/api/v1.0/sms_codes/180xxxxxx96?image_code&amp;image_code_id</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106143738143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 运行项目</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106144020662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 在浏览器输入<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a>，进入项目注册页面</li></ul><p><img src="https://img-blog.csdnimg.cn/20190106144257844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><ul><li><strong>step4</strong> 回到Postman工具，取消参数，什么都不传的情况下，出现如下错误信息，就是我们在程序中定义的错误信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106144512465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 此时刷新<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a>注册页，查看验证码，并在redis数据中获取验证码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106144823413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>获取redis数据库中图片验证码的文本值与注册页图片二维码的值一样</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010614495632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 当过了180s后也就是我们在constants.py中设置的图片验证码有效期，在Postman工具中发送地址，提示 我们定义的错误图片验证码失效，在程序中的逻辑为无法在redis数据库中获取image_code_id键的值，或者说不存在此键，返回结果为None</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106151105878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 刷新注册页面，获取新的验证码，在Postman工具中向错误号码发送验证码，或者说是未在云通讯测试平台关联的号码发送验证码，则出现以下错误提示，这个提示就是我们在接口文件中写的res不等于0的时候，返回错误的json格式的错误信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106151511883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 刷新<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a>，将最新的验证码存储到redis数据库，在Postman工具中向正确地址发送正确号码，返回的响应数据为发送成功，如下图所示</li></ul><p>注册页界面</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106150527267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>redis数据库中的图片验证码值</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106150716882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>Postman响应数据</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190106150920302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85858348" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85858348</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（四）</title>
      <link href="/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶在项目中添加静态资源文件"><span style="color:#4ea1db">一丶在项目中添加静态资源文件</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶关于csrf防护机制"><span style="color:#4ea1db">二丶关于csrf防护机制</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶用户注册模块（图片验证码以及短信验证码）"><span style="color:#4ea1db">三丶用户注册模块（图片验证码以及短信验证码）</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶测试后端verify_code接口是否正确"><span style="color:#4ea1db">四丶测试后端verify_code接口是否正确</span></a></li><a id="more"></a><h1 id="一丶在项目中添加静态资源文件"><a href="#一丶在项目中添加静态资源文件" class="headerlink" title="一丶在项目中添加静态资源文件"></a>一丶在项目中添加静态资源文件</h1><p>1.将静态资源文件拷贝到项目static目录下</p><p><img src="https://img-blog.csdnimg.cn/20190103182543887.png" alt></p><p>2.在终端上运行项目python manage.py runserver</p><p>3.在浏览器中输入<a href="http://127.0.0.1:5000/static/html/index.html" target="_blank" rel="noopener">http://127.0.0.1:5000/static/html/index.html</a> 访问前端主页，如下图</p><p>4.当在不使用nginx服务器给用户提供静态资源，而是以flask来提供，当用户在浏览器中输入/static/html/index.html就会显得不友好，正常来说访问主页只需要输入ip地址或者是域名加端口号就可以了，那么就需要我们专门写个视图函数来提供有好的链接地址，把地址前缀给去掉</p><p>5.创建一个蓝图，专门负责提供静态文件的</p><ul><li><strong>step1</strong> 在ihome目录下创建一个web_html.py文件</li><li><strong>step2</strong> 创建蓝图html</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">html = Blueprint(<span class="string">"web_html"</span>, __name__)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在utils目录下创建一个<strong>init</strong>.py文件，使这个目录变成python的包，然后在这个utils包中创建commons.py文件，作为通用工具，在里面定义一个正则转换器</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103190633551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在ihome/init文件中，在创建app对象时候，将ReConverter对象添加到app中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103191845194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 回到commons.py文件中，定义视图函数get_html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103202322441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 在ihome/init中进入此蓝图注册</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010320331332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 启动项目</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 清除网页缓存数据</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103204049753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step9</strong> 在浏览器地址栏输入<a href="http://127.0.0.1:5000/" target="_blank" rel="noopener">http://127.0.0.1:5000/</a>就直接跳转到主页了index.html了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103204456703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 输入<a href="http://127.0.0.1:5000/register.html" target="_blank" rel="noopener">http://127.0.0.1:5000/register.html</a>也是没有问题的，直接跳转到register.html</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103204801217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶关于csrf防护机制"><a href="#二丶关于csrf防护机制" class="headerlink" title="二丶关于csrf防护机制"></a>二丶关于csrf防护机制</h1><p>1.csrf验证机制：从cookie中获取一个csrf_token的值，再从请求体中获取一个csrf_token的值，如果这两个值相同，则检<br>验通过，可以进入视图函数中执行，如果两个值不同，则检验失败，会想前端返回状态码404的错，之前在ihome/init中设置的csrf只是负责验证，并不负责cookie与请求体中的csrf_token的值从哪里来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为flask补充csrf防护</span></span><br><span class="line">CSRFProtect(app)</span><br></pre></td></tr></table></figure><p>2.分析：前后端不分离时跟django一样直接在模板中进行设置csrf，而我们这个项目使用的是前后端分离，没有模板，对于cookie我们可以提前进行设置csrf_token，然后对于请求体中的cookie而言，当 发送POST请求时，就将那时候的请求体数据中设置csrf_token这样就能csrf防护了</p><p>3.设置cookie中的csrf_token</p><ul><li><strong>step1</strong> 为web_html.py中导入csrf包</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask_wtf <span class="keyword">import</span> csrf</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 创建一个csrf_token的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csrf_token = csrf.generate_csrf()</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 导入make_response，将返回的静态文件方法的值构建成响应对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp = make_response(current_app.send_static_file(html_file_name))</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 设置cookie的值，有效期为临时会话</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp.set_cookie(<span class="string">"csrf_token"</span>, csrf_token)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 重新启动程序，刷新网页，查看我们设置的cookie</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105123419378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="三丶用户注册模块（图片验证码以及短信验证码）"><a href="#三丶用户注册模块（图片验证码以及短信验证码）" class="headerlink" title="三丶用户注册模块（图片验证码以及短信验证码）"></a>三丶用户注册模块（图片验证码以及短信验证码）</h1><p>1.图片验证码使用流程</p><ul><li><strong>step1</strong> 分析流程：</li></ul><p>第一步，需要前端像后端发起一个获取图片验证码的请求，对于后端来说就需要去生成一个随机的验证码图片；第二步将生成的验证码图片返回给前端；第三步验证图片验证码的准确性，如果正确，才能发起获取短信验证码的请求</p><ul><li><strong>step2</strong> 具体细节</li></ul><p>在发起获取短信验证码请求的时候将携带填写的图片验证码与后端生成的图片验证码进行校验，因此后端在生成图片验证码的时候，需要将图片进行保存，意义是为了与用户输入的图片验证码进行对比，对比成功，才会给用户返回短信验证码</p><ul><li><strong>step3</strong> 问题分析</li></ul><p>后端生成的图片验证码是存在哪里，谁来维护有效期，不可能一张图片一直用下去，所以将在后端生成的图片验证码，存到redis数据库中，在后端进行验证的时候，就从redis中取出这个值，与前端用户输入的值进行对比即可；但是对于多个用户来说同一时间向我发送获取图片验证码时，该怎么去判断谁是谁的，所以要将图片验证码进行编号处理，来分辨是属于哪个用户的图片验证码，那么就需要在用户发起短信验证码请求的携带参数里面除了填写的图片验证码，还需要携带一个用户编号，因此对于后端服务器来说，除了生成图片验证码的值，还需要生成一个对应验证码的编码，一起保存到redis数据库中，还需要将验证码值和编码返回给前端用户，那么就需要从返回的响应体中取解析编码，这样做太麻烦了，为了减轻后端的压力，将不再由后端去生成这个编码了，而是由前端在一开始就去生成这个编号，再前端向后端服务器发起获取图片验证码请求的时候携带一个编码参数，然后后端将编码和图片验证码的值一起存到redis数据库中</p><ul><li><strong>step4</strong> 在ihome/api_1_0目录下创建一个verify_code.py文件，将图片验证码以及短信验证码放在这个文件里面进行使用</li><li><strong>step5</strong> 使用restful风格构建前端向后端发起图片验证码请求地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:5000/api/v1.0/image_codes/<span class="tag">&lt;<span class="name">image_code_id</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.图片验证码后端接口编写</p><ul><li><strong>step1</strong> 将图片验证码工具包captcha拷贝到ihome/utils目录下</li><li><strong>step2</strong> 在verify.py中导入captcha包中的captcha模块中的captcha对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome.utils.captcha.captcha <span class="keyword">import</span> captcha</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 通过调用captcha对象中的generate_captcha方法来获取生成的验证码名字，文本内容，以及图片二进制数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name, text, image_data = captcha.generate_captcha()</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 选择存储数据类型，将验证码的文本内容以及编码存到redis数据库中，并设置有效期</li></ul><p>可以使用哈希格式进行存储，但是无法设置单个图片的有效期</p><p>示例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"image_codes": &#123;"id1":"abc", "":""&#125; 哈希  hset("image_codes", "id1", "abc")  hget("image_codes", "id1")</span><br></pre></td></tr></table></figure><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105143246359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>使用字符串格式对数据进行存储，以编码作为key，以文本内容作为value值进行存储即可</p><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"image_code_编号1"</span>: <span class="string">"真实值"</span></span><br><span class="line"><span class="string">"image_code_编号2"</span>: <span class="string">"真实值"</span></span><br><span class="line">redis_store.set(<span class="string">"image_code_%s"</span> % image_code_id, text)</span><br><span class="line">redis_store.expire(<span class="string">"image_code_%s"</span> % image_code_id, constants.IMAGE_CODE_REDIS_EXPIRES)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 在verify.py中导入redis数据库连接对象，然后将编码和文本内容存到redis数据库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome <span class="keyword">import</span> redis_store</span><br><span class="line"> </span><br><span class="line">redis_store.set(<span class="string">"image_code_%s"</span> %image_code_id, text)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 设置图片验证码有效期为三分钟，首先在ihome目录下创建一个constants.py文件，用于存放常量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis_store.expire(<span class="string">"image_code_%s"</span> %image_code_id, constants.IMAGE_CODE_REDIS_EXPIRES)</span><br></pre></td></tr></table></figure><p>设置值和有效期一步到位</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis_store.setex(<span class="string">"image_code_%s"</span> %image_code_id, constants.IMAGE_CODE_REDIS_EXPIRES, text)</span><br></pre></td></tr></table></figure><ul><li><strong>step7</strong> 对于数据库连接，可能会出现连接错误以及连接不上等问题，所以需要捕获异常，并且将捕获到的异常保存到日志中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">current_app.logger.error(e)</span><br></pre></td></tr></table></figure><ul><li><strong>step8</strong> 当出现异常后，需要返回错误信息的json数据，先将工程项目定义好的response_code.py响应状态码文件，拷贝到utils中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105152126878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> jsonify(errno=RET.DBERR, errmsg=<span class="string">"save image code failed"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 没有出现异常，则先通过make_response构造图片image_data数据响应体对象，再设置该响应体对象的请求头中的Content-Type为图片格式jpg，返回给前端</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105153136818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105153136818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>3.开发流程与编写接口文档</p><ul><li><strong>step1</strong> 开发流程</li></ul><ol><li>分析需求</li><li>编写代码</li><li>编写单元测试</li><li>自测</li><li>编写接口文档</li><li>提测代码</li></ol><ul><li><strong>step2</strong> 编写接口文档</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">接口文档</span><br><span class="line"> </span><br><span class="line">1. 接口名字</span><br><span class="line">2. 描述（描述清楚接口的功能）</span><br><span class="line">3. url</span><br><span class="line">4. 请求方式</span><br><span class="line">5. 传入参数</span><br><span class="line">6. 返回值</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">接口：获取图片验证码</span><br><span class="line"> </span><br><span class="line">描述：前端访问，可以获取到验证码图片</span><br><span class="line"> </span><br><span class="line">url： /api/v1.0/image_codes/&lt;image_code_id&gt;</span><br><span class="line"> </span><br><span class="line">请求方式： GET</span><br><span class="line"> </span><br><span class="line">传入参数：</span><br><span class="line">    格式：路径参数 （参数是查询字符串、请求体的表单、json、xml）</span><br><span class="line"> </span><br><span class="line">    名字             类型       是否必须      说明</span><br><span class="line">   image_code_id    字符串       是         验证码图片的编号</span><br><span class="line"> </span><br><span class="line">返回值：</span><br><span class="line">    格式： 正常：图片， 异常：json</span><br><span class="line"> </span><br><span class="line">    名字             类型       是否必传      说明</span><br><span class="line">    errno          字符串         否        错误代码</span><br><span class="line">    errmsg         字符串         否        错误内容</span><br><span class="line"> </span><br><span class="line">    实例：</span><br><span class="line">    &apos;&#123;&quot;errno&quot;: &quot;4001&quot;, &quot;errmsg&quot;: &quot;保存图片验证码失败&quot;&#125;&apos;</span><br></pre></td></tr></table></figure><h1 id="四丶测试后端verify-code接口是否正确"><a href="#四丶测试后端verify-code接口是否正确" class="headerlink" title="四丶测试后端verify_code接口是否正确"></a>四丶测试后端verify_code接口是否正确</h1><p>1.需要在api_1_0/init中导入我们写的接口文件verify_code让蓝图知道有一个verify_code的模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> verify_code</span><br></pre></td></tr></table></figure><p>2.运行程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><p>3.在浏览器中输入<a href="http://127.0.0.1:5000/api/v1.0/image_codes/123" target="_blank" rel="noopener">http://127.0.0.1:5000/api/v1.0/image_codes/123</a>，成功显示出验证码图片</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105160824559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>4.查看程序运行日志</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105161222426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>5.此时查看redis数据库中，会发现出现了一个image_code_123的键，获取该键的值就是图片验证码的文本值，说明我们写的后端接口没问题</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190105161126833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85706012" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85706012</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（三）</title>
      <link href="/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶关于在项目中循环导入的问题"><span style="color:#4ea1db">一丶关于在项目中循环导入的问题</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶日志功能实现"><span style="color:#4ea1db">二丶日志功能实现</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶项目数据库设计"><span style="color:#4ea1db">三丶项目数据库设计</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#四丶数据库迁移"><span style="color:#4ea1db">四丶数据库迁移</span></a></li><a id="more"></a><h1 id="一丶关于在项目中循环导入的问题"><a href="#一丶关于在项目中循环导入的问题" class="headerlink" title="一丶关于在项目中循环导入的问题"></a>一丶关于在项目中循环导入的问题</h1><p>1.在上一篇中创建api_1_0蓝图下的demo.py视图函数文件中，肯定会用到导入数据库db的，那么就会出现flask项目循环导包的问题，当启动项目时，会提示cannot import name db，这个提示就是代表循环导入包的问题</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103094333118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>2.针对flask项目出现此问题的解决方法</p><ul><li><strong>step1</strong> 分析导包流程，首先在manage.py启动文件中，程序从上往下执行，一开始就从ihome包下导入数据库连接对象db，然后进入到ihome\init.py文件中，同理执行到从ihome导入蓝图目录api_1_0时，即进入api_1_0\init.py文件中，执行到导入相对路径下demo文件时，回到demo.py文件中，在该文件中从ihome包下导入db时，就会发现此时在ihome\init.py文件中，并还没有执行到创建数据库db对象，所以程序执行到这一步时，就会提示以上错误</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103095226172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 解决方法，选择推迟导入，修改代码在什么时候需导入api_1_0时，我们就在什么后导入即可，发现在create_app方法中在注册蓝图的时候才需要导入api_1_0，所以将导入代码，放到此处即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注册蓝图</span></span><br><span class="line"><span class="keyword">from</span> ihome <span class="keyword">import</span> api_1_0</span><br><span class="line">app.register_blueprint(api_1_0.api, url_prefix=<span class="string">"/api/v1.0"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 再次启动项目，就不会提示cannot import name db 了，成功解决flask项目中循环导入包的问题</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103100935291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt><fancybox></fancybox></fancybox></p><p>3.一个完整的项目工程还需要在核心目录下创建项目所需的目录，用来分别存放包和库的，所以需在ihome目录下创建utils目录用来存放项目所需的工具包以及工具函数等，然后再创建一个libs目录用来存放第三方的库，不是通过pip install 安装的库，而是源码安装的库，这样才是完整的实战工程项目</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010310244261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="二丶日志功能实现"><a href="#二丶日志功能实现" class="headerlink" title="二丶日志功能实现"></a>二丶日志功能实现</h1><p>1.一个正常的网站包括软件等，都会有日志来记录历史操作信息等，在公司中一般会将存放日志目录与工程目录隔离开，这里为了方便演示，即将日志目录和工程目录放到一起，在项目根目录创建logs目录，用来存放日志文件</p><p>2.因为flask框架没有去提供日志这一块的库以及工具，所以我们就是用python记录日志标准库logging来进行日志记录保存</p><ul><li><strong>step1</strong> 在ihome/init文件中导入logging库</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 并配置日志信息以及设置日志等级</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/201901031046120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 配置后日志信息后，需要在api_1_0/demo视图函数中进行记录日志，有两种方法，第一种是直接在demo文件中使用logging标准库模块，第二种是使用flask 框架中的全局上下文current_app对象，为什么能使用current_app对象，因为这个对象把logging模块中的logger塞到了这个对象中了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103110900127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 启动项目，在浏览器输入<a href="http://127.0.0.1:5000/api/v1.0/index测试日志是否成记录并写入到logs目录下的log文件中" target="_blank" rel="noopener">http://127.0.0.1:5000/api/v1.0/index测试日志是否成记录并写入到logs目录下的log文件中</a></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103111349442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>成功在logs目录下创建log日志文件，并将日志信息写入到该文件中 </p><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103111620941.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><strong>注： 在开发环境develop中配置了DEBUG=True调试模式下，会导致我们配置的日志等级，不生效，flask会强制忽略到我们配置的日志信息</strong></p><h1 id="三丶项目数据库设计"><a href="#三丶项目数据库设计" class="headerlink" title="三丶项目数据库设计"></a>三丶项目数据库设计</h1><h3 id="1-分析项目所需要的表"><a href="#1-分析项目所需要的表" class="headerlink" title="1.分析项目所需要的表"></a>1.分析项目所需要的表</h3><ul><li><p><strong>step1</strong> 用户表User，先从注册界面来说，需要哪些字段(user_id，作为主键，手机号mobile，用户名name，密码password，存放头像的路径avatar_url，用户真实姓名real_name，真实身份证号real_id_card，验证码图片存到redis数据库即可)</p></li><li><p><strong>step2</strong> 房子表House，字段(house_id，作为主键，user_id，与用户表主键id保持一致，作为外键关联哪个用户的房子，一个用户有多套房子一对多关系，房子标题title，房子所在区域area_name，通过创建的Area表所以这里将area_name改为area_id通过外键来查询即可)<br>思考：当查询房屋表中某个区域的数据时，select distinct area_name from house并去重，当数据很少的时候可以这样进行查询，随着时间推移导致数据达到几千万时，那么通过这样的方式查询数据，时间就会很长，不利于用户体验，所以这里需再创建一个区域表Area来解决查询时间过长的问题</p></li><li><p><strong>step3</strong> 区域表Area，字段(area_id，作为主键，name区域名，price价格，image_url1,image_url2…)，Area表对于House表也是一对多关系，一个区域多个房子<br>思考：在第四步我们将图片链接地址存到Area表中，那么今后如果用户上传图片扩大为10张，那么就需要改表结构，这样不是明智的选择，所以另建一个House_Image表来存储用户上传的房屋图片</p></li><li><p><strong>step4</strong> 房屋图片表House_Image，字段(image_id，作为主键，url图片地址，house_id外键)，房子House表对于图片地址House_Image表一对多关系，一个房子有多张图片<br>思考：分析需求，发现只有房屋详情时才会查询多张图片，而在查询列表和主页图片时，只需要一张，那么我们在房子表House中需添加一个index_image_url字段，这样做的目的是减少关联查询，在数据库中以空间换时间的理念来减少查询时间</p></li><li><p><strong>step5</strong> 房屋配套设施表Facility，字段(facility_id，作为主键，name设施名字)<br>思考：设施表Facility与房屋表House是多对多关系，一个设施如冰箱可以在多个不同房子中拥有，一个房子同时也可以拥有多个设备设施如电视，空调，wifi等，那么存储多对多关系的表数据，就需要创建一个中间表</p></li><li><p><strong>step6</strong> 创建中间表House_Facility表，字段(id，作为主键，外键house_id和facility_id)</p></li><li><p><strong>step7</strong> 客户订单表Order，字段(order_id，作为主键，外键user_id哪个用户和house_id哪个房子，create_time订单创建时间，start_date入住日期，end_date离开日期，price房屋单价，amount合计金额，days入住天数，status订单状态，comment评价)</p></li></ul><p><strong><font color="red">思考1</font></strong>：之所以要在Order订单表中创建price字段是考虑到比如房东在第二天需要将房屋价格上涨或者下降，保证用户是按实时价格进行计算的，加入amount不仅是为了前端，重要的是为了后期运营人员进行统计方便，节省统计的开销<br>问题：关于房东拒绝订单是否填写拒绝原因，设定是必须填写拒绝原因，那么是需要在Order 表中添加一个字段么？<br>分析：因为一旦填写拒绝原因那么就不存在comment评价了，所以这拒绝原因和评价两个关系为互斥关系，所以我们这里不添加拒绝原因字段，当有了评论信息那么肯定就不会出现拒绝原因，可以通过订单状态status来判断是评价还是拒绝原因<br><strong><font color="red">思考2</font></strong>： 当在房源搜索房屋的时候，会出现按照最新上线，入住最多，价格高低排序，当按照入住最多排序时，那么就是相当于按照订单量最多的房屋进行排序，那么就需要在Order表中按照订单量来进行排序，首先就需要根据入住时间和区域来来进入过滤查询，还要将查询的结果安装订单量进行排序，这样查询代价就比较大了，那么同理还是使用以空间换时间的概念，在House表中添加order_count来订单量，当没下一单就在对应的order_count的值加1，回过来通过直接查询House表中的order_count字段按大小排序就能查询到订单最多的房屋了</p><h3 id="2-在models-py中创建数据库抽象模型类"><a href="#2-在models-py中创建数据库抽象模型类" class="headerlink" title="2.在models.py中创建数据库抽象模型类"></a>2.在models.py中创建数据库抽象模型类</h3><ul><li><strong>step1</strong> 定义BaseModel模型基类，用于为每个模型添加创建时间和更新时间</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103142544796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 定义User用户表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103141219350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3</strong> 定义Area城区表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103141348841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 定义House房屋表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103142335909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 定义Facility设施表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103144041300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 定义HouseImage房屋图片表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103144232890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 定义Order订单表</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010314435715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶数据库迁移"><a href="#四丶数据库迁移" class="headerlink" title="四丶数据库迁移"></a>四丶数据库迁移</h1><ul><li><strong>step1</strong> 初始化数据库对象db</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103155155636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 执行迁移文件，结果提示No change in…..</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103155706868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>解决：因为models.py文件对于其他文件来说，并不知道它的存在，所以只需要在视图文件demo中导入models即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome <span class="keyword">import</span> db, models</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 再次执行迁移 ，则显示迁移成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103160145627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 执行升级，将数据写入到mysql中的ihome_python数据库中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103160804362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5</strong> 以上步骤完成后，进入mysql，使用ihome_python数据库，查询数据库表成功生成 </li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190103161251719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85676643" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85676643</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（二）</title>
      <link href="/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶创建项目"><span style="color:#4ea1db">一丶创建项目</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶创建工程目录(拆分manage.py)"><span style="color:#4ea1db">二丶创建工程目录(拆分manage.py)</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶以开发环境进行项目测试"><span style="color:#4ea1db">三丶以开发环境进行项目测试</span></a></li><a id="more"></a><h1 id="一丶创建项目"><a href="#一丶创建项目" class="headerlink" title="一丶创建项目"></a>一丶创建项目</h1><h4 id="1-新建ihome-python项目文件夹"><a href="#1-新建ihome-python项目文件夹" class="headerlink" title="1.新建ihome_python项目文件夹"></a>1.新建ihome_python项目文件夹</h4><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102164323467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h4 id="2-在Pycharm中打开此文件-，并配置项目解释器-python2环境"><a href="#2-在Pycharm中打开此文件-，并配置项目解释器-python2环境" class="headerlink" title="2.在Pycharm中打开此文件 ，并配置项目解释器(python2环境)"></a>2.在Pycharm中打开此文件 ，并配置项目解释器(python2环境)</h4><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102165511549.png"></fancybox></p><h4 id="3-在工程目录下创建manage-py作为项目启动文件"><a href="#3-在工程目录下创建manage-py作为项目启动文件" class="headerlink" title="3.在工程目录下创建manage.py作为项目启动文件"></a>3.在工程目录下创建manage.py作为项目启动文件</h4><ul><li><strong>step1</strong> 实现flask中最基本的工作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route('/index')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index page"</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><ul><li><strong>step2</strong> 配置mysql数据库用于存储用户数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""配置信息"""</span></span><br><span class="line">    DEBUG = <span class="literal">True</span></span><br><span class="line">    SECRET_KEY = <span class="string">"cdtaogang**CSDN@uhduqw82981h"</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 连接mysql数据库</span></span><br><span class="line">    SQLALCHEMY_DATABASE_URI = <span class="string">"mysql://root:mysql@127.0.0.1:3306/ihome_python"</span></span><br><span class="line">    SQLALCHEMY_TRACK_MODIFICATIONS = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">app.config.from_object(Config)</span><br><span class="line"> </span><br><span class="line">db = SQLAlchemy(app)</span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 在本地mysql中创建ihome_python数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> ihome_python <span class="keyword">charset</span>=utf8;</span><br></pre></td></tr></table></figure><ul><li><strong>step4</strong> 配置redis数据库用于保存session信息以及缓存数据（因为flask框架默认将session数据存到cookie中），所以这里需要利用flask_session这个工具包帮助我们将flask存储的session数据交给我们管理，这样就可以将session数据存到redis数据库中了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Config</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""配置信息"""</span></span><br><span class="line">    DEBUG = <span class="literal">True</span></span><br><span class="line">    SECRET_KEY = <span class="string">"cdtaogang**CSDN@uhduqw82981h"</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 连接mysql数据库</span></span><br><span class="line">    SQLALCHEMY_DATABASE_URI = <span class="string">"mysql://root:mysql@127.0.0.1:3306/ihome_python"</span></span><br><span class="line">    SQLALCHEMY_TRACK_MODIFICATIONS = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># redis数据库配置</span></span><br><span class="line">    REDIS_HOST = <span class="string">"127.0.0.1"</span></span><br><span class="line">    REDIS_PORT = <span class="number">6379</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">app.config.from_object(Config)</span><br><span class="line"> </span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#创建redis数据库连接对象</span></span><br><span class="line">redis_store = redis.StrictRedis(host=Config.REDIS_HOST, port=Config.REDIS_PORT)</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 配置flask_session用于我们操作session到redis数据库（说明在Config类中再次创建redis数据库连接，是因为在实际线上环境中，可能需要将session数据存到不同的服务器上）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment"># flask_session配置</span></span><br><span class="line">    SESSION_TYPE = <span class="string">"redis"</span></span><br><span class="line">    SESSION_REDIS = redis.StrictRedis(host=REDIS_HOST, port=REDIS_PORT)</span><br><span class="line">    SESSION_USE_SIGNER = <span class="literal">True</span>  <span class="comment"># 对cookie中session_id进行隐藏处理</span></span><br><span class="line">    PERMANENT_SESSION_LIFETIME = <span class="number">86400</span>  <span class="comment"># session数据的有效期，单位秒</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 利用flask_session， 将session数据保存到redis中</span></span><br><span class="line">Session(app)</span><br></pre></td></tr></table></figure><ul><li><strong>step6</strong> 开启csrf防护机制(导入flask_WTF中的CSRFProtect类)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为flask补充csrf防护</span></span><br><span class="line">CSRFProtect(app)</span><br></pre></td></tr></table></figure><h1 id="二丶创建工程目录-拆分manage-py"><a href="#二丶创建工程目录-拆分manage-py" class="headerlink" title="二丶创建工程目录(拆分manage.py)"></a>二丶创建工程目录(拆分manage.py)</h1><h4 id="1-拆分配置文件"><a href="#1-拆分配置文件" class="headerlink" title="1.拆分配置文件"></a>1.拆分配置文件</h4><ul><li><strong>step1</strong> 在项目根目录下创建一个config.py文件，将manage.py中的Config配置类放到该文件中</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102202720978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 工程实现后，有两种运行环境，开发测试环境以及生成环境(线上环境)，所以flask程序在运行时，就需要配置两个配置类，一个是用于开发环境，另一个用于生成环境</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DevelopmentConfig</span><span class="params">(Config)</span>:</span></span><br><span class="line">    <span class="string">"""开发环境配置信息"""</span></span><br><span class="line">    DEBUG = <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductConfig</span><span class="params">(Config)</span>:</span></span><br><span class="line">    <span class="string">"""生成环境配置信息"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3</strong> 将app对象设计为工厂模式</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102190736881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step4</strong> 在config.py中创建配置映射</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#构建配置映射关系</span></span><br><span class="line">config_map = &#123;</span><br><span class="line">    <span class="string">"develop"</span>: DevelopmentConfig,</span><br><span class="line">    <span class="string">"product"</span>: ProductConfig</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>step5</strong> 导入config中的config_map，通过调用create_app方法，创建app对象，将我们需要的配置环境通过传参的方式来决定是用开发环境还是生产环境，在create_app方法中就按照指明的环境进行配置即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102192437214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step6</strong> 因最初创建的manage.py作为项目启动文件，所以我们在manage文件中只保留启动代码即可，需将其余代码抽离出去，保证manage文件中没有其他的代码，项目根目录下只需要保留启动文件manage以及config配置文件，即在项目根目录下创建一个ihome的python包，将create_app代码放到这个ihome包的init文件中即可，随后在ihome包下创建一个static目录用于存放静态文件，再创建一个models.py文件用于做数据库的迁移</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102194017463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step7</strong> 在manage中创建并绑定app对象的代码，放到init中，会导致无法绑定create_app方法里面的app，所以使用SQLAlchemy对象db提供的init_app方法，在create_app方法里面对db进行初始化，这样就解决了</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010219544215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step8</strong> 在models.py文件中导入数据库对象db</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ihome <span class="keyword">import</span> db</span><br></pre></td></tr></table></figure><ul><li><strong>step9</strong> 将manage文件中创建的redis数据库连接对象放到init文件中，需要思考是否放在create_app方法中，因为最初在manage文件中创建的redis数据库连接需要从config文件中拿去host以及port配置，所以我们在全局声明redis_store变量为None，然后在方法中通过config_map获取的环境配置类config_class，说白了也就是config中的开发类DevelopmentConfig，直接拿去类中我们配置好的r连接redis数据库的port和host</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010220073286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step10</strong> 对于Session(app)和CSRFProtect(app)，不会用到这两个对象来进行进一步操作，只是刚开始使用这两个对象来初始化app，一个是为了我们将session数据存到redis数据库，另一个是为了开启CSRF防护机制，所以直接放到create_app类即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用flask_session， 将session数据保存到redis中</span></span><br><span class="line">Session(app)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 为flask补充csrf防护</span></span><br><span class="line">CSRFProtect(app)</span><br></pre></td></tr></table></figure><ul><li><strong>step11</strong> 创建蓝图，用于管理不同版本的视图，在ihome核心目录下创建一个api_1_0python包，代表1.0版本的蓝图，在这个蓝图下就可以创建各种各样的视图了，在api_1_0蓝图下创建一个demo.py文件，将启动文件manage中的视图函数放到里面</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/index')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index page"</span></span><br></pre></td></tr></table></figure><ul><li><strong>step12</strong> 在api_1_0包下的init文件中创建蓝图</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102204919956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step13</strong> 在flask项目应用文件init中注册蓝图 ，首先在init文件中通过绝对路径导入api_1_0包，再通过app应用对象中的register_blueprint方法，注册api_1_0包中的api蓝图名字，并定义url前缀地址为/api/v1.0表示1.0版本</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注册蓝图</span></span><br><span class="line">app.register_blueprint(api_1_0.api, url_prefix=<span class="string">"/api/v1.0"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step14</strong> 在创建工程时，可能会用到数据库models文件，那么就需要使用迁移插件，从flask_script中引入脚本命令管理对象，再从flask_migrate中导入迁移执行者Migrate，迁移命令解析人员Migratecommand</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102212515288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt>/<fancybox></fancybox></fancybox></p><h1 id="三丶以开发环境进行项目测试"><a href="#三丶以开发环境进行项目测试" class="headerlink" title="三丶以开发环境进行项目测试"></a>三丶以开发环境进行项目测试</h1><ul><li><strong>step1</strong> 在Pycharm终端中，执行python manage.py runserver 默认端口，运行项目</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102233829315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step2</strong> 打开浏览器输入<a href="http://127.0.0.1:5000/api/v1.0/index" target="_blank" rel="noopener">http://127.0.0.1:5000/api/v1.0/index</a>，测试运行项目是否成功 </li></ul><p>在浏览器中成功渲染出index视图函数返回的字符串，如下图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/2019010223410575.png" alt></fancybox></p><ul><li><strong>step3</strong> 回到Pycharm终端查看程序日志，请求方式和地址以及状态码都是完全正确，代表项目设计成功</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20190102234530165.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85623829" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85623829</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask项目之手机端租房网站的实战开发（一）</title>
      <link href="/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/11/03/Flask%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%89%8B%E6%9C%BA%E7%AB%AF%E7%A7%9F%E6%88%BF%E7%BD%91%E7%AB%99%E7%9A%84%E5%AE%9E%E6%88%98%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><fancybox><img src="https://cdn.jsdelivr.net/gh/Hellotaogang/cdn@4.6.6/images/flask_house.png" width="900px" height="300px" align></fancybox><br>该篇文章是博主一字一码编写的，实属不易，请尊重原创，谢谢大家！<br><font style="color:red">温馨提示：需要项目源码的朋友，请添加博主微信进行获取！</font></p><div style="color:#fb651b"><i class="fas fa-list fa-fw" aria-hidden="true"></i>&nbsp;&nbsp;本文目录</div><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#一丶项目介绍"><span style="color:#4ea1db">一丶项目介绍</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#二丶前后端分离"><span style="color:#4ea1db">二丶前后端分离</span></a></li><li class="toc-item toc-level-1"><a style=" text-decoration:none;" href="#三丶项目需求"><span style="color:#4ea1db">三丶项目需求</span></a></li><a id="more"></a><h1 id="一丶项目介绍"><a href="#一丶项目介绍" class="headerlink" title="一丶项目介绍"></a>一丶项目介绍</h1><ul><li><strong>产品</strong>：关于手机移动端的租房网站</li><li><strong>角色</strong>：在这个产品中用户包括房东与房客</li><li><strong>功能</strong>：房东可以在这个平台发布自己的房屋，房客可以在这个平台寻找自己想要租的房子(类似短租平台)</li><li><strong>设计模式</strong>：使用前后端分离进行项目开发(后端不再控制前端的效果展示)</li></ul><p><strong>前端效果展示</strong></p><p><img src="https://img-blog.csdnimg.cn/20190102143409760.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><h1 id="二丶前后端分离"><a href="#二丶前后端分离" class="headerlink" title="二丶前后端分离"></a>二丶前后端分离</h1><ul><li><p><strong>前后端分离的认识</strong></p></li><li><p><strong>叙述</strong>：用户直接在浏览器中输入网址，不再是后端对应的动态逻辑了，而是一个静态页面<br>从/index 变成了 index.html文本文件，对于静态资源就从提供静态资源服务器中去拿(nginx)<br>前端页面中对于数据这块的需求必定是从后端拿去数据，后端也不需要去渲染模板，直接将前端<br>需要的数据转换成json格式字符串返回给前端即可(通过jquery以及其他前端框架去将数据渲染到页面)<br>具体做成什么效果，跟后端没有什么关系，前端什么时候需要数据，后端就给数据，这就是前后端分离。</p></li><li><p><strong>优点</strong>：无论对于手机上的浏览器还是app程序向后端拿数据时，只要在后端已经定义好了接口，这个接口都是可以直接用的，体现出后端接口的复用性。</p></li><li><p><strong>流程</strong>：用户在浏览器中输入网址的时候，需要向后端(nginx)去要网页，在这个网页中没有任何的数据，只是普通的前端呈现的样式而已，在这个网页当中的js里面，通过ajax方式向后端接口要取数据，后端接口当中给前端返回的是json字符串，前端拿到这个字符串在到ajax回调函数中，通过jquery方式把数据填充到页面上。</p></li><li><p><strong>缺点</strong>：对于搜索引擎优化SEO不友好，无法将网页的数据通过搜索引擎搜索关键字查询此网页信息，爬虫拿取页面信息，并没有任何数据，导致在搜索引擎上排名无法靠前</p></li></ul><h1 id="三丶项目需求"><a href="#三丶项目需求" class="headerlink" title="三丶项目需求"></a>三丶项目需求</h1><p>需求功能</p><ol><li><p><strong>主页</strong><br> 1.1 最多5个房屋logo图片展示，点击可跳转至房屋详情页面<br> 1.2 提供登陆/注册入口，登陆后显示用户名，点击可跳转至个人中心<br> 1.3 用户可以选择城区、入住时间、离开时间等条件进行搜索<br> 1.4 城区的区域信息需动态加载</p></li><li><p><strong>注册</strong><br> 2.1 用户账号默认为手机号<br> 2.2 图片验证码正确后才能发送短信验证码<br> 2.3 短信验证码每60秒可发送一次<br> 2.4 每个条件出错时有相应错误提示</p></li><li><p><strong>登陆</strong><br> 3.1 用手机号与密码登陆<br> 3.2 错误时有相应提示</p></li><li><p><strong>房屋列表页</strong><br> 4.1 可根据入住离开时间、区域进行筛选，并可进行排序<br> 4.2 房屋信息分页加载<br> 4.3 区域信息动态加载<br> 4.4 筛选条件更新后，页面立即刷新</p></li><li><p><strong>房屋详情页</strong><br> 5.1 需展示的详细信息参考设计图<br> 5.2 提供预定入口<br> 5.3 若是房东本人查看房屋信息时，预定入口不显示</p></li><li><p><strong>房屋预定</strong><br> 6.1 由用户确定入住时间<br> 6.2 根据用户确定的入住离开时间实时显示合计天数与总金额</p></li><li><p><strong>我的爱家</strong><br> 7.1 显示个人头像、手机号、用户名（用户名未设置时为用户手机号）<br> 7.2 提供修改个人信息的入口<br> 7.3 提供作为房客下单的查询入口<br> 7.4 提供成为房东所需实名认证的入口<br> 7.5 提供作为房东发布房屋信息的入口<br> 7.6 提供作为房东查询客户订单的入口<br> 7.7 提供退出的入口</p></li><li><p><strong>个人信息修改</strong><br> 8.1 可以修改个人头像<br> 8.2 可以修改用户名<br> 8.3 登陆手机号不能修改<br> 8.4 上传头像与用户名分开保存<br> 8.5 上传新头像后页面理解显示新头像</p></li><li><p><strong>我的订单</strong>（房客）<br> 9.1 按时间倒序显示订单信息<br> 9.2 订单完成后提供评价功能<br> 9.3 已评价的订单能看到评价信息<br> 9.4 被拒绝的订单能看到拒单原因</p></li><li><p><strong>实名认证</strong><br>10.1 实名认证只可进行一次<br>10.2 提交认证信息后再次进入只能查看信息，不能修改<br>10.3 认证信息包含姓名与身份证号</p></li><li><p><strong>我的房源</strong><br>11.1 未实名认证的用户不能发布新房源信息，需引导到实名认证页面<br>11.2 按时间倒序显示已经发布的房屋信息<br>11.3 点击房屋可以进入详情页面<br>11.4 对实名认证的用户提供发布新房屋的入口</p></li><li><p><strong>发布新房源</strong><br>12.1 需要用户填写全部房屋信息<br>12.2 房屋的文字信息与图片分开操作</p></li><li><p><strong>客户订单</strong>（房东）<br>13.1 按时间倒序显示用户下的订单<br>13.2 对于新订单提供接单与拒单的功能<br>13.3 拒单必须填写拒单原因<br>13.4 若客户进行了订单评价，需显示</p></li><li><p><strong>退出</strong><br>14.1 提供退出功能</p></li></ol><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85613780" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85613780</a></p>]]></content>
      
      
      <categories>
          
          <category> Flask开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> Flask网站实战开发 </tag>
            
            <tag> 手机端租房网站开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号开发之微信网页授权获取用户个人信息</title>
      <link href="/2019/11/03/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E5%BE%AE%E4%BF%A1%E7%BD%91%E9%A1%B5%E6%8E%88%E6%9D%83%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF/"/>
      <url>/2019/11/03/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E5%BE%AE%E4%BF%A1%E7%BD%91%E9%A1%B5%E6%8E%88%E6%9D%83%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶概述"><a href="#一丶概述" class="headerlink" title="一丶概述"></a>一丶概述</h1><ul><li><strong>微信网页授权</strong></li></ul><p>如果用户在微信客户端中访问第三方网页，公众号可以通过微信网页授权机制，来获取用户基本信息，进而实现业务逻辑。</p><p>现在，我们要实现一个微信内网页，通过微信访问网页时，网页会展示微信用户的个人信息。因为涉及到用户的个人信息，所以需要有用户授权才可以。当用户授权后，我们的网页服务器（开发者服务器）会拿到用户的“授权书”（code）,我们用这个code向微信服务器领取访问令牌（accecc_token）和用户的身份号码（openid)，然后凭借access_token和openid向微信服务器提取用户的个人信息。</p><ol><li>第一步：用户同意授权，获取code</li><li>第二步：通过code换取网页授权access_token</li><li>第三步：拉取用户信息(需scope为 snsapi_userinfo)</li></ol><p>那么，如何拿到用户的授权code呢？</p><p>授权是由微信发起让用户进行确认，在这个过程中是微信在与用户进行交互，所以用户应该先访问微信的内容，用户确认后再由微信将用户导向到我们的网页链接地址，并携带上code参数。我们把这个过程叫做网页回调，类似于我们在程序编写时用到的回调函数，都是回调的思想。</p><ul><li><strong>关于网页授权回调域名的说明</strong></li></ul><p>1、在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网中的“开发 - 接口权限 - 网页服务 - 网页帐号 - 网页授权获取用户基本信息”的配置选项中，修改授权回调域名。请注意，这里填写的是域名（是一个字符串），而不是URL，因此请勿加 http:// 等协议头；关于网页授权回调域名的说明</p><p>2、授权回调域名配置规范为全域名，比如需要网页授权的域名为：<a href="http://www.qq.com，配置以后此域名下面的页面http://[www.qq.com/music.html](www.qq.com/music.html)" target="_blank" rel="noopener">www.qq.com，配置以后此域名下面的页面http://[www.qq.com/music.html](www.qq.com/music.html)</a> 、 <a href="http://www.qq.com/login.html" target="_blank" rel="noopener">http://www.qq.com/login.html</a> 都可以进行OAuth2.0鉴权。但<a href="http://pay.qq.com" target="_blank" rel="noopener">http://pay.qq.com</a> 、 <a href="http://music.qq.com" target="_blank" rel="noopener">http://music.qq.com</a> 、 <a href="http://qq.com" target="_blank" rel="noopener">http://qq.com</a>无法进行OAuth2.0鉴权</p><p>3、如果公众号登录授权给了第三方开发者来进行管理，则不必做任何设置，由第三方代替公众号实现网页授权即可。</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229104150347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229104333145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h2 id="第一步：用户同意授权，获取code"><a href="#第一步：用户同意授权，获取code" class="headerlink" title="第一步：用户同意授权，获取code"></a>第一步：用户同意授权，获取code</h2><p>在确保微信公众账号拥有授权作用域（scope参数）的权限的前提下（服务号获得高级接口后，默认拥有scope参数中的snsapi_base和snsapi_userinfo），引导关注者打开如下页面：</p><p><a href="https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&redirect_uri=REDIRECT_URI&response_type=code&scope=SCOPE&state=STATE#wechat_redirect" target="_blank" rel="noopener">https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</a></p><p><strong><font color="#FF0000">尤其注意：</font>由于授权操作安全等级较高，所以在发起授权请求时，微信会对授权链接做正则强匹配校验，如果链接的参数顺序不对，授权页面将无法正常访问</strong></p><p>参考链接(请在微信客户端中打开此链接体验):<br><strong>scope为snsapi_base</strong><br><a href="https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx520c15f417810387&amp;redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60&amp;response_type=code&amp;scope=snsapi_base&amp;state=123#wechat_redirect" target="_blank" rel="noopener">https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx520c15f417810387&amp;redirect_uri=https%3A%2F%2Fchong.qq.com%2Fphp%2Findex.php%3Fd%3D%26c%3DwxAdapter%26m%3DmobileDeal%26showwxpaytitle%3D1%26vb2ctag%3D4_2030_5_1194_60&amp;response_type=code&amp;scope=snsapi_base&amp;state=123#wechat_redirect</a><br><strong>scope为snsapi_userinfo</strong><br><a href="https://open.weixin.qq.com/connect/oauth2/authorize?appid=wxf0e81c3bee622d60&amp;redirect_uri=http%3A%2F%2Fnba.bluewebgame.com%2Foauth_response.php&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirec" target="_blank" rel="noopener">https://open.weixin.qq.com/connect/oauth2/authorize?appid=wxf0e81c3bee622d60&amp;redirect_uri=http%3A%2F%2Fnba.bluewebgame.com%2Foauth_response.php&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirec</a></p><p><strong><font color="#FF0000">尤其注意：</font>跳转回调redirect_uri，应当使用https链接来确保授权code的安全性。</strong></p><p>参数说明</p><table><thead><tr><th align="center">参数</th><th align="center">是否必须</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">appid</td><td align="center">是</td><td align="center">公众号的唯一标识</td></tr><tr><td align="center">redirect_uri</td><td align="center">是</td><td align="center">授权后重定向的回调链接地址， 请使用 urlEncode 对链接进行处理</td></tr><tr><td align="center">response_type</td><td align="center">是</td><td align="center">返回类型，请填写code</td></tr><tr><td align="center">scope</td><td align="center">是</td><td align="center">应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ）</td></tr><tr><td align="center">state</td><td align="center">否</td><td align="center">重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节</td></tr><tr><td align="center">#wechat_redirect</td><td align="center">是</td><td align="center">无论直接打开还是做页面302重定向时候，必须带此参数</td></tr></tbody></table><p>下图为scope等于snsapi_userinfo时的授权页面：</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229105505298.jpg" alt></fancybox></p><p><strong>用户同意授权后</strong></p><p>如果用户同意授权，页面将跳转至 redirect_uri/?code=CODE&amp;state=STATE。</p><p><strong>code说明：</strong> code作为换取access_token的票据，每次用户授权带上的code将不一样，code只能使用一次，5分钟未被使用自动过期。 </p><h2 id="第二步：通过code换取网页授权access-token"><a href="#第二步：通过code换取网页授权access-token" class="headerlink" title="第二步：通过code换取网页授权access_token"></a>第二步：通过code换取网页授权access_token</h2><p>首先请注意，这里通过code换取的是一个特殊的网页授权access_token,与基础支持中的access_token（该access_token用于调用其他接口）不同。公众号可通过下述接口来获取网页授权access_token。如果网页授权的作用域为snsapi_base，则本步骤中获取到网页授权access_token的同时，也获取到了openid，snsapi_base式的网页授权流程即到此为止。</p><p>尤其注意：由于公众号的secret和获取到的access_token安全级别都非常高，必须只保存在服务器，不允许传给客户端。后续刷新access_token、通过access_token获取用户信息等步骤，也必须从服务器发起。</p><p>请求方法</p><p>获取code后，请求以下链接获取access_token：  <a href="https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&secret=SECRET&code=CODE&grant_type=authorization_code" target="_blank" rel="noopener">https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code</a></p><p>参数说明</p><table><thead><tr><th align="center">参数</th><th align="center">是否必须</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">appid</td><td align="center">是</td><td align="center">公众号的唯一标识</td></tr><tr><td align="center">secret</td><td align="center">是</td><td align="center">公众号的appsecret</td></tr><tr><td align="center">code</td><td align="center">是</td><td align="center">填写第一步获取的code参数</td></tr><tr><td align="center">grant_type</td><td align="center">是</td><td align="center">填写为authorization_code</td></tr></tbody></table><p>返回说明</p><p>正确时返回的JSON数据包如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">"access_token"</span>:<span class="string">"ACCESS_TOKEN"</span>,</span><br><span class="line"><span class="attr">"expires_in"</span>:<span class="number">7200</span>,</span><br><span class="line"><span class="attr">"refresh_token"</span>:<span class="string">"REFRESH_TOKEN"</span>,</span><br><span class="line"><span class="attr">"openid"</span>:<span class="string">"OPENID"</span>,</span><br><span class="line"><span class="attr">"scope"</span>:<span class="string">"SCOPE"</span> &#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">access_token</td><td align="center">网页授权接口调用凭证,注意：此access_token与基础支持的access_token不同</td></tr><tr><td align="center">expires_in</td><td align="center">access_token接口调用凭证超时时间，单位（秒）</td></tr><tr><td align="center">refresh_token</td><td align="center">用户刷新access_token</td></tr><tr><td align="center">openid</td><td align="center">用户唯一标识，请注意，在未关注公众号时，用户访问公众号的网页，也会产生一个用户和公众号唯一的OpenID</td></tr><tr><td align="center">scope</td><td align="center">用户授权的作用域，使用逗号（,）分隔</td></tr></tbody></table><p>错误时微信会返回JSON数据包如下（示例为Code无效错误）:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"errcode"</span>:<span class="number">40029</span>,<span class="attr">"errmsg"</span>:<span class="string">"invalid code"</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="第三步：拉取用户信息-需scope为-snsapi-userinfo"><a href="#第三步：拉取用户信息-需scope为-snsapi-userinfo" class="headerlink" title="第三步：拉取用户信息(需scope为 snsapi_userinfo)"></a>第三步：拉取用户信息(需scope为 snsapi_userinfo)</h2><p>如果网页授权作用域为snsapi_userinfo，则此时开发者可以通过access_token和openid拉取用户信息了。</p><p>请求方法</p><p>http：GET（请使用https协议） <a href="https://api.weixin.qq.com/sns/userinfo?access_token=ACCESS_TOKEN&openid=OPENID&lang=zh_CN" target="_blank" rel="noopener">https://api.weixin.qq.com/sns/userinfo?access_token=ACCESS_TOKEN&amp;openid=OPENID&amp;lang=zh_CN</a></p><p>参数说明</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">access_token</td><td align="center">网页授权接口调用凭证,注意：此access_token与基础支持的access_token不同</td></tr><tr><td align="center">openid</td><td align="center">用户的唯一标识</td></tr><tr><td align="center">lang</td><td align="center">返回国家地区语言版本，zh_CN 简体，zh_TW 繁体，en 英语</td></tr></tbody></table><p>返回说明</p><p>正确时返回的JSON数据包如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;    <span class="attr">"openid"</span>:<span class="string">" OPENID"</span>,</span><br><span class="line"><span class="attr">" nickname"</span>: NICKNAME,</span><br><span class="line"><span class="attr">"sex"</span>:<span class="string">"1"</span>,</span><br><span class="line"><span class="attr">"province"</span>:<span class="string">"PROVINCE"</span></span><br><span class="line"><span class="string">"city"</span>:<span class="string">"CITY"</span>,</span><br><span class="line"><span class="attr">"country"</span>:<span class="string">"COUNTRY"</span>,</span><br><span class="line"><span class="attr">"headimgurl"</span>:    <span class="string">"http://thirdwx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ4eMsv84eavHiaiceqxibJxCfHe/46"</span>,</span><br><span class="line"><span class="attr">"privilege"</span>:[ <span class="string">"PRIVILEGE1"</span> <span class="string">"PRIVILEGE2"</span>     ],</span><br><span class="line"><span class="attr">"unionid"</span>: <span class="string">"o6_bmasdasdsad6_2sgVt7hMZOPfL"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">openid</td><td align="center">用户的唯一标识</td></tr><tr><td align="center">nickname</td><td align="center">用户昵称</td></tr><tr><td align="center">sex</td><td align="center">用户的性别，值为1时是男性，值为2时是女性，值为0时是未知</td></tr><tr><td align="center">province</td><td align="center">用户个人资料填写的省份</td></tr><tr><td align="center">city</td><td align="center">普通用户个人资料填写的城市</td></tr><tr><td align="center">country</td><td align="center">国家，如中国为CN</td></tr><tr><td align="center">headimgurl</td><td align="center">用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空。若用户更换头像，原有头像URL将失效。</td></tr><tr><td align="center">privilege</td><td align="center">用户特权信息，json 数组，如微信沃卡用户为（chinaunicom）</td></tr><tr><td align="center">unionid</td><td align="center">只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段。</td></tr></tbody></table><p>错误时微信会返回JSON数据包如下（示例为openid无效）:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"errcode"</span>:<span class="number">40003</span>,<span class="attr">"errmsg"</span>:<span class="string">" invalid openid "</span>&#125;</span><br></pre></td></tr></table></figure><h1 id="二丶代码实现"><a href="#二丶代码实现" class="headerlink" title="二丶代码实现"></a>二丶代码实现</h1><ul><li>思路分析</li><li>首选在我们的flask程序中需要定义一个视图函数路由规则为/wechat8007/index，定义微信服务器重定向网址redirect_uri为服务器域名+/wechat8007/index（例如<a href="http://www.xxxx.com/wechat8007/index" target="_blank" rel="noopener">http://www.xxxx.com/wechat8007/index</a>），通过访问微信提供的引导页面，让用户同意授权，然后重定向到我们定义的网址，此时微信服务器就会给我们的服务一个code，我们的服务器再通过code向微信服务器换取网页授权access_token(存取令牌)，如果网页授权作用域为snsapi_userinfo，则此时可以通过access_token和openid拉取用户信息了。</li></ul><ul><li><strong>step1 同意授权，这一块不需要代码实现，只需要提供授权链接即可</strong></li><li><strong>step2 定义视图函数，当用户同意授权，页面将跳转至 redirect_uri/?code=CODE&amp;state=STATE ，在flask程序中定义一个是视图函数接口index，让用户同意授权后，去访问的视图</strong></li></ul><ul><li>上一篇博客定义的wechat视图，是由微信服务器访问，现在定义的index视图为用户访问的</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route("/wechat8007/index")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""让用户通过微信访问的网页页面视图"""</span></span><br></pre></td></tr></table></figure><ul><li><strong>step3  刚开始还没拉去用户资料时，可直接返回一个模板</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> render_template(<span class="string">"index.html"</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>step4 从微信服务器中获取用户的资料数据，将用户的资料数据填充到index.html模板中</strong></li><li>1.获取code参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code = request.args.get(<span class="string">"code"</span>)</span><br></pre></td></tr></table></figure><ul><li>2.当code不存在时，返回字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> code:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">u"缺失code参数"</span></span><br></pre></td></tr></table></figure><ul><li>3.向微信服务器发送http请求，获取access_token，在获取之前要在代码定义全局变量WECHAT_APPID以及WECHAT_APPSECRET的值，用来填充<a href="https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&secret=SECRET&code=CODE&grant_type=authorization_code" target="_blank" rel="noopener">https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code</a> 微信提供获取access_token链接地址中的APPID以及SECRET和CODE的值，再通过python中的urllib2库向这个url发送请求，read方法读取文本内容获取json格式的字符串，然后使用json当中的loads方法将json格式的字符串转换为字典</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://api.weixin.qq.com/sns/oauth2/access_token?appid=%s&amp;secret=%s&amp;code=%s&amp;grant_type=authorization_code"</span> %(WECHAT_APPID,WECHAT_APPSECRET,code)</span><br><span class="line"> </span><br><span class="line">response = urllib2.urlopen(url)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 获取响应体数据,微信返回的json数据</span></span><br><span class="line">json_str = response.read()</span><br><span class="line">resp_dict = json.loads(json_str)</span><br></pre></td></tr></table></figure><ul><li>4.提取access_token，首先对获取到的响应体数据进行判断，如果不存在，直接返回提示字符串，存在则通过get方式拿去字典中的access_token键的值以及用户编号openid的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">"errcode"</span> <span class="keyword">in</span> resp_dict:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">u"获取access_token失败"</span></span><br><span class="line"> </span><br><span class="line">access_token = resp_dict.get(<span class="string">"access_token"</span>)</span><br><span class="line">open_id = resp_dict.get(<span class="string">"openid"</span>)  <span class="comment"># 用户的编号</span></span><br></pre></td></tr></table></figure><ul><li><strong>step5 向微信服务器发送http请求，获取用户的资料数据</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">"https://api.weixin.qq.com/sns/userinfo?access_token=%s&amp;openid=%s&amp;lang=zh_CN"</span> %(access_token,open_id)</span><br><span class="line"> </span><br><span class="line">response = urllib2.urlopen(url)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 读取微信传回的json的响应体数据</span></span><br><span class="line">user_json_str = response.read()</span><br><span class="line">user_dict_data = json.loads(user_json_str)</span><br></pre></td></tr></table></figure><ul><li><strong>step6 判断微信返回的响应体数据中是否有errorcode字段，如果存在则返回失败信息，不存在说明微信返回的json数据为正确数据，则将该数据传给index.html模板，当用户访问<a href="http://xxx/wechat8007/index" target="_blank" rel="noopener">http://xxx/wechat8007/index</a>地址时，会渲染出我们定义的index.html模板</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">"errcode"</span> <span class="keyword">in</span> user_dict_data:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">u"获取用户信息失败"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 将用户的资料数据填充到页面中</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>, user=user_dict_data)</span><br></pre></td></tr></table></figure><ul><li><strong>step7 当前目录下创建templates模板目录，在该目录中创建index.html文件 ，代码如下</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;&#123;&#123;user["nickname"]&#125;&#125;的个人主页&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;img alt=<span class="string">"头像"</span> src=<span class="string">"&#123;&#123;user['headimgurl']&#125;&#125;"</span> width=<span class="string">"60"</span>&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;openid&lt;/th&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;user["openid"]&#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;昵称&lt;/th&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;user["nickname"]&#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &#123;% <span class="keyword">if</span> <span class="number">1</span> == user[<span class="string">"sex"</span>] %&#125;</span><br><span class="line">                    男</span><br><span class="line">                &#123;% <span class="keyword">elif</span> <span class="number">2</span> == user[<span class="string">"sex"</span>] %&#125;</span><br><span class="line">                    女</span><br><span class="line">                &#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">                    未知</span><br><span class="line">                &#123;% endif %&#125;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;省份&lt;/th&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;user["province"]&#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;城市&lt;/th&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;user["city"]&#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;国家&lt;/th&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;user["country"]&#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="三丶部署测试"><a href="#三丶部署测试" class="headerlink" title="三丶部署测试"></a>三丶部署测试</h1><ul><li><strong>step1 将代码推送到服务器上</strong></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229140003514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>成功推送到服务器上</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229140215248.png" alt></fancybox></p><ul><li><strong>step2 在服务器上进入虚拟环境，运行此程序</strong></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/201812291420440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step3 拼接微信提供网址</strong> <a href="https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&redirect_uri=REDIRECT_URI&response_type=code&scope=SCOPE&state=STATE#wechat_redirect" target="_blank" rel="noopener">https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</a></li><li>注：正式公众号redirect_uri地址必须为服务器的域名地址，不能是IP地址</li><li>在拼接redirect_uri时，服务器的域名为<a href="http://www.xxx.com/wechat8007/index" target="_blank" rel="noopener">http://www.xxx.com/wechat8007/index</a>，微信提供的授权地址http://中不可能包含一个<a href="redirect_uri为http://www.xxx.com/wechat8007/index">redirect_uri为http://www.xxx.com/wechat8007/index</a>用户同意授权后跳转的地址，所以需要对重定向地址<a href="http://www.xxx.com/wechat8007/index" target="_blank" rel="noopener">http://www.xxx.com/wechat8007/index</a> 进行转义</li><li>使用python urllib库中的quote方法进行转义</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> urllib</span><br><span class="line"> </span><br><span class="line">In [<span class="number">2</span>]: urllib.quote(<span class="string">"http://www.xxx.com/wechat8007/index"</span>)</span><br><span class="line">Out[<span class="number">2</span>]: <span class="string">'http%3A//www.xxx.com/wechat8007/index'</span></span><br></pre></td></tr></table></figure><p>拼接好的用户访问的url地址为</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229150305130.png" alt></fancybox></p><ul><li><strong>step4 可以将该网址生成二维码，使用微信扫一扫，也可以在接口公众号直接发送此链接地址</strong></li><li>使用谷歌浏览器的二维码插件，将网址生成对应的二维码(这里以百度首页网址为例)</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229150724658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>直接在浏览器中输入此地址会提示请在微信客户端打开链接</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229151458376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><strong>step5 测试，在手机微信上打开此链接，出现授权登录提示，点击允许即可获取用户个人信息</strong></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229152114726.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p>点击允许后，进入如下界面</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229153415707.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p>点击继续访问，则出现博主个人的微信信息了，如下图</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229153709772.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p>此时查看服务器上程序运行日志 </p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181229154311666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h1 id="四丶完整代码"><a href="#四丶完整代码" class="headerlink" title="四丶完整代码"></a>四丶完整代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template</span><br><span class="line"><span class="keyword">import</span> json, urllib2</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">WECHAT_APPID = <span class="string">"yourappid"</span></span><br><span class="line">WECHAT_APPSECRET = <span class="string">"yoursecret"</span></span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route("/wechat8007/index")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line"> </span><br><span class="line">    code = request.args.get(<span class="string">"code"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> code:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">u"缺失code参数"</span></span><br><span class="line"> </span><br><span class="line">    url = <span class="string">"https://api.weixin.qq.com/sns/oauth2/access_token?appid=%s&amp;secret=%s&amp;code=%s&amp;grant_type=authorization_code"</span> % (WECHAT_APPID, WECHAT_APPSECRET, code)</span><br><span class="line"> </span><br><span class="line">    response = urllib2.urlopen(url)</span><br><span class="line"> </span><br><span class="line">    json_str = response.read()</span><br><span class="line">    resp_dict = json.loads(json_str)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="string">"errcode"</span> <span class="keyword">in</span> resp_dict:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">u"获取access_token失败"</span></span><br><span class="line"> </span><br><span class="line">    access_token = resp_dict.get(<span class="string">"access_token"</span>)</span><br><span class="line">    open_id = resp_dict.get(<span class="string">"openid"</span>)</span><br><span class="line"> </span><br><span class="line">    url = <span class="string">"https://api.weixin.qq.com/sns/userinfo?access_token=%s&amp;openid=%s&amp;lang=zh_CN"</span> % (access_token, open_id)</span><br><span class="line"> </span><br><span class="line">    response = urllib2.urlopen(url)</span><br><span class="line">    user_json_str = response.read()</span><br><span class="line">    user_dict_data = json.loads(user_json_str)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="string">"errcode"</span> <span class="keyword">in</span> user_dict_data:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">u"获取用户信息失败"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>, user=user_dict_data)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(port=<span class="number">8007</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><strong>总结：微信公众号接口开发，根据官方提供的开发文档，进行开发，逻辑实现都很简单，多想多思考多练习，你会越来越棒的！</strong></p><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85334634" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85334634</a></p>]]></content>
      
      
      <categories>
          
          <category> WeChat开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> 微信公众号 </tag>
            
            <tag> 微信开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号开发之接收与发送消息</title>
      <link href="/2019/11/03/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E6%8E%A5%E6%94%B6%E4%B8%8E%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF/"/>
      <url>/2019/11/03/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E4%B9%8B%E6%8E%A5%E6%94%B6%E4%B8%8E%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶概论"><a href="#一丶概论" class="headerlink" title="一丶概论"></a>一丶概论</h1><ul><li><strong>公众号接收与发送消息</strong></li></ul><p>验证URL有效性成功后即接入生效，成为开发者。如果公众号类型为服务号（订阅号只能使用普通消息接口），可以在公众平台网站中申请认证，认证成功的服务号将获得众多接口权限，以满足开发者需求。</p><p>此后用户每次向公众号发送消息、或者产生自定义菜单点击事件时，开发者填写的服务器配置URL将得到微信服务器推送过来的消息和事件，然后开发者可以依据自身业务逻辑进行响应，例如回复消息等。</p><p><strong>用户向公众号发送消息时，公众号方收到的消息发送者是一个OpenID，是使用用户微信号加密后的结果，每个用户对每个公众号有一个唯一的OpenID。</strong></p><h2 id="1-接收普通消息"><a href="#1-接收普通消息" class="headerlink" title="1.接收普通消息"></a>1.接收普通消息</h2><p><strong>当普通微信用户向公众账号发消息时，微信服务器将POST消息的XML数据包到开发者填写的URL上。</strong></p><p>微信服务器在五秒内收不到响应会断掉连接，并且重新发起请求，总共重试三次。假如服务器无法保证在五秒内处理并回复，可以直接回复空串，微信服务器不会对此作任何处理，并且不会发起重试。</p><p>各消息类型的推送使用XML数据包结构，如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ToUserName</span>&gt;</span>&lt;![CDATA[gh_866835093fea]]&gt;<span class="tag">&lt;/<span class="name">ToUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FromUserName</span>&gt;</span>&lt;![CDATA[ogdotwSc_MmEEsJs9-ABZ1QL_4r4]]&gt;<span class="tag">&lt;/<span class="name">FromUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">CreateTime</span>&gt;</span>1478317060<span class="tag">&lt;/<span class="name">CreateTime</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgType</span>&gt;</span>&lt;![CDATA[text]]&gt;<span class="tag">&lt;/<span class="name">MsgType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Content</span>&gt;</span>&lt;![CDATA[你好]]&gt;<span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgId</span>&gt;</span>6349323426230210995<span class="tag">&lt;/<span class="name">MsgId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong>&lt;![CDATA 与 ]]&gt; 括起来的数据不会被xml解析器解析 </p><h2 id="2-普通消息类别"><a href="#2-普通消息类别" class="headerlink" title="2.普通消息类别"></a>2.普通消息类别</h2><ol><li>文本消息</li><li>图片消息</li><li>语音消息</li><li>视频消息</li><li>小视频消息</li><li>地理位置消息</li><li>链接消息</li></ol><p><strong>文本消息</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ToUserName</span>&gt;</span>&lt;![CDATA[toUser]]&gt;<span class="tag">&lt;/<span class="name">ToUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FromUserName</span>&gt;</span>&lt;![CDATA[fromUser]]&gt;<span class="tag">&lt;/<span class="name">FromUserName</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">CreateTime</span>&gt;</span>1348831860<span class="tag">&lt;/<span class="name">CreateTime</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgType</span>&gt;</span>&lt;![CDATA[text]]&gt;<span class="tag">&lt;/<span class="name">MsgType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Content</span>&gt;</span>&lt;![CDATA[this is a test]]&gt;<span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgId</span>&gt;</span>1234567890123456<span class="tag">&lt;/<span class="name">MsgId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181228192104582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></p><h2 id="3-回复的消息类型"><a href="#3-回复的消息类型" class="headerlink" title="3. 回复的消息类型"></a>3. 回复的消息类型</h2><ol><li>文本消息</li><li>图片消息</li><li>语音消息</li><li>视频消息</li><li>音乐消息</li><li>图文消息</li></ol><p><strong>回复文本消息</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ToUserName</span>&gt;</span>&lt;![CDATA[toUser]]&gt;<span class="tag">&lt;/<span class="name">ToUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FromUserName</span>&gt;</span>&lt;![CDATA[fromUser]]&gt;<span class="tag">&lt;/<span class="name">FromUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">CreateTime</span>&gt;</span>12345678<span class="tag">&lt;/<span class="name">CreateTime</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgType</span>&gt;</span>&lt;![CDATA[text]]&gt;<span class="tag">&lt;/<span class="name">MsgType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Content</span>&gt;</span>&lt;![CDATA[你好]]&gt;<span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注：</strong>开发文档可以到 <a href="https://mp.weixin.qq.com/wiki/home/index.html" target="_blank" rel="noopener">https://mp.weixin.qq.com/wiki/home/index.html</a>  进行阅读查看</p><h1 id="二丶代码实现"><a href="#二丶代码实现" class="headerlink" title="二丶代码实现"></a>二丶代码实现</h1><p>需求：我们现在来实现一个针对文本消息的收发程序。实现的业务逻辑，关注者发什么内容，我们就传回给什么内容。</p><p>说明：微信服务器推送消息还是往/wechat/8007，所以在之前代码上进行修改即可</p><h2 id="1-开发步骤"><a href="#1-开发步骤" class="headerlink" title="1.开发步骤"></a>1.开发步骤</h2><ul><li>step1 如何区分微信服务器发过来的是第一次的验证操作还是消息操作</li><li>验证操作为GET请求，消息操作为POST请求</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route("/wechat8007", methods=["GET", "POST"])</span></span><br></pre></td></tr></table></figure><ul><li>step2 参数变更，echostr参数只是在第一次验证的时候需要，无论是POST请求还是GET请求这三种参数都必要要，因为需要验证是不是微信服务器发送过来的数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">signature = request.args.get(<span class="string">"signature"</span>)</span><br><span class="line">timestamp = request.args.get(<span class="string">"timestamp"</span>)</span><br><span class="line">nonce = request.args.get(<span class="string">"nonce"</span>)</span><br></pre></td></tr></table></figure><ul><li>step3 对微信服务器发送的请求进行验证判断，如果是GET请求，那么代表是第一次的验证操作，那么就需要获取echostr字段的内容，如果内容为空则抛出404，存在则返回echostr</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> request.method == <span class="string">"GET"</span>:</span><br><span class="line">    <span class="comment"># 表示是第一次接入微信服务器的验证</span></span><br><span class="line">    echostr = request.args.get(<span class="string">"echostr"</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> echostr:</span><br><span class="line">        abort(<span class="number">404</span>)</span><br><span class="line">    <span class="keyword">return</span> echostr</span><br></pre></td></tr></table></figure><ul><li>step4 如果为POST请求，那么代表为微信服务器转发消息过来，获取请求中的data xml数据 ，数据为空抛出400</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> request.method == <span class="string">"POST"</span>:</span><br><span class="line">    <span class="comment"># 表示微信服务器转发消息过来</span></span><br><span class="line">    xml_str = request.data</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> xml_str:</span><br><span class="line">        abort(<span class="number">400</span>)</span><br></pre></td></tr></table></figure><ul><li>step5 将对获取的数据进行解析，通过xmltodict模块中的parse方法将字符串类型的xml数据，转换成字典类型的xml格式数据，因为xml数据最外层有一个<xml></xml>标签，通过get方式获取标签里的内容，再通过get获取内容中的MsgType消息类型字段的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对xml字符串进行解析</span></span><br><span class="line">xml_dict = xmltodict.parse(xml_str)</span><br><span class="line">xml_dict = xml_dict.get(<span class="string">"xml"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提取消息类型</span></span><br><span class="line">msg_type = xml_dict.get(<span class="string">"MsgType"</span>)</span><br></pre></td></tr></table></figure><ul><li>step6 对消息类型进行判断，如果为text文本消息，则返回文本消息，不是文本消息还是返回文本消息，这里可以拓展为(image，voice，video等等可以查看开发文档)，这里为了演示，就简单写写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span> msg_type == <span class="string">"text"</span>:</span><br><span class="line">    <span class="comment"># 表示发送的是文本消息</span></span><br><span class="line">    <span class="comment"># 构造返回值，经由微信服务器回复给用户的消息内容</span></span><br><span class="line">    resp_dict = &#123;</span><br><span class="line">        <span class="string">"xml"</span>: &#123;</span><br><span class="line">            <span class="string">"ToUserName"</span>: xml_dict.get(<span class="string">"FromUserName"</span>),</span><br><span class="line">            <span class="string">"FromUserName"</span>: xml_dict.get(<span class="string">"ToUserName"</span>),</span><br><span class="line">            <span class="string">"CreateTime"</span>: int(time.time()),</span><br><span class="line">            <span class="string">"MsgType"</span>: <span class="string">"text"</span>,</span><br><span class="line">            <span class="string">"Content"</span>: <span class="string">"taogang say:"</span> + xml_dict.get(<span class="string">"Content"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    resp_dict = &#123;</span><br><span class="line">        <span class="string">"xml"</span>: &#123;</span><br><span class="line">            <span class="string">"ToUserName"</span>: xml_dict.get(<span class="string">"FromUserName"</span>),</span><br><span class="line">            <span class="string">"FromUserName"</span>: xml_dict.get(<span class="string">"ToUserName"</span>),</span><br><span class="line">            <span class="string">"CreateTime"</span>: int(time.time()),</span><br><span class="line">            <span class="string">"MsgType"</span>: <span class="string">"text"</span>,</span><br><span class="line">            <span class="string">"Content"</span>: <span class="string">"Dear I Love you so much"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>step7 最后将我们构造的响应返回值通过unparse方法转换成xml格式的字符串，返回给微信服务器</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将字典转换为xml字符串</span></span><br><span class="line">resp_xml_str = xmltodict.unparse(resp_dict)</span><br><span class="line"><span class="comment"># 返回消息数据给微信服务器</span></span><br><span class="line"><span class="keyword">return</span> resp_xml_str</span><br></pre></td></tr></table></figure><h2 id="2-部署测试"><a href="#2-部署测试" class="headerlink" title="2.部署测试"></a>2.部署测试</h2><ul><li>step1 将代码推送到服务器上</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228212836627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>step2 在服务器上进入虚拟环境，运行此程序</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228213121693.png" alt></fancybox></p><ul><li>step3 进入微信公众平台，用手机扫描测试号二维码，进行关注测试</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228213429788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br>扫码后进行关注</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228213746467.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p>关注后进入此公众号，公众号则发送我们在<strong>开发步骤step 6</strong>，Dear I Love you so much 消息内容</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228214352664.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p>回到服务器程序运行日志上，显示为POST请求，说明程序逻辑完全没问题</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228214604559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>公众号测试平台用户列表将我的微信添加上去了</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228214900349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>step4 测试，在关注的此公众中，进行消息(文本，表情，语言，图片，视频）发送，当消息类型为文本时，即返回此消息内容，如果不是都是返回文本类型，内容为Dear I Love you so much</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228215333589.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228215638812.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><p>此时的服务器代码运行日志</p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228220035159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h2 id="3-完整代码"><a href="#3-完整代码" class="headerlink" title="3.完整代码"></a>3.完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, abort, render_template</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> xmltodict, time</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 常量</span></span><br><span class="line"><span class="comment"># 微信的token令牌</span></span><br><span class="line">WECHAT_TOKEN = <span class="string">"cdtaogang"</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route("/wechat8007", methods=["GET", "POST"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wechat</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""对接微信公众号服务器"""</span></span><br><span class="line">    <span class="comment"># 接收微信服务器发送的参数</span></span><br><span class="line">    signature = request.args.get(<span class="string">"signature"</span>)</span><br><span class="line">    timestamp = request.args.get(<span class="string">"timestamp"</span>)</span><br><span class="line">    nonce = request.args.get(<span class="string">"nonce"</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> all([signature, timestamp, nonce]):</span><br><span class="line">        abort(<span class="number">400</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 按照微信的流程进行计算签名</span></span><br><span class="line">    li = [WECHAT_TOKEN, timestamp, nonce]</span><br><span class="line">    <span class="comment"># 排序</span></span><br><span class="line">    li.sort()</span><br><span class="line">    <span class="comment"># 拼接字符串</span></span><br><span class="line">    tmp_str = <span class="string">''</span>.join(li)</span><br><span class="line">    <span class="comment"># 进行sha1加密, 得到正确的签名值</span></span><br><span class="line">    sign = hashlib.sha1(tmp_str).hexdigest()</span><br><span class="line">    <span class="comment"># 将自己计算的签名值与请求的签名参数进行对比，如果相同，则证明请求来自微信服务器</span></span><br><span class="line">    <span class="keyword">if</span> sign != signature:</span><br><span class="line">        <span class="comment"># 表示请求不是微信发的</span></span><br><span class="line">        abort(<span class="number">403</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 表示是微信发送的请求</span></span><br><span class="line">        <span class="keyword">if</span> request.method == <span class="string">"GET"</span>:</span><br><span class="line">            <span class="comment"># 表示是第一次接入微信服务器的验证</span></span><br><span class="line">            echostr = request.args.get(<span class="string">"echostr"</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> echostr:</span><br><span class="line">                abort(<span class="number">404</span>)</span><br><span class="line">            <span class="keyword">return</span> echostr</span><br><span class="line">        <span class="keyword">elif</span> request.method == <span class="string">"POST"</span>:</span><br><span class="line">            <span class="comment"># 表示微信服务器转发消息过来</span></span><br><span class="line">            xml_str = request.data</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> xml_str:</span><br><span class="line">                abort(<span class="number">400</span>)</span><br><span class="line"> </span><br><span class="line">            <span class="comment"># 对xml字符串进行解析</span></span><br><span class="line">            xml_dict = xmltodict.parse(xml_str)</span><br><span class="line">            xml_dict = xml_dict.get(<span class="string">"xml"</span>)</span><br><span class="line"> </span><br><span class="line">            <span class="comment"># 提取消息类型</span></span><br><span class="line">            msg_type = xml_dict.get(<span class="string">"MsgType"</span>)</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> msg_type == <span class="string">"text"</span>:</span><br><span class="line">                <span class="comment"># 表示发送的是文本消息</span></span><br><span class="line">                <span class="comment"># 构造返回值，经由微信服务器回复给用户的消息内容</span></span><br><span class="line">                resp_dict = &#123;</span><br><span class="line">                    <span class="string">"xml"</span>: &#123;</span><br><span class="line">                        <span class="string">"ToUserName"</span>: xml_dict.get(<span class="string">"FromUserName"</span>),</span><br><span class="line">                        <span class="string">"FromUserName"</span>: xml_dict.get(<span class="string">"ToUserName"</span>),</span><br><span class="line">                        <span class="string">"CreateTime"</span>: int(time.time()),</span><br><span class="line">                        <span class="string">"MsgType"</span>: <span class="string">"text"</span>,</span><br><span class="line">                        <span class="string">"Content"</span>: <span class="string">"taogang say:"</span> + xml_dict.get(<span class="string">"Content"</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                resp_dict = &#123;</span><br><span class="line">                    <span class="string">"xml"</span>: &#123;</span><br><span class="line">                        <span class="string">"ToUserName"</span>: xml_dict.get(<span class="string">"FromUserName"</span>),</span><br><span class="line">                        <span class="string">"FromUserName"</span>: xml_dict.get(<span class="string">"ToUserName"</span>),</span><br><span class="line">                        <span class="string">"CreateTime"</span>: int(time.time()),</span><br><span class="line">                        <span class="string">"MsgType"</span>: <span class="string">"text"</span>,</span><br><span class="line">                        <span class="string">"Content"</span>: <span class="string">"Dear I Love you so much"</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="comment"># 将字典转换为xml字符串</span></span><br><span class="line">            resp_xml_str = xmltodict.unparse(resp_dict)</span><br><span class="line">            <span class="comment"># 返回消息数据给微信服务器</span></span><br><span class="line">            <span class="keyword">return</span> resp_xml_str</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(port=<span class="number">8007</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><br><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85330265" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85330265</a></p>]]></content>
      
      
      <categories>
          
          <category> WeChat开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> 微信公众号 </tag>
            
            <tag> 微信开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号之接入微信公众号服务器开发（二）</title>
      <link href="/2019/10/31/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/10/31/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶叙述"><a href="#一丶叙述" class="headerlink" title="一丶叙述"></a>一丶叙述</h1><h2 id="开发说明"><a href="#开发说明" class="headerlink" title="开发说明"></a>开发说明</h2><ol><li>Python代码实现（以Flask框架为例）</li><li>将使用公众号消息会话</li><li>客户端—-＞微信服务器—-＞nginx服务器—-＞开发者服务器</li><li>在微信服务器与开发者服务器之间搭建了nginx服务器默认为80端口(也是微信支持的端口)，跟开发者服务器属于同一个主机</li><li>在nginx服务器上配置了多个端口，方便多人进行测试，转发规则：location/wechat8007</li><li>在微信公众号测试平台接口配置url为host/wechat8007时，当微信服务器发送消息给host/wechat8007时，host为nginx服务器时，就会按照/wechat8007转发规则匹配，一旦匹配成功后，由nginx服务器转发给开发者服务器上127.0.0.1:8007进程的用户，这样可以实现多个账号共享一个80端口，并可以收到微信服务器对应用户的消息</li><li>注：在写的flask程序中视图网址也必须是/wechat8007，因为nginx在向后台转发的时候，它只是按照/wechat8007规则知道转发给谁，它会把微信用户的请求原封不动的往后去发，因为微信服务器在向我们发送请求路径就是/wechat:8007,意味着nginx再转发给我们的时候，在我们写的flask程序收到的请求里面，你会发现对应的请求路径也是/wechat8007，所以我们flask程序中的route路径也必须是/wechat8007</li><li>如果是在公司做开发的话，不涉及到多个账户使用一个80端口，所以直接把程序在开发者服务器上以80端口运行，然后在微信公众测试平台配置url为配置程序地址即可</li><li>博主之所以这样做，那是因为我还没有购买服务器（●︿●）</li></ol><h2 id="接入微信公众平台"><a href="#接入微信公众平台" class="headerlink" title="接入微信公众平台"></a>接入微信公众平台</h2><p>接入微信公众平台开发，开发者需要按照如下步骤完成：</p><ol><li>填写服务器配置</li><li>验证服务器地址的有效性</li><li>依据接口文档实现业务逻辑</li></ol><h2 id="填写服务器配置"><a href="#填写服务器配置" class="headerlink" title="填写服务器配置"></a>填写服务器配置</h2><p>登录微信公众平台官网后，在公众平台后台管理页面 - 开发者中心页，点击“修改配置”按钮，填写服务器地址（URL）、Token和EncodingAESKey，其中URL是开发者用来接收微信消息和事件的接口URL。Token可由开发者可以任意填写，用作生成签名（该Token会和接口URL中包含的Token进行比对，从而验证安全性）。EncodingAESKey由开发者手动填写或随机生成，将用作消息体加解密密钥。</p><p>同时，开发者可选择消息加解密方式：明文模式、兼容模式和安全模式。模式的选择与服务器配置在提交后都会立即生效，请开发者谨慎填写及选择。加解密方式的默认状态为明文模式，选择兼容模式和安全模式需要提前配置好相关加解密代码，详情请参考消息体签名及加解密部分的文档。</p><h3 id="1-进入微信公众平台后，找到开发栏，进入基本配置"><a href="#1-进入微信公众平台后，找到开发栏，进入基本配置" class="headerlink" title="1.进入微信公众平台后，找到开发栏，进入基本配置"></a>1.进入微信公众平台后，找到开发栏，进入基本配置</h3><p><img src="https://img-blog.csdnimg.cn/20181228142954745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt><br><fancybox><img src="https://img-blog.csdnimg.cn/20181228143920280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h3 id="2-利用测试平台"><a href="#2-利用测试平台" class="headerlink" title="2.利用测试平台"></a>2.利用测试平台</h3><p>测试平台登录地址：<a href="https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login" target="_blank" rel="noopener">https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login</a><br><fancybox><img src="https://img-blog.csdnimg.cn/2018122817020287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br>在手机微信上进行扫码登录即可<br><fancybox><img src="https://img-blog.csdnimg.cn/20181228171021423.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><h1 id="二丶验证服务器地址的有效性"><a href="#二丶验证服务器地址的有效性" class="headerlink" title="二丶验证服务器地址的有效性"></a>二丶验证服务器地址的有效性</h1><p>开发者提交信息后，微信服务器将发送GET请求到填写的服务器地址URL上，GET请求携带四个参数：<br><fancybox><img src="https://img-blog.csdnimg.cn/20181228174733106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><p>开发者通过检验signature对请求进行校验。若确认此次GET请求来自微信服务器，请原样返回echostr参数内容，则接入生效，成为开发者成功，否则接入失败。</p><p>校验流程：</p><ol><li>将token、timestamp、nonce三个参数进行字典序排序</li><li>将三个参数字符串拼接成一个字符串进行sha1加密</li><li>开发者获得加密后的字符串可与signature对比，标识该请求来源于微信</li></ol><h3 id="1-根据上面微信公众平台提供的开发文档进行代码编写"><a href="#1-根据上面微信公众平台提供的开发文档进行代码编写" class="headerlink" title="1.根据上面微信公众平台提供的开发文档进行代码编写"></a>1.根据上面微信公众平台提供的开发文档进行代码编写</h3><p>代码实现如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, abort</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 常量</span></span><br><span class="line"><span class="comment"># 微信的token令牌</span></span><br><span class="line">WECHAT_TOKEN = <span class="string">"cdtaogang"</span></span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@app.route("/wechat8007")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wechat</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""对接微信公众号服务器"""</span></span><br><span class="line">    <span class="comment"># 接收微信服务器发送的参数</span></span><br><span class="line">    signature = request.args.get(<span class="string">"signature"</span>)</span><br><span class="line">    timestamp = request.args.get(<span class="string">"timestamp"</span>)</span><br><span class="line">    nonce = request.args.get(<span class="string">"nonce"</span>)</span><br><span class="line">    echostr = request.args.get(<span class="string">"echostr"</span>)</span><br><span class="line">    <span class="comment"># 校验参数</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> all([signature, timestamp, nonce, echostr]):</span><br><span class="line">        abort(<span class="number">400</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 按照微信的流程进行计算签名</span></span><br><span class="line">    li = [WECHAT_TOKEN, timestamp, nonce]</span><br><span class="line">    <span class="comment"># 排序</span></span><br><span class="line">    li.sort()</span><br><span class="line">    <span class="comment"># 拼接字符串</span></span><br><span class="line">    tmp_str = <span class="string">''</span>.join(li)</span><br><span class="line">    <span class="comment"># 进行sha1加密, 得到正确的签名值</span></span><br><span class="line">    sign = hashlib.sha1(tmp_str).hexdigest()</span><br><span class="line">    <span class="comment"># 将自己计算的签名值与请求的签名参数进行对比，如果相同，则证明请求来自微信服务器</span></span><br><span class="line">    <span class="keyword">if</span> sign != signature:</span><br><span class="line">        <span class="comment"># 表示请求不是微信发的</span></span><br><span class="line">        abort(<span class="number">403</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> echostr</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(port=<span class="number">8007</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="2-测试连接开发者服务器"><a href="#2-测试连接开发者服务器" class="headerlink" title="2.测试连接开发者服务器"></a>2.测试连接开发者服务器</h3><ul><li><b>step1 使用ssh命令测试连接服务器</b></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228182101658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><b>step2 使用scp命令将程序文件推送到服务器</b></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228182759767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><b>step3 在开发者服务器上运行wechat程序</b></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228183116979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li><b>step4 回到微信公众测试平台配置接口</b></li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228183513192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br><b>注意：当没有在服务器运行wechat程序时，进行提交会显示失败</b></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228183757670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br><b>此时，回头看服务器程序运行日志，微信给我发了一个以get方式请求过来的数据</b></p><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228184238535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br><b>大功告成！说明该服务器具有有效性….</b><br><br></p><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85321424" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85321424</a></p>]]></content>
      
      
      <categories>
          
          <category> WeChat开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> 微信公众号 </tag>
            
            <tag> 微信开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号之接入微信公众号服务器开发（一）</title>
      <link href="/2019/10/31/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/10/31/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B9%8B%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="一丶概述"><a href="#一丶概述" class="headerlink" title="一丶概述"></a>一丶概述</h1><h2 id="公众号与公众平台"><a href="#公众号与公众平台" class="headerlink" title="公众号与公众平台"></a>公众号与公众平台</h2><h3 id="1-微信账号类型"><a href="#1-微信账号类型" class="headerlink" title="1.微信账号类型"></a>1.微信账号类型</h3><ul><li>个人号</li><li>公众号<br>&ensp;– 订阅号<br>&ensp;– 服务号</li><li>企业号</li></ul><h3 id="2-公众号"><a href="#2-公众号" class="headerlink" title="2.公众号"></a>2.公众号</h3><p><b>微信公众号</b>主要面向名人、政府、媒体、企业等机构推出的合作推广业务。在这里可以通过微信渠道将品牌推广给上亿的微信用户，减少宣传成本，提高品牌知名度，打造更具影响力的品牌形象。</p><h3 id="3-公众平台"><a href="#3-公众平台" class="headerlink" title="3.公众平台"></a>3.公众平台</h3><p>微信公众平台是运营者通过公众号为微信用户提供资讯和服务的平台，而公众平台开发接口则是提供服务的基础，开发者在公众平台网站中创建公众号、获取接口权限后，可以通过阅读公众平台开发接口文档来帮助开发。</p><p>微信公众平台可以用来注册、管理公众号和企业号。</p><p><b>登录网址：</b><a href="https://mp.weixin.qq.com/" target="_blank" rel="noopener">https://mp.weixin.qq.com/</a></p><p>进入上面网址，可进行登录及注册<br><fancybox><br><img src="https://img-blog.csdnimg.cn/20181228120221641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt><br></fancybox><br><b>注册流程：</b></p><ul><li>step1 基本信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228124707431.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>step2 选择类型</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228125535973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br><fancybox><img src="https://img-blog.csdnimg.cn/2018122812593597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox><br><a href="https://img-blog.csdnimg.cn/20181228130654654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" target="_blank" rel="noopener"></a></p><ul><li>step3 信息登记</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228130425982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>step4 公众号信息</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228130920989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>step5 完成注册后，进行登录，首先需使用手机进行扫码</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228132726779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><ul><li>在手机端显示此界面，确认无误后，确定即可</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228132912503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" width="360" height="650"></fancybox></p><ul><li>通过身份验证后，即可在网页端对创建的公众号进行简单配置，如下图</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228133603911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt><fancybox></fancybox></fancybox></p><ul><li>一些简单的功能添加以及配置(需要啥配置啥即可，简单操作这里不做详细说明了)</li></ul><p><fancybox><img src="https://img-blog.csdnimg.cn/20181228133844976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt></fancybox></p><h3 id="4-公众号与个人号的区别"><a href="#4-公众号与个人号的区别" class="headerlink" title="4.公众号与个人号的区别"></a>4.公众号与个人号的区别</h3><p>微信公众号和个人号是完全不同的。</p><p>微信对个人号的定位是普通用户之间的交流和通讯，微信并不鼓励和支持使用个人号进行营销推广(微信曾经大规模封杀好友过多的营销个人号）。</p><p>而公众号则完全是为品牌推广、信息推送等服务而定制的。使用公众号，可以向关注者（即粉丝)群发图文消息，粉丝在对话界面看到消息后，可以点击跳转到一个图文页面。公众号还提供关键词自动回复等基础功能，以此可以随时、自动的和粉丝进行互动。</p><p>除了这些基础功能之外，更大的区别是，微信针对公众号开放了很多程序接口。在这些接口的基础上，可以向粉丝提供更多的服务。此外，认证的服务号还可以申请微信支付。粉丝可以使用微信支付向进行付款（订购服务或购买商品）。所有这些，都是个人号不具备的。</p><p>微信公众号的注册几乎是没有门槛的。不过针对不同类型的公众号，微信提供的功能不同，资质要求也不一样。</p><h1 id="二丶微信开发原理"><a href="#二丶微信开发原理" class="headerlink" title="二丶微信开发原理"></a>二丶微信开发原理</h1><p><b>公众号主要通过</b></p><ul><li>公众号消息会话</li><li>公众号内网页</li></ul><p><b>来为用户提供服务的。</b></p><ul><li><b>公众号消息会话</b></li></ul><p>公众号是以微信用户的一个联系人形式存在的，消息会话是公众号与用户交互的基础。</p><ul><li><b>公众号内网页</b></li></ul><p>许多复杂的业务场景，需要通过网页形式来提供服务。</p><ul><li><b>使用微信服务器提供的功能无法满足我们的需求</b></li></ul><p><b>设想两个场景：</b></p><p>1.公众号的消息自动回复想做的智能一些，类似于iphone的Siri，例如粉丝发送“今天的北京天气”到公众号，回复粉丝信息时要按照特定时间特定城市给予反馈;</p><p>2.公众号内嵌的网页需要获取浏览用户的微信头像、昵称、当前定位等信息</p><h2 id="模型分类"><a href="#模型分类" class="headerlink" title="模型分类"></a>模型分类</h2><h3 id="1-无扩展应用模型"><a href="#1-无扩展应用模型" class="headerlink" title="1.无扩展应用模型"></a>1.无扩展应用模型</h3><p><b>1.公众号消息会话</b><br><img src="https://img-blog.csdnimg.cn/20181228134457290.png" alt><br><b>2.公众号内网页</b><br><img src="https://img-blog.csdnimg.cn/20181228134525581.png" alt></p><h3 id="2-有扩展应用模型"><a href="#2-有扩展应用模型" class="headerlink" title="2.有扩展应用模型"></a>2.有扩展应用模型</h3><p><b>1.公众号消息会话</b><br><img src="https://img-blog.csdnimg.cn/20181228134804787.png" alt><br><b>2.公众号内网页</b><br><img src="https://img-blog.csdnimg.cn/20181228134857512.png" alt></p><h2 id="公众号接口"><a href="#公众号接口" class="headerlink" title="公众号接口"></a>公众号接口</h2><h3 id="1-公众号消息会话"><a href="#1-公众号消息会话" class="headerlink" title="1.公众号消息会话"></a>1.公众号消息会话</h3><p>目前公众号内主要有这样几类消息服务的类型，分别用于不同的场景。</p><p><b>群发消息</b></p><p>公众号可以以一定频次（订阅号为每天1次，服务号为每月4次），向用户群发消息，包括文字消息、图文消息、图片、视频、语音等。</p><p><strong>被动回复消息</strong></p><p>在用户给公众号发消息后，微信服务器会将消息发到开发者预先在开发者中心设置的服务器地址（开发者需要进行消息真实性验证），公众号可以在5秒内做出回复，可以回复一个消息，也可以回复命令告诉微信服务器这条消息暂不回复。被动回复消息可以设置加密（在公众平台官网的开发者中心处设置，设置后，按照消息加解密文档来进行处理。其他3种消息的调用因为是API调用而不是对请求的返回，所以不需要加解密）。</p><p><strong>客服消息</strong></p><p>在用户给公众号发消息后的48小时内，公众号可以给用户发送不限数量的消息，主要用于客服场景。用户的行为会触发事件推送，某些事件推送是支持公众号据此发送客服消息的，详见微信推送消息与事件说明文档。</p><p><strong>模板消息</strong></p><p>在需要对用户发送服务通知（如刷卡提醒、服务预约成功通知等）时，公众号可以用特定内容模板，主动向用户发送消息。</p><h3 id="2-公众号内网页"><a href="#2-公众号内网页" class="headerlink" title="2.公众号内网页"></a>2.公众号内网页</h3><p>对于公众号内网页，提供以下场景接口：</p><p>网页授权获取用户基本信息</p><p>通过该接口，可以获取用户的基本信息</p><p>微信JS-SDK</p><p>是开发者在网页上通过JavaScript代码使用微信原生功能的工具包，开发者可以使用它在网页上录制和播放微信语音、监听微信分享、上传手机本地图片、拍照等许多能力。</p><h3 id="3-微信开发者文档"><a href="#3-微信开发者文档" class="headerlink" title="3.微信开发者文档"></a>3.微信开发者文档</h3><p>文档链接地址：<a href="https://mp.weixin.qq.com/wiki/home/index.html" target="_blank" rel="noopener">https://mp.weixin.qq.com/wiki/home/index.html</a><br><fancybox><br><img src="https://img-blog.csdnimg.cn/20181228135813950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzgyNDI1,size_16,color_FFFFFF,t_70" alt><br></fancybox><br><br></p><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/85319116" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/85319116</a></p>]]></content>
      
      
      <categories>
          
          <category> WeChat开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
            <tag> 微信公众号 </tag>
            
            <tag> 微信开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件测试用例设计总结</title>
      <link href="/2019/10/18/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/10/18/%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-测试流程"><a href="#1-测试流程" class="headerlink" title="1.测试流程"></a>1.测试流程</h2><p>需求分析—测试需求—测试计划–测试方案—测试用例—执行测试—测试报告</p><h2 id="2-测试用例的特性"><a href="#2-测试用例的特性" class="headerlink" title="2.测试用例的特性"></a>2.测试用例的特性</h2><ul><li>有效性：能使用，不同人使用结果一致（测试用例的能够被使用，且被不同人员使用测试结果一致）</li><li>可复用性：良好的测试用例具有重复使用的功能</li><li>易组织性：好的测试用例会分门别类地提供给测试人员参考和使用</li><li>可评估性：从测试管理的角度，测试用例的通过率和软件缺陷的数目是软件产品质量好坏的测试标准（测试计划）</li><li>可管理性：测试用例可以作为检验测试人员进度、工作量以及跟踪/管理测试人员工作效率的因素（对测试人员进行工作量和绩效考核）</li></ul><h2 id="3-测试用例的八大要素"><a href="#3-测试用例的八大要素" class="headerlink" title="3.测试用例的八大要素"></a>3.测试用例的八大要素</h2><p>①测试编号<br>②测试模块<br>③测试标题<br>④测试级别<br>⑤测试环境<br>⑥测试输入<br>⑦测试步骤<br>⑧预期结果</p><ul><li><p>测试编号：每个测试用例都有唯一的标识号，用以区别其他测试用例<br><i style="color:red">例</i>：系统测试用例的编号这样定义规则： PROJECT1-ST-001 ，命名规则是项目名称＋测试阶段类型（系统测试阶段）＋编号</p></li><li><p>测试模块：指明并简单描述本测试用例是用来测试哪些项目、子项目或软件特性的<br><i style="color:red">例</i>：购物模块</p></li><li><p>测试标题：对测试用例的描述，测试用例标题应该清楚表达测试用例的用途<br><i style="color:red">例</i>：“ 测试用户登录时输入错误密码时，软件的响应情况 ”</p></li><li><p>测试级别：定义测试用例的优先级别，可以粗略地分为 “ 高 ” 和 “ 低 ” 两个级别<br><i style="color:red">例</i>： 核心功能 —高      界面风格 —低</p></li><li><p>测试环境：描述执行测试用例所需要的具体测试环境，包括硬件环境和软件环境<br><i style="color:red">例</i>： 硬件 ——计算机的具体配置，见测试计划；软件——操作系统  linux    数据库   mysql     中间件  weblogic</p></li><li><p>测试输入：用来执行测试用例的输入要求。这些输入可能是数据、文件或具体操作<br><i style="color:red">例</i>： 数据  ：  12  文件  ：   D:\baidu\文件couture         动作  ：  单击鼠标，在键盘做按键处理</p></li><li><p>测试步骤：执行本测试用例所需的每一步操作<br><i style="color:red">例</i>： 求和运算          输入加数12          输入被加数 24          点击“加法按钮”</p></li><li><p>预期结果：描述被测项目或被测特性所希望或要求达到的输出或指标<br><i style="color:red">例</i>：  加法器    12+24          预期结果：  36</p></li></ul><h2 id="4-测试用例操作步骤"><a href="#4-测试用例操作步骤" class="headerlink" title="4.测试用例操作步骤"></a>4.测试用例操作步骤</h2><p><strong>1.</strong>设计一个新的测试用例，使其尽可能多地覆盖尚未被覆盖的有效等价类，重复这个过程，直至所有的有效等价类均被测试用例所覆盖</p><p><strong>2.</strong>设计一个新的测试用例，使其仅覆盖一个无效等价类，重复这个过程，直至所有的无效等价类均被测试用例所覆盖</p><p><strong>3.</strong>设计数据要注意<br>        ①无效等价类在一个用例中只能出现一次<br>        ②有效等价类在一个用例中可以出现多次<br><strong>4.</strong>等价类划分技巧<br>        ①测试用例分析最好用xmind<br>        ②按等价类给出数据最好用电子表格<br>        ③当产生意见分歧，回看需求规格说明书</p><h2 id="5-软件测试用例方法"><a href="#5-软件测试用例方法" class="headerlink" title="5.软件测试用例方法"></a>5.软件测试用例方法</h2><p>1.输出域       覆盖所有的输出，不管输入<br>2.输入域       覆盖所有的输入，不管输出<br>3.异常分析法： 断电，断网的异常情况（重点关注）<br>4.错误猜测法： 有经验的人对系统做出判断，找到肯能出现错误的地方<br>5.探索性测试： 根据自己的测试经验，尝试性测试系统功能<br>6.因果图<br>7.场景法     流程有序<br>8.状态迁移   状态无序<br>9.正交试验   多条件组合，不予许出现负值<br>10.判定表    多条件组合，可以出现负值<br>11.边界值<br>12.等价类</p><h2 id="6-软件生存周期及其模型"><a href="#6-软件生存周期及其模型" class="headerlink" title="6.软件生存周期及其模型"></a>6.软件生存周期及其模型</h2><p>软件生存周期（Software life cycle）又称为软件生命期，生存期。是指从形成开发软件概念起，所开发的软件使用以后，知道失去使用价值消亡为止的整个过程。一般来说，整个生存周期包括计划（定义）、开发、运行（维护）三个时期，每个时期又划分为若干个阶段。每个阶段有明确的任务。</p><p><strong>周期模型（典型的几种）:</strong></p><pre><code>瀑布模型：</code></pre><p>快速原型模型：快速原型模型允许在需求分析阶段对软件的需求进行初步而非完全的分析和定义，快速设计开发出软件系统的原型，该原型向用户展示待开发软件的全部或部分功能和性能；用户对该原型进行测试评定，给出具体改进意见以丰富细化软件需求；开发人员据此对软件进行修改完善，直至用户满意认可之后，进行软件的完整实现及测试、维护。</p><pre><code>迭代模型：</code></pre><p>迭代包括产生产品发布（稳定、可执行的产品版本）的全部开发活动和要使用该发布必需的所有其他外围元素。在某种程度上，开发迭代是一次 完整地经过所有工作流程的过程：需求分析、设计、实施和测试工作流程。实质上，它类似小型的瀑布式项目。RUP认为，所有的阶段都可以细分为迭代。每一次 的迭代都会产生一个可以发布的产品，这个产品是最终产品的一个子集。</p><p><strong>生命周期阶段：</strong></p><p>　　软件计划与可行性分析</p><p>　　需求分析</p><p>　　软件设计</p><p>　　编码</p><p>　　软件测试</p><p>　　运行与维护</p><h2 id="7-什么是软件测试？软件测试的目的与原则"><a href="#7-什么是软件测试？软件测试的目的与原则" class="headerlink" title="7.什么是软件测试？软件测试的目的与原则"></a>7.什么是软件测试？软件测试的目的与原则</h2><p>在规定的条件下对程序进行操作，以发现程序错误，衡量软件质量，并对其是否能满足设计要求进行评估的过程。</p><pre><code>软件测试的目的：</code></pre><p>　　       测试是程序的执行过程，目的在于发现错误</p><p>　　       一个成功的测试用例在于发现至今未发现的错误</p><p>　　       一个成功的测试是发现了至今未发现的错误的测试</p><p>　　       确保产品完成了它所承诺或公布的功能，并且用户可以访问到的功能都有明确的书面说明。</p><p>　　       确保产品满足性能和效率的要求</p><p>　　       确保产品是健壮的和适应用户环境的</p><pre><code>软件测试的原则：</code></pre><p>　　       测试用例中一个必须部分是对预期输出或接过进行定义</p><p>　　       程序员应避免测试自己编写的程序</p><p>　　       编写软件的组织不应当测试自己编写的软件</p><p>　　       应当彻底检查每个测试的执行结果</p><p>　　       测试用例的编写不仅应当根据有效和预料到的输入情况，而且也应当根据无效和未预料到的输入情况</p><p>　　       检擦程序是否“未做其应该做的”仅是测试的一半，测试的另一半是检查程序是否“做了其不应该做的”</p><p>　　       应避免测试用例用后即弃，除非软件本身就是个一次性的软件</p><p>　　       计划测试工作时不应默许假定不会发现错误</p><p>　　       程序某部分存在更多错误的可能性，与该部分已经发现错误的数量成正比</p><p>　　       软件测试是一项极富创造性，极具智力的挑战性的工作。</p><h2 id="8-软件的安全性应从哪几个方面去测试"><a href="#8-软件的安全性应从哪几个方面去测试" class="headerlink" title="8.软件的安全性应从哪几个方面去测试"></a>8.软件的安全性应从哪几个方面去测试</h2><p>软件安全性测试包括<strong>程序、数据库安全性</strong>测试。根据系统安全指标不同测试策略也不同。<br><br><br><font color="#FF0000">用户认证安全的测试要考虑问题：</font> 明确区分系统中不同用户权限 、系统中会不会出现用户冲突 、系统会不会因用户的权限的改变造成混乱 、用户登陆密码是否是可见、可复制 、是否可以通过绝对途径登陆系统（拷贝用户登陆后的链接直接进入系统）、用户退出系统后是否删除了所有鉴权标记，是否可以使用后退键而不通过输入口令进入 系统 、系统网络安全的测试要考虑问题 、测试采取的防护措施是否正确装配好，有关系统的补丁是否打上 、模拟非授权攻击，看防护系统是否坚固 、采用成熟的网络漏洞检查工具检查系统相关漏洞（即用最专业的黑客攻击工具攻击试一下，现在最常用的是 NBSI 系列和 IPhacker IP ） 、采用各种木马检查工具检查系统木马情况 、采用各种防外挂工具检查系统各组程序的外挂漏洞.</p><p><font color="#FF0000">数据库安全考虑问题：</font> 系统数据是否机密（比如对银行系统，这一点就特别重要，一般的网站就没有太高要求）、系统数据的完整性（我刚刚结束的企业实名核查服务系统中就曾存在数据 的不完整，对于这个系统的功能实现有了障碍） 、系统数据可管理性 、系统数据的独立性 、系统数据可备份和恢复能力（数据备份是否完整，可否恢复，恢复是否可以完整）</p><h2 id="9-什么是测试用例-什么是测试脚本-两者的关系是什么？"><a href="#9-什么是测试用例-什么是测试脚本-两者的关系是什么？" class="headerlink" title="9.什么是测试用例 什么是测试脚本 两者的关系是什么？"></a>9.什么是测试用例 什么是测试脚本 两者的关系是什么？</h2><p>为实施测试而向被测试系统提供的输入数据、操作或各种环境设置以及期望结果的一个特定的集合。</p><p>测试脚本是为了进行自动化测试而编写的脚本。</p><p>测试脚本的编写必须对应相应的测试用例。</p><h2 id="10-什么是静态测试、动态测试、黑盒测试、白盒测试、α测试-β测试？"><a href="#10-什么是静态测试、动态测试、黑盒测试、白盒测试、α测试-β测试？" class="headerlink" title="10.什么是静态测试、动态测试、黑盒测试、白盒测试、α测试 β测试？"></a>10.什么是静态测试、动态测试、黑盒测试、白盒测试、α测试 β测试？</h2><p><strong>静态测试</strong>是不运行程序本身而寻找程序代码中可能存在的错误或评估程序代码的过程。</p><p><strong>动态测试</strong>是实际运行被测程序，输入相应的测试实例，检查运行结果与预期结果的差异，判定执行结果是否符合要求，从而检验程序的正确性、可靠性和有效性，并分析系统运行效率和健壮性等性能。</p><p><strong>黑盒测试</strong>一般用来确认软件功能的正确性和可操作性,目的是检测软件的各个功能是否能得以实现,把被测试的程序当作一个黑盒,不考虑其内部结构,在知道该程序的输入和输出之间的关系或程序功能的情况下,依靠软件规格说明书来确定测试用例和推断测试结果的正确性。</p><p><strong>白盒测试</strong>根据软件内部的逻辑结构分析来进行测试,是基于代码的测试，测试人员通过阅读程序代码或者通过使用开发工具中的单步调试来判断软件的质量，一般黑盒测试由项目经理在程序员开发中来实现。</p><p><strong>α测试</strong>是由一个用户在开发环境下进行的测试，也可以是公司内部的用户在模拟实际操作环境下进行的受控测试，Alpha测试不能由程序员或测试员完成。</p><p><strong>β测试</strong>是软件的多个用户在一个或多个用户的实际使用环境下进行的测试。开发者通常不在测试现场，Beta测试不能由程序员或测试员完成。</p><h2 id="11-软件产品质量特性是什么"><a href="#11-软件产品质量特性是什么" class="headerlink" title="11.软件产品质量特性是什么?"></a>11.软件产品质量特性是什么?</h2><p><strong>功能性：</strong>适应性、准确性、互操作性、依从性、安全性。</p><p><strong>可靠性：</strong>成熟性、容错性、易恢复性。</p><p><strong>可使用性：</strong>易理解性、易学习性、易操作性。</p><p><strong>效率：</strong>时间特性、资源特性。</p><p><strong>可维护性：</strong>易分析性、易变更性、稳定性、易测试性。</p><p><strong>可移植性：</strong>适应性、易安装性、遵循性、易替换性</p><h2 id="12-软件测试分为几个阶段-各阶段的测试策略和要求是什么"><a href="#12-软件测试分为几个阶段-各阶段的测试策略和要求是什么" class="headerlink" title="12.软件测试分为几个阶段 各阶段的测试策略和要求是什么?"></a>12.软件测试分为几个阶段 各阶段的测试策略和要求是什么?</h2><p>和开发过程相对应，测试过程会依次经历单元测试、集成测试、系统测试、验收测试</p><pre><code>四个主要阶段：</code></pre><p><font color="#FF0000">单元测试：</font>单元测试是针对软件设计的最小单位––程序模块甚至代码段进行正确性检验的测试工作，通常由开发人员进行。</p><p><font color="#FF0000">集成测试：</font>集成测试是将模块按照设计要求组装起来进行测试，主要目的是发现与接口有关的问题。由于在产品提交到测试部门前，产品开发小组都要进行联合调试，因此在大部分企业中集成测试是由开发人员来完成的。</p><p><font color="#FF0000">系统测试：</font>系统测试是在集成测试通过后进行的，目的是充分运行系统，验证各子系统是否都能正常工作并完成设计的要求。它主要由测试部门进行，是测试部门最大最重要的一个测试，对产品的质量有重大的影响。</p><p><font color="#FF0000">验收测试：</font>验收测试以需求阶段的《需求规格说明书》为验收标准，测试时要求模拟实际用户的运行环境。对于实际项目可以和客户共同进行，对于产品来说就是最后一次的系统测试。测试内容为对功能模块的全面测试，尤其要进行文档测试。</p><pre><code>单元测试测试策略：</code></pre><p><strong>自顶向下</strong>的单元测试策略：比孤立单元测试的成本高很多，不是单元测试的一个好的选择。</p><p><strong>自底向上</strong>的单元测试策略：比较合理的单元测试策略，但测试周期较长。</p><p><strong>孤立</strong>的单元测试策略：最好的单元测试策略。</p><pre><code>集成测试的测试策略：</code></pre><p><strong>大爆炸集成</strong>：适应于一个维护型项目或被测试系统较小</p><p><strong>自顶向下集成</strong>：适应于产品控制结构比较清晰和稳定；高层接口变化较小；底层接口未定义或经常可能被修改；产口控制组件具有较大的技术风险，需要尽早被验证；希望尽早能看到产品的系统功能行为。</p><p><strong>自底向上集成</strong>：适应于底层接口比较稳定；高层接口变化比较频繁；底层组件较早被完成。</p><p><strong>基于进度的集成</strong></p><p><em>优点</em>：具有较高的并行度；能够有效缩短项目的开发进度。</p><p><em>缺点</em>：桩和驱动工作量较大；有些接口测试不充分；有些测试重复和浪费。</p><pre><code>系统测试的测试策略：</code></pre><p>数据和数据库完整性测试；功能测试；用户界面测试；性能评测；负载测试；强度测试；容量测试；安全性和访问控制测试；故障转移和恢复测试；配置测试；安装测试；加密测试；可用性测试；版本验证测试；文档测试</p><h2 id="13-软件测试各个阶段通常完成什么工作？"><a href="#13-软件测试各个阶段通常完成什么工作？" class="headerlink" title="13.软件测试各个阶段通常完成什么工作？"></a>13.软件测试各个阶段通常完成什么工作？</h2><p><font color="#FF0000">单元测试阶段：</font>各独立单元模块在与系统地其他部分相隔离的情况下进行测试，单元测试针对每一个程序模块进行正确性校验，检查各个程序模块是否正确地实现了规定的功能。生成单元测试报告，提交缺陷报告。</p><p><font color="#FF0000">集成测试阶段：</font>集成测试是在单元测试的基础上，测试在将所有的软件单元按照概要设计规格说明的要求组装成模块、子系统或系统的过程中各部分工作是否达到或实现相应技术指标及要求的活动。该阶段生成集成测试报告，提交缺陷报告。</p><p><font color="#FF0000">系统测试阶段：</font>将通过确认测试的软件，作为整个给予计算机系统的一个元素，与计算机硬件、外设、某些支持软件、数据和人员等其他系统元素结合在一起，在实际运行环境下，对计算机系统进行全面的功能覆盖。该阶段需要提交测试总结和缺陷报告。</p><h2 id="14-测试人员在软件开发过程中的任务是什么？"><a href="#14-测试人员在软件开发过程中的任务是什么？" class="headerlink" title="14.测试人员在软件开发过程中的任务是什么？"></a>14.测试人员在软件开发过程中的任务是什么？</h2><p>1、尽可能早的找出系统中的Bug；</p><p>2、避免软件开发过程中缺陷的出现；</p><p>3、衡量软件的品质，保证系统的质量；</p><p>4、关注用户的需求，并保证系统符合用户需求。</p><p>总的目标是：确保软件的质量。</p><h2 id="15-一条软件缺陷（或者叫Bug）记录都包含了哪些内容？"><a href="#15-一条软件缺陷（或者叫Bug）记录都包含了哪些内容？" class="headerlink" title="15.一条软件缺陷（或者叫Bug）记录都包含了哪些内容？"></a>15.一条软件缺陷（或者叫Bug）记录都包含了哪些内容？</h2><p>一条Bug记录最基本应包含：</p><p>bug编号；</p><p>bug严重级别，优先级；</p><p>bug产生的模块；</p><p>首先要有bug摘要，阐述bug大体的内容；</p><p>bug对应的版本；</p><p>bug详细现象描述，包括一些截图、录像….等等；</p><p>bug出现时的测试环境，产生的条件即对应操作步骤；</p><h2 id="16-黑盒测试和白盒测试的优缺点"><a href="#16-黑盒测试和白盒测试的优缺点" class="headerlink" title="16.黑盒测试和白盒测试的优缺点"></a>16.黑盒测试和白盒测试的优缺点</h2><p>黑盒测试的优点有：比较简单，不需要了解程序内部的代码及实现；与软件的内部实现无关；  从用户角度出发，能很容易的知道用户会用到哪些功能，会遇到哪些问题；基于软件开发文档，所以也能知道软件实现了文档中的哪些功能；在做软件自动化测试时较为方便。</p><p>黑盒测试的缺点有：不可能覆盖所有的代码，覆盖率较低，大概只能达到总代码量的30%；自动化测试的复用性较低。</p><p>白盒测试的优点有：帮助软件测试人员增大代码的覆盖率，提高代码的质量，发现代码中隐藏的问题。</p><p>白盒测试的缺点有：程序运行会有很多不同的路径，不可能测试所有的运行路径；测试基于代码，只能测试开发人员做的对不对，而不能知道设计的正确与否，可能会漏掉一些功能需求；系统庞大时，测试开销会非常大。</p><h2 id="17-如何测试一个纸杯？"><a href="#17-如何测试一个纸杯？" class="headerlink" title="17.如何测试一个纸杯？"></a>17.如何测试一个纸杯？</h2><p>功能度：用水杯装水看漏不漏；水能不能被喝到</p><p>安全性：杯子有没有毒或细菌</p><p>可靠性：杯子从不同高度落下的损坏程度</p><p>可移植性：杯子在不同的地方、温度等环境下是否都可以正常使用</p><p>兼容性：杯子是否能够容纳果汁、白水、酒精、汽油等</p><p>易用性：杯子是否烫手、是否有防滑措施、是否方便饮用</p><p>用户文档：使用手册是否对杯子的用法、限制、使用条件等有详细描述</p><p>疲劳测试：将杯子盛上水（案例一）放24小时检查泄漏时间和情况；盛上汽油（案例二）放24小时检查泄漏时间和情况等</p><p>压力测试：用根针并在针上面不断加重量，看压强多大时会穿透</p><h2 id="18-详细的描述一个测试活动完整的过程"><a href="#18-详细的描述一个测试活动完整的过程" class="headerlink" title="18.详细的描述一个测试活动完整的过程"></a>18.详细的描述一个测试活动完整的过程</h2><p>1.项目经理通过和客户的交流，完成需求文档，由开发人员和测试人员共同完成需求文档的评审，评审的内容包括：需求描述不清楚的地方和可能有明显冲突或者无法实现的功能的地方。项目经理通过综合开发人员，测试人员以及客户的意见，完成项目计划。然后SQA(软件质量保证)进入项目，开始进行统计和跟踪。</p><p>2.开发人员根据需求文档完成需求分析文档，测试人员进行评审，评审的主要内容包括是否有遗漏或双方理解不同的地方。测试人员完成测试计划文档，测试计划包括的内容上面有描述。</p><p>3.测试人员根据修改好的需求分析文档开始写测试用例，同时开发人员完成概要设计文档，详细设计文档。此两份文档成为测试人员撰写测试用例的补充材料。</p><p>4.测试用例完成后，测试和开发需要进行评审。</p><p>5.测试人员搭建环境</p><p>6.开发人员提交第一个版本，可能存在未完成功能，需要说明。测试人员进行测试，发现BUG后提交给BugZilla。</p><p>7.开发提交第二个版本，包括Bug Fix以及增加了部分功能，测试人员进行测试。</p><p>8.重复上面的工作，一般是3-4个版本后BUG数量减少，达到出货的要求。</p><p>9.如果有客户反馈的问题，需要测试人员协助重现并重新测试。<br><br></p><p>————————————————<br>版权声明：本文为CSDN博主「cdtaogang」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_41782425/article/details/96853248" target="_blank" rel="noopener">https://blog.csdn.net/qq_41782425/article/details/96853248</a></p>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试流程 </tag>
            
            <tag> 用例特性 </tag>
            
            <tag> 用例要素 </tag>
            
            <tag> 用例步骤 </tag>
            
            <tag> 用例方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章加密测试</title>
      <link href="/2019/10/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/10/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('别搞了，你破解不了的');const txt = document.getElementById('enc_content').innerHTML;// alert(txt,"1")// alert(pwd,"2")// alert(onError,"3")let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);if(plaintext == ""){document.getElementById("enc_pwd_input").value="";document.getElementById("enc_error").innerHTML = "密码错误!";return}// alert(plaintext)} catch(err) {if(onError) {// alert(onError,"4")// alert(err,"5")onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none">U2FsdGVkX1836qAERquDawMq7zjvpULbA1JzE+1mLJo6lNhyFoPU0smI5nzHI+wgomsaz5HhFL59PkDKiEdRwO/M07WQn6BVKWQK+pZnHJhF7muod+bdKU1zQ/RPN02WX5U6e4T5ykHoVQQdPXvLByZzzbMKmDwwOzZgIWG14/emHXyywbtntK2pvCba4oQF</div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" placeholder="请输入文章密码" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "密码错误!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
